(function(n){if(typeof exports=="object"&&typeof module=="object")return n(exports);if(typeof define=="function"&&define.amd)return define(["exports"],n);n((this.acorn||(this.acorn={})).walk={})})(function(n){"use strict";function u(n){return typeof n=="string"?function(t){return t==n}:n?n:function(){return!0}}function i(n,t){this.node=n;this.state=t}function f(n,t,i){i(n,t)}function r(){}function e(n,t){return{vars:Object.create(null),prev:n,isCatch:t}}function o(n){while(n.isCatch)n=n.prev;return n}n.simple=function(t,i,r,u){function f(n,t,u){var e=u||n.type,o=i[e];r[e](n,t,f);o&&o(n,t)}r||(r=n.base);f(t,u)};n.ancestor=function(t,i,r,u){function f(n,t,u){var e=u||n.type,o=i[e];n!=t[t.length-1]&&(t=t.slice(),t.push(n));r[e](n,t,f);o&&o(n,t)}r||(r=n.base);u||(u=[]);f(t,u)};n.recursive=function(t,i,r,u){function f(n,t,i){e[i||n.type](n,t,f)}var e=r?n.make(r,u):u;f(t,i)};n.findNodeAt=function(t,r,f,e,o,s){e=u(e);try{o||(o=n.base);var c=function(n,t,u){var s=u||n.type;if((r==null||n.start<=r)&&(f==null||n.end>=f)&&o[s](n,t,c),e(s,n)&&(r==null||n.start==r)&&(f==null||n.end==f))throw new i(n,t);};c(t,s)}catch(h){if(h instanceof i)return h;throw h;}};n.findNodeAround=function(t,r,f,e,o){f=u(f);try{e||(e=n.base);var h=function(n,t,u){var o=u||n.type;if(!(n.start>r)&&!(n.end<r)&&(e[o](n,t,h),f(o,n)))throw new i(n,t);};h(t,o)}catch(s){if(s instanceof i)return s;throw s;}};n.findNodeAfter=function(t,r,f,e,o){f=u(f);try{e||(e=n.base);var h=function(n,t,u){if(!(n.end<r)){var o=u||n.type;if(n.start>=r&&f(o,n))throw new i(n,t);e[o](n,t,h)}};h(t,o)}catch(s){if(s instanceof i)return s;throw s;}};n.findNodeBefore=function(t,r,f,e,o){f=u(f);e||(e=n.base);var s,h=function(n,t,u){if(!(n.start>r)){var o=u||n.type;n.end<=r&&(!s||s.node.end<n.end)&&f(o,n)&&(s=new i(n,t));e[o](n,t,h)}};return h(t,o),s};n.make=function(t,i){var u,r;i||(i=n.base);u={};for(r in i)u[r]=i[r];for(r in t)u[r]=t[r];return u};var t=n.base={};t.Program=t.BlockStatement=function(n,t,i){for(var r=0;r<n.body.length;++r)i(n.body[r],t,"Statement")};t.Statement=f;t.EmptyStatement=r;t.ExpressionStatement=t.ParenthesizedExpression=function(n,t,i){i(n.expression,t,"Expression")};t.IfStatement=function(n,t,i){i(n.test,t,"Expression");i(n.consequent,t,"Statement");n.alternate&&i(n.alternate,t,"Statement")};t.LabeledStatement=function(n,t,i){i(n.body,t,"Statement")};t.BreakStatement=t.ContinueStatement=r;t.WithStatement=function(n,t,i){i(n.object,t,"Expression");i(n.body,t,"Statement")};t.SwitchStatement=function(n,t,i){var u,r,f;for(i(n.discriminant,t,"Expression"),u=0;u<n.cases.length;++u)for(r=n.cases[u],r.test&&i(r.test,t,"Expression"),f=0;f<r.consequent.length;++f)i(r.consequent[f],t,"Statement")};t.ReturnStatement=t.YieldExpression=function(n,t,i){n.argument&&i(n.argument,t,"Expression")};t.ThrowStatement=t.SpreadElement=t.RestElement=function(n,t,i){i(n.argument,t,"Expression")};t.TryStatement=function(n,t,i){i(n.block,t,"Statement");n.handler&&i(n.handler.body,t,"ScopeBody");n.finalizer&&i(n.finalizer,t,"Statement")};t.WhileStatement=function(n,t,i){i(n.test,t,"Expression");i(n.body,t,"Statement")};t.DoWhileStatement=t.WhileStatement;t.ForStatement=function(n,t,i){n.init&&i(n.init,t,"ForInit");n.test&&i(n.test,t,"Expression");n.update&&i(n.update,t,"Expression");i(n.body,t,"Statement")};t.ForInStatement=t.ForOfStatement=function(n,t,i){i(n.left,t,"ForInit");i(n.right,t,"Expression");i(n.body,t,"Statement")};t.ForInit=function(n,t,i){n.type=="VariableDeclaration"?i(n,t):i(n,t,"Expression")};t.DebuggerStatement=r;t.FunctionDeclaration=function(n,t,i){i(n,t,"Function")};t.VariableDeclaration=function(n,t,i){for(var u,r=0;r<n.declarations.length;++r)u=n.declarations[r],u.init&&i(u.init,t,"Expression")};t.Function=function(n,t,i){i(n.body,t,"ScopeBody")};t.ScopeBody=function(n,t,i){i(n,t,"Statement")};t.Expression=f;t.ThisExpression=r;t.ArrayExpression=t.ArrayPattern=function(n,t,i){for(var u,r=0;r<n.elements.length;++r)u=n.elements[r],u&&i(u,t,"Expression")};t.ObjectExpression=t.ObjectPattern=function(n,t,i){for(var r=0;r<n.properties.length;++r)i(n.properties[r],t)};t.FunctionExpression=t.ArrowFunctionExpression=t.FunctionDeclaration;t.SequenceExpression=t.TemplateLiteral=function(n,t,i){for(var r=0;r<n.expressions.length;++r)i(n.expressions[r],t,"Expression")};t.UnaryExpression=t.UpdateExpression=function(n,t,i){i(n.argument,t,"Expression")};t.BinaryExpression=t.AssignmentExpression=t.AssignmentPattern=t.LogicalExpression=function(n,t,i){i(n.left,t,"Expression");i(n.right,t,"Expression")};t.ConditionalExpression=function(n,t,i){i(n.test,t,"Expression");i(n.consequent,t,"Expression");i(n.alternate,t,"Expression")};t.NewExpression=t.CallExpression=function(n,t,i){if(i(n.callee,t,"Expression"),n.arguments)for(var r=0;r<n.arguments.length;++r)i(n.arguments[r],t,"Expression")};t.MemberExpression=function(n,t,i){i(n.object,t,"Expression");n.computed&&i(n.property,t,"Expression")};t.ExportDeclaration=function(n,t,i){i(n.declaration,t)};t.ImportDeclaration=function(n,t,i){n.specifiers.forEach(function(n){i(n,t)})};t.ImportSpecifier=t.ImportBatchSpecifier=t.Identifier=t.Literal=r;t.TaggedTemplateExpression=function(n,t,i){i(n.tag,t,"Expression");i(n.quasi,t)};t.ClassDeclaration=t.ClassExpression=function(n,t,i){n.superClass&&i(n.superClass,t,"Expression");for(var r=0;r<n.body.body.length;r++)i(n.body.body[r],t)};t.MethodDefinition=t.Property=function(n,t,i){n.computed&&i(n.key,t,"Expression");i(n.value,t,"Expression")};t.ComprehensionExpression=function(n,t,i){for(var r=0;r<n.blocks.length;r++)i(n.blocks[r].right,t,"Expression");i(n.body,t,"Expression")};n.scopeVisitor=n.make({Function:function(n,t,i){for(var f,u=e(t),r=0;r<n.params.length;++r)u.vars[n.params[r].name]={type:"argument",node:n.params[r]};n.id&&(f=n.type=="FunctionDeclaration",(f?o(t):u).vars[n.id.name]={type:f?"function":"function name",node:n.id});i(n.body,u,"ScopeBody")},TryStatement:function(n,t,i){if(i(n.block,t,"Statement"),n.handler){var r=e(t,!0);r.vars[n.handler.param.name]={type:"catch clause",node:n.handler.param};i(n.handler.body,r,"ScopeBody")}n.finalizer&&i(n.finalizer,t,"Statement")},VariableDeclaration:function(n,t,i){for(var r,f=o(t),u=0;u<n.declarations.length;++u)r=n.declarations[u],f.vars[r.id.name]={type:"var",node:r.id},r.init&&i(r.init,t,"Expression")}})});