angular.module("schemaForm").run(["$templateCache",function(n){n.put("directives/decorators/bootstrap/external-options/external-options.html",'<div class="form-group" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false, \'float\': form.float === true }">\r\n  <label class="control-label" ng-show="showTitle()">\r\n    {{form.title}}\r\n  <\/label><select ng-model="form.selectedOption"\r\n          ng-model-options="form.ngModelOptions"\r\n          ng-disabled="form.readonly"\r\n          sf-changed="form"\r\n          ng-change="changed()"\r\n          class="form-control"\r\n          schema-validate="form"\r\n          external-options\r\n          links="form.schema.links"\r\n          model="model"\r\n          form="form"\r\n          ng-options="item.value as item.name for item in form.options">\r\n          <option ng-show="form.selectedOption" value=""><\/option>\r\n  <\/select>\r\n  <div class="help-block"\r\n       ng-show="(hasError() && errorMessage(schemaError()))"\r\n       ng-bind-html="(hasError() && errorMessage(schemaError()))"><\/div>\r\n<\/div>\r\n')}]);angular.module("schemaForm").directive("externalOptions",function(){return{restrict:"A",require:"ngModel",scope:{form:"=",model:"="},controller:["$scope","$http","$interpolate","sfSelect",function(n,t,i,r){var u=n,e,o,f;if(u.form.options=[],u.currentSource="",u.externalOptions={},e=function(n,t,i){var e=[],f;if(t.enum&&t.enum.length){for(f=0;f<t.enum.length;f++)t.enum[f]&&t.enum[f].length&&e.push({name:t.enum[f],value:t.enum[f]});u.form.options=e}else t.titleMap&&(u.form.options=t.titleMap);for(u.externalOptions[n]!==t&&(u.externalOptions[n]=t),u.$watch("form.selectedOption",function(){r(u.form.key,u.model,u.form.selectedOption)}),f=0;f<u.form.options.length;f++)if(typeof u.form.options[f].value!="undefined"&&i===u.form.options[f].value){u.form.selectedOption=u.form.options[f].value;return}r(u.form.key,u.model,"");return},o=function(n){if(u.currentSource!==n||typeof u.externalOptions[n]!="object"){u.currentSource=n;var i=r(u.form.key,u.model);if(i=i?i:undefined,typeof u.externalOptions[n]=="object"){e(n,u.externalOptions[n],i);return}t.get(n,{responseType:"json"}).success(function(t){e(n,t,i)}).error(function(){u.form.options=[];u.form.selectedOption="";r(u.form.key,u.model,u.form.selectedOption)})}},u.form.parameters.length)for(f=0;f<u.form.parameters.length;f++)angular.isDefined(u.form.parameters[f])&&u.$watch(u.form.parameters[f][1],function(n){var t,r;n?(t=i(u.form.optionSource,!1,null,!0),r=t(u),o(r,u.form.key)):u.form.options=[]});else o(u.form.optionSource)}]}}).filter("_externalOptionUri",["$filter",function(n){function t(t){return n("externalOptionUri")&&(t=n("externalOptionUri")(t)),t}return t}]);angular.module("schemaForm").config(["schemaFormProvider","sfPathProvider",function(n,t){var i,r;r=function(r,u,f){var o;if(u.type==="string"&&u.links&&typeof u.links=="object")for(i=0;i<u.links.length;i++)if(u.links[i].rel==="options"){var s=/{{([^}]*)}}/gm,e=n.stdFormObj(r,u,f);for(e.key=f.path,e.type="select-external",e.optionSource=u.links[i].href.replace(/({)([^}]*)(})/gm,"$1$1 model.$2 | _externalOptionUri $3$3"),e.options=[],e.parameters=[],o=e.optionSource.match(s);(o=s.exec(e.optionSource))!==null;)e.parameters.push(o);return f.lookup[t.stringify(f.path)]=e,e}};n.defaults.string.unshift(r)}]);