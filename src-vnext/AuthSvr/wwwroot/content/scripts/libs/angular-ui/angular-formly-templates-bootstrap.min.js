(function(n,t){typeof exports=="object"&&typeof module=="object"?module.exports=t(require("angular-formly"),require("api-check"),require("angular")):typeof define=="function"&&define.amd?define(["angular-formly","api-check","angular"],t):typeof exports=="object"?exports.ngFormlyTemplatesBootstrap=t(require("angular-formly"),require("api-check"),require("angular")):n.ngFormlyTemplatesBootstrap=t(n.ngFormly,n.apiCheck,n.angular)})(this,function(n,t,i){return function(n){function t(r){if(i[r])return i[r].exports;var u=i[r]={exports:{},id:r,loaded:!1};return n[r].call(u.exports,u,u.exports,t),u.loaded=!0,u.exports}var i={};return t.m=n,t.c=i,t.p="",t(0)}([function(n,t,i){"use strict";n.exports=i(1)},function(n,t,i){"use strict";var u="formlyBootstrap",f=i(4),r=f.module(u,[i(2)]);r.constant("formlyBootstrapApiCheck",i(3)({output:{prefix:"angular-formly-bootstrap"}}));r.constant("formlyBootstrapVersion","4.0.3");i(5)(r);i(6)(r);i(7)(r);n.exports=u},function(t){t.exports=n},function(n){n.exports=t},function(n,t,i){"use strict";var r=i(8);r.version||(r=window.angular);n.exports=r},function(n,t,i){"use strict";n.exports=function(n){function t(n,t){var r=t;n.setWrapper([{name:"bootstrapLabel",template:i(17),apiCheck:{templateOptions:r.shape({label:r.string,required:r.bool.optional})},apiCheckInstance:r},{name:"bootstrapHasError",template:i(18)}])}n.config(t);t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]}},function(n,t,i){"use strict";n.exports=function(n){i(9)(n);i(10)(n);i(11)(n);i(12)(n);i(13)(n);i(14)(n)}},function(n,t,i){"use strict";var r=function(n){return n&&n.__esModule?n["default"]:n},u=r(i(15)),f=r(i(16));n.exports=function(n){u(n);f(n)}},function(n){n.exports=i},function(n,t,i){"use strict";n.exports=function(n){function t(n,t){var r=t;n.setType({name:"checkbox",template:i(19),wrapper:["bootstrapHasError"],apiCheck:{templateOptions:r.shape({label:r.string})},apiCheckInstance:r})}n.config(t);t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]}},function(n,t,i){"use strict";n.exports=function(n){function t(n,t){var r=t;n.setType({name:"multiCheckbox",template:i(20),wrapper:["bootstrapLabel","bootstrapHasError"],apiCheck:{templateOptions:r.shape({options:r.arrayOf(r.object),labelProp:r.string.optional,valueProp:r.string.optional})},apiCheckInstance:r,controller:["$scope",function(n){function r(){n.model[i.key]=[];angular.forEach(n.multiCheckbox.checked,function(r,u){r&&n.model[i.key].push(t.options[u][t.valueProp||"value"])})}var t=n.to,i=n.options;n.multiCheckbox={checked:[],change:r}}]})}n.config(t);t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]}},function(n){"use strict";n.exports=function(n){function t(n){n.setType({name:"input",template:'<input class="form-control" ng-model="model[options.key]">',wrapper:["bootstrapLabel","bootstrapHasError"]})}n.config(t);t.$inject=["formlyConfigProvider"]}},function(n,t,i){"use strict";n.exports=function(n){function t(n,t){var r=t;n.setType({name:"radio",template:i(21),wrapper:["bootstrapLabel","bootstrapHasError"],apiCheck:{templateOptions:r.shape({options:r.arrayOf(r.object),labelProp:r.string.optional,valueProp:r.string.optional})},apiCheckInstance:r})}n.config(t);t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]}},function(n,t,i){"use strict";n.exports=function(n){function t(n,t){var r=t;n.setType({name:"select",template:i(22),wrapper:["bootstrapLabel","bootstrapHasError"],apiCheck:{templateOptions:r.shape({options:r.arrayOf(r.object),labelProp:r.string.optional,valueProp:r.string.optional,groupProp:r.string.optional})},apiCheckInstance:r})}n.config(t);t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]}},function(n){"use strict";n.exports=function(n){function t(n,t){var i=t;n.setType({name:"textarea",template:'<textarea class="form-control" ng-model="model[options.key]"><\/textarea>',wrapper:["bootstrapLabel","bootstrapHasError"],defaultOptions:{ngModelAttrs:{rows:{attribute:"rows"},cols:{attribute:"cols"}}},apiCheck:{templateOptions:i.shape({rows:i.number.optional,cols:i.number.optional})},apiCheckInstance:i})}n.config(t);t.$inject=["formlyConfigProvider","formlyBootstrapApiCheck"]}},function(n,t,i){"use strict";n.exports=function(n){function t(n,t){var u=i(23),r=t.shape({"class":t.string.optional,text:t.string.optional}).strict.optional;n.templateManipulators.preWrapper.push(function(n,i){return i.type!=="input"||!i.templateOptions.addonLeft&&!i.templateOptions.addonRight?n:(t.warn(t.shape({templateOptions:t.shape({addonLeft:r,addonRight:r})}),{length:1,0:i}),u.replace("<formly-transclude><\/formly-transclude>",n))})}n.run(t);t.$inject=["formlyConfig","formlyBootstrapApiCheck"]}},function(n){"use strict";n.exports=function(n){function t(n){n.templateManipulators.preWrapper.push(function(n,t,i){var r,u;return angular.isDefined(t.templateOptions.description)&&t.type!=="radio"&&t.type!=="checkbox"?(r=document.createElement("div"),r.appendChild(angular.element(n)[0]),u=angular.element(r.querySelectorAll("[ng-model]")),u?(r.appendChild(angular.element('<p id="'+i.id+'_description"class="help-block"ng-if="to.description">{{to.description}}<\/p>')[0]),u.attr("aria-describedby",i.id+"_description"),r.innerHTML):n):n})}n.run(t);t.$inject=["formlyConfig"]}},function(n){n.exports="<div>\n  <label for=\"{{id}}\" class=\"control-label\">\n    {{to.label}}\n    {{to.required ? '*' : ''}}\n  <\/label>\n  <formly-transclude><\/formly-transclude>\n<\/div>\n"},function(n){n.exports='<div class="form-group" ng-class="{\'has-error\': showError}">\n  <formly-transclude><\/formly-transclude>\n<\/div>\n'},function(n){n.exports='<div class="checkbox">\n\t<label>\n\t\t<input type="checkbox"\n           class="formly-field-checkbox"\n\t\t       ng-model="model[options.key]">\n\t\t{{to.label}}\n\t\t{{to.required ? \'*\' : \'\'}}\n\t<\/label>\n<\/div>\n'},function(n){n.exports='<div class="radio-group">\n  <div ng-repeat="(key, option) in to.options" class="checkbox">\n    <label>\n      <input type="checkbox"\n             id="{{id + \'_\'+ $index}}"\n             ng-model="multiCheckbox.checked[$index]"\n             ng-change="multiCheckbox.change()">\n      {{option[to.labelProp || \'name\']}}\n    <\/label>\n  <\/div>\n<\/div>\n'},function(n){n.exports='<div class="radio-group">\n  <div ng-repeat="(key, option) in to.options" class="radio">\n    <label>\n      <input type="radio"\n             id="{{id + \'_\'+ $index}}"\n             tabindex="0"\n             ng-value="option[to.valueProp || \'value\']"\n             ng-model="model[options.key]">\n      {{option[to.labelProp || \'name\']}}\n    <\/label>\n  <\/div>\n<\/div>\n'},function(n){n.exports="<select class=\"form-control\"\n        ng-model=\"model[options.key]\"\n        ng-options=\"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options\">\n<\/select>\n"},function(n){n.exports='<div ng-class="{\'input-group\': to.addonLeft || to.addonRight}">\n    <div class="input-group-addon" ng-if="to.addonLeft">\n        <i class="{{to.addonLeft.class}}" ng-if="to.addonLeft.class"><\/i>\n        <span ng-if="to.addonLeft.text">{{to.addonLeft.text}}<\/span>\n    <\/div>\n    <formly-transclude><\/formly-transclude>\n    <div class="input-group-addon" ng-if="to.addonRight">\n        <i class="{{to.addonRight.class}}" ng-if="to.addonRight.class"><\/i>\n        <span ng-if="to.addonRight.text">{{to.addonRight.text}}<\/span>\n    <\/div>\n<\/div>'}])});