ALTER TABLE [dbo].[spMstItemTPGO] ADD 
[PartName] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF_spMstItemTPGO] DEFAULT ('')
GO

ALTER TABLE [dbo].[sysRole] ADD 
[IsChangeBranch] [bit] NULL CONSTRAINT [DF__sysRole__IsChang__6141E84D] DEFAULT ((0))
GO

ALTER TABLE [dbo].[gnMstCompanyMapping] ADD 
[UnitBranchMD] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
GO

ALTER TABLE [dbo].[HrEmployeeService] ADD 
[UpdatedBy] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
[UpdatedDate] [datetime] NULL
GO

CREATE TABLE [dbo].[omMstModelData]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SalesModelCode] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SalesModelDesc] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[FakturPolisiDesc] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[EngineCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[PpnBmCodeBuy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[PpnBmPctBuy] [numeric] (5,2) NULL,
	[PpnBmCodeSell] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[PpnBmPctSell] [numeric] (5,2) NULL,
	[PpnBmCodePrincipal] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[PpnBmPctPrincipal] [numeric] (5,2) NULL,
	[Remark] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[BasicModel] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[TechnicalModelCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ProductType] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[TransmissionType] [varchar] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[IsChassis] [bit] NOT NULL,
	[IsCbu] [bit] NOT NULL,
	[SMCModelCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[GroupCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[TypeCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CylinderCapacity] [numeric] (6,0) NULL,
	[fuel] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[ModelPrincipal] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Specification] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[ModelLine] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Status] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedDate] [datetime] NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LastUpdateDate] [datetime] NULL,
	[IsLocked] [bit] NULL,
	[LockedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LockedDate] [datetime] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[omFakturPolda]
(
	[NoFaktur] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[TglFaktur] [datetime] NULL,
	[Merk] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Tipe] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[ThnPembuatan] [numeric] (4,0) NULL,
	[ThnPerakitan] [numeric] (4,0) NULL,
	[Silinder] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Warna] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[NoRangka] [varchar] (25) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[NoMesin] [varchar] (25) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[BahanBakar] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Pemilik] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Pemilik2] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Alamat] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Alamat2] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Alamat3] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[DealerCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[DealerName] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[JenisKendaraan] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[NoFormA] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[TglFormA] [datetime] NULL,
	[NoKTP] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[NoTelp] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[NoHP] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[NoPIB] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[NoSUT] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[NoTPT] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[NoSRUT] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[IsActive] [bit] NOT NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CreatedDate] [datetime] NOT NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LastUpdateDate] [datetime] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[omHstSDMovement]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[DocNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[DocDate] [datetime] NOT NULL,
	[Seq] [int] NOT NULL,
	[SalesModelCode] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SalesModelYear] [numeric] (4,0) NOT NULL,
	[ChassisCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ChassisNo] [numeric] (10,0) NOT NULL,
	[EngineCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[EngineNo] [numeric] (10,0) NOT NULL,
	[ColourCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[WarehouseCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CustomerCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[QtyFlag] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CompanyMD] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchMD] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[WarehouseMD] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Status] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ProcessStatus] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ProcessDate] [datetime] NOT NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CreatedDate] [datetime] NOT NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LastUpdateDate] [datetime] NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[gnMstCustomerProfitCenterBeforeResetServiceDisc]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CustomerCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ProfitCenterCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CreditLimit] [numeric] (18,0) NULL,
	[PaymentCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CustomerClass] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[TaxCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[TaxTransCode] [varchar] (3) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[DiscPct] [numeric] (5,2) NULL,
	[LaborDiscPct] [numeric] (5,2) NULL,
	[PartDiscPct] [numeric] (5,2) NULL,
	[MaterialDiscPct] [numeric] (5,2) NULL,
	[TOPCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CustomerGrade] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[ContactPerson] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CollectorCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[GroupPriceCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[isOverDueAllowed] [bit] NULL,
	[SalesCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[SalesType] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Salesman] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[isBlackList] [bit] NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedDate] [datetime] NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LastUpdateDate] [datetime] NULL,
	[isLocked] [bit] NULL,
	[LockingBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LockingDate] [datetime] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[omTrRMPUK]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Year] [int] NOT NULL,
	[Month] [int] NOT NULL,
	[BeginQty] [numeric] (18,0) NOT NULL,
	[Purchase] [numeric] (18,0) NOT NULL,
	[TransferIn] [numeric] (18,0) NOT NULL,
	[TotalIncome] [numeric] (18,0) NOT NULL,
	[Wholesale] [numeric] (18,0) NOT NULL,
	[Direct] [numeric] (18,0) NOT NULL,
	[TransferOut] [numeric] (18,0) NOT NULL,
	[TotalOutcome] [numeric] (18,0) NOT NULL,
	[EndQty] [numeric] (18,0) NOT NULL,
	[IsLocked] [bit] NOT NULL,
	[CreateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CreateDate] [datetime] NOT NULL,
	[UpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[UpdateDate] [datetime] NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[omSDMovement]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[DocNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[DocDate] [datetime] NOT NULL,
	[Seq] [int] NOT NULL,
	[SalesModelCode] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SalesModelYear] [numeric] (4,0) NOT NULL,
	[ChassisCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ChassisNo] [numeric] (10,0) NOT NULL,
	[EngineCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[EngineNo] [numeric] (10,0) NOT NULL,
	[ColourCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[WarehouseCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CustomerCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[QtyFlag] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CompanyMD] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchMD] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[WarehouseMD] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Status] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ProcessStatus] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ProcessDate] [datetime] NOT NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CreatedDate] [datetime] NOT NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LastUpdateDate] [datetime] NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[omPriceListBranches]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SupplierCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[GroupPrice] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SalesModelCode] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SalesModelYear] [numeric] (4,0) NOT NULL,
	[EffectiveDate] [datetime] NOT NULL,
	[RetailPriceIncludePPN] [numeric] (18,0) NULL,
	[DiscPriceIncludePPN] [numeric] (18,0) NULL,
	[NetSalesIncludePPN] [numeric] (18,0) NULL,
	[RetailPriceExcludePPN] [numeric] (18,0) NULL,
	[DiscPriceExcludePPN] [numeric] (18,0) NULL,
	[NetSalesExcludePPN] [numeric] (18,0) NULL,
	[PPNBeforeDisc] [numeric] (18,0) NULL,
	[PPNAfterDisc] [numeric] (18,0) NULL,
	[PPNBMPaid] [numeric] (18,0) NULL,
	[OthersDPP] [numeric](18, 0) NULL,
	[OthersPPn] [numeric](18, 0) NULL,
	[isStatus] [bit] NULL,
	[CreatedBy] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedDate] [datetime] NULL,
	[LastUpdateBy] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LastUpdateDate] [datetime] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[omPriceListBranchesLog]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SupplierCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[GroupPrice] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SalesModelCode] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SalesModelYear] [numeric] (4,0) NOT NULL,
	[EffectiveDate] [datetime] NOT NULL,
	[RetailPriceIncludePPN] [numeric] (18,0) NULL,
	[DiscPriceIncludePPN] [numeric] (18,0) NULL,
	[NetSalesIncludePPN] [numeric] (18,0) NULL,
	[RetailPriceExcludePPN] [numeric] (18,0) NULL,
	[DiscPriceExcludePPN] [numeric] (18,0) NULL,
	[NetSalesExcludePPN] [numeric] (18,0) NULL,
	[PPNBeforeDisc] [numeric] (18,0) NULL,
	[PPNAfterDisc] [numeric] (18,0) NULL,
	[PPNBMPaid] [numeric] (18,0) NULL,
	[isStatus] [bit] NULL,
	[LastUpdateBy] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LastUpdateDate] [datetime] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[pmTrInquiryStatusHistory]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[InquiryID] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrInqui__Inqui__19EEBF16] DEFAULT (''),
	[StatusId] [tinyint] NOT NULL CONSTRAINT [DF__pmTrInqui__Statu__1AE2E34F] DEFAULT (''),
	[InquiryNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SalesEmployeeID] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[StatusCode] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrInqui__Statu__1BD70788] DEFAULT (''),
	[Remarks] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrInqui__Remar__1CCB2BC1] DEFAULT (''),
	[Quantity] [smallint] NOT NULL,
	[SalesModelCode] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CreatedDate] [datetime] NOT NULL CONSTRAINT [DF__pmTrInqui__Creat__1DBF4FFA] DEFAULT (((0)-(0))-(0))
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[CsLkuBpkbView]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CustomerCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CustomerName] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Chassis] [varchar] (45) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Engine] [varchar] (45) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[SalesModelCode] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SalesModelYear] [numeric] (4,0) NOT NULL,
	[BpkbDate] [datetime] NULL,
	[StnkDate] [datetime] NULL,
	[BPKDate] [datetime] NULL,
	[IsLeasing] [bit] NOT NULL,
	[Category] [varchar] (7) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LeasingCo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LeasingName] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Installment] [numeric] (3,0) NULL,
	[PoliceRegNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[OutStanding] [varchar] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[DelayedRetrievalDate] [datetime] NULL,
	[DelayedRetrievalNote] [varchar] (250) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[CsLkuStnkExtView]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CustomerCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CustomerName] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Chassis] [varchar] (45) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Engine] [varchar] (45) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[SalesModelCode] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SalesModelYear] [numeric] (4,0) NOT NULL,
	[ColourCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[BpkbDate] [datetime] NULL,
	[StnkDate] [datetime] NULL,
	[BPKDate] [datetime] NULL,
	[IsLeasing] [bit] NULL,
	[LeasingCo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Category] [varchar] (7) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LeasingName] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Installment] [numeric] (3,0) NULL,
	[Tenor] [varchar] (36) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Address] [varchar] (40) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[PhoneNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Salesman] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[SalesmanName] [varchar] (150) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[IsStnkExtend] [bit] NULL,
	[StnkExpiredDate] [datetime] NULL,
	[ReqKtp] [bit] NULL,
	[ReqStnk] [bit] NULL,
	[ReqBpkb] [bit] NULL,
	[ReqSuratKuasa] [bit] NULL,
	[Comment] [varchar] (250) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Additional] [varchar] (250) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Status] [int] NULL,
	[StatusInfo] [varchar] (11) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[PoliceRegNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[OutStanding] [varchar] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Ownership] [bit] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[gnMstCustomerProfitCenterBefResetDiscount]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CustomerCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ProfitCenterCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CreditLimit] [numeric] (18,0) NULL,
	[PaymentCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CustomerClass] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[TaxCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[TaxTransCode] [varchar] (3) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[DiscPct] [numeric] (5,2) NULL,
	[LaborDiscPct] [numeric] (5,2) NULL,
	[PartDiscPct] [numeric] (5,2) NULL,
	[MaterialDiscPct] [numeric] (5,2) NULL,
	[TOPCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CustomerGrade] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[ContactPerson] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CollectorCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[GroupPriceCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[isOverDueAllowed] [bit] NULL,
	[SalesCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[SalesType] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Salesman] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[isBlackList] [bit] NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedDate] [datetime] NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LastUpdateDate] [datetime] NULL,
	[isLocked] [bit] NULL,
	[LockingBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LockingDate] [datetime] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[SvDcsCustomer]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ProductType] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[VIN] [varchar] (25) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Seq] [int] NOT NULL,
	[PoliceRegNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CustomerName] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Gender] [varchar] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[BirthDate] [datetime] NULL,
	[Address] [text] COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[PhoneNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[MobileNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[EmailAddress] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Remarks] [text] COLLATE SQL_Latin1_General_CP1_CI_AS NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

CREATE TABLE [dbo].[SupTemp]
(
	[SupplierCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[fType] [char] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[svHstSDMovement]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[DocNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[DocDate] [datetime] NOT NULL,
	[PartNo] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[PartSeq] [int] NOT NULL,
	[WarehouseCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[QtyOrder] [numeric] (18,2) NOT NULL,
	[Qty] [numeric] (18,2) NOT NULL,
	[DiscPct] [numeric] (5,2) NOT NULL,
	[CostPrice] [numeric] (18,2) NOT NULL,
	[RetailPrice] [numeric] (18,2) NOT NULL,
	[TypeOfGoods] [varchar] (5) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CompanyMD] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchMD] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[WarehouseMD] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[RetailPriceInclTaxMD] [numeric] (18,2) NOT NULL,
	[RetailPriceMD] [numeric] (18,2) NOT NULL,
	[CostPriceMD] [numeric] (18,2) NOT NULL,
	[QtyFlag] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ProductType] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ProfitCenterCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Status] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ProcessStatus] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ProcessDate] [datetime] NOT NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CreatedDate] [datetime] NOT NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LastUpdateDate] [datetime] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[svMstTaskPartcek]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ProductType] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BasicModel] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[JobType] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[OperationNo] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[PartNo] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Quantity] [numeric] (12,2) NULL,
	[RetailPrice] [numeric] (18,2) NOT NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedDate] [datetime] NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LastUpdateDate] [datetime] NULL,
	[BillType] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[svMstCampaignSuzuki]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ProductType] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ComplainCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[DefectCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ChassisCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ChassisStartNo] [numeric] (10,0) NOT NULL,
	[ChassisEndNo] [numeric] (10,0) NOT NULL,
	[OperationNo] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CloseDate] [datetime] NOT NULL,
	[Description] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[IsActive] [bit] NOT NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CreatedDate] [datetime] NOT NULL,
	[LastupdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LastupdateDate] [datetime] NULL,
	[IsLocked] [bit] NOT NULL,
	[LockingBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LockingDate] [datetime] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[spUtlItemSetup]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[PartNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[MovingCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[ABCClass] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LocationCode] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[TypeOfGoods] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[BornDate] [datetime] NULL,
	[Qty] [numeric] (18,2) NULL,
	[CostPrice] [numeric] (18,0) NULL,
	[PurchasePrice] [numeric] (18,0) NULL,
	[RetailPrice] [numeric] (18,0) NULL,
	[SupplierCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[PartName] [varchar] (300) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[svTrnDailyRetentionDcs]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SendDate] [datetime] NOT NULL,
	[RetentionNo] [bigint] IDENTITY (1,1) NOT NULL,
	[CustomerName] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ChassisCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ChassisNo] [numeric] (10,0) NOT NULL,
	[CustomerCategory] [varchar] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[VisitInitial] [varchar] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[VisitDate] [datetime] NULL,
	[PMNow] [numeric] (10,0) NULL,
	[PMNext] [numeric] (10,0) NULL,
	[EstimationNextVisit] [datetime] NULL,
	[ReminderDate] [datetime] NULL,
	[IsConfirmed] [bit] NULL,
	[IsBooked] [bit] NULL,
	[IsVisited] [bit] NULL,
	[IsSatisfied] [bit] NULL,
	[BookingDate] [datetime] NULL,
	[FollowUpDate] [datetime] NULL,
	[Reason] [varchar] (2000) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[RefferenceDate] [datetime] NULL,
	[LastServiceDate] [datetime] NULL,
	[LastRemark] [varchar] (2000) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedDate] [datetime] NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LastUpdateDate] [datetime] NULL,
	[StatisfyReasonGroup] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[StatisfyReasonCode] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CannotCallCode] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[IsReminder] [bit] NULL,
	[IsFollowUp] [bit] NULL,
	[Odometer] [numeric] (8,0) NULL,
	[JobType] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
) ON [PRIMARY]
GO


CREATE TABLE [dbo].[SysRoleMenuAccess]
(
	[RoleId] [varchar] (60) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[MenuId] [varchar] (60) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Navigation] [bit] NOT NULL CONSTRAINT [DF__SysRoleMe__Navig__1E41A043] DEFAULT ((0)),
	[AllowCreate] [bit] NOT NULL CONSTRAINT [DF__SysRoleMe__Allow__1F35C47C] DEFAULT ((0)),
	[AllowEdit] [bit] NOT NULL CONSTRAINT [DF__SysRoleMe__Allow__2029E8B5] DEFAULT ((0)),
	[AllowDelete] [bit] NOT NULL CONSTRAINT [DF__SysRoleMe__Allow__211E0CEE] DEFAULT ((0)),
	[AllowPrint] [bit] NOT NULL CONSTRAINT [DF__SysRoleMe__Allow__22123127] DEFAULT ((0))
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[sysLastTrnInfo]
(
	[DealerCode] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[OutletCode] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ModuleName] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[TableName] [varchar] (75) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[UserName] [varchar] (32) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LastLogin] [datetime] NULL,
	[LastUpdated] [datetime] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[pmStatusHistory_26Aug2013_aftupd]
(
	[InquiryNumber] [int] NOT NULL,
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SequenceNo] [int] NOT NULL,
	[LastProgress] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[UpdateDate] [datetime] NULL,
	[UpdateUser] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
) ON [PRIMARY]
GO


CREATE TABLE [dbo].[pmTrInquiryAllContact]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[InquiryID] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrInqui__Inqui__5820FBB9] DEFAULT (''),
	[ContactID] [tinyint] NOT NULL,
	[ContactName] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Address] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrEnqui__Alama__351DDF8C] DEFAULT (''),
	[PhoneNumber] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrEnqui__NoTel__361203C5] DEFAULT (''),
	[CellPhoneNo] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrEnquir__NoHP__370627FE] DEFAULT (''),
	[EmailAddress] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrEnqui__Email__37FA4C37] DEFAULT (''),
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedDate] [datetime] NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LastUpdateDate] [datetime] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[pmTrInquiryActivity]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[InquiryID] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrInqui__Inqui__55448F0E] DEFAULT (''),
	[ActivityID] [int] NOT NULL,
	[IsPlan] [bit] NOT NULL,
	[InquiryNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SalesEmployeeID] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ActivityDate] [datetime] NOT NULL,
	[ActivityStartTime] [datetime] NULL,
	[ActivityEndTime] [datetime] NULL,
	[ContactID] [tinyint] NULL,
	[ActivityCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Remarks] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedDate] [datetime] NOT NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LastUpdateDate] [datetime] NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[pmMstTestDrive]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[RegistrationNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[TestVehicleName] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ValidityEndDate] [datetime] NOT NULL,
	[ValidityStartDate] [datetime] NOT NULL,
	[Remarks] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CreatedDate] [datetime] NOT NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LastUpdateDate] [datetime] NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[pmTrInquiryLostCase]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[InquiryID] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrInqui__Inqui__3561CF61] DEFAULT (''),
	[StatusId] [tinyint] NOT NULL,
	[InquiryNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[TglLost] [datetime] NOT NULL,
	[PindahKe] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Category] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[VOC] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CreatedDate] [datetime] NOT NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LastUpdateDate] [datetime] NOT NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[pmTrInquiryHdr]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[InquiryID] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrInqui__Inqui__61AA65F3] DEFAULT (''),
	[SalesEmployeeID] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SalesSpvEmployeeID] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrInqui__Sales__629E8A2C] DEFAULT (''),
	[InquiryDate] [datetime] NOT NULL CONSTRAINT [DF__pmTrInqui__Inqui__6392AE65] DEFAULT (((0)-(0))-(0)),
	[SumberData] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[GroupProspect] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ProspectName] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrInqui__Prosp__6486D29E] DEFAULT (''),
	[Address1] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__Addre__657AF6D7] DEFAULT (''),
	[Address2] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__Addre__666F1B10] DEFAULT (''),
	[Address3] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__Addre__67633F49] DEFAULT (''),
	[Address4] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[AddressCity] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[ZipCode] [varchar] (5) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__ZipCo__68576382] DEFAULT (''),
	[PhoneNo] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__Phone__694B87BB] DEFAULT (''),
	[HandPhoneNo] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__HandP__6A3FABF4] DEFAULT (''),
	[EmailAddress] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__Email__6B33D02D] DEFAULT (''),
	[CompanyName] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__Compa__6C27F466] DEFAULT (''),
	[CompanyAddress1] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__Compa__6D1C189F] DEFAULT (''),
	[CompanyAddress2] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__Compa__6E103CD8] DEFAULT (''),
	[CompanyAddress3] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__Compa__6F046111] DEFAULT (''),
	[CompanyAddress4] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CompanyAddressCity] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CompanyZipCode] [varchar] (5) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[DeptName] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__DeptN__6FF8854A] DEFAULT (''),
	[CompanyPhoneNo] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__Compa__70ECA983] DEFAULT (''),
	[CompanyExtNo] [varchar] (6) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__Compa__71E0CDBC] DEFAULT (''),
	[CompanyFaxNo] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__Compa__72D4F1F5] DEFAULT (''),
	[IsFSend] [bit] NOT NULL CONSTRAINT [DF__pmTrInqui__IsFSe__73C9162E] DEFAULT ((0)),
	[FSendTime] [datetime] NOT NULL,
	[Status] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrInqui__Creat__74BD3A67] DEFAULT (''),
	[CreatedDate] [datetime] NOT NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LastUpdateDate] [datetime] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[pmTrInquiryTestDrive]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[InquiryID] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrInqui__Inqui__02173585] DEFAULT (''),
	[RegistrationNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[TestDriveId] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrInqui__TestD__030B59BE] DEFAULT (''),
	[EmployeeID] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Type] [tinyint] NOT NULL CONSTRAINT [DF__pmTrInquir__Type__03FF7DF7] DEFAULT ((0)),
	[TestDriveDate] [datetime] NOT NULL CONSTRAINT [DF__pmTrInqui__TestD__04F3A230] DEFAULT (((0)-(0))-(0)),
	[TestDriveStartTime] [datetime] NOT NULL CONSTRAINT [DF__pmTrInqui__TestD__05E7C669] DEFAULT (((0)-(0))-(0)),
	[TestDriveEndTime] [datetime] NULL,
	[Lokasi] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Remarks] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CreatedDate] [datetime] NOT NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[LastUpdateDate] [datetime] NOT NULL,
	[Deleted] [bit] NULL,
	[DeletedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[DeletedDate] [datetime] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[pmTrInquiryStatus]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[InquiryID] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrInqui__Inqui__209BBCA5] DEFAULT (''),
	[StatusId] [tinyint] NOT NULL CONSTRAINT [DF__pmTrInqui__Statu__218FE0DE] DEFAULT (''),
	[InquiryNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SalesEmployeeID] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[StatusCode] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrInqui__Statu__22840517] DEFAULT (''),
	[Remarks] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF__pmTrInqui__Remar__23782950] DEFAULT (''),
	[Quantity] [smallint] NOT NULL,
	[Status] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[SalesModelCode] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[CreatedDate] [datetime] NOT NULL CONSTRAINT [DF__pmTrInqui__Creat__246C4D89] DEFAULT (((0)-(0))-(0)),
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LastUpdateDate] [datetime] NULL
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[pmTrInquiryDtl]
(
	[CompanyCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[BranchCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[InquiryID] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF__pmTrInqui__Inqui__5ECDF948] DEFAULT (''),
	[InquiryNo] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[GroupCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[TypeCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[ColorCode] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[SalesModelYear] [numeric] (4,0) NOT NULL,
	[TransmissionType] [varchar] (2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Quantity] [smallint] NOT NULL,
	[AddAccessories] [varchar] (1000) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[Remarks] [varchar] (1000) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[SalesModelCode] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[CreatedDate] [datetime] NULL,
	[LastUpdateBy] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[LastUpdateDate] [datetime] NULL
) ON [PRIMARY]
GO


ALTER function [dbo].[uspfn_CalculateMinute] (
	@Time1 char(5),
	@Time2 char(5)
)
returns int
as
begin
	declare @Difference int;
	set @Difference = DATEDIFF(minute, @Time1, @Time2);
	return abs(@Difference);
end
GO
if object_id('uspfn_MinuteToTime') is not null
	drop function uspfn_MinuteToTime
GO
create function [dbo].[uspfn_MinuteToTime] (
	@Minute int
)
returns varchar(5)
as
begin
	declare @Result char(5);

	if @Minute != 0 and @Minute != '0'
		set @Result = dateadd(minute, @Minute, '00:00')
	else
		set @Result='';

	return @Result;
end
GO

ALTER view [dbo].[SvFmView]
as 
select a.CompanyCode, a.BranchCode, a.EmployeeID, a.EmployeeName  from GnMstEmployee a
where a.TitleCode IN ('8')
   AND PersonnelStatus = '1'
GO

ALTER VIEW [dbo].[SvCustomerView]
AS
SELECT        a.CompanyCode, b.CompanyName, a.CustomerCode, a.CustomerName, a.Address1, a.Address2, a.Address3, a.Address4, a.CityCode,
                             (SELECT        LookUpValueName
                               FROM            dbo.gnMstLookUpDtl
                               WHERE        (CodeID = 'CItY') AND (LookUpValue = a.CityCode)) AS CityName, a.FaxNo, a.PhoneNo, a.HPNo, a.NPWPNo, ISNULL(a.NPWPDate, '19000101') 
                         AS NPWPDate, a.SKPNo, ISNULL(a.SKPDate, '19000101') AS SKPDate, a.BirthDate
FROM            dbo.gnMstCustomer AS a LEFT OUTER JOIN
                         dbo.gnMstOrganizationHdr AS b ON b.CompanyCode = a.CompanyCode
GO

ALTER VIEW [dbo].[SvCustomerVehicleView]
AS
SELECT DISTINCT 
                         a.CompanyCode, e.BranchCode, a.ChassisCode + CONVERT(varchar, a.ChassisNo) AS VinNo, a.PoliceRegNo, ISNULL(b.CustomerName, '') AS CustomerName, 
                         RTRIM(RTRIM(b.Address1) + ' ' + RTRIM(b.Address2) + ' ' + RTRIM(b.Address3) + ' ' + RTRIM(b.Address4)) AS CustomerAddr, b.Address1, b.Address2, b.Address3, 
                         b.Address4, b.CityCode,
                             (SELECT        LookUpValueName
                               FROM            dbo.gnMstLookUpDtl
                               WHERE        (CodeID = 'CItY') AND (LookUpValue = b.CityCode)) AS CityName, b.PhoneNo, b.HPNo, b.FaxNo, a.ClubCode, a.ClubNo, 

							   case a.ClubDateFinish when '1900-01-01' then '' else 

                         ISNULL(REPLACE(CONVERT(varchar, a.ClubDateFinish, 6), ' ', '-'), '') end AS ClubEndPeriod, 
						 
						 
						 
						 d.IsActive AS ClubStatus, 
                         CASE a.IsClubStatus WHEN 1 THEN (CASE d .IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END) ELSE '' END AS ClubStatusDesc, a.ContractNo, 
                         CASE a.IsContractStatus WHEN 1 THEN (CASE c.IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END) ELSE '' END AS ContractStatusDesc, 
                         CASE a.IsContractStatus WHEN 1 THEN (ISNULL(replace(CONVERT(varchar, a.RemainderDate, 6), ' ', '-'), '')) ELSE '' END AS ContractEndPeriod, a.BasicModel, 
                         a.ChassisNo, a.ChassisCode, a.EngineCode, a.EngineNo, a.TransmissionType, a.ServiceBookNo, CASE a.LastServiceDate WHEN ('19000101') 
                         THEN '' ELSE a.LastServiceDate END AS LastServiceDate, a.LastJobType, a.ColourCode, a.ColourCode AS ColorCode, a.CustomerCode
FROM            dbo.svMstCustomerVehicle AS a LEFT OUTER JOIN
                         dbo.gnMstCustomer AS b ON b.CompanyCode = a.CompanyCode AND b.CustomerCode = a.CustomerCode INNER JOIN
                         dbo.gnMstCustomerProfitCenter AS e ON e.CompanyCode = a.CompanyCode AND e.CustomerCode = a.CustomerCode LEFT OUTER JOIN
                         dbo.svMstContract AS c WITH (nowait, nolock) ON c.CompanyCode = a.CompanyCode AND c.ContractNo = a.ContractNo AND a.IsContractStatus = 1 LEFT OUTER JOIN
                         dbo.svMstClub AS d WITH (nowait, nolock) ON d.CompanyCode = a.CompanyCode AND d.ClubCode = a.ClubCode
WHERE        (a.IsActive = 1) AND (e.ProfitCenterCode = '200')
GO

if object_id('SysUserView') is not null
	drop view SysUserView
GO
create view [dbo].[SysUserView]
as
select a.UserId
     , a.FullName
     , a.Email
     , a.CompanyCode
     , a.BranchCode
	 , d.CompanyName as BranchName
     , a.TypeOfGoods
     , a.IsActive
     , b.RoleId
     , c.RoleName
	 , a.RequiredChange
	 , e.ProfitCenter
  from SysUser a
  left join SysRoleuser b 
    on b.UserId = a.UserId
  left join sysRole c 
    on c.RoleId = b.RoleId
  left join gnMstCoProfile d
    on d.CompanyCode = a.CompanyCode
   and d.BranchCode = a.BranchCode
   left join sysUserProfitCenter e
   on e.UserID = a.UserID
GO

ALTER VIEW [dbo].[PmSalesGradeHistoryView]
AS
SELECT [CompanyCode]
      ,[BranchCode]
      ,[EmployeeID]
      ,[TransactionID]
      ,[Grade]
	  ,CASE ISDATE(substring([AssignDate],1,11)) WHEN 1 THEN
       CONVERT(datetime, substring([AssignDate],1,11)) END [AssignDate]
      ,[AssignBy]
FROM [pmSlsGradeHistory]
GO

ALTER view [dbo].[sp_spMstCompanyAccountDtl]
		as
		  select  distinct  a.CompanyCode,a.CompanyCodeTo,d.LookUpValue as TPGO, d.LookUpValueName as TPGOName
		,a.InterCompanyAccNoTo AccountNo,b.[Description] as AccountName
		from spMstCompanyAccountdtl a
		inner join gnMstAccount b
		on a.CompanyCode=b.CompanyCode and
		a.InterCompanyAccNoTo=b.AccountNo
		inner join  spMstCompanyAccount c 
		on a.CompanyCode=c.CompanyCode and a.CompanyCodeTo=c.CompanyCodeTo 
		inner join gnMstLookUpDtl d
				on d.CompanyCode=b.CompanyCode and d.LookUpValue=a.TPGO 
				 where d.CodeID='TPGO'
GO

ALTER VIEW [dbo].[SvJobOrderView]
AS
SELECT a.CompanyCode, a.BranchCode, a.ProductType, a.InvoiceNo,
     a.ServiceNo, a.JobOrderNo, a.JobOrderDate, 
     a.EstimationNo, a.EstimationDate, a.BookingNo, 
     a.BookingDate, a.PoliceRegNo, a.ServiceBookNo, 
     a.BasicModel, a.TransmissionType, a.ChassisCode, 
     a.ChassisNo, 
     a.ChassisCode + ' ' + CAST(a.ChassisNo AS varchar) 
     AS Chassis, a.EngineCode, a.EngineNo, 
     a.EngineCode + ' ' + CAST(a.EngineNo AS varchar) 
     AS Engine, a.ColorCode,
         (SELECT RefferenceDesc1
       FROM dbo.omMstRefference AS g
       WHERE (CompanyCode = a.CompanyCode) AND 
             (RefferenceType = 'COLO') AND 
             (RefferenceCode = a.ColorCode)) 
     AS ColorName, a.CustomerCode, 
     a.CustomerCode + ' - ' + b.CustomerName AS Customer,
      b.CustomerName, 
     b.Address1 + ' ' + b.Address2 + ' ' + b.Address3 + ' ' + b.Address4
      AS CustomerAddress, 
     a.CustomerCodeBill + ' - ' + c.CustomerName AS CustomerBill,
      a.CustomerCodeBill, 
     c.CustomerName AS CustomerNameBill, 
     c.Address1 + ' ' + c.Address2 + ' ' + c.Address3 + ' ' + c.Address4
      AS CustomerBillAddress, c.NPWPNo, c.PhoneNo, 
     c.HPNo, a.Odometer, a.JobType, a.ForemanID, 
     a.MechanicID, a.ServiceStatus, a.ServiceType, 
     CASE WHEN a.ServiceStatus IN (0, 1, 2, 3, 4, 5) 
     THEN 'Outstanding Task' ELSE 'Finish Task' END AS StatusTask,
      CASE WHEN a.ServiceStatus = '4' THEN CASE WHEN '4W'
      = '4W' THEN d .Description ELSE d .LockingBy END ELSE
      d .Description END AS ServiceStatusDesc, 
     a.ServiceRequestDesc, 
     e.EmployeeName AS ForemanName, 
     f.EmployeeName AS MechanicName,
     a.TotalSrvAmount
FROM dbo.svTrnService AS a LEFT OUTER JOIN
     dbo.gnMstCustomer AS b ON 
     b.CompanyCode = a.CompanyCode AND 
     b.CustomerCode = a.CustomerCode LEFT OUTER JOIN
     dbo.gnMstCustomer AS c ON 
     c.CompanyCode = a.CompanyCode AND 
     c.CustomerCode = a.CustomerCodeBill LEFT OUTER JOIN
     dbo.svMstRefferenceService AS d ON 
     d.CompanyCode = a.CompanyCode AND 
     d.ProductType = a.ProductType AND 
     d.RefferenceCode = a.ServiceStatus AND 
     d.RefferenceType = 'SERVSTAS' LEFT OUTER JOIN
     dbo.gnMstEmployee AS e ON 
     e.CompanyCode = a.CompanyCode AND 
     e.BranchCode = a.BranchCode AND 
     e.EmployeeID = a.ForemanID LEFT OUTER JOIN
     dbo.gnMstEmployee AS f ON 
     f.CompanyCode = a.CompanyCode AND 
     f.BranchCode = a.BranchCode AND 
     f.EmployeeID = a.MechanicID
GO

if object_id('CsLkuStnkExtViewSource') is not null
	drop view CsLkuStnkExtViewSource
GO
create view [dbo].[CsLkuStnkExtViewSource]
as 
select a.CompanyCode     
	 , a.BranchCode
	 , b.CustomerCode
	 , c.CustomerName
	 , a.ChassisCode + convert(varchar, a.ChassisNo) Chassis
	 , a.EngineCode + convert(varchar, a.EngineNo) Engine
	 , a.SalesModelCode
	 , a.SalesModelYear
	 , a.ColourCode
	 , isnull(e.BpkbDate, g.BPKDate) BpkbDate
	 , isnull(e.StnkDate, g.BPKDate) StnkDate
	 , g.BPKDate
	 , h.isLeasing as IsLeasing
	 , h.LeasingCo
	 , case isnull(h.isLeasing, 0) when 0 then 'Tunai' else 'Leasing' end as Category
	 , i.CustomerName as LeasingName
	 , h.Installment
	 , convert(varchar, isnull(h.Installment, 0)) + ' Month' as Tenor
     , left(c.Address1, 40) as Address
     , c.PhoneNo
     , h.Salesman
     , j.EmployeeName as SalesmanName
     , k.IsStnkExtend
     , isnull(k.StnkExpiredDate, dateadd(year, 1, isnull(e.StnkDate, g.BPKDate)))  as StnkExpiredDate
     , k.ReqKtp
     , k.ReqStnk
     , k.ReqBpkb
     , k.ReqSuratKuasa
     , k.Comment, k.Additional, k.Status
     , (case k.Status when 1 then 'Finish' else 'In Progress' end) as StatusInfo
     , PoliceRegNo = isnull(m.PoliceRegNo, l.PoliceRegNo)
     --, case isnull(k.Chassis, '') when '' then 'Y' else 'N' end OutStanding
	 , OutStanding = (
			case 
				when k.Ownership != convert(bit, 1) then 'N'
				when isnull(k.Chassis, '') = '' then 'Y'
				when isnull(k.Chassis, '') != '' and (k.Ownership is null or k.Ownership = 1) then 'N'
				else 'N'
			end
	   )
	 , k.Ownership
  from omTrSalesInvoiceVin a    
  left join omTrSalesInvoice b    
	on b.CompanyCode = a.CompanyCode    
   and b.BranchCode = a.BranchCode    
   and b.InvoiceNo = a.InvoiceNo    
  left join gnMstCustomer c
	on c.CompanyCode = a.CompanyCode    
   and c.CustomerCode = b.CustomerCode
  left join omTrSalesDODetail d
	on d.CompanyCode = a.CompanyCode    
   and d.BranchCode = a.BranchCode
   and d.ChassisCode = a.ChassisCode
   and d.ChassisNo = a.ChassisNo
  left join CsCustomerVehicle e
	on e.CompanyCode = a.CompanyCode    
   and e.Chassis = a.ChassisCode + convert(varchar, a.ChassisNo)
  left join omTrSalesDO f
	on f.CompanyCode = d.CompanyCode    
   and f.BranchCode = d.BranchCode
   and f.DONo = d.DONo
  left join omTrSalesBPK g
	on g.CompanyCode = f.CompanyCode    
   and g.BranchCode = f.BranchCode
   and g.DONo = f.DONo
  left join omTrSalesSO h
	on h.CompanyCode = g.CompanyCode    
   and h.BranchCode = g.BranchCode
   and h.SONo = g.SONo
  left join gnMstCustomer i
	on i.CompanyCode = h.CompanyCode
   and i.CustomerCode = h.LeasingCo
  left join HrEmployee j
	on j.CompanyCode = h.CompanyCode
   and j.EmployeeID = h.Salesman
  left join CsStnkExt k
	on k.CompanyCode = a.CompanyCode
   and k.CustomerCode = b.CustomerCode
   and k.Chassis = a.ChassisCode + convert(varchar, a.ChassisNo)
  left join svMstCustomerVehicle l
	on l.CompanyCode = a.CompanyCode
   and l.ChassisCode = a.ChassisCode
   and l.ChassisNo = a.ChassisNo
  left join svMstCustomerVehicle m
	on m.CompanyCode = a.CompanyCode
   and m.ChassisCode = a.ChassisCode
   and m.ChassisNo = a.ChassisNo
 where isnull(k.StnkExpiredDate, dateadd(year, 1, isnull(e.StnkDate, g.BPKDate))) <	  dateadd(mm, 1, getdate())
   and c.CustomerType = 'I'
GO

ALTER VIEW [dbo].[SvReffServiceView]      
AS    
SELECT  a.CompanyCode, a.ProductType, b.LookupValueName, a.RefferenceType, a.RefferenceCode, a.Description, a.DescriptionEng, CASE WHEN a.IsActive = 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS IsActiveDesc, a.IsActive,       
        a.CreatedBy, a.CreatedDate, a.LastupdateBy, a.LastupdateDate, a.IsLocked, a.LockingBy, a.LockingDate      
FROM    dbo.svMstRefferenceService  a
join gnMstLookupDtl b
on a.CompanyCode = b.CompanyCode
and a.RefferenceType = b.LookupValue
GO

ALTER view [dbo].[SvJobTypeView]
as 
select a.CompanyCode
     , a.BasicModel
     , a.JobType
     , b.Description
  from SvMstJob a
  left join svMstRefferenceService b
    on b.CompanyCode = a.CompanyCode
   and b.ProductType = a.ProductType
   and b.RefferenceCode = a.JobType
   and b.RefferenceType = 'JOBSTYPE'
GO
ALTER procedure [dbo].[uspfn_HrInqPersInfoDetail]
  @CompanyCode varchar(20),
  @DeptCode varchar(20),
  @PosCode varchar(20),
  @Status varchar(20),
  @BranchCode varchar(20) = ''
as      

;with x as (      
select a.CompanyCode
     , a.EmployeeID      
     , e.SalesID      
     , a.EmployeeName      
     , BranchCode = isnull((select top 1 BranchCode from HrEmployeeMutation where CompanyCode = a.CompanyCode and EmployeeID = a.EmployeeID and IsDeleted=0 order by MutationDate  desc), '')      
     , DeptCode = isnull((select top 1 HrEmployeeAchievement.Department from HrEmployeeAchievement where CompanyCode = a.CompanyCode and EmployeeID = a.EmployeeID and isDeleted != 1 and AssignDate <= getdate() order by AssignDate desc), '')      
     , PosCode = isnull((select top 1 HrEmployeeAchievement.Position from HrEmployeeAchievement where CompanyCode = a.CompanyCode and EmployeeID = a.EmployeeID and isDeleted != 1 and AssignDate <= getdate() order by AssignDate desc), '')      
     , Status = (case isnull(a.PersonnelStatus, '')      
		  when '1' then 'Aktif'      
		  when '2' then 'Non Aktif'      
		  when '3' then 'Keluar'      
		  when '4' then 'Pensiun'      
		  else 'No Status' end)      
     , a.Address1      
     , a.Address2      
     , a.Address3      
     , a.Address4      
     , Address = isnull(a.Address1, '') --+ ' ' + ltrim(isnull(a.Address2, '')) + ' ' + ltrim(isnull(a.Address3, '')) + ' ' + ltrim(isnull(a.Address4, ''))      
	 , a.Grade  
     , a.BirthDate      
     , upper(a.BirthPlace) BirthPlace
     , a.BloodCode      
     , SubOrdinates = (select count(x.EmployeeID) from HrEmployee x where x.TeamLeader=a.EmployeeID)      
     , MutationTimes = (select count(x.EmployeeID) from HrEmployeeMutation x where x.CompanyCode=a.CompanyCode and x.EmployeeID=a.EmployeeID and x.IsDeleted != 1)      
     , AchieveTimes = (select count(x.EmployeeID) from HrEmployeeAchievement x where x.CompanyCode=a.CompanyCode and x.EmployeeID=a.EmployeeID and x.IsDeleted != 1)      
     , TeamLeader = (select top 1 x.EmployeeName from HrEmployee x where x.EmployeeID=a.TeamLeader)      
     , a.JoinDate      
     , a.ResignDate      
     , a.ResignDescription      
     , MaritalStatus = upper(f.LookUpValueName)
     , Religion = upper(g.LookUpValueName)
     , Education = upper(h.LookUpValueName)
     , Gender = upper(i.LookUpValueName)
     , a.Province      
     , a.District      
     , a.SubDistrict      
     , a.Village      
     , a.ZipCode      
     , a.IdentityNo      
     , a.NPWPNo      
     , a.NPWPDate      
     , a.Email      
     , a.FaxNo      
     , a.Telephone1      
     , a.Telephone2      
     , a.Handphone1      
     , a.Handphone2      
     , a.Handphone3      
     , a.Handphone4      
     , a.DrivingLicense1      
     , a.DrivingLicense2      
     , a.Height      
     , a.Weight      
     , a.UniformSize      
     , a.UniformSizeAlt      
  from HrEmployee a      
  left join GnMstPosition c      
    on c.CompanyCode = a.CompanyCode      
   and c.DeptCode = a.Department      
   and c.PosCode = a.Position      
  left join GnMstLookUpDtl f      
    on f.CompanyCode = a.CompanyCode      
   and f.CodeID = 'MRTL'      
   and f.LookUpValue = a.MaritalStatus      
  left join GnMstLookUpDtl g      
    on g.CompanyCode =  a.CompanyCode 
   and g.CodeID = 'RLGN'      
   and g.LookUpValue = a.Religion      
  left join GnMstLookUpDtl h      
    on h.CompanyCode =  a.CompanyCode 
   and h.CodeID = 'FEDU'      
   and h.LookUpValue = a.FormalEducation      
  left join GnMstLookUpDtl i      
    on i.CompanyCode =  a.CompanyCode 
   and i.CodeID = 'GNDR'      
   and i.LookUpValue = a.Gender  
  left join HrEmployeeSales e      
    on e.CompanyCode = a.CompanyCode      
   and e.EmployeeID = a.EmployeeID      
 where 1 = 1
   and a.CompanyCode = (case @CompanyCode when '' then a.CompanyCode else @CompanyCode end)
   and a.Department = @DeptCode      
   and a.Position = (case @PosCode when '' then a.Position else @PosCode end)      
   and a.PersonnelStatus = (case @Status when '' then a.PersonnelStatus else @Status end)      
)    
,y as (  
select x.CompanyCode
     , e.CompanyName
     , x.EmployeeID
	 , x.SalesID
	 , x.EmployeeName
	 , x.BranchCode
	 , c.OutletName BranchName
	 , x.DeptCode
	 , x.PosCode
     , Position = ''
	     + upper(x.DeptCode)      
         + upper(case isnull(b.PosName, '') when '' then '' else ' - ' + b.PosName end)      
         + upper(case isnull(d.LookUpValueName, '') when '' then '' else ' - ' + d.LookUpValueName end)    
	 , b.PosName
	 , GradeCode = x.Grade
	 , Grade = upper(d.LookUpValueName)
	 , x.Status
	 , x.Address1
	 , x.Address2
	 , x.Address3
	 , x.Address4
	 , x.Address
	 , x.BirthDate
	 , x.BirthPlace
	 , x.BloodCode
	 , x.SubOrdinates
	 , x.MutationTimes
	 , x.AchieveTimes
	 , x.TeamLeader
	 , x.JoinDate
	 , x.ResignDate
	 , x.ResignDescription
	 , x.MaritalStatus
	 , x.Religion
	 , x.Education
	 , x.Gender
	 , upper(x.Province) as Province
	 , x.District
	 , x.SubDistrict
	 , x.Village
	 , x.ZipCode
	 , x.IdentityNo
	 , x.NPWPNo
	 , x.NPWPDate
	 , x.Email
	 , x.FaxNo
	 , x.Telephone1
	 , x.Telephone2
	 , x.Handphone1
	 , x.Handphone2
	 , x.Handphone3
	 , x.Handphone4
	 , x.DrivingLicense1
	 , x.DrivingLicense2
	 , x.Height
	 , x.Weight
	 , x.UniformSize
	 , x.UniformSizeAlt
     , PreTraining = (select top 1 TrainingDate from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'STDP1')
     , PreTrainingPostTest = (select top 1 PostTest from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'STDP1')
     , Pembekalan = (select top 1 TrainingDate from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'STDP2')
     , PembekalanPostTest = (select top 1 PostTest from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'STDP2')
     , Salesmanship = (select top 1 TrainingDate from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'STDP3')
     , SalesmanshipPostTest = (select top 1 PostTest from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'STDP3')
     , Ojt = (select top 1 TrainingDate from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'STDP4')
     , OjtPostTest = (select top 1 PostTest from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'STDP4')
     , FinalReview = (select top 1 TrainingDate from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'STDP7')
     , FinalReviewPostTest = (select top 1 PostTest from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'STDP7')
     , SpsSlv = (select top 1 TrainingDate from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'SPSS')
     , SpsSlvPostTest = (select top 1 PostTest from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'SPSS')
     , SpsGld = (select top 1 TrainingDate from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'SPSG')
     , SpsGldPostTest = (select top 1 PostTest from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'SPSG')
     , SpsPlt = (select top 1 TrainingDate from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'SPSP')
     , SpsPltPostTest = (select top 1 PostTest from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'SPSP')
     , SCBsc = (select top 1 TrainingDate from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'SCB')
     , SCAdv = (select top 1 TrainingDate from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'SCA')
     , SHBsc = (select top 1 TrainingDate from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'SHB')
     , SHInt = (select top 1 TrainingDate from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'SHI')
     , BMBsc = (select top 1 TrainingDate from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'BMB')
     , BMInt = (select top 1 TrainingDate from HrEmployeeTraining where CompanyCode = x.CompanyCode and EmployeeID = x.EmployeeID and TrainingCode = 'BMI')
  from x 
  left join GnMstPosition b      
    on b.CompanyCode =  x.CompanyCode 
   and b.DeptCode = x.DeptCode      
   and b.PosCode = x.PosCode  
  left join [gnMstDealerOutletMapping] c
    on c.DealerCode = x.CompanyCode
   and c.OutletCode = x.BranchCode     
  left join GnMstLookUpDtl d      
    on d.CompanyCode =  x.CompanyCode      
   and d.CodeID = 'ITSG'      
   and d.LookUpValue = x.Grade      
  left join gnMstOrganizationHdr e      
    on e.CompanyCode = x.CompanyCode
 where isnull(x.BranchCode, '') = (case @BranchCode when '' then x.BranchCode else @BranchCode end)
)
--select * from x
select y.CompanyCode as [Kode Dealer]
     , y.CompanyName as [Nama Dealer]
     , y.BranchCode as [Kode Outlet]
     , y.BranchName as [Nama Outlet]
     , y.DeptCode as Department
     , y.EmployeeID as Nik
     , y.EmployeeName as Nama
     , y.PosName as Jabatan
     , y.Grade as Grade
     , '' as AdditionalJob
     , y.Status
     , y.JoinDate
     , y.TeamLeader
     , y.ResignDate
     , y.ResignDescription
     , y.MaritalStatus
     , y.Religion
     , y.Gender
     , y.Education
     , y.BirthPlace
     , y.BirthDate
     , y.Address
     , y.District as City
     , y.Province
     , y.ZipCode
     , y.IdentityNo
     , y.NPWPNo
     , y.Email
     , y.Telephone1
     , y.Telephone2
     , y.Handphone1
     , y.Handphone2
     , y.Handphone3
     , y.Handphone4 as PinBB
     , y.Height
     , y.Weight
     , y.UniformSize
     , y.UniformSizeAlt
     , y.PreTraining
     , y.PreTrainingPostTest
     , y.Pembekalan 
     , y.PembekalanPostTest as [Nilai Akhir Pembekalan]
     , y.Salesmanship as [Salesmanship]
     , y.SalesmanshipPostTest as [Nilai Akhir Salesmanship]
     , y.Ojt as [OJT]
     , y.OjtPostTest as [Nilai Akhir Ojt]
     , y.FinalReview as [Final Review]
     , y.FinalReviewPostTest as [Nilai Akhir Final Review]
     , y.SpsSlv as [Sales Silver]
     , y.SpsSlvPostTest as [Sales Silver PostTest]
     , y.SpsGld as [Sales Gold]
     , y.SpsGldPostTest as [Sales Gold PostTest]
     , y.SpsPlt as [Sales Platinum]
     , y.SpsPltPostTest as [Sales Platinum PostTest]
     , y.SCBsc as [SC Basic]
     , y.SCAdv as [SC Advance]
     , y.SHBsc as [SH Basic]
     , y.SHInt as [SH Intermediate]
     , y.BMBsc as [BM Basic]
     , y.BMInt as [BM Intermediate]
  from y where 1 = 1
   --and (y.PreTraining is not null or y.Pembekalan is not null or y.Salesmanship is not null or y.Ojt is not null or y.FinalReview is not null )
   --and (y.SpsSlv is not null or y.SpsGld is not null or y.SpsPlt is not null)
   --and (y.SCBsc is not null or y.SCAdv is not null)
   --and (y.SHBsc is not null or y.SHInt is not null)
GO

ALTER procedure [dbo].[uspfn_SelectAccOther]
	@CompanyCode varchar(25),
	@Reff varchar(25)
as
begin
	SELECT a.RefferenceCode
	     , a.RefferenceDesc1 RefferenceDesc1
      FROM dbo.omMstRefference a
     WHERE a.CompanyCode = @CompanyCode
       AND a.RefferenceType = @Reff
       AND a.Status != '0'
end
GO
ALTER procedure [dbo].[uspfn_SvTrnInvoiceSelectDtl]
	@CompanyCode varchar(15),
	@BranchCode  varchar(15),
	@ProductType varchar(15),
	@JobOrderNo  varchar(15),
	@BillType    varchar(15)
as      
begin

/*
declare @CompanyCode varchar(15),
		@BranchCode  varchar(15),
		@ProductType varchar(15),
		@JobOrderNo  varchar(15),
		@BillType    varchar(15)

set	@CompanyCode = '6006406'
set	@BranchCode  = '6006401'
set	@ProductType = '4W'
set	@JobOrderNo  = 'SPK/12/002199'
set	@BillType    = 'F'
*/

declare @t1 as table 
(
 BillType varchar(10)
,BillTypeDesc varchar(70)
,TypeOfGoods varchar(10)
,TypeOfGoodsDesc varchar(70)
,TaskPartNo varchar(50)
,SupplyQty numeric(18,2)
,OprRetailPriceTotal numeric(18,2)
,SupplySlipNo varchar(20)
,TaskPartDesc varchar(max)
,Price numeric(18,2)
,DiscPct numeric(18,2)
,PriceNet numeric(18,2)
)

--create unique nonclustered index idx_t1 ON @t1(BillType, TypeOfGoods, TaskPartNo);

declare @ServiceNo bigint
    set @ServiceNo = isnull((
		select ServiceNo
		  from svTrnService
		 where CompanyCode = @CompanyCode
		   and BranchCode  = @BranchCode
		   and ProductType = @ProductType
		   and JobOrderNo  = @JobOrderNo
		),0)

select * into #srv from (
select * from svTrnService
 where CompanyCode = @CompanyCode
   and BranchCode  = @BranchCode
   and ProductType = @ProductType
   and ServiceNo   = @ServiceNo
)#srv

-- add condition when invoice alteady created
declare @InvoiceNo varchar(20)
    set @InvoiceNo = isnull((
						select top 1 InvoiceNo from svTrnInvoice
						 where CompanyCode = CompanyCode
						   and BranchCode = @BranchCode
						   and JobOrderNo = @JobOrderNo
						   and substring(InvoiceNo , 3, 1) = @BillType
						), '')   


if (@InvoiceNo <> '')
begin
	insert into @t1
	select BillType = @BillType
		 , BillTypeDesc = isnull((
							select top 1 Description 
							  from svMstBillingType
							 where CompanyCode = @CompanyCode
							   and BillType = @BillType
							   ), '')
		 , TypeOfGoods = 'L'
		 , TypeOfGoodsDesc = 'Labor (JASA)'
		 , t.OperationNo as TaskPartNo
		 , t.OperationHour as SupplyQty
		 , t.OperationCost * t.OperationHour * (100.0 - isnull(t.DiscPct, 0)) * 0.01
		 , SupplySlipNo = ''
		 , TaskPartDesc = isnull((
			 select top 1 tsk.Description
			   from svMstTask tsk, #srv srv
			  where tsk.CompanyCode = srv.CompanyCode
				and tsk.ProductType = srv.ProductType
				and tsk.BasicModel = srv.BasicModel
				and (tsk.JobType = srv.JobType or tsk.JobType = 'CLAIM' or tsk.JobType = 'OTHER')
				and tsk.OperationNo = t.OperationNo
				), '')
		 , t.OperationCost * t.OperationHour as Price
		 , isnull(t.DiscPct, 0)
		 , t.OperationCost * t.OperationHour * (100.0 - isnull(t.DiscPct, 0)) * 0.01
	  from svTrnInvTask t
	 where t.CompanyCode = @CompanyCode
	   and t.BranchCode = @BranchCode
	   and t.InvoiceNo = @InvoiceNo
	
	insert into @t1
	select BillType = @BillType
		 , BillTypeDesc = isnull((
							select top 1 Description 
							  from svMstBillingType
							 where CompanyCode = @CompanyCode
							   and BillType = @BillType
							   ), '')
		 , i.TypeOfGoods
		  ,rtrim(l.LookupValueName) + case lower(g.ParaValue) when 'sparepart' then ' (SPR)' else ' (MTR)' end TypeOfGoodsDesc
		 , i.PartNo as TaskPartNo
		 , (i.SupplyQty - i.ReturnQty) as SupplyQty
		 , i.RetailPrice * (i.SupplyQty - i.ReturnQty) *  (100.0 - isnull(i.DiscPct, 0)) * 0.01
		 , SupplySlipNo = isnull((
							 select top 1 tsk.SupplySlipNo
							   from svTrnSrvItem tsk, #srv srv
							  where tsk.CompanyCode = srv.CompanyCode
								and tsk.BranchCode = srv.BranchCode
								and tsk.ServiceNo = srv.ServiceNo
								and tsk.CompanyCode = i.CompanyCode
								and tsk.BranchCode = i.BranchCode
								and tsk.PartNo = i.partNo
								and tsk.SupplyQty - tsk.ReturnQty > 0
							), '')
		 , p.PartName as TaskPartDesc
		 , i.RetailPrice * (i.SupplyQty - i.ReturnQty), isnull(i.DiscPct, 0)
		 , i.RetailPrice * (i.SupplyQty - i.ReturnQty) *  (100.0 - isnull(i.DiscPct, 0)) * 0.01
	  from svTrnInvItem i
	  left join gnMstLookupDtl l
		on l.CompanyCode = i.CompanyCode
	   and l.CodeID = 'TPGO'
	   and l.LookupValue = i.TypeOfGoods
	  left join gnMstLookupDtl g
		on g.CompanyCode = i.CompanyCode
	   and g.CodeID = 'GTGO'
	   and g.LookupValue = i.TypeOfGoods
	  left join spMstItemInfo p
		on p.CompanyCode = i.CompanyCode
	   and p.PartNo = i.PartNo
	 where i.CompanyCode = @CompanyCode
	   and i.BranchCode = @BranchCode
	   and i.InvoiceNo = @InvoiceNo
   
    select row_number() over (order by BillType) SeqNo, * from @t1

	drop table #srv
	return 
end


insert into @t1
select a.BillType
      ,b.Description BillTypeDesc
      ,a.TypeOfGoods
      ,case a.TypeOfGoods when 'L' then 'Labor (JASA)' end TypeOfGoodsDesc
      ,a.OperationNo
      ,a.OperationHour
      ,a.OperationHour * a.OperationCost * (100.0 - a.DiscPct) * 0.01
      ,'' SupplySlipNo
      ,rtrim(d.Description) OperationDesc 
      ,a.OperationHour * a.OperationCost
      ,a.DiscPct
      ,a.OperationHour * a.OperationCost * (100.0 - a.DiscPct) * 0.01
  from svTrnSrvTask a with (nolock,nowait)
  left join svMstBillingType b with (nolock,nowait)
    on b.CompanyCode = a.CompanyCode
   and b.BillType = a.BillType
  left join svTrnService c with (nolock,nowait)
    on c.CompanyCode = a.CompanyCode
   and c.BranchCode = a.BranchCode
   and c.ProductType = a.ProductType
   and c.ServiceNo = a.ServiceNo
  left join svMstTask d with (nolock,nowait)
    on d.CompanyCode = a.CompanyCode
   and d.ProductType = a.ProductType
   and d.BasicModel = c.BasicModel
   and (d.JobType = c.JobType or d.JobType = 'CLAIM' or d.JobType = 'OTHER')
   and d.OperationNo = a.OperationNo
 where 1 = 1
   and a.CompanyCode = @CompanyCode
   and a.BranchCode  = @BranchCode
   and a.ProductType = @ProductType
   and a.ServiceNo   = @ServiceNo
   and a.BillType like @BillType

select * into #t2_temp from (
select a.CompanyCode
	  ,a.BranchCode
	  ,a.ProductType
	  ,a.ServiceNo
	  ,a.BillType
      ,a.PartNo
      ,(a.SupplyQty - a.ReturnQty) SupplyQty
   --   ,(a.SupplyQty - a.ReturnQty) * 
			--isnull((select top 1 aa.RetailPrice
			--		  from svTrnSrvItem aa
			--		 where aa.CompanyCode = a.CompanyCode
			--		   and aa.BranchCode  = a.BranchCode
			--		   and aa.ProductType = a.ProductType
			--		   and aa.ServiceNo   = a.ServiceNo
			--		   and aa.PartNo      = a.PartNo
			--		 order by aa.PartSeq desc
			--	),0) as RetailPriceTotal
      ,a.TypeOfGoods
      ,a.SupplySlipNo
      ,a.RetailPrice
  from svTrnSrvItem a with (nolock,nowait)
 where 1 = 1
   and a.CompanyCode = @CompanyCode
   and a.BranchCode  = @BranchCode
   and a.ProductType = @ProductType
   and a.ServiceNo   = @ServiceNo
   and a.BillType like @BillType
   and (a.SupplyQty - a.ReturnQty) > 0
) #t2_temp

select * into #t2 from(
select a.CompanyCode
	  ,a.BranchCode
	  ,a.ProductType
	  ,a.ServiceNo
	  ,a.BillType
      ,a.PartNo
      ,sum(a.SupplyQty) SupplyQty
      --,sum(a.RetailPriceTotal) RetailPriceTotal
      ,a.TypeOfGoods
      ,a.SupplySlipNo
  from #t2_temp a with (nolock,nowait)
 group by a.CompanyCode, a.BranchCode, a.ProductType, a.ServiceNo, a.BillType, a.PartNo, a.TypeOfGoods, a.SupplySlipNo
) #t2

insert into @t1
select a.BillType
      ,b.Description BillTypeDesc
      ,a.TypeOfGoods
      ,rtrim(c.LookupValueName) + case lower(g.ParaValue) when 'sparepart' then ' (SPR)' else ' (MTR)' end TypeOfGoodsDesc
      ,a.PartNo
      ,a.SupplyQty
     ,isnull((
         select top 1 RetailPrice 
           from svTrnSrvItem
          where 1 = 1
            and CompanyCode = a.CompanyCode
            and BranchCode = a.BranchCode
            and ServiceNo = a.ServiceNo
            and PartNo = a.PartNo
            and (SupplyQty - ReturnQty) > 0		--tambahan
         ), 0) * a.SupplyQty
      *isnull((
         select top 1 (100.0 - DiscPct)
           from svTrnSrvItem
          where 1 = 1
            and CompanyCode = a.CompanyCode
            and BranchCode = a.BranchCode
            and ServiceNo = a.ServiceNo
            and PartNo = a.PartNo
            and (SupplyQty - ReturnQty) > 0		--tambahan
         ), 0) * 0.01
      ,a.SupplySlipNo
      ,rtrim(d.PartName) OperationDesc 
      ,isnull((
         select top 1 RetailPrice 
           from svTrnSrvItem
          where 1 = 1
            and CompanyCode = a.CompanyCode
            and BranchCode = a.BranchCode
            and ServiceNo = a.ServiceNo
            and PartNo = a.PartNo
            and (SupplyQty - ReturnQty) > 0		--tambahan
         ), 0) * a.SupplyQty
      ,isnull((
         select top 1 DiscPct 
           from svTrnSrvItem
          where 1 = 1
            and CompanyCode = a.CompanyCode
            and BranchCode = a.BranchCode
            and ServiceNo = a.ServiceNo
            and PartNo = a.PartNo
            and (SupplyQty - ReturnQty) > 0		--tambahan
         ), 0)
      ,isnull((
         select top 1 RetailPrice 
           from svTrnSrvItem
          where 1 = 1
            and CompanyCode = a.CompanyCode
            and BranchCode = a.BranchCode
            and ServiceNo = a.ServiceNo
            and PartNo = a.PartNo
            and (SupplyQty - ReturnQty) > 0		--tambahan
         ), 0) * a.SupplyQty
      *isnull((
         select top 1 (100.0 - DiscPct)
           from svTrnSrvItem
          where 1 = 1
            and CompanyCode = a.CompanyCode
            and BranchCode = a.BranchCode
            and ServiceNo = a.ServiceNo
            and PartNo = a.PartNo
            and (SupplyQty - ReturnQty) > 0		--tambahan
         ), 0) * 0.01
  from #t2 a with (nolock,nowait)
  left join svMstBillingType b with (nolock,nowait)
    on b.CompanyCode = a.CompanyCode
   and b.BillType = a.BillType
  left join gnMstLookupDtl c with (nolock,nowait)
    on c.CompanyCode = a.CompanyCode
   and c.CodeID = 'TPGO'
   and c.LookupValue = a.TypeOfGoods
  left join spMstItemInfo d with (nolock,nowait)
    on d.CompanyCode = a.CompanyCode
   and d.PartNo = a.PartNo
  left join gnMstLookupDtl g with (nolock,nowait)
    on g.CompanyCode = a.CompanyCode
   and g.CodeID = 'GTGO'
   and g.LookupValue = a.TypeOfGoods
  left join svTrnService s with (nolock,nowait)
    on s.CompanyCode = a.CompanyCode
   and s.BranchCode = a.BranchCode
   and s.ServiceNo = a.ServiceNo
 where 1 = 1
   and a.CompanyCode = @CompanyCode
   and a.BranchCode  = @BranchCode
   and a.ProductType = @ProductType
   and a.ServiceNo   = @ServiceNo
   and a.BillType like @BillType

select row_number() over (order by a.BillType) SeqNo
	 , a.* 
	 , LaborGrossAmt = isnull((select ceiling(sum(PriceNet)) from @t1 where TypeOfGoods = 'L'),0)
	 , LaborDiscPct = isnull((select LaborDiscPct from #srv),0)
	 , PartsGrossAmt = isnull((
			 select ceiling(sum(t.PriceNet))
			   from @t1 t, gnMstLookUpDtl g
			 where g.LookUpValue = t.TypeOfGoods
		 	   and g.CompanyCode = @CompanyCode
			   and g.CodeID      = 'GTGO'
			   and g.ParaValue   = 'SPAREPART'
			  ),0)
	 , PartsDiscPct = isnull((select PartDiscPct from #srv),0)
	 , MaterialGrossAmt = isnull((
			 select ceiling(sum(t.PriceNet))
			   from @t1 t, gnMstLookUpDtl g
			 where g.LookUpValue = t.TypeOfGoods
		 	   and g.CompanyCode = @CompanyCode
			   and g.CodeID      = 'GTGO'
			   and g.ParaValue  in ('OLI','MATERIAL')
			  ),0)
	 , MaterialDiscPct = isnull((select MaterialDiscPct from #srv),0)
  from @t1 a

drop table #t2
drop table #t2_temp
drop table #srv

end
GO
ALTER procedure [dbo].[uspfn_SvGetCustVehicle]
   @CompanyCode varchar(15)
as

select a.ChassisCode, cast(a.ChassisNo as varchar) ChassisNo, a.EngineCode, a.SalesModelYear
     , cast(a.EngineNo as varchar) EngineNo, a.ServiceBookNo
     , case a.PoliceRegistrationDate when ('19000101') then NULL else a.PoliceRegistrationDate end as PoliceRegistrationDate
     , a.PoliceRegistrationNo
     , case a.IsActive when 1 then 'Aktif' else 'Tidak Aktif' end as Status
     , b.BasicModel
     , b.TechnicalModelCode
     , b.TransmissionType
     , a.ColourCode
     , c.CustomerCode
     , c.CompanyCode
     , '' ContactName
     , '' ContactAddress
     , '' ContactPhone
  from omMstVehicle a
  left join omMstModel b
    on b.CompanyCode = a.CompanyCode
   and b.SalesModelCode = a.SalesModelCode
  left join omTrSalesInvoice c
    on c.CompanyCode = a.CompanyCode
   and c.InvoiceNo = a.InvoiceNo
 where a.CompanyCode = @CompanyCode
   and a.IsActive = 1
 order by a.ChassisCode, a.ChassisNo
 
 select * from SvChassicView
GO
-- =============================================    
-- Author:        <Author,,Name>    
-- Create date: <Create Date,,>    
-- Description:    -LAPORAN PERINCIAN INSENTIF (MEKANIK)    
--                -LAPORAN PERINCIAN INSENTIF (SERVICE ADVISOR)    
--                -LAPORAN REKAPITULASI PERINCIAN INSENTIF    
--                -LAPORAN REKAPITULASI PERINCIAN INSENTIF (MEKANIK)    
--                -LAPORAN REKAPITULASI PERINCIAN INSENTIF (SERVICE ADVISOR)    
-- =============================================    
ALTER procedure [dbo].[usprpt_SvRpReport010]  
  @CompanyCode varchar(15)      
 ,@BranchCode varchar(15)      
 ,@DateStart varchar(15)      
 ,@DateEnd varchar(15)      
 ,@NikFilter varchar(15)      
 ,@NameFilter varchar(15)     
 ,@ReportBy varchar(1)      
  
as      
begin      
    
set nocount on    
    
IF @ReportBy = '1'      
 BEGIN      
 -- select top 1 data yang ada di svTrnSrvTask & svTrnSrvMechanic  
    select * into #t1 from (    
    select a.CompanyCode, a.BranchCode, a.ProductType, a.InvoiceNo, a.BasicModel, a.JobType, b.ServiceNo    
         , isnull((    
                select top 1 OperationNo from svTrnService srv, svTrnSrvTask tsk    
                 where 1 = 1    
                   and tsk.CompanyCode = srv.CompanyCode    
                   and tsk.BranchCode = srv.BranchCode    
                   and tsk.ServiceNo = srv.ServiceNo    
                   and srv.CompanyCode = a.CompanyCode    
                   and srv.BranchCode = a.BranchCode    
                   and srv.JobOrderNo = a.JobOrderNo    
                 order by tsk.CreatedDate    
                ), '') OperationNo    
         , isnull((    
                select top 1 mec.MechanicID from svTrnService srv, svTrnSrvTask tsk, svTrnSrvMechanic mec    
                 where 1 = 1    
                   and mec.CompanyCode = tsk.CompanyCode    
                   and mec.BranchCode = tsk.BranchCode    
                   and mec.ServiceNo = tsk.ServiceNo    
                   and mec.OperationNo = tsk.OperationNo    
                   and tsk.CompanyCode = srv.CompanyCode    
                   and tsk.BranchCode = srv.BranchCode    
                   and tsk.ServiceNo = srv.ServiceNo    
                   and srv.CompanyCode = a.CompanyCode    
                   and srv.BranchCode = a.BranchCode    
                   and srv.JobOrderNo = a.JobOrderNo    
                 order by tsk.CreatedDate, mec.CreatedBy    
                ), '') MechanicID    
         , b.ForemanID, a.InvoiceDate    
         , a.LaborDiscPct, a.PartsDiscPct, a.MaterialDiscPct    
         , a.PartsGrossAmt, a.MaterialGrossAmt    
         , a.PartsDiscAmt, a.MaterialDiscAmt    
         , a.PartsDppAmt, a.MaterialDppAmt    
         , isnull((    
            select count(OperationNo) from svTrnInvTask    
             where CompanyCode = a.CompanyCode    
               and BranchCode = a.BranchCode    
               and InvoiceNo = a.InvoiceNo    
            ), 0) NoOfTask    
      from svTrnInvoice a    
      left join svTrnService b    
        on b.CompanyCode = a.CompanyCode      
       and b.BranchCode = a.BranchCode      
       and b.JobOrderNo = a.JobOrderNo      
     where 1 = 1    
       and a.CompanyCode= @CompanyCode      
       and a.BranchCode= @BranchCode      
       and convert(varchar, a.InvoiceDate, 112) between @DateStart and @DateEnd      
    )#    
  
 declare @t_query as table  
 (  
  CompanyCode   varchar(20),   
  BranchCode    varchar(20),   
  RecNo         int,  
  MechanicGroup varchar(20),   
  MechanicId    varchar(20),   
  EmployeeName  varchar(120),   
  InvoiceNo     varchar(20),  
  InvoiceDate   datetime,  
  OperationNo   varchar(20),   
  OperationHour numeric(7,2),  
  SharingTask   numeric(5,0),  
  OperationCost numeric(18,2),   
  LaborDiscPct  numeric(7,2),  
  PartsDiscPct  numeric(7,2),  
  MaterialDiscPct numeric(7,2),  
  [Description] varchar(200),  
  Sparepart     numeric(18,2),  
  Potongan      numeric(18,2),  
  DPPart        numeric(18,2)  
 )     
   
 insert into @t_query  
 -- (1st Query) select top 1 data yang ada di svTrnSrvTask & svTrnSrvMechanic  
    select a.CompanyCode, a.BranchCode    
         , (row_number() over (order by a.InvoiceNo)) as RecNo      
         , upper(substring(b.MechanicID, 1, 1)) MechanicGroup      
         , upper(b.MechanicID) MechanicId      
         , upper(c.EmployeeName) EmployeeName      
         , a.InvoiceNo, a.InvoiceDate, a.OperationNo      
         , (case NoOfTask when 0 then 0 else d.OperationHour end) OperationHour    
         , d.SharingTask    
         , case a.JobType when 'REWORK' then 0 else   
                isnull((  
                    select OperationCost from svTrnInvTask  
                     where CompanyCode = a.CompanyCode  
                       and BranchCode = a.BranchCode  
                       and InvoiceNo = a.InvoiceNo  
                       and OperationNo = a.OperationNo  
                    ), 0)  
             end OperationCost      
         , a.LaborDiscPct, a.PartsDiscPct, a.MaterialDiscPct    
         , case a.JobType when 'REWORK' then '"REWORK"' else e.Description end Description    
         , case a.JobType when 'REWORK' then 0 else (a.PartsGrossAmt + a.MaterialGrossAmt) end Sparepart    
         , case a.JobType when 'REWORK' then 0 else (a.PartsDiscAmt + a.MaterialDiscAmt) end Potongan    
         , case a.JobType when 'REWORK' then 0 else (a.PartsDppAmt + a.MaterialDppAmt) end DPPart    
      from #t1 a    
      left join svTrnInvMechanic b      
        on b.CompanyCode = a.CompanyCode        
       and b.BranchCode = a.BranchCode        
       and b.ProductType = a.ProductType      
       and b.InvoiceNo = a.InvoiceNo      
       and b.OperationNo = a.OperationNo      
      left join gnMstEmployee c      
        on c.CompanyCode = a.CompanyCode        
       and c.BranchCode = a.BranchCode        
       and c.EmployeeId = b.MechanicID        
      left join svTrnSrvTask d    
        on d.CompanyCode = a.CompanyCode        
       and d.BranchCode = a.BranchCode        
       and d.ProductType = a.ProductType      
       and d.ServiceNo = a.ServiceNo      
       and d.OperationNo = a.OperationNo      
      left join svMstTask e      
        on e.CompanyCode = a.CompanyCode        
       and e.ProductType = a.ProductType        
       and e.BasicModel = a.BasicModel        
       and e.JobType = a.JobType        
       and e.OperationNo = a.OperationNo      
     where 1 = 1    
       and a.CompanyCode= @CompanyCode      
       and a.BranchCode= @BranchCode      
       and convert(varchar, a.InvoiceDate, 112) between @DateStart and @DateEnd     
       and a.MechanicId <> ''      
       and a.MechanicId like @NikFilter      
       and c.EmployeeName like @NameFilter      
       and a.JobType <> 'REWORK'    
       and isnull(e.IsSubCon, 0) = 0  
    
    union all    
    
 -- (2nd Query) select data dari invoice yg tidak ada pada data sebelumnya   
    select a.CompanyCode, a.BranchCode    
         , (row_number() over (order by a.InvoiceNo)) as RecNo      
         , upper(substring(c.MechanicID, 1, 1)) MechanicGroup      
         , upper(c.MechanicID) MechanicId      
         , upper(e.EmployeeName) EmployeeName      
         , a.InvoiceNo, a.InvoiceDate, b.OperationNo      
         , b.OperationHour, b.SharingTask    
         , case a.JobType when 'REWORK' then 0 else b.OperationCost end OperationCost      
         , a.LaborDiscPct, a.PartsDiscPct, a.MaterialDiscPct    
         , case a.JobType when 'REWORK' then '"REWORK"' else d.Description end Description    
         , 0 Sparepart    
         , 0 Potongan    
         , 0 DPPart    
      from svTrnInvoice a    
      left join svTrnInvTask b    
        on b.CompanyCode = a.CompanyCode      
       and b.BranchCode = a.BranchCode      
       and b.ProductType = a.ProductType    
       and b.InvoiceNo = a.InvoiceNo    
      left join svTrnInvMechanic c    
        on c.CompanyCode = b.CompanyCode      
       and c.BranchCode = b.BranchCode      
       and c.ProductType = b.ProductType    
       and c.InvoiceNo = b.InvoiceNo    
       and c.OperationNo = b.OperationNo    
      left join svMstTask d    
        on d.CompanyCode = a.CompanyCode      
       and d.ProductType = a.ProductType      
       and d.BasicModel = a.BasicModel      
       and d.JobType = a.JobType      
       and d.OperationNo = b.OperationNo      
      left join gnMstEmployee e    
        on e.CompanyCode = a.CompanyCode      
       and e.BranchCode = a.BranchCode      
       and e.EmployeeId = c.MechanicID      
     where 1 = 1    
       and a.CompanyCode= @CompanyCode      
       and a.BranchCode= @BranchCode      
       and convert(varchar, a.InvoiceDate, 112) between @DateStart and @DateEnd     
       and c.MechanicId <> ''      
       and c.MechanicId like @NikFilter      
       and e.EmployeeName like @NameFilter    
       and a.JobType <> 'REWORK'    
       and isnull(d.IsSubCon, 0) = 0  
       and not exists (    
        select 1 from #t1     
         where 1 = 1    
           and InvoiceNo = a.InvoiceNo    
           and OperationNo = b.OperationNo    
        )    
  
    union all  
  
 -- (3nd Query) select data dari invoice yg ada pemakaian part, tetapi task-nya pada invoice lain  
 -- di joinkan dengan data pada table Service  
 -- dan data tersebut belum ada pada transaksi sebelumnya  
 select * from (  
    select a.CompanyCode, a.BranchCode    
         , (row_number() over (order by a.InvoiceNo)) as RecNo      
         , isnull((    
                select top 1 upper(substring(mec.MechanicID, 1, 1)) from svTrnService srv, svTrnSrvTask tsk, svTrnSrvMechanic mec    
                 where 1 = 1    
                   and mec.CompanyCode = tsk.CompanyCode    
                   and mec.BranchCode = tsk.BranchCode    
                   and mec.ServiceNo = tsk.ServiceNo    
                   and mec.OperationNo = tsk.OperationNo    
                   and tsk.CompanyCode = srv.CompanyCode    
                   and tsk.BranchCode = srv.BranchCode    
                   and tsk.ServiceNo = srv.ServiceNo    
                   and srv.CompanyCode = a.CompanyCode    
                   and srv.BranchCode = a.BranchCode    
                   and srv.JobOrderNo = a.JobOrderNo    
                 order by tsk.CreatedDate, mec.CreatedBy    
                ), '') MechanicGroup  
           , isnull((    
                select top 1 upper(mec.MechanicID) from svTrnService srv, svTrnSrvTask tsk, svTrnSrvMechanic mec    
                 where 1 = 1    
                   and mec.CompanyCode = tsk.CompanyCode    
                   and mec.BranchCode = tsk.BranchCode    
                   and mec.ServiceNo = tsk.ServiceNo    
                   and mec.OperationNo = tsk.OperationNo    
                   and tsk.CompanyCode = srv.CompanyCode    
                   and tsk.BranchCode = srv.BranchCode    
                   and tsk.ServiceNo = srv.ServiceNo    
                   and srv.CompanyCode = a.CompanyCode    
                   and srv.BranchCode = a.BranchCode    
                   and srv.JobOrderNo = a.JobOrderNo    
                 order by tsk.CreatedDate, mec.CreatedBy    
                ), '') MechanicID    
           , isnull((    
                select top 1 upper(emp.EmployeeName)  
                  from svTrnService srv, svTrnSrvTask tsk, svTrnSrvMechanic mec, gnMstEmployee emp  
                 where 1 = 1    
                   and emp.CompanyCode = mec.CompanyCode    
                   and emp.BranchCode = mec.BranchCode   
                   and emp.EmployeeID = mec.MechanicID  
                   and mec.CompanyCode = tsk.CompanyCode    
                   and mec.BranchCode = tsk.BranchCode    
                   and mec.ServiceNo = tsk.ServiceNo    
                   and mec.OperationNo = tsk.OperationNo    
                   and tsk.CompanyCode = srv.CompanyCode    
                   and tsk.BranchCode = srv.BranchCode    
                   and tsk.ServiceNo = srv.ServiceNo    
                   and srv.CompanyCode = a.CompanyCode    
                   and srv.BranchCode = a.BranchCode    
                   and srv.JobOrderNo = a.JobOrderNo    
                 order by tsk.CreatedDate, mec.CreatedBy    
                ), '') EmployeeName      
         , a.InvoiceNo, a.InvoiceDate, b.OperationNo      
         , b.OperationHour, b.SharingTask    
         , case a.JobType when 'REWORK' then 0 else b.OperationCost end OperationCost      
         , a.LaborDiscPct, a.PartsDiscPct, a.MaterialDiscPct    
         , '' Description    
         , case a.JobType when 'REWORK' then 0 else (a.PartsGrossAmt + a.MaterialGrossAmt) end Sparepart    
         , case a.JobType when 'REWORK' then 0 else (a.PartsDiscAmt + a.MaterialDiscAmt) end Potongan    
         , case a.JobType when 'REWORK' then 0 else (a.PartsDppAmt + a.MaterialDppAmt) end DPPart    
      from svTrnInvoice a    
      left join svTrnInvTask b    
        on b.CompanyCode = a.CompanyCode      
       and b.BranchCode = a.BranchCode      
       and b.ProductType = a.ProductType    
       and b.InvoiceNo = a.InvoiceNo    
      left join svMstTask d    
        on d.CompanyCode = a.CompanyCode      
       and d.ProductType = a.ProductType      
       and d.BasicModel = a.BasicModel      
--       and d.JobType = a.JobType      
       and d.OperationNo = b.OperationNo      
     where 1 = 1    
       and a.CompanyCode= @CompanyCode      
       and a.BranchCode= @BranchCode      
       and convert(varchar, a.InvoiceDate, 112) between @DateStart and @DateEnd     
       and isnull(d.IsSubCon, 0) = 0  
       and not exists (  
        select * from svTrnInvMechanic  
         where CompanyCode = b.CompanyCode      
           and BranchCode = b.BranchCode      
           and ProductType = b.ProductType    
           and InvoiceNo = b.InvoiceNo    
           and OperationNo = b.OperationNo    
        )  
       and a.JobType <> 'REWORK'    
       and not exists (    
        select 1 from #t1     
         where 1 = 1    
           and InvoiceNo = a.InvoiceNo    
           and OperationNo = b.OperationNo    
        )) #  
  where 1 = 1  
       and MechanicId like @NikFilter      
       and EmployeeName like @NameFilter    
         
    select * from @t_query order by InvoiceDate  
      
 END      
ELSE IF @ReportBy = '2'      
 BEGIN     
  select * into #t_task1 from (
  SELECT a.CompanyCode    
  ,a.BranchCode    
  , (row_number() over (order by a.InvoiceNo)) as RecNo      
  ,UPPER(SUBSTRING(c.ForemanID, 1, 1)) MechanicGroup      
  ,UPPER(c.ForemanID) MechanicId      
  ,UPPER(d.EmployeeName) EmployeeName      
  ,a.InvoiceNo      
  ,a.InvoiceDate      
  ,b.OperationNo      
  ,b.OperationHour      
  ,b.SharingTask      
  ,b.OperationCost      
  ,a.LaborDiscPct      
--  ,isnull(f.SupplyQty, 0) as SupplyQty    
--  ,isnull(f.ReturnQty, 0) as ReturnQty    
--  ,isnull(f.RetailPrice, 0) as RetailPrice    
  ,a.PartsDiscPct    
  ,a.MaterialDiscPct    
  ,e.Description      
  ,isnull((    
    select PartsGrossAmt + MaterialGrossAmt    
      from svTrnInvoice    
     where CompanyCode = a.CompanyCode      
       AND BranchCode = a.BranchCode      
       AND ProductType = a.ProductType      
       AND InvoiceNo = a.InvoiceNo    
    ), 0) Sparepart    
  ,isnull((    
    select PartsDiscAmt + MaterialDiscAmt    
      from svTrnInvoice    
     where CompanyCode = a.CompanyCode      
       AND BranchCode = a.BranchCode      
       AND ProductType = a.ProductType      
       AND InvoiceNo = a.InvoiceNo    
    ), 0) Potongan    
  ,isnull((    
    select PartsDppAmt + MaterialDppAmt    
      from svTrnInvoice    
     where CompanyCode = a.CompanyCode      
       AND BranchCode = a.BranchCode      
       AND ProductType = a.ProductType      
       AND InvoiceNo = a.InvoiceNo    
    ), 0) DPPart    
  FROM svTrnInvoice a      
  LEFT JOIN svTrnInvTask b      
    ON b.CompanyCode = a.CompanyCode      
   AND b.BranchCode = a.BranchCode      
   AND b.ProductType = a.ProductType      
   AND b.InvoiceNo = a.InvoiceNo      
  LEFT JOIN svTrnService c      
    ON c.CompanyCode = a.CompanyCode      
   AND c.BranchCode = a.BranchCode      
   AND c.JobOrderNo = a.JobOrderNo      
  LEFT JOIN gnMstEmployee d      
    ON d.CompanyCode = a.CompanyCode      
   AND d.BranchCode = a.BranchCode      
   AND d.EmployeeId = c.ForemanId      
  LEFT JOIN svMstTask e      
    ON e.CompanyCode = a.CompanyCode      
   AND e.ProductType = a.ProductType      
   AND e.BasicModel = a.BasicModel      
   AND e.JobType = a.JobType      
   AND e.OperationNo = b.OperationNo      
  LEFT JOIN svTrnInvItem f    
    ON f.CompanyCode = a.CompanyCode      
   AND f.BranchCode = a.BranchCode      
   AND f.ProductType = a.ProductType      
   AND f.InvoiceNo = a.InvoiceNo     
  WHERE 1 = 1      
    AND a.CompanyCode= @CompanyCode      
    AND a.BranchCode= @BranchCode      
    AND c.ForemanId <> ''      
    AND CONVERT(VARCHAR, a.InvoiceDate, 112) BETWEEN @DateStart AND @DateEnd      
    AND c.ForemanId LIKE @NikFilter      
    AND d.EmployeeName LIKE @NameFilter     
    and isnull(e.IsSubCon, 0) = 0  
    and a.JobType <> 'REWORK'    
  group by a.CompanyCode    
    ,a.BranchCode    
    ,a.InvoiceNo    
    ,c.ForemanID    
    ,d.EmployeeName    
    ,a.InvoiceDate    
    ,b.OperationNo     
    ,b.OperationHour        
    ,b.SharingTask      
    ,b.OperationCost      
    ,a.LaborDiscPct      
    ,a.PartsDiscPct    
    ,a.MaterialDiscPct    
    ,e.Description    
    ,a.ProductType    
  --Order by MechanicGroup, MechanicId, EmployeeName, a.InvoiceNo    
  )#
  
  select a.CompanyCode, a.BranchCode, a.RecNo, a.MechanicGroup, a.MechanicId, a.EmployeeName
       , a.InvoiceNo, a.InvoiceDate, a.OperationNo, a.OperationHour, a.SharingTask, a.OperationCost
       , a.LaborDiscPct, a.PartsDiscPct, a.MaterialDiscPct, a.Description
       , a.Sparepart / (select count(*) from #t_task1 where InvoiceNo = a.InvoiceNo) as Sparepart
       , a.Potongan / (select count(*) from #t_task1 where InvoiceNo = a.InvoiceNo) as Potongan
       , a.DPPart / (select count(*) from #t_task1 where InvoiceNo = a.InvoiceNo) as DPPart
    from #t_task1 a

  
 END      
ELSE      
 BEGIN     
  SELECT a.CompanyCode    
  ,a.BranchCode    
  , (row_number() over (order by a.InvoiceNo)) as RecNo      
  ,UPPER(SUBSTRING(c.MechanicID, 1, 1)) MechanicGroup      
  ,UPPER(c.MechanicID) MechanicId      
  ,UPPER(d.EmployeeName) EmployeeName      
  ,a.InvoiceNo      
  ,a.InvoiceDate      
  ,b.OperationNo      
  ,b.OperationHour      
  ,b.SharingTask      
  ,b.OperationCost      
  ,a.LaborDiscPct      
--  ,isnull(f.SupplyQty, 0) as SupplyQty    
--  ,isnull(f.ReturnQty, 0) as ReturnQty    
--  ,isnull(f.RetailPrice, 0) as RetailPrice    
  ,a.PartsDiscPct    
  ,a.MaterialDiscPct    
  ,e.Description      
  ,isnull((    
    select PartsGrossAmt + MaterialGrossAmt    
      from svTrnInvoice    
     where CompanyCode = a.CompanyCode      
       AND BranchCode = a.BranchCode      
       AND ProductType = a.ProductType      
       AND InvoiceNo = a.InvoiceNo    
    ), 0) Sparepart    
  ,isnull((    
    select PartsDiscAmt + MaterialDiscAmt    
      from svTrnInvoice    
     where CompanyCode = a.CompanyCode      
       AND BranchCode = a.BranchCode      
       AND ProductType = a.ProductType      
       AND InvoiceNo = a.InvoiceNo    
    ), 0) Potongan    
  ,isnull((    
    select PartsDppAmt + MaterialDppAmt    
      from svTrnInvoice    
     where CompanyCode = a.CompanyCode      
       AND BranchCode = a.BranchCode      
       AND ProductType = a.ProductType      
       AND InvoiceNo = a.InvoiceNo    
    ), 0) DPPart    
  FROM svTrnInvoice a      
  LEFT JOIN svTrnInvTask b      
    ON b.CompanyCode = a.CompanyCode      
   AND b.BranchCode = a.BranchCode      
   AND b.ProductType = a.ProductType      
   AND b.InvoiceNo = a.InvoiceNo      
  LEFT JOIN svTrnService c      
    ON c.CompanyCode = a.CompanyCode      
   AND c.BranchCode = a.BranchCode      
   AND c.JobOrderNo = a.JobOrderNo      
  LEFT JOIN gnMstEmployee d      
    ON d.CompanyCode = a.CompanyCode      
   AND d.BranchCode = a.BranchCode      
   AND d.EmployeeId = c.MechanicID      
  LEFT JOIN svMstTask e      
    ON e.CompanyCode = a.CompanyCode      
   AND e.ProductType = a.ProductType      
   AND e.BasicModel = a.BasicModel      
   AND e.JobType = a.JobType      
   AND e.OperationNo = b.OperationNo      
  LEFT JOIN svTrnInvItem f    
    ON f.CompanyCode = a.CompanyCode      
   AND f.BranchCode = a.BranchCode      
   AND f.ProductType = a.ProductType      
   AND f.InvoiceNo = a.InvoiceNo     
  WHERE 1 = 1      
    AND a.CompanyCode= @CompanyCode      
    AND a.BranchCode= @BranchCode      
    AND c.MechanicID <> ''      
    AND CONVERT(VARCHAR, a.InvoiceDate, 112) BETWEEN @DateStart AND @DateEnd      
    AND c.MechanicID LIKE @NikFilter      
    AND d.EmployeeName LIKE @NameFilter     
    and a.JobType <> 'REWORK'    
    and isnull(e.IsSubCon, 0) = 0  
  group by a.CompanyCode    
    ,a.BranchCode    
    ,a.InvoiceNo    
    ,c.MechanicID    
    ,d.EmployeeName    
    ,a.InvoiceDate    
    ,b.OperationNo     
    ,b.OperationHour        
    ,b.SharingTask      
    ,b.OperationCost      
    ,a.LaborDiscPct      
    ,a.PartsDiscPct    
    ,a.MaterialDiscPct    
    ,e.Description    
    ,a.ProductType    
  Order by MechanicGroup, MechanicId, EmployeeName, a.InvoiceNo    
 END      
END
GO
ALTER procedure [dbo].[uspfn_LookupCustomerview] (  @CompanyCode varchar(10), @BranchCode varchar(10) )
 as
SELECT distinct a.CustomerCode, a.CustomerName
     , isnull(a.Address1,'') + ' ' + isnull(a.Address2,'') + ' ' + isnull(a.Address3,'') +' ' + isnull(a.Address4,'') as Address
	 , '' LookupValue, '' as ProfitCenter
  FROM gnMstCustomer a with(nolock, nowait)
 left JOIN gnMstCustomerProfitCenter b with(nolock, nowait)
	ON b.CompanyCode = a.CompanyCode
   AND b.CustomerCode = a.CustomerCode
   AND b.BranchCode = @BranchCode
   AND b.isBlackList = 0
 left JOIN gnMstLookUpDtl c
	ON c.CompanyCode = a.CompanyCode
   AND c.CodeID = 'PFCN'
   AND c.LookupValue = b.ProfitCenterCode
 WHERE 1 = 1
   AND a.CompanyCode = @CompanyCode
GO
-- =============================================
-- Author:		<yo>
-- Create date: <26 April 2012>
-- Description:	<SelectJobOrderNo4SOServiceEnhanche> 
-- =============================================
ALTER procedure [dbo].[uspfn_SelectJobOrderNo4SOServiceEnhanche]
	@CompanyCode  varchar(15),
	@BranchCode  varchar(15),
	@ProductType  varchar(15),
	@JobOrderNo  varchar(15)
	
AS
BEGIN

--declare @CompanyCode as varchar(15)
--declare @BranchCode as varchar(15)
--declare @ProductType as varchar(15)
--declare @TypeOfGoods as varchar(15)
--declare @JobOrderNo as varchar(15)

--set @CompanyCode = '6159401000'
--set @BranchCode = '6159401001'
--set @ProductType = '4W'
--set @JobOrderNo = 'SPK/15/002333'

SELECT 
ROW_number() OVER(ORDER BY a.TipePart, a.PartNo ASC) AS NoUrut, * FROM (
SELECT 
DISTINCT(a.CompanyCode) 
    , a.BranchCode
	, a.ProductType
	, ServiceNo
	, a.PartNo
    , (SELECT Paravalue FROM gnMstLookUpDtl WHERE CompanyCode = a.CompanyCode AND CodeID = 'GTGO' AND LookUpValue = a.TypeOfGoods) TipePart
    , (SELECT PartName FROM spMstItemInfo WHERE CompanyCode = a.CompanyCode AND PartNo = a.PartNo) PartName
	, a.RetailPrice
	, c.CostPrice
    , TypeOfGoods
    , BillType
	, SUM(QtyOrder) QtyOrder
    , 0 QtySupply
    , 0 QtyBO
    , (SUM(QtyOrder) * a.RetailPrice) * ((100 - PartDiscPct)/100) NetSalesAmt
    , PartDiscPct DiscPct
FROM
(
SELECT
	DISTINCT(a.CompanyCode) 
	, a.BranchCode
	, a.ProductType
	, a.ServiceNo
	, a.PartNo
	, a.RetailPrice
	, c.CostPrice
    , a.TypeOfGoods
    , a.BillType
	, ISNULL(Item.QtyOrder,0) AS QtyOrder
    , a.DiscPct PartDiscPct 
FROM
	svTrnSrvItem a WITH (NOLOCK, NOWAIT)
	LEFT JOIN svTrnService b WITH (NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
		AND a.BranchCode = b.BranchCode
		AND a.ProductType = b.ProductType
		AND a.ServiceNo = b.ServiceNo
	LEFT JOIN (SELECT CompanyCode, BranchCode, ProductType, ServiceNo, RetailPrice, PartNo,BillType,
				CASE WHEN SUM(ISNULL(DemandQty, 0)) > SUM(ISNULL(SupplyQty, 0)) THEN SUM(ISNULL(DemandQty, 0) - (ISNULL(SupplyQty, 0))) 
				ELSE SUM(ISNULL(DemandQty, 0)) END QtyOrder
				FROM svTrnSrvItem 
				GROUP BY CompanyCode, BranchCode, ProductType, ServiceNo, PartNo, RetailPrice, BillType) Item ON
		Item.CompanyCode = a.CompanyCode AND Item.BranchCode = a.BranchCode AND Item.ProductType =
			a.ProductType AND Item.ServiceNo = a.ServiceNo AND Item.PartNo = a.PartNo AND Item.RetailPrice = a.RetailPrice AND a.Billtype = Item.BillType
    LEFT JOIN SpMstItemPrice c ON a.CompanyCode = c.CompanyCode AND a.BranchCode = c.BranchCode AND a.PartNo = c.PartNo 
WHERE
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.ProductType = @ProductType
	--AND Item.QtyOrder > 0
	AND JobOrderNo = @JobOrderNo
) a
LEFT JOIN SpMstItemPrice c ON a.CompanyCode = c.CompanyCode AND a.BranchCode = c.BranchCode AND a.PartNo = c.PartNo
GROUP BY
	a.CompanyCode
	, a.BranchCode
	, a.ProductType
	, ServiceNo
	, a.PartNo
	, a.RetailPrice
	, c.CostPrice
    , TypeOfGoods
    , BillType
    , PartDiscPct 
) a ORDER BY a.TipePart, a.PartNo ASC

END
GO
ALTER procedure [dbo].[uspfn_SvTrnInvCalcSpr]
	@CompanyCode varchar(20),
	@BranchCode  varchar(20),
	@InvoiceNo   varchar(20)

as	

/*
SpTrnSORDDtl --> SpTrnSORDHdr --> update : RetailPrice, RetailPriceInclTax, SalesAmt, DiscAmt, DiscAmt, NetSalesAmt, TotSalesAmt
SpTrnSPickingDtl --> SpTrnSPickingHdr --> update : RetailPrice, RetailPriceInclTax, SalesAmt, DiscAmt, DiscAmt, NetSalesAmt, TotSalesAmt
SpTrnSBPSFDtl --> SpTrnSBPSFHdr --> update : RetailPrice, RetailPriceInclTax, SalesAmt, DiscAmt, DiscAmt, NetSalesAmt, TotSalesAmt
SpTrnSLmpDtl --> SpTrnSLmpHdr --> update : RetailPrice, RetailPriceInclTax, SalesAmt, DiscAmt, DiscAmt, NetSalesAmt, TotSalesAmt
SptrnSoSupply --> update : RetailPrice, RetailPriceInclTax
*/

	
-- update SpTrnSLmpDtl/Hdr
;with x as (
select a.CompanyCode, a.BranchCode, a.PartNo, a.LmpNo, a.DocNo
     , a.QtyBill, i.SupplyQty
     , a.RetailPrice, i.RetailPrice as RetailPriceView
     , a.RetailPriceInclTax, convert(int, i.RetailPrice * 1.1) as RetailPriceInclTaxView
     , a.SalesAmt, convert(int, i.SupplyQty * i.RetailPrice) as SalesAmtCalc
     , a.DiscPct, i.DiscPct as DiscPctView
     , a.DiscAmt, convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01) as DiscAmtCalc
     , a.NetSalesAmt
     , SalesAmt - convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01) as NetSalesAmtCalc
     , a.PPNAmt
     , convert(int, (SalesAmt - convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01)) * 0.1) as PPNAmtCalc
     , a.TotSalesAmt
     , SalesAmt - convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01)
     + convert(int, (SalesAmt - convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01)) * 0.1) as TotSalesAmtCalc
  from spTrnSLmpDtl a
  left join Vw_SvTrnInvItem i
    on i.BranchCode = a.BranchCode
   and i.PartNo = a.PartNo
   and i.SupplySlipNo = a.DocNo
 where exists (
	select *
	  from svTrnInvItemDtl b
     where b.CompanyCode = @CompanyCode
       and b.BranchCode = @BranchCode
	   and b.InvoiceNo = @InvoiceNo
       and b.CompanyCode = a.CompanyCode
       and b.BranchCode = a.BranchCode
       and b.PartNo = a.PartNo
       and b.SupplySlipNo = a.DocNo
	)
)
update x set RetailPrice=RetailPriceView, RetailPriceInclTax=RetailPriceInclTaxView, 
             SalesAmt=SalesAmtCalc, DiscPct=DiscPctView, DiscAmt=DiscAmtCalc,
             NetSalesAmt=NetSalesAmtCalc, PPNAmt=PPNAmtCalc,
             TotSalesAmt=TotSalesAmtCalc

;with x as (
select a.CompanyCode, a.BranchCode, a.LmpNo
     , a.TotSalesQty
     , (select sum(QtyBill) from spTrnSLmpDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and LmpNo=a.LmpNo) as TotSalesQtyCalc
     , a.TotSalesAmt
     , (select sum(SalesAmt) from spTrnSLmpDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and LmpNo=a.LmpNo) as TotSalesAmtCalc
     , a.TotDiscAmt
     , (select sum(DiscAmt) from spTrnSLmpDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and LmpNo=a.LmpNo) as TotDiscAmtCalc
     , a.TotDPPAmt
     , (select sum(NetSalesAmt) from spTrnSLmpDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and LmpNo=a.LmpNo) as TotDPPAmtCalc
     , a.TotPPNAmt
     , (select sum(PPNAmt) from spTrnSLmpDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and LmpNo=a.LmpNo) as TotPPNAmtCalc
     , a.TotFinalSalesAmt
     , (select sum(TotSalesAmt) from spTrnSLmpDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and LmpNo=a.LmpNo) as TotFinalSalesAmtCalc
  from SpTrnSLmpHdr a
 where exists (
   select *
     from Vw_SvTrnInvItem i
    where i.CompanyCode = @CompanyCode
      and i.BranchCode = @BranchCode
      and i.InvoiceNo = @InvoiceNo
      and i.CompanyCode = a.CompanyCode
      and i.BranchCode = a.BranchCode
      and i.LmpNo = a.LmpNo
      
 )
)
update x set TotSalesQty=TotSalesQtyCalc, TotSalesAmt=TotSalesAmtCalc, TotDiscAmt=TotDiscAmtCalc,
             TotDPPAmt=TotDPPAmtCalc, TotPPNAmt=TotPPNAmtCalc, TotFinalSalesAmt=TotFinalSalesAmtCalc

-- update SpTrnSBPSFDtl/Hdr
;with x as (
select a.CompanyCode, a.BranchCode, a.PartNo, a.BPSFNo, a.DocNo
     , a.QtyBill, i.SupplyQty
     , a.RetailPrice, i.RetailPrice as RetailPriceView
     , a.RetailPriceInclTax, convert(int, i.RetailPrice * 1.1) as RetailPriceInclTaxView
     , a.SalesAmt, convert(int, i.SupplyQty * i.RetailPrice) as SalesAmtCalc
     , a.DiscPct, i.DiscPct as DiscPctView
     , a.DiscAmt, convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01) as DiscAmtCalc
     , a.NetSalesAmt
     , SalesAmt - convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01) as NetSalesAmtCalc
     , a.PPNAmt
     , convert(int, (SalesAmt - convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01)) * 0.1) as PPNAmtCalc
     , a.TotSalesAmt
     , SalesAmt - convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01)
     + convert(int, (SalesAmt - convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01)) * 0.1) as TotSalesAmtCalc
  from SpTrnSBPSFDtl a
  left join Vw_SvTrnInvItem i
    on i.BranchCode = a.BranchCode
   and i.PartNo = a.PartNo
   and i.SupplySlipNo = a.DocNo
 where exists (
	select *
	  from svTrnInvItemDtl b
     where b.CompanyCode = @CompanyCode
       and b.BranchCode = @BranchCode
	   and b.InvoiceNo = @InvoiceNo
       and b.CompanyCode = a.CompanyCode
       and b.BranchCode = a.BranchCode
       and b.PartNo = a.PartNo
       and b.SupplySlipNo = a.DocNo
	)
)
update x set RetailPrice=RetailPriceView, RetailPriceInclTax=RetailPriceInclTaxView, 
             SalesAmt=SalesAmtCalc, DiscPct=DiscPctView, DiscAmt=DiscAmtCalc,
             NetSalesAmt=NetSalesAmtCalc, PPNAmt=PPNAmtCalc,
             TotSalesAmt=TotSalesAmtCalc

;with x as (
select a.CompanyCode, a.BranchCode, a.BPSFNo
     , a.TotSalesQty
     , (select sum(QtyBill) from spTrnSBPSFDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and BPSFNo=a.BPSFNo) as TotSalesQtyCalc
     , a.TotSalesAmt
     , (select sum(SalesAmt) from spTrnSBPSFDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and BPSFNo=a.BPSFNo) as TotSalesAmtCalc
     , a.TotDiscAmt
     , (select sum(DiscAmt) from spTrnSBPSFDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and BPSFNo=a.BPSFNo) as TotDiscAmtCalc
     , a.TotDPPAmt
     , (select sum(NetSalesAmt) from spTrnSBPSFDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and BPSFNo=a.BPSFNo) as TotDPPAmtCalc
     , a.TotPPNAmt
     , (select sum(PPNAmt) from spTrnSBPSFDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and BPSFNo=a.BPSFNo) as TotPPNAmtCalc
     , a.TotFinalSalesAmt
     , (select sum(TotSalesAmt) from spTrnSBPSFDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and BPSFNo=a.BPSFNo) as TotFinalSalesAmtCalc
  from spTrnSBPSFHdr a
 where exists (
   select *
     from Vw_SvTrnInvItem i
    where i.CompanyCode = @CompanyCode
      and i.BranchCode = @BranchCode
      and i.InvoiceNo = @InvoiceNo
      and i.CompanyCode = a.CompanyCode
      and i.BranchCode = a.BranchCode
      and i.BPSFNo = a.BPSFNo
      
 )
)
update x set TotSalesQty=TotSalesQtyCalc, TotSalesAmt=TotSalesAmtCalc, TotDiscAmt=TotDiscAmtCalc,
             TotDPPAmt=TotDPPAmtCalc, TotPPNAmt=TotPPNAmtCalc, TotFinalSalesAmt=TotFinalSalesAmtCalc

-- update spTrnSPickingDtl/Hdr
;with x as (
select a.CompanyCode, a.BranchCode, a.PartNo, a.PickingSlipNo, a.DocNo
     , a.QtyBill, i.SupplyQty
     , a.RetailPrice, i.RetailPrice as RetailPriceView
     , a.RetailPriceInclTax, convert(int, i.RetailPrice * 1.1) as RetailPriceInclTaxView
     , a.SalesAmt, convert(int, i.SupplyQty * i.RetailPrice) as SalesAmtCalc
     , a.DiscPct, i.DiscPct as DiscPctView
     , a.DiscAmt, convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01) as DiscAmtCalc
     , a.NetSalesAmt
     , SalesAmt - convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01) as NetSalesAmtCalc
     , a.TotSalesAmt
     , SalesAmt - convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01)
     + convert(int, (SalesAmt - convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01)) * 0.1) as TotSalesAmtCalc
  from spTrnSPickingDtl a
  left join Vw_SvTrnInvItem i
    on i.BranchCode = a.BranchCode
   and i.PartNo = a.PartNo
   and i.SupplySlipNo = a.DocNo
 where exists (
	select *
	  from svTrnInvItemDtl b
     where b.CompanyCode = @CompanyCode
       and b.BranchCode = @BranchCode
	   and b.InvoiceNo = @InvoiceNo
       and b.CompanyCode = a.CompanyCode
       and b.BranchCode = a.BranchCode
       and b.PartNo = a.PartNo
       and b.SupplySlipNo = a.DocNo
	)
)
update x set RetailPrice=RetailPriceView, RetailPriceInclTax=RetailPriceInclTaxView, 
             SalesAmt=SalesAmtCalc, DiscPct=DiscPctView, DiscAmt=DiscAmtCalc,
             NetSalesAmt=NetSalesAmtCalc, TotSalesAmt=TotSalesAmtCalc
             
;with x as (
select a.CompanyCode, a.BranchCode, a.PickingSlipNo
     , a.TotSalesQty
     , (select sum(QtyBill) from spTrnSPickingDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and PickingSlipNo=a.PickingSlipNo) as TotSalesQtyCalc
     , a.TotSalesAmt
     , (select sum(SalesAmt) from spTrnSPickingDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and PickingSlipNo=a.PickingSlipNo) as TotSalesAmtCalc
     , a.TotDiscAmt
     , (select sum(DiscAmt) from spTrnSPickingDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and PickingSlipNo=a.PickingSlipNo) as TotDiscAmtCalc
     , a.TotDPPAmt
     , (select sum(NetSalesAmt) from spTrnSPickingDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and PickingSlipNo=a.PickingSlipNo) as TotDPPAmtCalc
     , a.TotPPNAmt
     , (select sum(convert(int, NetSalesAmt * 0.1)) from spTrnSPickingDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and PickingSlipNo=a.PickingSlipNo) as TotPPNAmtCalc
     , a.TotFinalSalesAmt
     , (select sum(TotSalesAmt) from spTrnSPickingDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and PickingSlipNo=a.PickingSlipNo) as TotFinalSalesAmtCalc
  from spTrnSPickingHdr a
 where exists (
   select *
     from Vw_SvTrnInvItem i
    where i.CompanyCode = @CompanyCode
      and i.BranchCode = @BranchCode
      and i.InvoiceNo = @InvoiceNo
      and i.CompanyCode = a.CompanyCode
      and i.BranchCode = a.BranchCode
      and i.PickingSlipNo = a.PickingSlipNo
      
 )
)
update x set TotSalesQty=TotSalesQtyCalc, TotSalesAmt=TotSalesAmtCalc, TotDiscAmt=TotDiscAmtCalc,
             TotDPPAmt=TotDPPAmtCalc, TotPPNAmt=TotPPNAmtCalc, TotFinalSalesAmt=TotFinalSalesAmtCalc

-- update spTrnSORDDtl/Hdr
;with x as (
select a.CompanyCode, a.BranchCode, a.PartNo, a.DocNo
     , a.QtyBill, i.SupplyQty
     , a.RetailPrice, i.RetailPrice as RetailPriceView
     , a.RetailPriceInclTax, convert(int, i.RetailPrice * 1.1) as RetailPriceInclTaxView
     , a.SalesAmt, convert(int, i.SupplyQty * i.RetailPrice) as SalesAmtCalc
     , a.DiscPct, i.DiscPct as DiscPctView
     , a.DiscAmt, convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01) as DiscAmtCalc
     , a.NetSalesAmt
     , SalesAmt - convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01) as NetSalesAmtCalc
     , a.TotSalesAmt
     , SalesAmt - convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01)
     + convert(int, (SalesAmt - convert(int, i.SupplyQty * i.RetailPrice * i.DiscPct * 0.01)) * 0.1) as TotSalesAmtCalc
  from spTrnSORDDtl a
  left join Vw_SvTrnInvItem i
    on i.BranchCode = a.BranchCode
   and i.PartNo = a.PartNo
   and i.SupplySlipNo = a.DocNo
 where exists (
	select *
	  from svTrnInvItemDtl b
     where b.CompanyCode = @CompanyCode
       and b.BranchCode = @BranchCode
	   and b.InvoiceNo = @InvoiceNo
       and b.CompanyCode = a.CompanyCode
       and b.BranchCode = a.BranchCode
     and b.PartNo = a.PartNo
       and b.SupplySlipNo = a.DocNo
	)
)
update x set RetailPrice=RetailPriceView, RetailPriceInclTax=RetailPriceInclTaxView, 
             SalesAmt=SalesAmtCalc, DiscPct=DiscPctView, DiscAmt=DiscAmtCalc,
             NetSalesAmt=NetSalesAmtCalc, TotSalesAmt=TotSalesAmtCalc

;with x as (
select a.CompanyCode, a.BranchCode, a.DocNo
     , a.TotSalesQty
     , (select sum(QtyBill) from spTrnSORDDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and DocNo=a.DocNo) as TotSalesQtyCalc
     , a.TotSalesAmt
     , (select sum(SalesAmt) from spTrnSORDDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and DocNo=a.DocNo) as TotSalesAmtCalc
     , a.TotDiscAmt
     , (select sum(DiscAmt) from spTrnSORDDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and DocNo=a.DocNo) as TotDiscAmtCalc
     , a.TotDPPAmt
     , (select sum(NetSalesAmt) from spTrnSORDDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and DocNo=a.DocNo) as TotDPPAmtCalc
     , a.TotPPNAmt
     , (select sum(convert(int, NetSalesAmt * 0.1)) from spTrnSORDDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and DocNo=a.DocNo) as TotPPNAmtCalc
     , a.TotFinalSalesAmt
     , (select sum(TotSalesAmt) from spTrnSORDDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and DocNo=a.DocNo) as TotFinalSalesAmtCalc
  from spTrnSORDHdr a
 where exists (
   select *
     from Vw_SvTrnInvItem i
    where i.CompanyCode = @CompanyCode
      and i.BranchCode = @BranchCode
      and i.InvoiceNo = @InvoiceNo
      and i.CompanyCode = a.CompanyCode
      and i.BranchCode = a.BranchCode
      and i.SupplySlipNo = a.DocNo
 )
)                          
update x set TotSalesQty=TotSalesQtyCalc, TotSalesAmt=TotSalesAmtCalc, TotDiscAmt=TotDiscAmtCalc,
             TotDPPAmt=TotDPPAmtCalc, TotPPNAmt=TotPPNAmtCalc, TotFinalSalesAmt=TotFinalSalesAmtCalc
GO
ALTER procedure [dbo].[uspfn_SvTrnListKsgFromSPK]
 @CompanyCode varchar(15),  
 @ProductType varchar(15),   
 @BranchFrom varchar(15),  
 @BranchTo varchar(15),  
 @PeriodFrom datetime,  
 @PeriodTo datetime,  
 @JobPDI as varchar(15),  
 @JobFSC as varchar(15),
 @BranchCode varchar(15)
as        
  
select * into #t1 from(  
select  
    convert(bit, 1) Process      
 , srv.BranchCode  
 , srv.JobOrderNo  
 , case when convert(varchar, srv.JobOrderDate, 106) = '19000101' then '' else convert(varchar, srv.JobOrderDate, 106) end JobOrderDate  
 , srv.BasicModel  
 , srv.ServiceBookNo  
 , job.PdiFscSeq  
 , srv.Odometer  
 , srv.LaborGrossAmt  
 , round((select isnull(SUM((SupplyQty - ReturnQty) * RetailPrice), 0) from svTrnSrvItem where BranchCode = srv.BranchCode and ServiceNo = srv.ServiceNo and BillType = 'F'),0) MaterialGrossAmt --Pembulatan
 , round((srv.LaborGrossAmt + (select isnull(SUM((SupplyQty-ReturnQty) * RetailPrice), 0) from svTrnSrvItem where BranchCode = srv.BranchCode and ServiceNo = srv.ServiceNo and BillType = 'F')),0) PdiFscAmount  --Pembulatan
 , isnull(case when convert(varchar, veh.FakturPolisiDate, 112) = '19000101' then '' else convert(varchar, veh.FakturPolisiDate, 106) end, '')  FakturPolisiDate  
 , isnull(case when convert(varchar, mstVeh.BPKDate, 112) = '19000101' then '' else convert(varchar, mstVeh.BPKDate, 106) end, '')  BPKDate  
 , srv.ChassisCode  
 , srv.ChassisNo  
 , srv.EngineCode  
 , srv.EngineNo   
    , srv.InvoiceNo  
 , isnull(inv.FPJNo, '') FPJNo  
 , isnull(case when convert(varchar, inv.FPJDate, 112) = '19000101' then '' else convert(varchar, inv.FPJDate, 106) end, '')  FPJDate  
 , isnull(fpj.FPJGovNo, '') FPJGovNo  
 , srv.TransmissionType  
 , srv.ServiceStatus  
 , srv.CompanyCode  
 , srv.ProductType  
from svTrnService srv  
left join svMstJob job  
 on job.CompanyCode = srv.CompanyCode  
  and job.ProductType = srv.ProductType  
  and job.BasicModel = srv.BasicModel  
  and job.JobType = srv.JobType  
left join svMstCustomerVehicle veh  
 on veh.CompanyCode = srv.CompanyCode  
  and veh.ChassisCode = srv.ChassisCode  
  and veh.ChassisNo = srv.ChassisNo  
left join omMstVehicle mstVeh  
 on mstVeh.CompanyCode = srv.CompanyCode  
  and mstVeh.ChassisCode = srv.ChassisCode  
  and mstVeh.ChassisNo = srv.ChassisNo  
left join svTrnInvoice inv  
 on inv.CompanyCode = srv.CompanyCode  
  and inv.BranchCode = srv.BranchCode  
  and inv.ProductType = srv.ProductType  
  and inv.InvoiceNo = srv.InvoiceNo  
left join svTrnFakturPajak fpj  
 on fpj.CompanyCode = srv.CompanyCode  
  and fpj.BranchCode = srv.BranchCode  
  and fpj.FPJNo = inv.FPJNo  
where   
 srv.CompanyCode = @CompanyCode  
 and srv.BranchCode between @BranchFrom and @BranchTo  
 and srv.ProductType = @ProductType  
 --and srv.isLocked = 0  
 and job.GroupJobType = 'FSC'  
 and (job.JobType like @JobFSC or job.JobType like @JobPDI)  
 and convert(varchar, srv.JobOrderDate, 112) between @PeriodFrom and @PeriodTo   
 and not exists (  
  select 1   
  from svTrnPdiFscApplication   
  where CompanyCode=srv.CompanyCode  
   and BranchCode=srv.BranchCode   
   and InvoiceNo=srv.JobOrderNo  
   and ProductType=srv.ProductType  
 ) and  not exists (  
  select 1   
  from svTrnPdiFscApplication   
  where CompanyCode=srv.CompanyCode  
   and BranchCode= @BranchCode
   and InvoiceNo=srv.JobOrderNo  
   and ProductType=srv.ProductType  
 )
) #t1  
  
select   
row_number() over (order by #t1.BranchCode, #t1.JobOrderNo) No,  
* from #t1   
where ServiceStatus=5 ---service status hanya yang tutup SPK
-- in (5, 7, 9)  
order by BranchCode, JobOrderNo  
  
select * into #t2 from(  
select   
(row_number() over (order by BasicModel)) RecNo  
,BasicModel  
,PdiFscSeq  
,Count(BasicModel) RecCount  
,sum(PdiFscAmount) PdiFscAmount   
from #t1 where ServiceStatus =5    ---service status hanya yang tutup SPK
--in (5, 7, 9)  
group by BasicModel, PdiFscSeq) #t2     
  
select * from #t2 order by BasicModel  
  
select '' RecNo, 'Total' BasicModel, '' PdiFscSeq, sum(RecCount) RecCount, sum(PdiFscAmount) PdiFscAmount from #t2  
  
select   
 srv.BranchCode  
 , reffService.Description AS Status  
 , employee.EmployeeName   
 , srv.JobOrderNo  
 , srv.JobOrderDate  
 , srv.PoliceRegNo  
 , srv.BasicModel  
 , srv.JobType  
from #t1   
left join svTrnService srv    
on srv.CompanyCode = #t1.CompanyCode  
 and srv.BranchCode = #t1.BranchCode     
 and srv.ProductType = #t1.ProductType    
 and srv.JobOrderNo = #t1.JobOrderNo  
left join svMstRefferenceService reffService  
    on reffService.CompanyCode = srv.CompanyCode  
    and reffService.ProductType = srv.ProductType      
    and reffService.RefferenceCode = srv.ServiceStatus  
    and reffService.RefferenceType = 'SERVSTAS'  
left join gnMstEmployee employee  
    on employee.CompanyCode = srv.CompanyCode  
    and employee.BranchCode = srv.BranchCode  
 and employee.EmployeeID = srv.ForemanID  
where #t1.ServiceStatus < 5  
order by BranchCode, JobOrderNo  
  
drop table #t1  
drop table #t2
GO
ALTER procedure [dbo].[usprpt_PmRpInqFollowUpDtlNew] 
	-- Add the parameters for the stored procedure here
(
	@CompanyCode	VARCHAR(15),
	@BranchCode		VARCHAR(15),
	@DateAwal		DateTime,
	@DateAkhir		DateTime,
	@Outlet			VARCHAR(max),
	@EMP			VARCHAR(max),
	@Param			VARCHAR(1),
	@Head			VARCHAR(max)
)
AS
BEGIN
	SELECT * INTO #t1 FROM (
		SELECT
				a.EmployeeID
				,f.OutletName
				,a.InquiryNumber
				,a.NamaProspek Pelanggan
				,CASE(a.InquiryDate) WHEN '19000101' THEN NULL ELSE a.InquiryDate END InquiryDate
				,a.TipeKendaraan
				,a.Variant
				,a.Transmisi
				,isnull(b.RefferenceDesc1,'') Warna
				,a.PerolehanData
				,isnull(c.EmployeeName,'') Employee
				,d.EmployeeName TeamLeader
				,CASE(e.NextFollowUpDate) WHEN '19000101' THEN NULL ELSE e.NextFollowUpDate END NextFollowUpDate
				,a.LastProgress
				,a.AlamatProspek
				,a.TelpRumah
				,a.NamaPerusahaan
				,a.AlamatPerusahaan
				,a.Handphone
				,a.LastUpdateStatus
				,CASE(a.SPKDate) WHEN '19000101' THEN NULL ELSE a.SPKDate END SPKDate
				,CASE(a.SPKDate) WHEN '19000101' THEN NULL ELSE DAY(a.SPKDate) END DaySPKDate
				,CASE(a.SPKDate) WHEN '19000101' THEN NULL ELSE MONTH(a.SPKDate) END MonthSPKDate
				,CASE(a.SPKDate) WHEN '19000101' THEN NULL ELSE YEAR(a.SPKDate) END YearSPKDate
				,CASE(a.LostCaseDate) WHEN '19000101' THEN NULL ELSE a.LostCaseDate END LostCaseDate
				,CASE(a.InquiryDate) WHEN '19000101' THEN NULL ELSE DAY(a.InquiryDate) END DayInquiryDate
				,CASE(a.InquiryDate) WHEN '19000101' THEN NULL ELSE MONTH(a.InquiryDate) END MonthInquiryDate
				,CASE(a.InquiryDate) WHEN '19000101' THEN NULL ELSE YEAR(a.InquiryDate) END YearInquiryDate
				,CASE(e.NextFollowUpDate) WHEN '19000101' THEN NULL ELSE DAY(e.NextFollowUpDate) END DayNextFollowUpDate
				,CASE(e.NextFollowUpDate) WHEN '19000101' THEN NULL ELSE MONTH(e.NextFollowUpDate) END MonthNextFollowUpDate
				,CASE(e.NextFollowUpDate) WHEN '19000101' THEN NULL ELSE YEAR(e.NextFollowUpDate) END YearNextFollowUpDate
				,a.QuantityInquiry
				,isnull(r.LookUpValueName, '') LostCaseCategory
				,a.LostCaseVoiceOfCustomer
				,(select LookUpValueName from gnMstLookUpDtl where CompanyCode = a.CompanyCode and CodeID = 'PMOP' and LookUpValue = a.TestDrive) TestDrive
				, isnull(n.LookUpValueName,'') CaraBayar
				, isnull(o.LookUpValueName,'') Leasing
				, isnull(p.LookUpValueName,'') DownPayment
				, isnull(q.LookUpValueName,'') Tenor
				, a.MerkLain
				, a.SpvEmployeeId
			FROM
				PmKDP a
			INNER JOIN OmMstRefference b ON b.CompanyCode = a.CompanyCode 
				AND b.RefferenceType='COLO' 
				AND b.RefferenceCode=a.ColourCode
			INNER JOIN HrEmployee c ON c.CompanyCode = a.CompanyCode 
				AND c.EmployeeID = a.EmployeeID
			INNER JOIN HrEmployee d ON d.CompanyCode = a.CompanyCode 
				AND c.TeamLeader = d.EmployeeID
			INNER JOIN PmActivities e ON e.CompanyCode = a.CompanyCode 
				AND e.BranchCode = a.BranchCode 
				AND e.InquiryNumber=a.InquiryNumber
				AND e.ActivityID = (SELECT TOP 1 ActivityID FROM PmActivities WHERE CompanyCode = a.CompanyCode 
				AND BranchCode = a.BranchCode AND InquiryNumber=a.InquiryNumber ORDER BY ActivityID DESC) 
			INNER JOIN PmBranchOutlets f ON f.CompanyCode = a.CompanyCode 
				AND f.BranchCode = a.BranchCode 
				AND f.OutletID = a.OutletID
			LEFT JOIN GnMstLookUpDtl n on n.CompanyCode=a.CompanyCode
				AND n.CodeId='PMBY'
				AND n.LookUpValue = a.CaraPembayaran
			LEFT JOIN GnMstLookUpDtl o on o.CompanyCode=a.CompanyCode
				AND o.CodeId='LSNG'
				AND o.LookUpValue = a.Leasing
			LEFT JOIN GnMstLookUpDtl p on p.CompanyCode=a.CompanyCode
				AND p.CodeId='DWPM'
				AND p.LookUpValue = a.DownPayment
			LEFT JOIN GnMstLookUpDtl q on q.CompanyCode=a.CompanyCode
				AND q.CodeId='TENOR'
				AND q.LookUpValue = a.Tenor
			LEFT JOIN GnMstLookUpDtl r on r.CompanyCode=a.CompanyCode
				AND r.CodeId='PLCC'
				AND r.LookUpValue = a.LostCaseCategory			
		WHERE
			a.CompanyCode = @CompanyCode 
			AND ((CASE WHEN @BranchCode='' THEN a.BranchCode END)<>'' OR (CASE WHEN @BranchCode<>'' THEN a.BranchCode END)=@BranchCode)
			AND e.NextFollowUpDate BETWEEN @DateAwal AND @DateAkhir
			AND ((CASE WHEN @Outlet='' THEN a.OutletID END)<>'' OR (CASE WHEN @Outlet<>'' THEN a.OutletID END)=@Outlet)
			AND ((CASE WHEN @EMP='' THEN a.EmployeeID END)<>'' OR (CASE WHEN @EMP<>'' THEN a.EmployeeID END)=@EMP)
	) #t1

	IF (@Param = '1')
	BEGIN
		DELETE #t1
		INSERT INTO #t1
			SELECT
				a.EmployeeID
				,f.OutletName
				,a.InquiryNumber
				,a.NamaProspek Pelanggan
				,CASE(a.InquiryDate) WHEN '19000101' THEN NULL ELSE a.InquiryDate END InquiryDate
				,a.TipeKendaraan
				,a.Variant
				,a.Transmisi
				,isnull(b.RefferenceDesc1,'') Warna
				,a.PerolehanData
				,isnull(c.EmployeeName,'') Employee
				,d.EmployeeName TeamLeader
				,CASE(e.NextFollowUpDate) WHEN '19000101' THEN NULL ELSE e.NextFollowUpDate END NextFollowUpDate
				,a.LastProgress
				,a.AlamatProspek
				,a.TelpRumah
				,a.NamaPerusahaan
				,a.AlamatPerusahaan
				,a.Handphone
				,a.LastUpdateStatus
				,CASE(a.SPKDate) WHEN '19000101' THEN NULL ELSE a.SPKDate END SPKDate
				,CASE(a.SPKDate) WHEN '19000101' THEN NULL ELSE DAY(a.SPKDate) END DaySPKDate
				,CASE(a.SPKDate) WHEN '19000101' THEN NULL ELSE MONTH(a.SPKDate) END MonthSPKDate
				,CASE(a.SPKDate) WHEN '19000101' THEN NULL ELSE YEAR(a.SPKDate) END YearSPKDate
				,CASE(a.LostCaseDate) WHEN '19000101' THEN NULL ELSE a.LostCaseDate END LostCaseDate
				,CASE(a.InquiryDate) WHEN '19000101' THEN NULL ELSE DAY(a.InquiryDate) END DayInquiryDate
				,CASE(a.InquiryDate) WHEN '19000101' THEN NULL ELSE MONTH(a.InquiryDate) END MonthInquiryDate
				,CASE(a.InquiryDate) WHEN '19000101' THEN NULL ELSE YEAR(a.InquiryDate) END YearInquiryDate
				,CASE(e.NextFollowUpDate) WHEN '19000101' THEN NULL ELSE DAY(e.NextFollowUpDate) END DayNextFollowUpDate
				,CASE(e.NextFollowUpDate) WHEN '19000101' THEN NULL ELSE MONTH(e.NextFollowUpDate) END MonthNextFollowUpDate
				,CASE(e.NextFollowUpDate) WHEN '19000101' THEN NULL ELSE YEAR(e.NextFollowUpDate) END YearNextFollowUpDate
				,a.QuantityInquiry
				,isnull(r.LookUpValueName, '') LostCaseCategory
				,a.LostCaseVoiceOfCustomer
				,(select LookUpValueName from gnMstLookUpDtl where CompanyCode = a.CompanyCode and CodeID = 'PMOP' and LookUpValue = a.TestDrive) TestDrive
				, isnull(n.LookUpValueName,'') CaraBayar
				, isnull(o.LookUpValueName,'') Leasing
				, isnull(p.LookUpValueName,'') DownPayment
				, isnull(q.LookUpValueName,'') Tenor
				, a.MerkLain
				, a.SpvEmployeeId
			FROM
				PmKDP a
			LEFT JOIN OmMstRefference b ON b.CompanyCode = a.CompanyCode 
				AND b.RefferenceType='COLO' 
				AND b.RefferenceCode=a.ColourCode
			LEFT JOIN HrEmployee c ON c.CompanyCode = a.CompanyCode 
				AND c.EmployeeID = a.EmployeeID
			LEFT JOIN HrEmployee d ON d.CompanyCode = a.CompanyCode 
				AND c.TeamLeader = d.EmployeeID
			LEFT JOIN PmActivities e ON e.CompanyCode = a.CompanyCode 
				AND e.BranchCode = a.BranchCode 
				AND e.InquiryNumber=a.InquiryNumber
				AND e.ActivityID = (SELECT TOP 1 ActivityID FROM PmActivities WHERE CompanyCode = a.CompanyCode 
				AND BranchCode = a.BranchCode AND InquiryNumber=a.InquiryNumber ORDER BY ActivityID DESC) 
			LEFT JOIN PmBranchOutlets f ON f.CompanyCode = a.CompanyCode 
				AND f.BranchCode = a.BranchCode 
				AND f.OutletID = a.OutletID
			LEFT JOIN GnMstLookUpDtl n on n.CompanyCode=a.CompanyCode
				AND n.CodeId='PMBY'
				AND n.LookUpValue = a.CaraPembayaran
			LEFT JOIN GnMstLookUpDtl o on o.CompanyCode=a.CompanyCode
				AND o.CodeId='LSNG'
				AND o.LookUpValue = a.Leasing
			LEFT JOIN GnMstLookUpDtl p on p.CompanyCode=a.CompanyCode
				AND p.CodeId='DWPM'
				AND p.LookUpValue = a.DownPayment
			LEFT JOIN GnMstLookUpDtl q on q.CompanyCode=a.CompanyCode
				AND q.CodeId='TENOR'
				AND q.LookUpValue = a.Tenor
			LEFT JOIN GnMstLookUpDtl r on r.CompanyCode=a.CompanyCode
				AND r.CodeId='PLCC'
				AND r.LookUpValue = a.LostCaseCategory		
			WHERE
				a.CompanyCode = @CompanyCode 
				AND ((CASE WHEN @BranchCode='' THEN a.BranchCode END)<>'' OR (CASE WHEN @BranchCode<>'' THEN a.BranchCode END)=@BranchCode)
				AND ((CASE WHEN @Outlet='' THEN a.OutletID END)<>'' OR (CASE WHEN @Outlet<>'' THEN a.OutletID END)=@Outlet)
				AND ((CASE WHEN @EMP='' THEN a.EmployeeID END)<>'' OR (CASE WHEN @EMP<>'' THEN a.EmployeeID END)=@EMP)
				AND e.NextFollowUpDate BETWEEN @DateAwal AND @DateAkhir
				AND a.LastProgress in ('P','HP','SPK') 
				--AND not exists (select 1 from #t1 where a.InquiryNumber = #t1.InquiryNumber)
	END
	
	IF (@Head='')
	BEGIN
		SELECT * FROM #t1
		ORDER BY InquiryNumber
	END
	ELSE
	BEGIN
		SELECT * FROM #t1 
		WHERE EmployeeID IN ( SELECT EmployeeID FROM HrEmployee where TeamLeader  = @Head)
		ORDER BY InquiryNumber 
	END
	DROP TABLE #t1
END
GO

if object_id('usprpt_GlRpConsol002') is not null
	drop procedure usprpt_GlRpConsol002
GO
CREATE  PROCEDURE [dbo].[usprpt_GlRpConsol002] 
(
	@CompanyCode VARCHAR(15),
	@FiscalYear NUMERIC(4),
	@PeriodeNum NUMERIC(2)
)
AS
BEGIN
	SELECT CompanyAccNo, NaturalAccConsol, ProductLine, ProductType, SUBSTRING(InterCompany, 2, 2) AS InterCompany, AccountDesc
	, DbAmount, CrAmount, QTY
	--, (CASE WHEN ISNULL(DbAmount, 0) = 0 THEN '' ELSE CONVERT(VARCHAR, CONVERT(decimal(18,0), DbAmount)) END)AS DbAmount
	--, (CASE WHEN ISNULL(CrAmount, 0) = 0 THEN '' ELSE CONVERT(VARCHAR, CONVERT(decimal(18,0), CrAmount)) END) AS CrAmount
	FROM GlTrAccBalanceConsolPool
	WHERE  CompanyCode = @CompanyCode
	AND FiscalYear = @FiscalYear
	AND PeriodeNum =@PeriodeNum
END
GO
ALTER procedure [dbo].[usprpt_PmRpInqByPeriod] 
	-- Add the parameters for the stored procedure here
(
	@CompanyCode	VARCHAR(15),
	@BranchCode		VARCHAR(15),
	@DateAwal		VARCHAR(10),
	@DateAkhir		VARCHAR(10),
	@Outlet			VARCHAR(15),
	@SPV			VARCHAR(15),
	@EMP			VARCHAR(15)
)
AS
BEGIN
	SELECT
		f.OutletName
		,convert(varchar(20),a.InquiryNumber) InquiryNumber
		,a.NamaProspek Pelanggan
		,a.AlamatProspek
		,a.TelpRumah
		,a.NamaPerusahaan
		,a.AlamatPerusahaan
		,a.Handphone
		,CASE(a.InquiryDate) WHEN '19000101' THEN NULL ELSE a.InquiryDate END InquiryDate
		,a.TipeKendaraan
		,a.Variant
		,a.Transmisi
		,b.RefferenceDesc1 Warna
		,a.PerolehanData
		,c.EmployeeName Employee
		,d.EmployeeName Supervisor
		,CASE(e.NextFollowUpDate) WHEN '19000101' THEN NULL ELSE e.NextFollowUpDate END NextFollowUpDate
		,a.LastProgress
		,a.LastUpdateStatus
		,CASE(a.SPKDate) WHEN '19000101' THEN NULL ELSE a.SPKDate END SPKDate
		,CASE(a.LostCaseDate) WHEN '19000101' THEN NULL ELSE a.LostCaseDate END LostCaseDate
	FROM
		PmKDP a
	LEFT JOIN OmMstRefference b
		ON b.CompanyCode = a.CompanyCode AND b.RefferenceType='COLO' AND b.RefferenceCode=a.ColourCode
	LEFT JOIN GnMstEmployee c
		ON c.CompanyCode = a.CompanyCode AND c.BranchCode = a.BranchCode AND c.EmployeeID = a.EmployeeID
	LEFT JOIN GnMstEmployee d
		ON d.CompanyCode = a.CompanyCode AND d.BranchCode = a.BranchCode AND d.EmployeeID = a.SpvEmployeeID
	LEFT JOIN PmActivities e
		ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode AND e.InquiryNumber=a.InquiryNumber
		AND e.ActivityID = (SELECT TOP 1 ActivityID FROM PmActivities WHERE CompanyCode = a.CompanyCode 
		AND BranchCode = a.BranchCode AND InquiryNumber=a.InquiryNumber ORDER BY ActivityID DESC) 
	LEFT JOIN PmBranchOutlets f
		ON f.CompanyCode = a.CompanyCode AND f.BranchCode = a.BranchCode AND f.OutletID = a.OutletID
	WHERE
		a.CompanyCode = @CompanyCode 
		AND ((CASE WHEN @BranchCode='' THEN a.BranchCode END)<>''OR (CASE WHEN @BranchCode<>'' THEN a.BranchCode END)=@BranchCode)
		AND CONVERT(VARCHAR, a.InquiryDate, 112) BETWEEN @DateAwal AND @DateAkhir
		AND ((CASE WHEN @Outlet='' THEN a.OutletID END)<>'' OR (CASE WHEN @Outlet<>'' THEN a.OutletID END)=@Outlet)
		AND ((CASE WHEN @SPV='' THEN a.SpvEmployeeID END)<>'' OR (CASE WHEN @SPV<>'' THEN a.SpvEmployeeID END)=@SPV)
		AND ((CASE WHEN @EMP='' THEN a.EmployeeID END)<>'' OR (CASE WHEN @EMP<>'' THEN a.EmployeeID END)=@EMP)
	ORDER BY
		a.InquiryNumber 
END
GO
ALTER procedure [dbo].[uspfn_SvInqFpjCust]  
 @CompanyCode nvarchar(20),  
 @BranchCode nvarchar(20)  
  
as  
  
select distinct a.CompanyCode, a.CustomerCode  
     , case @BranchCode when '%' then 'All Branch' else @BranchCode end as BranchCode  
     , a.CustomerName      
     , a.Address1 + ' ' + a.Address2 + ' ' + a.Address3 + ' ' + a.Address4 as Address  
  from gnMstCustomer a  
  left join gnMstLookUpDtl b  
    on b.CompanyCode = a.CompanyCode  
   and b.CodeID = 'SVFPJG'  
   and b.ParaValue = a.CustomerCode  
  left join svTrnInvoice c  
    on c.CompanyCode = a.CompanyCode  
   and c.BranchCode like @BranchCode  
   and c.CustomerCodeBill = b.ParaValue  
 where exists (  
   select * from svTrnInvoice  
    where CompanyCode = a.CompanyCode  
      and BranchCode like c.BranchCode  
      and CustomerCodeBill = b.ParaValue  
      and left(InvoiceNo, 3) in ('INC','INP')
      and InvoiceStatus = '0'  
   )  
   and a.CompanyCode = @CompanyCode
GO

if object_id('usprpt_GlRpTrn001') is not null
	drop procedure usprpt_GlRpTrn001
GO
CREATE  PROCEDURE [dbo].[usprpt_GlRpTrn001] 
(
	@CompanyCode VARCHAR(15),
	@BranchCode	VARCHAR(15),
	@FiscalYear NUMERIC(4),
	@PeriodeNum NUMERIC(2),
	@JournalNo VARCHAR(15),
	@JournalNoEnd VARCHAR (15),
	@JournalType CHAR(1),
	@Status VARCHAR(1)
)
AS
IF @JournalType = 0
BEGIN
	SELECT 'JURNAL HARIAN' AS SubTitle,a.CompanyCode,a.BranchCode,a.FiscalYear,a.PeriodeNum,
	a.JournalNo,a.JournalDate,a.ReffNo,a.ReffDate,b.SeqNo,
	b.AccountNo,c.Description,b.AmountDb,b.AmountCr,
	g.LookUpValueName AS City,
	UPPER(d.SignName) AS SignName1,UPPER(d.TitleSign) AS TitleSign1,
	UPPER(e.SignName) AS SignName2,UPPER(e.TitleSign) AS TitleSign2, b.Description AS DescDetail
	FROM glJournal a
	INNER JOIN glJournalDtl b
		ON a.CompanyCode = b.CompanyCode
		AND a.BranchCode = b.BranchCode
		AND a. FiscalYear = b.FiscalYear
		AND a.JournalNo = b.JournalNo
    LEFT JOIN gnMstAccount c
		ON a.CompanyCode = c.CompanyCode
		AND a.BranchCode = c.BranchCode
		AND b.AccountNo = c.AccountNo
	LEFT JOIN gnMstSignature d
		ON d.CompanyCode = a.CompanyCode
		AND d.BranchCode = a.BranchCode
		AND d.ProfitCenterCode = '000'
		AND d.DocumentType = 'JNH'
		AND d.SeqNo = 1
	LEFT JOIN gnMstSignature e
		ON e.CompanyCode = a.CompanyCode
		AND e.BranchCode = a.BranchCode
		AND e.ProfitCenterCode = '000'
		AND e.DocumentType = 'JNH'
		AND e.SeqNo = 2
    LEFT JOIN gnMstCoProfile f
		ON f.CompanyCode = a.CompanyCode
		AND f.BranchCode = a.BranchCode
	LEFT JOIN gnMstLookUpDtl g
		ON g.LookUpValue = f.CityCode
		AND g.CompanyCode = f.CompanyCode	
	WHERE a.Status in (1,2,5)
	AND g.CodeID = 'CITY'
	AND a.JournalType = 'Harian'
	AND a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.FiscalYear = @FiscalYear
	AND a.PeriodeNum =@PeriodeNum
	AND a.JournalNo BETWEEN @JournalNo AND @JournalNoEnd
END
ELSE IF @JournalType = 1
BEGIN
	SELECT 'JURNAL MEMORIAL' AS SubTitle,a.CompanyCode,a.BranchCode,a.FiscalYear,a.PeriodeNum,
	a.JournalNo,a.JournalDate,a.ReffNo,a.ReffDate,b.SeqNo,
	b.AccountNo,c.Description,b.AmountDb,b.AmountCr,
	g.LookUpValueName AS City,
	UPPER(d.SignName) AS SignName1,UPPER(d.TitleSign) AS TitleSign1,
	UPPER(e.SignName) AS SignName2,UPPER(e.TitleSign) AS TitleSign2, b.Description AS DescDetail
	FROM glJournal a
	INNER JOIN glJournalDtl b
		ON a.CompanyCode = b.CompanyCode
		AND a.BranchCode = b.BranchCode
		AND a. FiscalYear = b.FiscalYear
		AND a.JournalNo = b.JournalNo
	LEFT JOIN gnMstAccount c
		ON a.CompanyCode = c.CompanyCode
		AND a.BranchCode = c.BranchCode
		AND b.AccountNo = c.AccountNo
	LEFT JOIN gnMstSignature d
		ON d.CompanyCode = a.CompanyCode
		AND d.BranchCode = a.BranchCode
		AND d.ProfitCenterCode = '000'
		AND d.DocumentType = 'JNM'
		AND d.SeqNo = 1
	LEFT JOIN gnMstSignature e
		ON e.CompanyCode = a.CompanyCode
		AND e.BranchCode = a.BranchCode
		AND e.ProfitCenterCode = '000'
		AND e.DocumentType = 'JNM'
		AND e.SeqNo = 2
    LEFT JOIN gnMstCoProfile f
		ON f.CompanyCode = a.CompanyCode
		AND f.BranchCode = a.BranchCode
	LEFT JOIN gnMstLookUpDtl g
		ON g.LookUpValue = f.CityCode
		AND g.CompanyCode = f.CompanyCode	
	WHERE a.Status in (1,2,5)
	AND g.CodeID = 'CITY'
	AND a.JournalType = 'Memorial'
	AND a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.FiscalYear = @FiscalYear
	AND a.PeriodeNum =@PeriodeNum
	AND a.JournalNo BETWEEN @JournalNo AND @JournalNoEnd
END
ELSE IF @JournalType = 2
BEGIN
	SELECT 'JURNAL AUDIT' AS SubTitle,a.CompanyCode,a.BranchCode,a.FiscalYear,a.PeriodeNum,
	a.JournalNo,a.JournalDate,a.ReffNo,a.ReffDate,b.SeqNo,
	b.AccountNo,c.Description,b.AmountDb,b.AmountCr,
	g.LookUpValueName AS City,
	UPPER(d.SignName) AS SignName1,UPPER(d.TitleSign) AS TitleSign1,
	UPPER(e.SignName) AS SignName2,UPPER(e.TitleSign) AS TitleSign2, b.Description AS DescDetail
	FROM glJournal a
	INNER JOIN glJournalDtl b
		ON a.CompanyCode = b.CompanyCode
		AND a.BranchCode = b.BranchCode
		AND a. FiscalYear = b.FiscalYear
		AND a.JournalNo = b.JournalNo
	LEFT JOIN gnMstAccount c
		ON a.CompanyCode = c.CompanyCode
		AND a.BranchCode = c.BranchCode
		AND b.AccountNo = c.AccountNo
	LEFT JOIN gnMstSignature d
		ON d.CompanyCode = a.CompanyCode
		AND d.BranchCode = a.BranchCode
		AND d.ProfitCenterCode = '000'
		AND d.DocumentType = 'JNA'
		AND d.SeqNo = 1
	LEFT JOIN gnMstSignature e
		ON e.CompanyCode = a.CompanyCode
		AND e.BranchCode = a.BranchCode
		AND e.ProfitCenterCode = '000'
		AND e.DocumentType = 'JNA'
		AND e.SeqNo = 2
    LEFT JOIN gnMstCoProfile f
		ON f.CompanyCode = a.CompanyCode
		AND f.BranchCode = a.BranchCode
	LEFT JOIN gnMstLookUpDtl g
		ON g.LookUpValue = f.CityCode
		AND g.CompanyCode = f.CompanyCode	
	WHERE a.Status in (1,2,5)
	AND g.CodeID = 'CITY'
	AND a.JournalType = 'Audit'
	AND a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.FiscalYear = @FiscalYear
	AND a.PeriodeNum =@PeriodeNum
	AND a.JournalNo BETWEEN @JournalNo AND @JournalNoEnd
END
GO
-- =============================================
-- Author:        <yo>
-- Create date: <20 Mei 2013>
-- Description:   <Inquiry Part Sales>
-- =============================================
ALTER PROCEDURE [dbo].[usprpt_SpRpSum025]
 @CompanyCode varchar(15),
 @BranchCode varchar(15),
 @InvoiceDateFrom varchar(8),
 @InvoiceDateTo varchar(8),
 @CustomerCode varchar(15),
 @PartSales varchar(15),
 @SalesType varchar(15) 
AS
BEGIN

declare @Query varchar(MAX)
set @Query = '
select distinct
      spTrnSInvoiceHdr.BranchCode,
      spTrnSInvoiceHdr.BranchCode + ''' + ' - ' + ''' + gnMstCoProfile.CompanyName Branch
from spTrnSORDHDr
left join gnMstCoProfile
on gnMstCoProfile.CompanyCode = spTrnSORDHDr.CompanyCode and            
      gnMstCoProfile.BranchCode = spTrnSORDHDr.BranchCode         
left join spTrnSInvoiceHdr 
on spTrnSInvoiceHdr.CompanyCode = spTrnSORDHDr.CompanyCode
      and spTrnSInvoiceHdr.BranchCode = spTrnSORDHDr.BranchCode
      and spTrnSInvoiceHdr.PickingSlipNo = spTrnSORDHDr.ExPickingSlipNo
      and spTrnSInvoiceHdr.CustomerCode = spTrnSORDHDr.CustomerCode     
where spTrnSORDHDr.CompanyCode = ' + @CompanyCode + '
      and (case when ''' + @BranchCode + ''' != ''%'' then spTrnSInvoiceHdr.BranchCode else ''' + @BranchCode  + ''' end) = ''' + @BranchCode + '''
      and convert(varchar, spTrnSInvoiceHdr.InvoiceDate, 112) between convert(varchar, ''' + @InvoiceDateFrom + ''', 112) and convert(varchar, ''' + @InvoiceDateTo + ''', 112)        
      and spTrnSInvoiceHdr.SalesType in (' + @SalesType + ') 
order by spTrnSInvoiceHdr.BranchCode

select distinct
            spTrnSInvoiceHdr.BranchCode,        
            spTrnSORDHDr.LockingBy, 
            gnMstEmployee.EmployeeName, 
            spTrnSInvoiceHdr.CustomerCode, 
            gnMstCustomer.CustomerName, 
            spTrnSInvoiceDtl.DocNo,
            spTrnSInvoiceDtl.DocDate,
            spTrnSInvoiceHdr.PickingSlipNo,
            spTrnSInvoiceHdr.PickingSlipDate,
            spTrnSInvoiceHdr.InvoiceNo,
            spTrnSInvoiceHdr.InvoiceDate,
            spTrnSInvoiceHdr.FPJNo,
            spTrnSInvoiceHdr.FPJDate,
            spTrnSInvoiceDtl.PartNo,
            spMstItemInfo.PartName,
            isnull(spTrnSORDDtl.QtyOrder,0) QtyOrder,
            spTrnSInvoiceDtl.QtyBill,
            spTrnSInvoiceDtl.RetailPrice,
            spTrnSInvoiceDtl.SalesAmt,
            spTrnSInvoiceDtl.DiscPct,
            spTrnSInvoiceDtl.DiscAmt,
            spTrnSInvoiceDtl.NetSalesAmt,
            (case when right(cast(((spTrnSInvoiceDtl.NetSalesAmt * 10) /100) as decimal(10,2)),2) >= 50
                  then cast(((spTrnSInvoiceDtl.NetSalesAmt * 10) /100) as decimal(10,2))
            else
                  floor(cast(((spTrnSInvoiceDtl.NetSalesAmt * 10) /100) as decimal(10,2)))
                  end) PPNAmt, 
            (spTrnSInvoiceDtl.NetSalesAmt +     
                  (case when right(cast(((spTrnSInvoiceDtl.NetSalesAmt * 10) /100) as decimal(10,2)),2) >= 50
                        then cast(((spTrnSInvoiceDtl.NetSalesAmt * 10) /100) as decimal(10,2))
                  else
                        floor(cast(((spTrnSInvoiceDtl.NetSalesAmt * 10) /100) as decimal(10,2)))
                        end)) TotFinalSalesAmt,
            spTrnSInvoiceDtl.CostPrice
      from spTrnSORDHDr
      left join gnMstEmployee
      on gnMstEmployee.CompanyCode = spTrnSORDHDr.CompanyCode
            and gnMstEmployee.BranchCode = spTrnSORDHDr.BranchCode
            and gnMstEmployee.EmployeeID = spTrnSORDHDr.LockingBy
            and gnMstEmployee.PersonnelStatus = ''1''
      left join spTrnSInvoiceHdr 
      on spTrnSInvoiceHdr.CompanyCode = spTrnSORDHDr.CompanyCode
            and spTrnSInvoiceHdr.BranchCode = spTrnSORDHDr.BranchCode
            and spTrnSInvoiceHdr.PickingSlipNo = spTrnSORDHDr.ExPickingSlipNo
            and spTrnSInvoiceHdr.CustomerCode = spTrnSORDHDr.CustomerCode
      left join gnMstCustomer
      on gnMstCustomer.CompanyCode = spTrnSORDHDr.CompanyCode
            and gnMstCustomer.CustomerCode = spTrnSInvoiceHdr.CustomerCode
      left join spTrnSInvoiceDtl
      on spTrnSInvoiceDtl.CompanyCode = spTrnSORDHDr.CompanyCode
            and spTrnSInvoiceDtl.BranchCode = spTrnSORDHDr.BranchCode
            and spTrnSInvoiceDtl.InvoiceNo = spTrnSInvoiceHdr.InvoiceNo
      left join spMstItemInfo
      on spMstItemInfo.CompanyCode = spTrnSInvoiceDtl.CompanyCode
            and spMstItemInfo.PartNo = spTrnSInvoiceDtl.PartNo
      left join spTrnSORDDtl
      on spTrnSORDDtl.CompanyCode = spTrnSInvoiceDtl.CompanyCode
            and spTrnSORDDtl.BranchCode = spTrnSInvoiceDtl.BranchCode
            and spTrnSORDDtl.DocNo = spTrnSInvoiceDtl.DocNo
            and spTrnSORDDtl.PartNo = spTrnSInvoiceDtl.PartNo
      where 
            spTrnSORDHDr.CompanyCode = ' + @CompanyCode + '
          and (case when ''' + @BranchCode + ''' != ''%'' then spTrnSInvoiceHdr.BranchCode else ''' + @BranchCode  + ''' end) = ''' + @BranchCode + '''
            and (case when ''' + @CustomerCode + ''' != ''%'' then spTrnSInvoiceHdr.CustomerCode else ''' + @CustomerCode + ''' end) = ''' + @CustomerCode + '''
            and (case when ''' + @PartSales + ''' != ''%'' then spTrnSORDHDr.LockingBy else ''' + @PartSales + ''' end) = ''' + @PartSales + '''
            and convert(varchar, spTrnSInvoiceHdr.InvoiceDate, 112) between convert(varchar, ''' + @InvoiceDateFrom + ''', 112) and convert(varchar, ''' + @InvoiceDateTo + ''', 112)        
            and spTrnSInvoiceHdr.SalesType in (' + @SalesType + ') 
      order by spTrnSInvoiceHdr.BranchCode'
      
      print(@Query)
      exec(@Query)
END
GO
ALTER procedure [dbo].[uspfn_SvTrnInvoiceDraft]
	@CompanyCode varchar(15),
	@BranchCode  varchar(15),
	@JobOrderNo  varchar(15)
as  

declare @errmsg   varchar(max)
declare @BillType varchar(10)

begin try
--set nocount on

-- get data from SvTrnService
select * into #srv from (
  select * from svTrnService with(nowait,nolock) 
    where 1 = 1  
      and CompanyCode  = @CompanyCode  
      and BranchCode   = @BranchCode  
      and EstimationNo = @JobOrderNo  
      and EstimationNo!= ''
  union all
  select * from svTrnService with(nowait,nolock) 
    where 1 = 1  
      and CompanyCode = @CompanyCode  
      and BranchCode  = @BranchCode  
      and BookingNo   = @JobOrderNo  
      and BookingNo  != ''
  union all
  select * from svTrnService with(nowait,nolock) 
    where 1 = 1  
      and CompanyCode = @CompanyCode  
      and BranchCode  = @BranchCode  
      and JobOrderNo  = @JobOrderNo  
      and JobOrderNo != ''
)#srv

select BillType into #t1 from (
select b.BillType from #srv a, svTrnSrvItem b with(nowait,nolock) 
 where 1 = 1
   and b.CompanyCode = a.CompanyCode
   and b.BranchCode  = a.BranchCode
   and b.ProductType = a.ProductType
   and b.ServiceNo   = a.ServiceNo
union
select b.BillType from #srv a, svTrnSrvTask b with(nowait,nolock) 
 where 1 = 1
   and b.CompanyCode = a.CompanyCode
   and b.BranchCode  = a.BranchCode
   and b.ProductType = a.ProductType
   and b.ServiceNo   = a.ServiceNo
)#

set @BillType = (select top 1 a.BillType from svMstBillingType a with(nowait,nolock), #t1 b where b.BillType = a.BillType order by a.LockingBy)
drop table #t1

-- get dicount from Service
declare @ProductType     varchar(20)  set @ProductType     = isnull((select top 1 ProductType     from #srv),0)
declare @ServiceNo       bigint       set @ServiceNo       = isnull((select top 1 ServiceNo       from #srv),0)

-- get ppn & pph dicount from Service
declare @PPnPct decimal
    set @PPnPct = isnull((select a.TaxPct
 						    from gnMstTax a with(nowait,nolock), gnMstCustomerProfitCenter b with(nowait,nolock) , #srv c
						   where c.CompanyCode  = b.CompanyCode
						     and c.BranchCode   = b.BranchCode
						     and c.CustomerCodeBill = b.CustomerCode
						     and b.CompanyCode  = a.CompanyCode
						     and b.TaxCode      = a.TaxCode
						     and b.ProfitCenterCode = '200'
						     and b.TaxCode      = 'PPN'
							),0)

declare @PPhPct decimal
    set @PPhPct = isnull((select a.TaxPct
							from gnMstTax a with(nowait,nolock), gnMstCustomerProfitCenter b with(nowait,nolock) , #srv c
						   where c.CompanyCode  = b.CompanyCode
						     and c.BranchCode   = b.BranchCode
						     and c.CustomerCodeBill = b.CustomerCode
						     and b.CompanyCode  = a.CompanyCode
						     and b.TaxCode      = a.TaxCode
						     and b.ProfitCenterCode = '200'
						     and b.TaxCode      = 'PPH'
							),0)

-- get data gross amount
declare @LaborGrossAmt decimal
    set @LaborGrossAmt = isnull((
						select ceiling(sum(a.OperationHour * a.OperationCost))
						  from svTrnSrvTask a with(nowait,nolock), #srv b
						 where a.CompanyCode = b.CompanyCode
						   and a.BranchCode  = b.BranchCode
						   and a.ProductType = b.ProductType
						   and a.ServiceNo   = b.ServiceNo
						   and a.BillType    = @BillType
						),0)

declare @PartsGrossAmt decimal
    set @PartsGrossAmt = isnull((
						--select ceiling(sum((i.SupplyQty - i.ReturnQty) * i.RetailPrice))--Sebelum Perubahan
						select ceiling(sum(Round((i.SupplyQty - i.ReturnQty) * i.RetailPrice,0)))--Sesudah Perubahan
						  from svTrnSrvItem i with(nowait,nolock), gnMstLookUpDtl g with(nowait,nolock)
						 where g.CompanyCode = i.CompanyCode
					 	   and g.LookUpValue = i.TypeOfGoods
						   and g.CodeID      = 'GTGO'
						   and g.ParaValue   = 'SPAREPART'
						   and i.CompanyCode = @CompanyCode
						   and i.BranchCode  = @BranchCode
						   and i.ProductType = @ProductType
						   and i.ServiceNo   = @ServiceNo
						   and i.BillType    = @BillType
						),0)

declare @MaterialGrossAmt decimal
    set @MaterialGrossAmt = isnull((
						 --select ceiling(sum((i.SupplyQty - i.ReturnQty) * i.RetailPrice))--Sebelum Perubahan
						 select ceiling(sum(Round((i.SupplyQty - i.ReturnQty) * i.RetailPrice,0)))--Sesudah Perubahan
						   from svTrnSrvItem i with(nowait,nolock), gnMstLookUpDtl g with(nowait,nolock)
						  where g.CompanyCode = i.CompanyCode
							and g.LookUpValue = i.TypeOfGoods
							and g.CodeID      = 'GTGO'
							and g.ParaValue  in ('OLI','MATERIAL')
							and i.CompanyCode = @CompanyCode
							and i.BranchCode  = @BranchCode
							and i.ProductType = @ProductType
							and i.ServiceNo   = @ServiceNo
						    and i.BillType    = @BillType
						  ),0)

-- calculate discount
declare @LaborDiscAmt decimal
    set @LaborDiscAmt = isnull((
						 select ceiling(sum(OperationHour * OperationCost * (DiscPct/100.0)))
						   from svTrnSrvTask with(nowait,nolock)
						  where CompanyCode = @CompanyCode
							and BranchCode = @BranchCode
							and ProductType = @ProductType
							and ServiceNo = @ServiceNo
						    and BillType    = @BillType
						  ),0)

declare @PartsDiscAmt decimal
    set @PartsDiscAmt = isnull((
						 --select ceiling(sum((i.SupplyQty - i.ReturnQty) * i.RetailPrice * (i.DiscPct/100.0)))--Sebelum Perubahan
						 select ceiling(sum(Round((i.SupplyQty - i.ReturnQty) * i.RetailPrice * (i.DiscPct/100.0),0)))--Sesudah Perubahan
						   from svTrnSrvItem i with(nowait,nolock), gnMstLookUpDtl g with(nowait,nolock)
						 where g.CompanyCode = i.CompanyCode
					 	   and g.LookUpValue = i.TypeOfGoods
						   and g.CodeID      = 'GTGO'
						   and g.ParaValue   = 'SPAREPART'
						   and i.CompanyCode = @CompanyCode
						   and i.BranchCode  = @BranchCode
						   and i.ProductType = @ProductType
						   and i.ServiceNo   = @ServiceNo
						   and i.BillType    = @BillType
						  ),0)

declare @MaterialDiscAmt decimal
    set @MaterialDiscAmt = isnull((
						 --select ceiling(sum((i.SupplyQty - i.ReturnQty) * i.RetailPrice * (i.DiscPct/100.0)))--Sebelum Perubahan
						 select ceiling(sum(Round((i.SupplyQty - i.ReturnQty) * i.RetailPrice * (i.DiscPct/100.0),0)))--Sesudah Perubahan
						   from svTrnSrvItem i with(nowait,nolock), gnMstLookUpDtl g with(nowait,nolock)
						  where g.CompanyCode = i.CompanyCode
							and g.LookUpValue = i.TypeOfGoods
							and g.CodeID      = 'GTGO'
							and g.ParaValue  in ('OLI','MATERIAL')
							and i.CompanyCode = @CompanyCode
							and i.BranchCode  = @BranchCode
							and i.ProductType = @ProductType
							and i.ServiceNo   = @ServiceNo
						    and i.BillType    = @BillType
						  ),0)

-- calculate DPP (dasar pengenaan pajak)
--declare @LaborDppAmt     decimal	set @LaborDppAmt     = floor(@LaborGrossAmt    - @LaborDiscAmt)--Sebelum Perubahan
--declare @PartsDppAmt     decimal	set @PartsDppAmt     = floor(@PartsGrossAmt    - @PartsDiscAmt)--Sebelum Perubahan
--declare @MaterialDppAmt  decimal	set @MaterialDppAmt  = floor(@MaterialGrossAmt - @MaterialDiscAmt)--Sebelum Perubahan
--declare @TotalDppAmt     decimal	set @TotalDppAmt     = floor(@LaborDppAmt + @PartsDppAmt + @MaterialDppAmt)--Sebelum Perubahan
declare @LaborDppAmt     decimal	set @LaborDppAmt     = Round(@LaborGrossAmt    - @LaborDiscAmt,0)--Sesudah Perubahan
declare @PartsDppAmt     decimal	set @PartsDppAmt     = Round(@PartsGrossAmt    - @PartsDiscAmt,0)--Sesudah Perubahan
declare @MaterialDppAmt  decimal	set @MaterialDppAmt  = Round(@MaterialGrossAmt - @MaterialDiscAmt,0)--Sesudah Perubahan
declare @TotalDppAmt     decimal	set @TotalDppAmt     = Round(@LaborDppAmt + @PartsDppAmt + @MaterialDppAmt,0)--Sesudah Perubahan

-- calculate ppn & service amount
declare @TotalPpnAmt     decimal	set @TotalPpnAmt = floor(@TotalDppAmt * (@PpnPct / 100.0))
declare @TotalPphAmt     decimal	set @TotalPphAmt = floor(@TotalDppAmt * (@PphPct / 100.0))
declare @TotalSrvAmt     decimal	set @TotalSrvAmt = floor(@TotalDppAmt + @TotalPphAmt + @TotalPpnAmt)

    
;with t1 as (
select a.CompanyCode, a.BranchCode, a.ProductType, a.ServiceNo
     , a.EstimationNo, a.EstimationDate, a.BookingNo, a.BookingDate, a.JobOrderNo, a.JobOrderDate, a.ServiceType
     , a.PoliceRegNo, a.ServiceBookNo, a.BasicModel, a.TransmissionType
     , a.ChassisCode, a.ChassisNo, a.EngineCode, a.EngineNo, a.ColorCode
     , rtrim(rtrim(a.ColorCode)
     + case isnull(b.RefferenceDesc2,'') when '' then '' else ' - ' end
     + isnull(b.RefferenceDesc2,'')) as ColorCodeDesc
     , a.Odometer
     , a.CustomerCode, c.CustomerName, c.Address1 CustAddr1
     , c.Address2 CustAddr2, c.Address3 CustAddr3, c.Address4 CustAddr4
     , c.CityCode CityCode, d.LookupValueName CityName
     , a.InsurancePayFlag, a.InsuranceOwnRisk, a.InsuranceNo, a.InsuranceJobOrderNo
     , a.CustomerCodeBill, e.CustomerName CustomerNameBill
     , e.Address1 CustAddr1Bill, e.Address2 CustAddr2Bill
     , e.Address3 CustAddr3Bill, e.Address4 CustAddr4Bill
     , e.CityCode CityCodeBill, f.LookupValueName CityNameBill
     , e.PhoneNo, e.FaxNo, e.HPNo, a.LaborDiscPct, a.PartDiscPct
     , a.ServiceRequestDesc, a.ConfirmChangingPart, a.EstimateFinishDate
     , a.MaterialDiscPct, a.JobType, a.ForemanID, a.MechanicID
     , a.ServiceStatus
	 , @LaborDppAmt LaborDppAmt, @PartsDppAmt PartsDppAmt, @MaterialDppAmt MaterialDppAmt
	 , @TotalDppAmt TotalDppAmt, @TotalPpnAmt TotalPpnAmt
	 , @TotalSrvAmt TotalSrvAmt
	 , a.LaborDppAmt SrvLaborDppAmt, a.PartsDppAmt SrvPartsDppAmt, a.MaterialDppAmt SrvMaterialDppAmt
	 , a.TotalDppAmount SrvTotalDppAmt, a.TotalPpnAmount SrvTotalPpnAmt
	 , a.TotalSrvAmount SrvTotalSrvAmt
  from svTrnService a with (nowait,nolock)
  left join omMstRefference b with (nowait,nolock)
    on b.CompanyCode = a.CompanyCode
   and b.RefferenceType = 'COLO'
   and b.RefferenceCode = a.ColorCode
  left join gnMstCustomer c with (nowait,nolock)
    on c.CompanyCode = a.CompanyCode
   and c.CustomerCode = a.CustomerCode
  left join gnMstLookupDtl d with (nowait,nolock)
    on d.CompanyCode = a.CompanyCode
   and d.CodeID = 'CITY'
   and d.LookUpValue = c.CityCode
  left join gnMstCustomer e with (nowait,nolock)
    on e.CompanyCode = a.CompanyCode
   and e.CustomerCode = a.CustomerCodeBill
  left join gnMstLookupDtl f with (nowait,nolock)
    on f.CompanyCode = a.CompanyCode
   and f.CodeID = 'CITY'
   and f.LookUpValue = e.CityCode
 where 1 = 1
   and a.CompanyCode = @CompanyCode
   and a.BranchCode  = @BranchCode
   and a.ServiceNo   = (select ServiceNo from #srv)
) 
select a.CompanyCode, a.BranchCode, a.ProductType --, JobOrderNo, 
	 , a.ServiceNo, a.ServiceType
     , a.EstimationNo, a.EstimationDate, a.BookingNo, a.BookingDate, a.JobOrderNo, a.JobOrderDate
     , '' InvoiceNo, z.Remarks 
     -- Data Kendaraan
     , a.PoliceRegNo, a.ServiceBookNo, a.BasicModel, a.TransmissionType
     , a.ChassisCode, a.ChassisNo, a.EngineCode, a.EngineNo
     , a.ColorCode, a.ColorCodeDesc, a.Odometer
     -- Data Contract
     , b.IsContractStatus IsContract
     , b.ContractNo
	 , c.EndPeriod ContractEndPeriod
	 , c.IsActive ContractStatus
	 , case b.IsContractStatus 
		when 1 then (case c.IsActive when 1 then 'Aktif' else 'Tidak Aktif' end)
		else ''
	   end ContractStatusDesc
     -- Data Contract
	 , b.IsClubStatus IsClub
	 , b.ClubCode
	 , b.ClubDateFinish ClubEndPeriod
	 , d.IsActive ClubStatus
	 , case b.IsClubStatus
		when 1 then (case d.IsActive when 1 then 'Aktif' else 'Tidak Aktif' end)
		else ''
	   end ClubStatusDesc
     -- Data Customer
     , a.CustomerCode, a.CustomerName
     , a.CustAddr1, a.CustAddr2, a.CustAddr3, a.CustAddr4
     , a.CityCode, a.CityName
     -- Data Customer Bill
     , a.InsurancePayFlag, a.InsuranceOwnRisk, a.InsuranceNo, a.InsuranceJobOrderNo
     , a.CustomerCodeBill, a.CustomerNameBill
     , a.CustAddr1Bill, a.CustAddr2Bill, a.CustAddr3Bill, a.CustAddr4Bill
     , a.CityCodeBill, a.CityNameBill
     , a.PhoneNo, a.FaxNo, a.HPNo
     , a.LaborDiscPct, a.PartDiscPct, a.PartDiscPct PartsDiscPct, a.MaterialDiscPct
     --, IsPPnBill
     -- Data Pekerjaan
     , a.ServiceRequestDesc
     , a.JobType, e.Description JobTypeDesc
     , a.ConfirmChangingPart, a.EstimateFinishDate
     , a.ForemanID, g.EmployeeName ForemanName
	 , a.MechanicID, h.EmployeeName MechanicName
	 -- Data Total Biaya Perawatan
     , a.LaborDppAmt, a.PartsDppAmt, a.MaterialDppAmt, a.TotalDppAmt
     , a.TotalPpnAmt, a.TotalSrvAmt
     , a.SrvLaborDppAmt, a.SrvPartsDppAmt, a.SrvMaterialDppAmt, a.SrvTotalDppAmt
     , a.SrvTotalPpnAmt, a.SrvTotalSrvAmt

     , a.ServiceStatus
	 , f.Description ServiceStatusDesc
	 , isnull(i.TaxCode,'') TaxCode
	 , isnull(j.TaxPct,0) TaxPct
  from t1 a
  left join svMstCustomerVehicle b with (nowait,nolock)
    on b.CompanyCode = a.CompanyCode
   and b.ChassisCode = a.ChassisCode
   and b.ChassisNo = a.ChassisNo
  left join svMstContract c with (nowait,nolock)
    on c.CompanyCode = a.CompanyCode
   and c.ContractNo = b.ContractNo
   and b.IsContractStatus = 1
  left join svMstClub d with (nowait,nolock)
    on d.CompanyCode = a.CompanyCode
   and d.ClubCode = b.ClubCode
  left join SvMstRefferenceService e with (nowait,nolock)
    on e.CompanyCode = a.CompanyCode
   and e.ProductType = a.ProductType
   and e.RefferenceCode = a.JobType
   and e.RefferenceType = 'JOBSTYPE'
  left join SvMstRefferenceService f with (nowait,nolock)
    on f.CompanyCode = a.CompanyCode
   and f.ProductType = a.ProductType
   and f.RefferenceCode = a.ServiceStatus
   and f.RefferenceType = 'SERVSTAS'
  left join gnMstEmployee g with (nowait,nolock)
    on g.CompanyCode = a.CompanyCode
   and g.BranchCode = a.BranchCode
   and g.EmployeeID = a.ForemanID
  left join gnMstEmployee h with (nowait,nolock)
    on h.CompanyCode = a.CompanyCode
   and h.BranchCode = a.BranchCode
   and h.EmployeeID = a.MechanicID
  left join gnMstCustomerProfitCenter i with (nowait,nolock)
    on i.CompanyCode = a.CompanyCode
   and i.BranchCode = a.BranchCode
   and i.CustomerCode = a.CustomerCode
   and i.ProfitCenterCode = '200'
  left join gnMstTax j with (nowait,nolock)
    on j.CompanyCode = a.CompanyCode
   and j.TaxCode = i.TaxCode
  left join svTrnInvoice z with (nowait, nolock)
   on a.JobOrderNo = z.JobOrderNo AND a.CompanyCode = z.CompanyCode AND a.BranchCode = z.BranchCode

end try
begin catch
    set @errmsg = 'Error Message:' + char(13) + error_message()
    raiserror (@errmsg,16,1);
	drop table #srv
end catch
GO
ALTER procedure [dbo].[uspfn_spTrnIAdjustDtlview]
@CompanyCode varchar(15),
@BranchCode varchar(15),
@AdjustmentNo varchar(25) 
 
AS
SELECT 
        row_number () OVER (ORDER BY spTrnIAdjustDtl.CreatedDate) AS No,
        spTrnIAdjustDtl.PartNo,
        spMstItemInfo.PartName,
        spTrnIAdjustDtl.WarehouseCode,	
        spTrnIAdjustDtl.LocationCode,
		spTrnIAdjustDtl.AdjustmentCode,
        gnMstLookUpDtl_1.LookUpValueName AS AdjustmentDesc,
	    gnMstLookUpDtl_2.LookUpValueName AS WarehouseName,
        spTrnIAdjustDtl.QtyAdjustment,
		spTrnIAdjustDtl.ReasonCode,
        gnMstLookUpDtl.LookUpValueName AS ReasonDesc
    FROM 
        spTrnIAdjustDtl
        INNER JOIN spTrnIAdjustHdr ON spTrnIAdjustHdr.AdjustmentNo = spTrnIAdjustDtl.AdjustmentNo 
            AND spTrnIAdjustHdr.CompanyCode =  spTrnIAdjustDtl.CompanyCode
            AND spTrnIAdjustHdr.BranchCode =  spTrnIAdjustDtl.BranchCode
        INNER JOIN spMstItemInfo ON spMstItemInfo.PartNo = spTrnIAdjustDtl.PartNo
            AND spMstItemInfo.CompanyCode = spTrnIAdjustDtl.CompanyCode
        INNER JOIN gnMstLookUpDtl ON gnMstLookUpDtl.LookUpValue = spTrnIAdjustDtl.ReasonCode
            AND gnMstLookUpDtl.CompanyCode = spTrnIAdjustDtl.CompanyCode
        INNER JOIN gnMstLookUpDtl AS gnMstLookUpDtl_1 ON gnMstLookUpDtl_1.LookUpValue = spTrnIAdjustDtl.AdjustmentCode
            AND gnMstLookUpDtl_1.CompanyCode = spTrnIAdjustDtl.CompanyCode
	    INNER JOIN gnMstLookUpDtl AS gnMstLookUpDtl_2 ON gnMstLookUpDtl_2.LookUpValue = spTrnIAdjustDtl.WarehouseCode
            AND gnMstLookUpDtl_2.CompanyCode = spTrnIAdjustDtl.CompanyCode
    WHERE 
        spTrnIAdjustDtl.CompanyCode = @CompanyCode
        AND spTrnIAdjustDtl.BranchCode = @BranchCode
        AND gnMstLookUpDtl.CodeId='RSAD'
	    AND gnMstLookUpDtl_2.CodeId='WRCD'
        AND gnMstLookUpDtl_1.CodeID = 'ADJS'
        AND spTrnIAdjustDtl.AdjustmentNo =  @AdjustmentNo
    ORDER BY spTrnIAdjustDtl.CreatedDate
GO

ALTER procedure [dbo].[uspfn_sfEmpMutationTrend]  
 @CompanyCode  varchar(20) = '%',  
 @BranchCode   varchar(20) = '%',  
 @pYear        char(4)  
as  
  
--declare @CompanyCode varchar(20), @BranchCode varchar(20), @pYear char(4)  
--select @CompanyCode = '%', @BranchCode = '%', @pYear = '2013'  
--uspfn_sfEmpMutationTrend default, default, '2013'  
  
select a.CompanyCode, b.CompanyName, a.BranchCode, a.BranchName  
     , EmpJan = isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'IN'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '01' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and not exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.BranchCode = BranchCode and m.EmployeeID = EmployeeID and MutaCode = 'INACTIVE' and isnull(IsDeleted, 0) = 0)    
       ), 0)  
       - isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'OUT'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '01' + '99'  
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from SfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
       ), 0)  
     , EmpFeb = isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'IN'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '02' + '99' 
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and not exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.BranchCode = BranchCode and m.EmployeeID = EmployeeID and MutaCode = 'INACTIVE' and isnull(IsDeleted, 0) = 0)   
       ), 0)  
       - isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'OUT'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '02' + '99' 
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from SfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
       ), 0)  
     , EmpMar = isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'IN'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '03' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and not exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.BranchCode = BranchCode and m.EmployeeID = EmployeeID and MutaCode = 'INACTIVE' and isnull(IsDeleted, 0) = 0)   
       ), 0)  
       - isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'OUT'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '03' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from SfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
       ), 0)  
     , EmpApr = isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'IN'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '04' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and not exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.BranchCode = BranchCode and m.EmployeeID = EmployeeID and MutaCode = 'INACTIVE' and isnull(IsDeleted, 0) = 0)   
       ), 0)  
       - isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'OUT'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '04' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from SfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
       ), 0)  
     , EmpMay = isnull((  
        select count(*) from SfHistEmplMutation m 
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'IN'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '05' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and not exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.BranchCode = BranchCode and m.EmployeeID = EmployeeID and MutaCode = 'INACTIVE' and isnull(IsDeleted, 0) = 0)   
       ), 0)  
       - isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'OUT'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '05' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from SfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
       ), 0)  
     , EmpJun = isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'IN'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '06' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and not exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.BranchCode = BranchCode and m.EmployeeID = EmployeeID and MutaCode = 'INACTIVE' and isnull(IsDeleted, 0) = 0)   
       ), 0)  
       - isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'OUT'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '06' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from SfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
       ), 0)  
     , EmpJul = isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'IN'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '07' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and not exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.BranchCode = BranchCode and m.EmployeeID = EmployeeID and MutaCode = 'INACTIVE' and isnull(IsDeleted, 0) = 0)   
       ), 0)  
       - isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'OUT'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '07' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from SfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
       ), 0)  
     , EmpAug = isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'IN'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '08' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and not exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.BranchCode = BranchCode and m.EmployeeID = EmployeeID and MutaCode = 'INACTIVE' and isnull(IsDeleted, 0) = 0)   
    ), 0)  
       - isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'OUT'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '08' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from SfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
       ), 0)  
     , EmpSep = isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'IN'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '09' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and not exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.BranchCode = BranchCode and m.EmployeeID = EmployeeID and MutaCode = 'INACTIVE' and isnull(IsDeleted, 0) = 0)   
       ), 0)  
       - isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'OUT'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '09' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from SfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
       ), 0)  
     , EmpOct = isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'IN'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '10' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and not exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.BranchCode = BranchCode and m.EmployeeID = EmployeeID and MutaCode = 'INACTIVE' and isnull(IsDeleted, 0) = 0)   
       ), 0)  
       - isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'OUT'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '10' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from SfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
       ), 0)  
     , EmpNov = isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
     and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'IN'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '11' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and not exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.BranchCode = BranchCode and m.EmployeeID = EmployeeID and MutaCode = 'INACTIVE' and isnull(IsDeleted, 0) = 0)   
       ), 0)  
       - isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'OUT'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '11' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from SfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
       ), 0)  
     , EmpDec = isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'IN'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '12' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and not exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.BranchCode = BranchCode and m.EmployeeID = EmployeeID and MutaCode = 'INACTIVE' and isnull(IsDeleted, 0) = 0)   
       ), 0)  
       - isnull((  
        select count(*) from SfHistEmplMutation m
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'OUT'  
           and isnull(m.IsDeleted, 0) = 0
           and convert(varchar, m.MutaDate, 112) <= @pYear + '12' + '99'
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from SfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
       ), 0)      
  from GnMstOrganizationDtl a  
  left join GnMstOrganizationHdr b on b.CompanyCode = a.CompanyCode  
 where a.CompanyCode like @CompanyCode  
   and a.BranchCode like @BranchCode  
 order by a.BranchCode  
  
  
--select * from GnMstOrganizationDtl
GO
ALTER procedure [dbo].[uspfn_SvTrnJobOrderCancel]
	@CompanyCode varchar(15),
	@BranchCode varchar(15),
	@ProductType varchar(15),
	@ServiceNo bigint,
	@UserID varchar(15)
as      

declare @errmsg varchar(max)

declare @ServiceStatus varchar(10)
    set @ServiceStatus = isnull((
						 select ServiceStatus
						   from svTrnService
						  where 1 = 1
						    and CompanyCode = @CompanyCode
						    and BranchCode  = @BranchCode
						    and ProductType = @ProductType
						    and ServiceNo   = @ServiceNo
						 ),0)

if (@ServiceStatus >= '5') 
begin
	set @errmsg = N'Dear ' + isnull((select FullName from sysuser where userid = @UserID), @UserID) + ',' + char(13)
				+ N'SPK ini sudah tidak dapat di cancel lagi karena status sudah berubah.'
				+ char(13) + 'Status SPK Terakhir = ' + @ServiceStatus + ', tolong di check lagi'
				+ char(13) + 'Terima kasih'
	raiserror (@errmsg,16,1);
	return
end

-- cek Supply - Return Part
if (select count(*) from svtrnsrvitem where CompanyCode = @CompanyCode and BranchCode = @BranchCode and ProductType = @ProductType
		and ServiceNo = @ServiceNo and SupplyQty-ReturnQty > 0 ) > 0
begin
	set @errmsg = N'Dear ' + isnull((select FullName from sysuser where userid = @UserID), @UserID) + ',' + char(13)
				+ N'SPK ini tidak dapat di cancel. Disebabkan part harus di return semua !'
				+ char(13) + 'Lakukan return Sparepart dahulu, Terima kasih.'
	raiserror (@errmsg,16,1);
	return
end


begin try
	update svTrnService
	   set ServiceStatus  = '6'
          ,LastUpdateBy  = @UserID
          ,LastUpdateDate= getdate()
	 where 1 = 1
	   and CompanyCode = @CompanyCode
	   and BranchCode = @BranchCode
	   and ProductType = @ProductType
	   and ServiceNo = @ServiceNo
	
	declare @CompanyMD as varchar(15)
	declare @BranchMD as varchar(15)

	set @CompanyMD = (select CompanyMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)
	set @BranchMD = (select BranchMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)

	if (@CompanyCode != @CompanyMD and @BranchCode != @BranchMD)
	begin	

	declare @Query varchar(max)
	declare @DbMD varchar(max)

	set @DbMD = dbo.GetDbMD(@CompanyCode, @BranchCode)

	set @Query = 'update '+ @DbMD +'..svSDMovement
	   set Status  = ''6''
          ,LastUpdateBy  = '''+ @UserID +'''
          ,LastUpdateDate= '''+convert(varchar,getdate())+'''
	 where 1 = 1
	   and CompanyCode = '''+ @CompanyCode +'''
	   and BranchCode = '''+ @BranchCode +'''	  
	   and DocNo = (select JobOrderNo from svTrnService where CompanyCode = '''+ @CompanyCode +''' and BranchCode = '''+ @BranchCode +''' and ServiceNo = '+ convert(varchar,@ServiceNo) +')'
	
	exec(@Query);

	end
end try
begin catch
	set @errmsg = N'tidak dapat konversi ke SPK pada ServiceNo = '
				+ convert(varchar,@ServiceNo)
				+ char(13) + error_message()
	raiserror (@errmsg,16,1);
end catch
GO
ALTER procedure [dbo].[uspfn_SaveEmployeeMutation]
	@CompanyCode varchar(20),
	@EmployeeID varchar(20),
	@MutationDate datetime,
	@IsJoinDate bit,
	@BranchCode varchar(20),
	@UserID varchar(64)
as
begin
	declare @CurrentTime datetime;
	declare @JoinDate datetime;
	declare @ResignDate datetime;
	declare @Status bit;

	declare @Message varchar(150);
	declare @PrevMutation varchar(17);
	declare @NextMutation varchar(17);
	declare @NumberOfExistingRecord int;
	declare @NextMutationDate datetime;
	declare @PrevMutationDate datetime;
	
	declare @branch varchar(15);
	declare @UserEmployee varchar(15);

	set @NextMutation = null;
	set @PrevMutationDate = null;
	set @NumberOfExistingRecord = 0;
	set @Status=0;
	set @Message='';
	set @PrevMutation = '';
	set @NextMutation = ''
	set @CurrentTime = getDate();
	set @JoinDate = ( select top 1 a.JoinDate from HrEmployee a where a.CompanyCode=@CompanyCode and a.EmployeeID=@EmployeeID);
	set @ResignDate = ( select top 1 a.ResignDate from HrEmployee a where a.CompanyCode=@CompanyCode and a.EmployeeID=@EmployeeID);

	if @MutationDate < @JoinDate
	begin
		set @Message = 'Mutation datetime cannot less than join datetime.';
	end
	else if @MutationDate > @ResignDate and @ResignDate is not null
	begin
		set @Message = 'Mutation datetime cannot more than resign datetime.';
	end
	else 
	begin
		set @NumberOfExistingRecord = ( select count(*) from HrEmployeeMutation where CompanyCode=@CompanyCode and EmployeeID=@EmployeeID and convert(datetime, MutationDate)=@MutationDate );

		if @NumberOfExistingRecord > 0
		begin
			set @PrevMutation = (
				select top 1
				       a.BranchCode
				  from HrEmployeeMutation a
				 where a.CompanyCode=@CompanyCode
				   and a.EmployeeID=@EmployeeID
				   and convert(datetime, a.MutationDate) < @MutationDate
				 order by a.MutationDate desc
			);		
			
			set @NextMutation = (
				select top 1
					   a.BranchCode
				  from HrEmployeeMutation a
				 where a.CompanyCode=@CompanyCode
				   and a.EmployeeID=@EmployeeID
				   and convert(datetime, a.MutationDate) > @MutationDate
				 order by a.MutationDate desc
			);

			if @BranchCode = @PrevMutation
			begin			
				set @Message='There is mutation in the selected Branch before this mutation datetime.';
			end
			else if @BranchCode = @NextMutation
			begin
				set @Message='There is mutation in the selected Branch after this mutation datetime.';
			end
			else
			begin
				update HrEmployeeMutation
				   set IsDeleted=0
				     , BranchCode=@BranchCode
				 where CompanyCode=@CompanyCode
				   and EmployeeID=@EmployeeID
				   and convert(datetime, MutationDate)=@MutationDate

				if @IsJoinDate=1 
				begin
					update HrEmployeeMutation
					   set IsDeleted=1
					 where  CompanyCode=@CompanyCode and EmployeeID=@EmployeeID  and MutationDate < @MutationDate
				end
				
				set @Message = 'Data has been saved into database.';
				set @Status = convert(bit, 1);
			end
		end
		else
		begin
			insert into 
				   HrEmployeeMutation ( CompanyCode, EmployeeID, MutationDate, BranchCode, IsJoinDate, CreatedBy, CreatedDate, UpdatedBy, UpdatedDate, IsDeleted )
			values
				   (@CompanyCode, @EmployeeID, @MutationDate, @BranchCode, @IsJoinDate, @UserID, @CurrentTime, @UserID, @CurrentTime, 0)

			if @IsJoinDate=1
			begin
				update HrEmployeeMutation
				   set IsDeleted=1
				 where CompanyCode=@CompanyCode and EmployeeID=@EmployeeID  and MutationDate < @MutationDate
			end
				
			set @Status = convert(bit, 1);
			set @Message = 'Data has been saved.';
		end
		
		if exists (select * from HrEmployee where CompanyCode = @CompanyCode and EmployeeID = @EmployeeID and (RelatedUser is not null or RelatedUser = ''))
		begin
			set @UserEmployee = (select RelatedUser from HrEmployee where CompanyCode = @CompanyCode and EmployeeID = @EmployeeID)
			set @branch = (select top 1 BranchCode
						from HrEmployeeMutation
						where CompanyCode = @CompanyCode
						and EmployeeID = @EmployeeID
						and IsDeleted = 0
						order by MutationDate Desc)
			update SysUser
			set BranchCode = @branch
			where UserId = @UserEmployee
		end
	end

	select convert(bit, @Status) as Status, @Message as Message;
end
GO
ALTER procedure [dbo].[uspfn_SpMstItemLocView]
@CompanyCode varchar(15),
@BranchCode varchar(15),
@TypeOfGoods varchar(5),
@ProductType varchar(15)
 
AS
SELECT 
	 ItemLoc.PartNo
	,ItemInfo.PartName
	,ItemInfo.SupplierCode
	,ItemLoc.WarehouseCode
	,c.LookUpValueName [WarehouseName]
	,ItemLoc.LocationCode
	,Items.PartCategory
	,Items.CompanyCode
	,Items.BranchCode   
	,Items.ProductType
	,Items.TypeOfGoods
	,ItemLoc.LocationSub1
	,ItemLoc.LocationSub2
	,ItemLoc.LocationSub3
	,ItemLoc.LocationSub4
	,ItemLoc.LocationSub5
	,ItemLoc.LocationSub6
FROM spMstItemLoc ItemLoc
INNER JOIN spMstItems Items 
    ON ItemLoc.CompanyCode=Items.CompanyCode
    AND ItemLoc.BranchCode=Items.BranchCode
    AND ItemLoc.PartNo=Items.PartNo
INNER JOIN spMstItemInfo ItemInfo 
    ON ItemLoc.CompanyCode=ItemInfo.CompanyCode
    AND ItemLoc.PartNo=ItemInfo.PartNo
	inner join gnMstLookUpDtl c  ON ItemLoc.CompanyCode = c.CompanyCode 
						 AND ItemLoc.WarehouseCode = c.LookUpValue
WHERE
	ItemLoc.WarehouseCode NOT LIKE 'X%' 
	AND Items.TypeOfGoods = @TypeOfGoods
	AND Items.ProductType = @ProductType
GO
/****** Object:  StoredProcedure [dbo].[uspfn_GnUpdateTax]    Script Date: 12/15/2011 16:56:31 ******/
-- uspfn_GnUpdateTax '6051401','010.000-13.00000004','INV: 0','FPS/13/000003','ga'
ALTER procedure [dbo].[uspfn_GnUpdateTax]
   @CompanyCode	varchar(15),
   @FPJGovNo	varchar(50),
   @FPJGovNoNew	varchar(50),
   @DocNo    	varchar(20),
   @UserID      varchar(15)

as

declare @errmsg varchar(max)

if exists (select * from gnGenerateTax
		where 1 = 1
		  and CompanyCode = @CompanyCode
		  and right(FPJGovNo, 8) = right(@FPJGovNoNew, 8)
		  and right(FPJGovNo, 8) <> right(@FPJGovNo, 8)
		  and @FPJGovNoNew not like 'IN%'
		)
begin
	set @errmsg = N'Dear ' + isnull((select FullName from sysuser where userid = @UserID), @UserID) + ',' + char(13)
				+ N'No Pajak ' + @FPJGovNoNew + ' sudah pernah digunakan untuk generate pajak'
				+ char(13) + 'Silahkan di coba nomor yang lain'
				+ char(13) + 'Terima kasih'
	raiserror (@errmsg,16,1);
	select @errmsg
	return
end

if (@FPJGovNoNew not like 'IN%')
begin
	-- update gnGenerateTax
	;with x as (
	select 'TAX' code, FPJGovNo, @FPJGovNoNew FPJNew, DocNo, DocDate, CreatedDate
	  from gnGenerateTax 
	 where 1 = 1
	   and CompanyCode = @CompanyCode
	   and FPJGovNo = @FPJGovNo
	   and DocNo = @DocNo
	)
	update x set FPJGovNo = FPJNew
end
else
begin
	delete GnGenerateTax where CompanyCode = @CompanyCode and FPJGovNo = @FPJGovNo and DocNo = @Docno
end

-- update Sparepart
;with x as (
select 'SP' code, FPJGovNo, @FPJGovNoNew FPJNew, InvoiceNo, InvoiceDate, CreatedDate
  from SPTrnSFPJHdr
 where 1 = 1
   and CompanyCode = @CompanyCode
   and FPJGovNo = @FPJGovNo
   and InvoiceNo = @DocNo
)
update x set FPJGovNo = FPJNew

-- update Service
;with x as (
select 'SV' code, FPJGovNo, @FPJGovNoNew FPJNew, FPJNo, FPJDate, CreatedDate
  from svTrnFakturPajak
 where 1 = 1
   and CompanyCode = @CompanyCode
   and FPJGovNo = @FPJGovNo
   and FPJNo = @DocNo
)
--select * from x
update x set FPJGovNo = FPJNew

-- update Sales
;with x as (
select 'SL' code, FakturPajakNo, @FPJGovNoNew FPJNew, InvoiceNo, InvoiceDate, CreatedDate
  from OmFakturPajakHdr
 where 1 = 1
   and CompanyCode = @CompanyCode
   and FakturPajakNo = @FPJGovNo
   and InvoiceNo = @DocNo
)
--select * from x
update x set FakturPajakNo = FPJNew

-- update Finance
;with x as (
select 'FN' code, FakturPajakNo, @FPJGovNoNew FPJNew, InvoiceNo, InvoiceDate, CreatedDate
  from ArFakturPajakHdr
 where 1 = 1
   and CompanyCode = @CompanyCode
   and FakturPajakNo = @FPJGovNo
   and InvoiceNo = @DocNo
)
--select * from x
update x set FakturPajakNo = FPJNew

-- update Konsolidasi Pajak Keluaran
;with x as (
select 'KPK' code, TaxNo FakturPajakNo, @FPJGovNoNew FPJNew, FPJNo
	, case when TaxNo = FPJNo then @FPJGovNoNew
		else FPJNo
	end FPJNoNew
	, case when ProfitCenter='200' then FPJNo 
		else ReferenceNo
	end InvoiceNo
	, case when ProfitCenter='200' then FPJDate 
		else ReferenceDate
	end InvoiceDate
	, CreatedDate
  from gnTaxOut
 where 1 = 1
   and CompanyCode = @CompanyCode
   and TaxNo = @FPJGovNo
   and (case when ProfitCenter='200' then FPJNo else ReferenceNo end) = @DocNo
)
--select * from x
update x 
set FakturPajakNo = FPJNew
	,FPJNo= FPJNoNew

insert into gnTaxHistUpd(CompanyCode,FPJGovNo,FPJGovNoNew,DocNo,UpdateBy,UpdateDate)
     values(@CompanyCode, @FPJGovNo, @FPJGovNoNew, @DocNo, @UserID, getdate())
GO
ALTER procedure [dbo].[usprpt_OmRpSalRgs034] 
(
	@CompanyCode VARCHAR(15),
	@BranchCode	VARCHAR(15),
	@InvoiceDateFrom DATETIME,
	@InvoiceDateTo DATETIME,
	@OrderBy VARCHAR(1)
)
AS
BEGIN

--declare @CompanyCode as varchar(15)
--declare @BranchCode as varchar(15)
--declare @InvoiceDateFrom as datetime
--declare @InvoiceDateTo as datetime
--declare @OrderBy as varchar(1)
--
--set @CompanyCode = '6023401'
--set @BranchCode = '602340100'
--set @InvoiceDateFrom = '20100501'
--set @InvoiceDateTo = '20110630'
--set @OrderBy = '0'

--usprpt_OmRpSalRgs034 '6023401', '602340100', '20100501', '20110630', '0'

select distinct * into #t1 from
(select 
a.SONo
, isnull(b.SKPKNo, '') SKPKNo
, isnull(e.Customername, '') Customername
, isnull(c.SalesModelCode, '') SalesModelCode
, isnull(k.SalesModelDesc, '') SalesModelDesc
, isnull(e.Address1, '') Address1
, isnull(f.LookupValueName, '') City
, isnull(e.BirthDate, '') BirthDate
, isnull(case when e.Gender = 'M' then 'Laki-laki' else 'Perempuan' end, '') Gender
, a.InvoiceDate
, j.ChassisNo
, j.EngineNo
, isnull(g.EmployeeName, '') EmployeeName
, isnull(e.Address2, '') + ' ' +  isnull(e.Address3, '') Address2
, isnull(e.PhoneNo, '') + ' / ' + isnull(e.HPNo, '') PhoneNo
, isnull(j.ColourCode, '') ColourCode
, isnull(i.RefferenceDesc1, '') Colour
, isnull(d.FakturPolisiName, '') FakturPolisiName
, isnull(d.FakturPolisiAddress1, '') FakturPolisiAddress1
, isnull(d.FakturPolisiAddress2, '') + ' ' + isnull(d.FakturPolisiAddress3, '') FakturPolisiAddress2
, isnull(m.LookupValueName, '') FakturCity
, isnull(d.FakturPolisiTelp1, '') + ' / ' + isnull(d.FakturPolisiHP, '') FakturPhoneNo
from omTrSalesInvoice a
left join omTrSalesSO b on 
	a.CompanyCode = b.CompanyCode
	and a.BranchCode = b.BranchCode
	and a.SONo = b.SONo
left join omTrSalesSOModel c on 
	a.CompanyCode = c.CompanyCode
	and a.BranchCode = c.BranchCode
	and a.SONo = c.SONo
left join omTrSalesReqDetail d on 
	d.CompanyCode = a.CompanyCode	
	and d.BranchCode = a.BranchCode			
	and d.SONo = a.SONo
left join gnMstCustomer e on
	e.CompanyCode = a.CompanyCode
	and e.CustomerCode = a.CustomerCode
left join gnMstLookupDtl f on
	f.CompanyCode = a.CompanyCode
	and f.LookupValue = e.CityCode
	and f.CodeID = 'CITY'
left join gnMstEmployee g on
	g.CompanyCode = a.CompanyCode
	and g.EmployeeID = b.Salesman
inner join omTrSalesSOVIN j on 
	j.CompanyCode = a.CompanyCode	
	and j.BranchCode = a.BranchCode			
	and j.SONo = a.SONo
	and j.ChassisCode = d.ChassisCode
	and j.ChassisNo = d.ChassisNo
left join omMstRefference i on
	i.CompanyCode = a.CompanyCode
	and i.RefferenceType = 'COLO'
	and i.RefferenceCode = J.ColourCode
left join omMstModel k on
	k.CompanyCode = a.CompanyCode
	and k.SalesModelCode = c.SalesModelCode
left join gnMstLookupDtl m on
	m.CompanyCode = a.CompanyCode
	and m.LookupValue = d.FakturPolisiCity
	and m.CodeID = 'CITY'
where a.CompanyCode = @CompanyCode
	and a.BranchCode = @BranchCode
	and convert(varchar, a.InvoiceDate, 112) between convert(varchar, @InvoiceDateFrom, 112) and  convert(varchar, @InvoiceDateTo, 112)) #t1

if @OrderBy = '0'
	begin
	select * from #t1 order by CustomerName
	end
else
	begin
	select * from #t1 order by InvoiceDate
	end

drop table #t1

END
GO
ALTER procedure [dbo].[uspfn_SvTrnInvoiceCreate]
	@CompanyCode varchar(15),
	@BranchCode  varchar(15),
	@ProductType varchar(15),
	@ServiceNo   int,
	@BillType    char(1),
	@InvoiceNo   varchar(15),
	@Remarks     varchar(max),
	@UserID      varchar(15)
as  

declare @errmsg varchar(max)
--raiserror ('test error',16,1);

DECLARE @CompanyMD AS VARCHAR(15)
DECLARE @BranchMD AS VARCHAR(15)
DECLARE @WarehouseMD AS VARCHAR(15)
DECLARE @DbMD AS VARCHAR(15)
declare @md bit

SET @CompanyMD = (SELECT CompanyMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)
SET @BranchMD = (SELECT BranchMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)
SET @WarehouseMD = (SELECT WarehouseMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)
SET @DbMD = (SELECT DbMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)
set @md = (select case WHEN EXISTS(select * from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode and CompanyMD = @CompanyCode and BranchMD = @BranchCode) then cast(1 as bit) ELSE cast(0 as bit) END)

select BillType as BillType
              from svTrnSrvTask
             where CompanyCode = @companycode
               and BranchCode  = @branchcode
               and ProductType = @productType
               and ServiceNo   = @serviceno
            union
            select BillType as BillType
              from svTrnSrvItem b
             where CompanyCode = @companycode
               and BranchCode  = @branchcode
               and ProductType = @productType
               and ServiceNo   = @serviceno
               and  (SupplyQty - ReturnQty) > 0


-- get data from service
select * into #srv from(
  select * from svTrnService
   where 1 = 1
     and CompanyCode = @CompanyCode
     and BranchCode  = @BranchCode
     and ProductType = @ProductType
     and ServiceNo   = @ServiceNo
 )#srv

 select * from #srv
 select * from svTrnSrvItem where serviceno = @serviceno
 select * from svTrnSrvTask where serviceno = @serviceno

-- get data from task
select * into #tsk from(
  select a.* from svTrnSrvTask a, #srv b
   where 1 = 1
     and a.CompanyCode = b.CompanyCode
     and a.BranchCode  = b.BranchCode
     and a.ProductType = b.ProductType
     and a.ServiceNo   = b.ServiceNo
     and a.BillType    = @BillType
 )#tsk

 select * from #tsk

-- get data from item
select * into #mec from(
  select a.* from svTrnSrvMechanic a, #tsk b
   where 1 = 1
     and a.CompanyCode = b.CompanyCode
     and a.BranchCode  = b.BranchCode
     and a.ProductType = b.ProductType
     and a.ServiceNo   = b.ServiceNo
     and a.OperationNo = b.OperationNo
     and a.OperationNo <> ''
 )#mec

 select * from #mec

-- get data from item
select * into #itm from(
  select a.* from svTrnSrvItem a, #srv b
   where 1 = 1
     and a.CompanyCode = b.CompanyCode
     and a.BranchCode  = b.BranchCode
     and a.ProductType = b.ProductType
     and a.ServiceNo   = b.ServiceNo
     and a.BillType    = @BillType
 )#itm

-- create temporary table detail
create table #pre_dtl(
	BillType char(1),
	TaskPartType char(1),
	TaskPartNo varchar(20),
	TaskPartQty numeric(10,2),
	SupplySlipNo varchar(20)
)

insert into #pre_dtl
select BillType, 'L', OperationNo, OperationHour, ''
  from #tsk

insert into #pre_dtl
select BillType, TypeOfGoods, PartNo
	 , sum(SupplyQty - ReturnQty)
	 , SupplySlipNo
  from #itm
 where BillType = @BillType
   and (SupplyQty - ReturnQty) > 0
 group by BillType, TypeOfGoods, PartNo, SupplySlipNo

-- insert to table svTrnInvoice
declare @CustomerCode varchar(20)
if @BillType = 'C'
begin
	set @CustomerCode = (select CustomerCodeBill from #srv)
end
else if @BillType = 'P'
begin
	set @CustomerCode = (select top 1 a.BillTo from svMstPackage a
				 inner join svMstPackageTask b
					on b.CompanyCode = a.CompanyCode
				   and b.PackageCode = a.PackageCode
				 inner join svMstPackageContract c
					on c.CompanyCode = a.CompanyCode
				   and c.PackageCode = a.PackageCode
				 inner join #srv d
					on d.CompanyCode = a.CompanyCode
				   and d.JobType = a.JobType
				   and d.ChassisCode = c.ChassisCode
				   and d.ChassisNo = c.ChassisNo)
end
else if @BillType in ('F', 'W', 'S')
begin
	set @CustomerCode = (select CustomerCode from svMstBillingType
				 where BillType in ('F', 'W', 'S')
				   and CompanyCode = @CompanyCode
				   and BillType = @BillType)
end
else
begin
	set @CustomerCode = (select CustomerCodeBill from #srv)
end

--set @CustomerCode = isnull((
--				select top 1 a.BillTo from svMstPackage a
--				 inner join svMstPackageTask b
--					on b.CompanyCode = a.CompanyCode
--				   and b.PackageCode = a.PackageCode
--				 inner join svMstPackageContract c
--					on c.CompanyCode = a.CompanyCode
--				   and c.PackageCode = a.PackageCode
--				 inner join #srv d
--					on d.CompanyCode = a.CompanyCode
--				   and d.JobType = a.JobType
--				   and d.ChassisCode = c.ChassisCode
--				   and d.ChassisNo = c.ChassisNo
--				), isnull((
--				select CustomerCode from svMstBillingType
--				 where BillType in ('F')
--				   and CompanyCode = @CompanyCode
--				   and BillType = @BillType
--				), isnull((select CustomerCodeBill from #srv), '')))


if ((select count(*) from #tsk) = 0 and (select count(*) from #itm) = 0)
begin
	drop table #srv
	drop table #tsk
	drop table #mec
	drop table #itm
	drop table #pre_dtl
	return
end

if (@CustomerCode = '')
begin
	set @errmsg = N'Customer Code Bill belum di define...'
				+ char(13) + 'Tolong di check lagi'
				+ char(13) + 'Terima kasih'
	raiserror (@errmsg,16,1);
	return
end

select * into #cus from (
select a.CompanyCode, a.IsPkp, b.CustomerCode, b.LaborDiscPct, b.PartDiscPct, b.MaterialDiscPct, b.TopCode, b.TaxCode
  from gnMstCustomer a, gnMstCustomerProfitCenter b
 where 1 = 1
   and b.CompanyCode  = a.CompanyCode
   and b.CustomerCode = a.CustomerCode
   and b.CompanyCode  = @CompanyCode
   and b.BranchCode   = @BranchCode
   and b.CustomerCode = @CustomerCode
   and b.ProfitCenterCode = '200'
)#cus

if (select count(*) from #cus) <> 1
begin
	set @errmsg = N'Customer ProfitCenter belum di define...'
				+ char(13) + 'Tolong di check lagi'
				+ char(13) + 'Terima kasih'
	raiserror (@errmsg,16,1);
	return
end

declare @IsPKP bit
    set @IsPKP = isnull((
				 select IsPKP from gnMstCustomer
				  where CompanyCode  = @CompanyCode
				    and CustomerCode = @CustomerCode
				  ), 0)

declare @PPnPct decimal
    set @PPnPct = isnull((
				  select a.TaxPct
				    from gnMstTax a, #cus b
				   where 1 = 1
				     and b.TaxCode     = 'PPN'
				     and a.CompanyCode = b.CompanyCode
				     and a.TaxCode     = b.TaxCode
				  ), 0)

declare @PPhPct decimal
    set @PPhPct = isnull((
				  select a.TaxPct
				    from gnMstTax a, #cus b
				   where 1 = 1
				     and b.TaxCode     = 'PPH'
				     and a.CompanyCode = b.CompanyCode
				     and a.TaxCode     = b.TaxCode
				  ), 0)


-- Insert Into svTrnInvoice
-----------------------------------------------------------------------------------------
insert into svTrnInvoice(
  CompanyCode, BranchCode, ProductType
, InvoiceNo, InvoiceDate, InvoiceStatus
, FPJNo, FPJDate, JobOrderNo, JobOrderDate, JobType
, ServiceRequestDesc, ChassisCode, ChassisNo, EngineCode, EngineNo
, PoliceRegNo, BasicModel, CustomerCode, CustomerCodeBill, Odometer
, IsPKP, TOPCode, TOPDays, DueDate, SignedDate
, LaborDiscPct, PartsDiscPct, MaterialDiscPct, PphPct, PpnPct, Remarks
, PrintSeq, PostingFlag, IsLocked, CreatedBy, CreatedDate
) 
select
  @CompanyCode CompanyCode
, @BranchCode BranchCode
, @ProductType ProductType
, @InvoiceNo InvoiceNo
, getdate() InvoiceDate
, case @IsPKP
	when '0' then '1'
	else (case @BillType when 'F' then '0' when 'W' then '0' else '1' end)
  end as InvoiceStatus
, '' FPJNo
, null FPJDate
, (select JobOrderNo from #srv) JobOrderNo
, (select JobOrderDate from #srv) JobOrderDate
, (select JobType from #srv) JobType
, (select ServiceRequestDesc from #srv) ServiceRequestDesc
, (select ChassisCode from #srv) ChassisCode
, (select ChassisNo from #srv) ChassisNo
, (select EngineCode from #srv) EngineCode
, (select EngineNo from #srv) EngineNo
, (select PoliceRegNo from #srv) PoliceRegNo
, (select BasicModel from #srv) BasicModel
, (select CustomerCode from #srv) CustomerCode
, @CustomerCode as CustomerCodeBill
, (select Odometer from #srv) Odometer
, (select IsPKP from #cus) as IsPKP
, (select TopCode from #cus) as TOPCode
, isnull((
	select b.ParaValue
	  from gnMstCustomerProfitCenter a, GnMstLookUpDtl b
	 where a.CompanyCode  = @CompanyCode
	   and a.BranchCode   = @BranchCode
	   and a.CustomerCode = @CustomerCode
	   and a.ProfitCenterCode = '200'
	   and b.CompanyCode  = a.CompanyCode
	   and b.CodeID = 'TOPC'
	   and b.LookUpValue = a.TopCode
	), null) as TOPDays
, isnull((
	select dateadd(day, convert(int,b.ParaValue), convert(varchar, getdate(), 112))
	  from gnMstCustomerProfitCenter a, GnMstLookUpDtl b
	 where a.CompanyCode  = @CompanyCode
	   and a.BranchCode   = @BranchCode
	   and a.CustomerCode = @CustomerCode
	   and a.ProfitCenterCode = '200'
	   and b.CompanyCode  = a.CompanyCode
	   and b.CodeID = 'TOPC'
	   and b.LookUpValue  = a.TopCode
	), null) as DueDate
, convert(varchar, getdate(), 112) SignedDate
, case @BillType
	when 'F' then (select LaborDiscPct from #cus) 
    when 'W' then (select LaborDiscPct from #cus) 
    else (select LaborDiscPct from #srv) 
  end as LaborDiscPct
, case @BillType
	when 'F' then (select PartDiscPct from #cus) 
    when 'W' then (select PartDiscPct from #cus) 
    else (select PartDiscPct from #srv) 
  end as PartsDiscPct
, case @BillType
	when 'F' then (select MaterialDiscPct from #cus) 
    when 'W' then (select MaterialDiscPct from #cus) 
    else (select MaterialDiscPct from #srv) 
  end as MaterialDiscPct
, @PPnPct as PPhPct
, @PPnPct as PPnPct
, @Remarks as Remarks
, '0' PrintSeq
, '0' PostingFlag
, '0' IsLocked
, @UserID CreatedBy
, getdate() CreatedDate

-- Insert Into svTrnInvTask
-----------------------------------------------------------------------------------------
insert into svTrnInvTask (
  CompanyCode, BranchCode, ProductType, InvoiceNo, OperationNo
, OperationHour, ClaimHour, OperationCost, SubConPrice
, IsSubCon, SharingTask, DiscPct
)
select CompanyCode, BranchCode, ProductType, @InvoiceNo as InvoiceNo, OperationNo
, isnull(OperationHour, 0) OperationHour, isnull(ClaimHour, 0) ClaimHour
, isnull(OperationCost, 0) OperationCost, isnull(SubConPrice, 0) SubConPrice
, isnull(IsSubCon, 0) IsSubCon, isnull(SharingTask, 0) SharingTask
, isnull(DiscPct, 0)
from #tsk

-- Insert Into svTrnInvMechanic
-----------------------------------------------------------------------------------------
insert into svTrnInvMechanic (
  CompanyCode, BranchCode, ProductType, InvoiceNo, OperationNo
, MechanicID, ChiefMechanicID, StartService, FinishService
)
select CompanyCode, BranchCode, ProductType, @InvoiceNo as InvoiceNo, OperationNo
, MechanicID, ChiefMechanicID, StartService, FinishService
from #mec

-- Insert Into svTrnInvItem
-----------------------------------------------------------------------------------------
Declare @Query varchar(max)

set @Query = 'select * into #itm1 from (
select CompanyCode, BranchCode, ProductType, '''+ @InvoiceNo +''' as InvoiceNo, PartNo
	 , isnull((
		select MovingCode from '+ @DbMD +'..spMstItems
		 where CompanyCode = '''+ @CompanyMD +'''
		   and BranchCode = '''+ @BranchMD +'''
		   and PartNo = #itm.PartNo
		), '''') as MovingCode
	 , isnull((
		select ABCClass from '+ @DbMD +' ..spMstItems
		 where CompanyCode = '''+ @CompanyMD +'''
		   and BranchCode = '''+ @BranchMD +'''
		   and PartNo = #itm.PartNo
		), '''') as ABCClass
	 , sum(SupplyQty - ReturnQty) as SupplyQty
	 , isnull((
		select 
		  case (sum(b.SupplyQty - b.ReturnQty))
			 when 0 then 0
			 else sum(a.CostPrice * (b.SupplyQty - b.ReturnQty)) / sum(b.SupplyQty - b.ReturnQty)
		  end 
	from SpTrnSLmpDtl a
	left join SvTrnSrvItem b on 1 = 1
	 and b.CompanyCode  = a.CompanyCode
	 and b.BranchCode   = a.BranchCode
	 and b.ProductType  = a.ProductType
	 and b.SupplySlipNo = a.DocNo
	 and b.PartNo = #itm.PartNo
	where 1 = 1
	 and a.CompanyCode = '''+ @CompanyCode +'''
	 and a.BranchCode  = '''+ @BranchCode +'''
	 and a.ProductType = '''+ @ProductType +'''
	 and a.PartNo = #itm.PartNo
	 and a.DocNo in (
			select SupplySlipNo
			 from SvTrnSrvItem
			where 1 = 1
			  and CompanyCode = '''+ @CompanyCode +'''
			  and BranchCode  = '''+ @BranchCode +'''
			  and ProductType = '''+ @ProductType +'''
			  and ServiceNo = '''+ Convert(varchar,@ServiceNo) +'''
			  and PartNo = #itm.PartNo
			)
	), 0) as CostPrice
, RetailPrice
, TypeOfGoods
from #itm
group by CompanyCode, BranchCode, ProductType, PartNo, RetailPrice, TypeOfGoods
)#

insert into svTrnInvItem (
  CompanyCode, BranchCode, ProductType, InvoiceNo, PartNo
, MovingCode, ABCClass, SupplyQty, ReturnQty, CostPrice, RetailPrice
, TypeOfGoods, DiscPct
)
select a.CompanyCode, a.BranchCode, a.ProductType, a.InvoiceNo, a.PartNo
	 , MovingCode = (select top 1 MovingCode from #itm1 where CompanyCode = a.CompanyCode and BranchCode = a.BranchCode and InvoiceNo = a.InvoiceNo and PartNo = a.PartNo)
	 , ABCClass = (select top 1 ABCClass from #itm1 where CompanyCode = a.CompanyCode and BranchCode = a.BranchCode and InvoiceNo = a.InvoiceNo and PartNo = a.PartNo)
	 , sum(SupplyQty) as SupplyQty, 0 as ReturnQty
	 , CostPrice = (select top 1 CostPrice from #itm1 where CompanyCode = a.CompanyCode and BranchCode = a.BranchCode and InvoiceNo = a.InvoiceNo and PartNo = a.PartNo order by CostPrice desc)
	 , RetailPrice = (select top 1 RetailPrice from #itm1 where CompanyCode = a.CompanyCode and BranchCode = a.BranchCode and InvoiceNo = a.InvoiceNo and PartNo = a.PartNo order by RetailPrice desc)
	 , TypeOfGoods = (select top 1 TypeOfGoods from #itm1 where CompanyCode = a.CompanyCode and BranchCode = a.BranchCode and InvoiceNo = a.InvoiceNo and PartNo = a.PartNo)
	 , DiscPct = (select top 1 DiscPct from #itm where CompanyCode = a.CompanyCode and BranchCode = a.BranchCode and InvoiceNo = a.InvoiceNo and PartNo = a.PartNo)
  from #itm1 a
 where a.SupplyQty > 0
 group by a.CompanyCode, a.BranchCode, a.ProductType, a.InvoiceNo, a.PartNo'

 exec(@Query)

-- Insert Into svTrnInvItemDtl
-----------------------------------------------------------------------------------------
insert into svTrnInvItemDtl (
  CompanyCode, BranchCode, ProductType, InvoiceNo, PartNo, SupplySlipNo
, SupplyQty, CostPrice, CreatedBy, CreatedDate
)
select y.* from (
select CompanyCode, BranchCode, ProductType, @InvoiceNo as InvoiceNo, PartNo, SupplySlipNo
, sum(SupplyQty - ReturnQty) as SupplyQty, CostPrice
, @UserID as CreatedBy, getdate() as CreatedDate
from #itm
group by CompanyCode, BranchCode, ProductType, PartNo, SupplySlipNo, CostPrice
) y
where y.SupplyQty > 0

-- Re Calculate Invoice

-----------------------------------------------------------------------------------------
exec uspfn_SvTrnInvoiceReCalculate @CompanyCode=@CompanyCode, @BranchCode=@BranchCode, @ProductType=@ProductType, @InvoiceNo=@InvoiceNo, @UserId=@UserId
-- Insert svsdmovement
-----------------------------------------------------------------------------------------

 if(@md = 0)
 begin

 set @Query ='insert into '+ @DbMD +'..svSDMovement
select a.CompanyCode, a.BranchCode, '''+ convert(varchar,@InvoiceNo) +''','''+ convert(varchar,GETDATE()) +''', a.PartNo
, Seq = convert(integer, ROW_NUMBER() OVER (PARTITION BY a.ServiceNo order by a.ServiceNo)) ,
''00'', a.DemandQty, a.DemandQty, a.DiscPct, a.CostPrice, a.RetailPrice, a.TypeOfGoods
, '''+ @CompanyMD +''','''+ @BranchMD +''','''+ @WarehouseMD +''',p.RetailPriceInclTax,p.RetailPrice,p.CostPrice
,''x'','''+ @producttype +''',''300'',''8'',''0'','''+ convert(varchar,GETDATE()) +''','''+ @UserID +''','''+ convert(varchar,GETDATE()) +'''
,'''+ @UserID +''','''+ convert(varchar,GETDATE()) +'''
from svTrnSrvItem a 
join spmstitemprice p
on p.PartNo = a.PartNo
where p.CompanyCode = '''+ @CompanyCode +'''
and p.branchcode = '''+ @BranchCode +'''
and a.ServiceNo = '''+ convert(varchar,@ServiceNo) +''''

exec (@Query)

end

drop table #srv
drop table #tsk
drop table #mec
drop table #itm
drop table #cus

drop table #pre_dtl
--rollback tran
GO
ALTER Procedure [dbo].[Uspfn_SrvItemUpdateSSReturnNo] @CompanyCode varchar(15), @BranchCode varchar(15),
@ProductType varchar(2), @ReturnNo varchar(25), @PartNo varchar(25), @IsSaveProcess bit, @LastUpdateBy varchar(25)
as
SELECT
	a.CompanyCode
	, a.BranchCode
	, d.ProductType
	, d.ServiceNo
	, a.PartNo
	, (SELECT TOP 1 PartSeq FROM svTrnSrvItem WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode 
        AND ProductType = d.ProductType AND ServiceNo = d.ServiceNo AND PartNo = a.PartNo AND SupplySlipNo = 
        c.DocNo ORDER BY PartSeq DESC) PartSeq
	, a.ReturnNo SSReturnNo
	, b.ReturnDate SSReturnDate
	, a.QtyReturn
INTO
	#SrvItem
FROM 
	spTrnSRturSSDtl a WITH(NOLOCK, NOWAIT)
	LEFT JOIN spTrnSRturSSHdr b WITH(NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
		AND a.BranchCode = b.BranchCode
		AND a.ReturnNo = b.ReturnNo
	LEFT JOIN spTrnSORDHdr c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
		AND a.BranchCode = c.BranchCode
		AND a.DocNo = c.DocNo
	LEFT JOIN svTrnService d WITH(NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
		AND a.BranchCode = d.BranchCode
		AND c.UsageDocNo = d.JobOrderNo
WHERE
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND d.ProductType = @ProductType
	AND a.ReturnNo = @ReturnNo
	AND a.PartNo = @PartNo

UPDATE
	svTrnSrvItem
SET
	SSReturnNo = CASE @IsSaveProcess WHEN '1' THEN b.SSReturnNo ELSE '' END 
    , SSReturnDate = CASE @IsSaveProcess WHEN '1' THEN b.SSReturnDate ELSE '1900-01-01 00:00:00.000' END
    , ReturnQty = b.QtyReturn
	, LastupdateBy = @LastupdateBy
	, LastupdateDate = GETDATE()
FROM
	svTrnSrvItem a, #SrvItem b
WHERE
	a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
	AND a.ProductType = b.ProductType
	AND a.ServiceNo = b.ServiceNo
	AND a.PartNo = b.PartNo
	AND a.PartSeq = b.PartSeq

DROP TABLE #SrvItem
GO
--created by BENEDICT 11/Mar/2015 LAST UPDATED on 14/Apr/2015

ALTER PROCEDURE [dbo].[uspfn_pmSelectOrganizationTree]
@CompanyCode varchar(15),
@BranchCode varchar(15)

--DECLARE @CompanyCode varchar(15) = '6159401000'
--DECLARE @BranchCode varchar(15) = '6159401001'

AS BEGIN
SELECT * INTO #test1 FROM(
	SELECT a.BranchCode, a.EmployeeID, b.EmployeeName, e.PosLevel AS PositionID, b.Position, e.PosName AS PositionName,
	(rtrim(a.EmployeeID) + ' - ' + rtrim(b.EmployeeName)) Employee,
	isnull((
			select count(*) from PmKDP
			 where CompanyCode  = a.CompanyCode
			   and BranchCode   = a.BranchCode
			   and EmployeeID   = a.EmployeeID
			), 0) CountKDP, b.TeamLeader, ISNULL(f.OutletAbbreviation, a.BranchCode) AS BranchAbv, b.IsAssigned
	FROM hrEmployeeMutation a
	JOIN (
		SELECT c.EmployeeId, c.EmployeeName, c.Position, ISNULL(c.TeamLeader, '') AS TeamLeader, MAX(d.MutationDate) AS MutationDate, c.IsAssigned
		FROM hrEmployee c
		JOIN hrEmployeeMutation d
		ON c.EmployeeId = d.EmployeeId
		WHERE c.Department = 'SALES' AND c.PersonnelStatus = 1 AND c.IsDeleted = 0 AND d.IsDeleted = 0
		GROUP BY c.EmployeeId, c.EmployeeName, c.Position, c.TeamLeader, c.IsAssigned
	) b
	ON a.EmployeeId = b.EmployeeId AND a.MutationDate = b.MutationDate
	JOIN gnMstPosition e
	ON a.CompanyCode = e.CompanyCode AND e.DeptCode = 'SALES' AND b.Position = e.PosCode
	JOIN gnMstDealerOutletMapping f
	ON a.CompanyCode = f.DealerCode AND a.BranchCode = f.OutletCode
	WHERE a.CompanyCode = @CompanyCode AND a.BranchCode = CASE @BranchCode WHEN '' THEN a.BranchCode ELSE @BranchCode END
UNION
	SELECT a.BranchCode, a.EmployeeID, b.EmployeeName, e.PosLevel AS PositionID, b.Position, e.PosName AS PositionName,
	(rtrim(a.EmployeeID) + ' - ' + rtrim(b.EmployeeName)) Employee,
	isnull((
			select count(*) from PmKDP
			 where CompanyCode  = a.CompanyCode
			   and BranchCode   = a.BranchCode
			   and EmployeeID   = a.EmployeeID
			), 0) CountKDP, b.TeamLeader, ISNULL(f.OutletAbbreviation, a.BranchCode) AS BranchAbv, b.IsAssigned
	FROM hrEmployeeMutation a
	JOIN (
		SELECT c.EmployeeId, c.EmployeeName, c.Position, ISNULL(c.TeamLeader, '') AS TeamLeader, MAX(d.MutationDate) AS MutationDate, c.IsAssigned
		FROM hrEmployee c
		JOIN hrEmployeeMutation d
		ON c.EmployeeId = d.EmployeeId
		WHERE c.Department = 'SALES' AND c.PersonnelStatus = 1 AND c.IsDeleted = 0 AND d.IsDeleted = 0
		AND c.Position = 'GM'
		GROUP BY c.EmployeeId, c.EmployeeName, c.Position, c.TeamLeader, c.IsAssigned
	) b
	ON a.EmployeeId = b.EmployeeId AND a.MutationDate = b.MutationDate
	JOIN gnMstPosition e
	ON a.CompanyCode = e.CompanyCode AND e.DeptCode = 'SALES' AND b.Position = e.PosCode
	JOIN gnMstDealerOutletMapping f
	ON a.CompanyCode = f.DealerCode AND a.BranchCode = f.OutletCode
	WHERE a.CompanyCode = @CompanyCode
)#test1

;WITH N(id, lvl, BranchCode, EmployeeID, EmployeeName, PositionID, Position, PositionName, Employee, CountKDP, TeamLeader, BranchAbv, IsAssigned)
AS
(
	SELECT 
		CAST(row_number() OVER(ORDER BY a.EmployeeID) AS varchar) as id,
		0 AS lvl,
		a.BranchCode, a.EmployeeID, a.EmployeeName, a.PositionID, a.Position, a.PositionName, a.Employee, a.CountKDP, a.TeamLeader, a.BranchAbv, a.IsAssigned
	FROM #test1 a
	WHERE a.TeamLeader = ''
	AND a.IsAssigned = 1
	UNION ALL
	SELECT 
		CAST(N.id + '.' + CAST(row_number() OVER(ORDER BY b.EmployeeID) AS varchar) AS varchar) as id,
		N.lvl + 1 AS lvl,
		b.BranchCode, b.EmployeeID, b.EmployeeName, b.PositionID, b.Position, b.PositionName, b.Employee, b.CountKDP, b.TeamLeader, b.BranchAbv, b.IsAssigned
	FROM #test1 b JOIN N ON N.EmployeeID = b.TeamLeader
)
SELECT * FROM N ORDER BY lvl, PositionID DESC, BranchCode, id

DROP TABLE #test1
END
GO
ALTER procedure [dbo].[uspfn_SpOrderSparepartView] @CompanyCode varchar(10) ,@BranchCode varchar(10), @TypeOfGoods varchar(2), @ProductType varchar(2)
as  
SELECT    
ItemInfo.PartNo,  
Items.ABCClass,  
ItemLoc.OnHand - itemLoc.ReservedSP - itemLoc.ReservedSR - itemLoc.ReservedSL - itemLoc.AllocationSP - itemLoc.AllocationSL - itemLoc.AllocationSR AS AvailQty,  
Items.OnOrder,  
Items.ReservedSP,  
Items.ReservedSR,  
Items.ReservedSL,  
Items.MovingCode,  
ItemInfo.SupplierCode,  
ItemInfo.PartName,  
ItemInfo.DiscPct,
ItemPrice.RetailPrice,  
ItemPrice.RetailPriceInclTax,  
ItemPrice.PurchasePrice  
FROM SpMstItems Items  
INNER JOIN SpMstItemInfo ItemInfo ON Items.CompanyCode  = ItemInfo.CompanyCode                            
                         AND Items.PartNo = ItemInfo.PartNo  
INNER JOIN spMstItemPrice ItemPrice ON Items.CompanyCode = ItemPrice.CompanyCode  
                        AND Items.BranchCode = ItemPrice.BranchCode AND Items.PartNo = ItemPrice.PartNo  
INNER JOIN spMstItemLoc ItemLoc ON Items.CompanyCode = ItemLoc.CompanyCode AND Items.BranchCode = ItemLoc.BranchCode  
                        AND Items.PartNo = ItemLoc.PartNo  
WHERE Items.CompanyCode = @CompanyCode  
  AND Items.BranchCode  = @BranchCode 
  AND Items.TypeOfGoods = @TypeOfGoods
  AND Items.ProductType = @ProductType  
  AND Items.Status > 0  
  AND ItemLoc.WarehouseCode = '00'
GO
ALTER procedure [dbo].[usprpt_SvRpReport006]
 @CompanyCode varchar(15),  
 @BranchCode  varchar(15),  
 @ProductType varchar(15),  
 @PeriodYear  int,  
 @Param       int  
AS    
  
-- Laporan Perbandingan Penjualan Service Tahunan (SvRpReport004)
-- Per Kategori, Basic Model, Jenis Pekerjaan
-- use [BAT]
-- usprpt_SvRpReport006 '6159401', '615940100', '4W', '2010', 3

--declare @CompanyCode varchar(15),  
--		@BranchCode  varchar(15),  
--		@ProductType varchar(15),  
--		@PeriodYear  int,  
--		@Param       int  
 
--set	@CompanyCode = '6006406'
--set	@BranchCode  = '6006406'
--set	@ProductType = '4W'
--set	@PeriodYear   = 2013
--set	@Param     = 3

BEGIN    
  
declare @PreviousYear  int
set @PreviousYear = @PeriodYear - 1

-- Per Kategori, Basic Model, Jenis Pekerjaan

if @Param = 1
   begin
      -- Laporan Penjualan Service Per Kategori
      select * into #t1 from (
             select 'TOTAL' Descr,
                    (year(InvoiceDate)-@PreviousYear)*12+month(InvoiceDate)		Periode, 
                    sum(isnull(LaborGrossAmt,0))								LaborGrossAmt,
                    sum(isnull(PartsGrossAmt,0))								PartsGrossAmt,
                    sum(isnull(MaterialGrossAmt,0))								MaterialGrossAmt,
                    sum(isnull(LaborDiscAmt,0))									LaborDiscAmt,
                    sum(isnull(PartsDiscAmt,0))									PartsDiscAmt,
                    sum(isnull(MaterialDiscAmt,0))								MaterialDiscAmt,
                    sum(isnull(TotalDppAmt,0))									TotalDppAmt,
                    sum(isnull(isnull(TotalPpnAmt,0)+isnull(TotalPphAmt,0), 0))	TotalPpnAmt,
                    sum(isnull(TotalSrvAmt,0))									TotalSrvAmt
         from svTrnInvoice
        where 1 = 1
          and CompanyCode        = @CompanyCode
          and BranchCode         = @BranchCode
          and ProductType        = @ProductType
          and (year(InvoiceDate) = @PeriodYear 
           or  year(InvoiceDate) = @PeriodYear - 1)
        group by (year(InvoiceDate)-@PreviousYear)*12+month(InvoiceDate)) #t1

	create table #t2(
		Descr varchar(100) null,
		Prev01 decimal,Prev02 decimal,Prev03 decimal,Prev04 decimal,
		Prev05 decimal,Prev06 decimal,Prev07 decimal,Prev08 decimal,
		Prev09 decimal,Prev10 decimal,Prev11 decimal,Prev12 decimal,
		Curr01 decimal,Curr02 decimal,Curr03 decimal,Curr04 decimal,
		Curr05 decimal,Curr06 decimal,Curr07 decimal,Curr08 decimal,
		Curr09 decimal,Curr10 decimal,Curr11 decimal,Curr12 decimal,
	)
		
	insert into #t2
		 select * from (select convert(varchar(100),'JASA') Descr, LaborGrossAmt, Periode from #t1) as header
				pivot (
					sum(LaborGrossAmt)
					for Periode
						in ( [1], [2], [3], [4], [5], [6], [7], [8], [9],[10],[11],[12],
							 [13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24])
				) as pt
      
	insert into #t2
		 select * from (select convert(varchar(100),'SPARE PART') Descr, PartsGrossAmt, Periode from #t1) as header
				pivot (
					sum(PartsGrossAmt)
					for Periode
						in ( [1], [2], [3], [4], [5], [6], [7], [8], [9],[10],[11],[12],
							 [13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24])
				) as pt

	insert into #t2
		 select * from (select convert(varchar(100),'MATERIAL') Descr, MaterialGrossAmt, Periode from #t1) as header
				pivot (
					sum(MaterialGrossAmt)
					for Periode
						in ( [1], [2], [3], [4], [5], [6], [7], [8], [9],[10],[11],[12],
							 [13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24])
				) as pt

	insert into #t2
		 select * from (select convert(varchar(100),'POTONGAN JASA') Descr, LaborDiscAmt, Periode from #t1) as header
				pivot (
					sum(LaborDiscAmt)
					for Periode
						in ( [1], [2], [3], [4], [5], [6], [7], [8], [9],[10],[11],[12],
							 [13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24])
				) as pt

	insert into #t2
		 select * from (select convert(varchar(100),'POTONGAN SPARE PART') Descr, PartsDiscAmt, Periode from #t1) as header
				pivot (
					sum(PartsDiscAmt)
					for Periode
						in ( [1], [2], [3], [4], [5], [6], [7], [8], [9],[10],[11],[12],
							 [13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24])
				) as pt

	insert into #t2
		 select * from (select convert(varchar(100),'POTONGAN MATERIAL') Descr, MaterialDiscAmt, Periode from #t1) as header
				pivot (
					sum(MaterialDiscAmt)
					for Periode
						in ( [1], [2], [3], [4], [5], [6], [7], [8], [9],[10],[11],[12],
							 [13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24])
				) as pt

	insert into #t2
		 select * from (select convert(varchar(100),'D P P') Descr, TotalDppAmt, Periode from #t1) as header
				pivot (
					sum(TotalDppAmt)
					for Periode
						in ( [1], [2], [3], [4], [5], [6], [7], [8], [9],[10],[11],[12],
							 [13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24])
				) as pt

	insert into #t2
		 select * from (select convert(varchar(100),'PPN KELUARAN') Descr, TotalPpnAmt, Periode from #t1) as header
				pivot (
					sum(TotalPpnAmt)
					for Periode
						in ( [1], [2], [3], [4], [5], [6], [7], [8], [9],[10],[11],[12],
							 [13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24])
				) as pt

	insert into #t2
		 select * from (select convert(varchar(100),'TOTAL PENJUALAN') Descr, TotalSrvAmt, Periode from #t1) as header
				pivot (
					sum(TotalSrvAmt)
					for Periode
						in ( [1], [2], [3], [4], [5], [6], [7], [8], [9],[10],[11],[12],
							 [13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24])
				) as pt

	select Descr
	  ,isnull(Curr01,0) Curr01,isnull(Curr02,0) Curr02,isnull(Curr03,0) Curr03
	  ,isnull(Curr04,0) Curr04,isnull(Curr05,0) Curr05,isnull(Curr06,0) Curr06
	  ,isnull(Curr07,0) Curr07,isnull(Curr08,0) Curr08,isnull(Curr09,0) Curr09
	  ,isnull(Curr10,0) Curr10,isnull(Curr11,0) Curr11,isnull(Curr12,0) Curr12
	  ,isnull(Prev01,0) Prev01,isnull(Prev02,0) Prev02,isnull(Prev03,0) Prev03
	  ,isnull(Prev04,0) Prev04,isnull(Prev05,0) Prev05,isnull(Prev06,0) Prev06
	  ,isnull(Prev07,0) Prev07,isnull(Prev08,0) Prev08,isnull(Prev09,0) Prev09
	  ,isnull(Prev10,0) Prev10,isnull(Prev11,0) Prev11,isnull(Prev12,0) Prev12
	  ,isnull(isnull(Curr01,0)-isnull(Prev01, 0),0) as Diff01
	  ,isnull(isnull(Curr02,0)-isnull(Prev02, 0),0) as Diff02
	  ,isnull(isnull(Curr03,0)-isnull(Prev03, 0),0) as Diff03
	  ,isnull(isnull(Curr04,0)-isnull(Prev04, 0),0) as Diff04
	  ,isnull(isnull(Curr05,0)-isnull(Prev05, 0),0) as Diff05
	  ,isnull(isnull(Curr06,0)-isnull(Prev06, 0),0) as Diff06
	  ,isnull(isnull(Curr07,0)-isnull(Prev07, 0),0) as Diff07
	  ,isnull(isnull(Curr08,0)-isnull(Prev08, 0),0) as Diff08
	  ,isnull(isnull(Curr09,0)-isnull(Prev09, 0),0) as Diff09
	  ,isnull(isnull(Curr10,0)-isnull(Prev10, 0),0) as Diff10
	  ,isnull(isnull(Curr11,0)-isnull(Prev11, 0),0) as Diff11
	  ,isnull(isnull(Curr12,0)-isnull(Prev12, 0),0) as Diff12
	  ,isnull(Curr01,0) + isnull(Curr02,0) + isnull(Curr03,0) +
	   isnull(Curr04,0) + isnull(Curr05,0) + isnull(Curr06,0) +
	   isnull(Curr07,0) + isnull(Curr08,0) + isnull(Curr09,0) +
	   isnull(Curr10,0) + isnull(Curr11,0) + isnull(Curr12,0) Curr13
	  ,isnull(Prev01,0) + isnull(Prev02,0) + isnull(Prev03,0) +
	   isnull(Prev04,0) + isnull(Prev05,0) + isnull(Prev06,0) +
	   isnull(Prev07,0) + isnull(Prev08,0) + isnull(Prev09,0) +
	   isnull(Prev10,0) + isnull(Prev11,0) + isnull(Prev12,0) Prev13
	  ,(isnull(Curr01,0) + isnull(Curr02,0) + isnull(Curr03,0) +
	    isnull(Curr04,0) + isnull(Curr05,0) + isnull(Curr06,0) +
	    isnull(Curr07,0) + isnull(Curr08,0) + isnull(Curr09,0) +
	    isnull(Curr10,0) + isnull(Curr11,0) + isnull(Curr12,0))-
	   (isnull(Prev01,0) + isnull(Prev02,0) + isnull(Prev03,0) +
	    isnull(Prev04,0) + isnull(Prev05,0) + isnull(Prev06,0) +
	    isnull(Prev07,0) + isnull(Prev08,0) + isnull(Prev09,0) +
	    isnull(Prev10,0) + isnull(Prev11,0) + isnull(Prev12,0)) Diff13
	  ,@PeriodYear  PeriodYear, @param Param
	from #t2

    drop table #t1
    drop table #t2

   end
else

if @Param = 2
   begin
      -- Laporan Penjualan Service Tahunan Per Basic Model
      select * into #t3 from (
             select BasicModel,
                    (year(InvoiceDate)-@PreviousYear)*12+month(InvoiceDate) Periode, 
                    sum(isnull(TotalDppAmt,0)) TotalDppAmt
         from svTrnInvoice
        where 1 = 1
          and CompanyCode        = @CompanyCode
          and BranchCode         = @BranchCode
          and ProductType        = @ProductType
          and (year(InvoiceDate) = @PeriodYear 
           or  year(InvoiceDate) = @PeriodYear - 1)
        group by BasicModel,(year(InvoiceDate)-@PreviousYear), month(InvoiceDate)) #t3
      select * into #t4 from(
             select BasicModel Descr,
                    isnull( [1],0) as Prev01, isnull( [2],0) as Prev02, isnull( [3],0) as Prev03,  
                    isnull( [4],0) as Prev04, isnull( [5],0) as Prev05, isnull( [6],0) as Prev06,  
                    isnull( [7],0) as Prev07, isnull( [8],0) as Prev08, isnull( [9],0) as Prev09, 
                    isnull([10],0) as Prev10, isnull([11],0) as Prev11, isnull([12],0) as Prev12,
                    isnull([13],0) as Curr01, isnull([14],0) as Curr02, isnull([15],0) as Curr03,  
                    isnull([16],0) as Curr04, isnull([17],0) as Curr05, isnull([18],0) as Curr06,  
                    isnull([19],0) as Curr07, isnull([20],0) as Curr08, isnull([21],0) as Curr09, 
                    isnull([22],0) as Curr10, isnull([23],0) as Curr11, isnull([24],0) as Curr12
               from #t3
                    pivot
                        (sum(TotalDppAmt)
                         for Periode
                             in ( [1], [2], [3], [4], [5], [6],
                                  [7], [8], [9],[10],[11],[12],
                                 [13],[14],[15],[16],[17],[18],
                                 [19],[20],[21],[22],[23],[24])
                        ) as pt) #t4
      select Descr, Curr01,Curr02,Curr03,Curr04,Curr05,Curr06,
                    Curr07,Curr08,Curr09,Curr10,Curr11,Curr12,
                    Prev01,Prev02,Prev03,Prev04,Prev05,Prev06,
                    Prev07,Prev08,Prev09,Prev10,Prev11,Prev12,
                   (Curr01-Prev01) as Diff01, (Curr02-Prev02) as Diff02,
                   (Curr03-Prev03) as Diff03, (Curr04-Prev04) as Diff04,
                   (Curr05-Prev05) as Diff05, (Curr06-Prev06) as Diff06,
                   (Curr07-Prev07) as Diff07, (Curr08-Prev08) as Diff08,
                   (Curr09-Prev09) as Diff09, (Curr10-Prev10) as Diff10,
                   (Curr11-Prev11) as Diff11, (Curr12-Prev12) as Diff12, 
                   (Curr01+Curr02+Curr03+Curr04+Curr05+Curr06+Curr07+Curr08+Curr09+Curr10+Curr11+Curr12) as Curr13,
                   (Prev01+Prev02+Prev03+Prev04+Prev05+Prev06+Prev07+Prev08+Prev09+Prev10+Prev11+Prev12) as Prev13,
                   (Curr01+Curr02+Curr03+Curr04+Curr05+Curr06+Curr07+Curr08+Curr09+Curr10+Curr11+Curr12) - 
                   (Prev01+Prev02+Prev03+Prev04+Prev05+Prev06+Prev07+Prev08+Prev09+Prev10+Prev11+Prev12) as Diff13,
                   @PeriodYear  PeriodYear, @param Param
        from #t4
       order by Descr
       drop table #t3
       drop table #t4
   end
else
   begin	  	  	
      -- Laporan Penjualan Service Per Jenis Pekerjaan
      select * into #t5 from (
             select JobType,
                    (year(InvoiceDate)-@PreviousYear)*12+month(InvoiceDate) Periode, 
                    sum(isnull(TotalDppAmt,0)) TotalDppAmt
         from svTrnInvoice
        where 1 = 1
          and CompanyCode        = @CompanyCode
          and BranchCode         = @BranchCode
          and ProductType        = @ProductType
          and (year(InvoiceDate) = @PeriodYear 
           or  year(InvoiceDate) = @PeriodYear - 1)
group by JobType,(year(InvoiceDate)-@PreviousYear), month(InvoiceDate)
	) #t5 		
	order by JobType

	update #t5 set JobType = 'PB5000' where JobType in ('PAKET FS 2', 'PAKET 5000 KM')
	update #t5 set JobType = 'PB10000' where JobType in ('PAKET 10.000 KM', 'PAKET FS_3')
	update #t5 set JobType = 'PB20000' where JobType in ('PAKET 20.000 KM', 'PAKET FS_4')	
	update #t5 set JobType = (select top 1 'PB'+convert(varchar,WarrantyOdometer,100) from #t5 a
								left join svMstjob on svMstjob.JobType = a.JobType
								where svMstjob.CompanyCode = @CompanyCode
								and svMstjob.ProductType = @ProductType
								and a.Jobtype = 'PAKET A') where JobType = 'PAKET A'
	update #t5 set JobType = (select top 1 'PB'+convert(varchar,WarrantyOdometer,100) from #t5 a
							left join svMstjob on svMstjob.JobType = a.JobType
							where svMstjob.CompanyCode = @CompanyCode
							and svMstjob.ProductType = @ProductType
							and a.Jobtype = 'PAKET B') where JobType = 'PAKET B'
	update #t5 set JobType = (select top 1 'PB'+convert(varchar,WarrantyOdometer,100) from #t5 a
								left join svMstjob on svMstjob.JobType = a.JobType
								where svMstjob.CompanyCode = @CompanyCode
								and svMstjob.ProductType = @ProductType
								and a.Jobtype = 'PAKET C') where JobType = 'PAKET C'
	update #t5 set JobType = (select top 1 'PB'+convert(varchar,WarrantyOdometer,100) from #t5 a
								left join svMstjob on svMstjob.JobType = a.JobType
								where svMstjob.CompanyCode = @CompanyCode
								and svMstjob.ProductType = @ProductType
								and a.Jobtype = 'PAKET D') where JobType = 'PAKET D'
	
      select * into #t6 from(
             select JobType Descr, 
                    isnull( [1],0) as Prev01, isnull( [2],0) as Prev02, isnull( [3],0) as Prev03,  
                    isnull( [4],0) as Prev04, isnull( [5],0) as Prev05, isnull( [6],0) as Prev06,  
                    isnull( [7],0) as Prev07, isnull( [8],0) as Prev08, isnull( [9],0) as Prev09, 
                    isnull([10],0) as Prev10, isnull([11],0) as Prev11, isnull([12],0) as Prev12,
                    isnull([13],0) as Curr01, isnull([14],0) as Curr02, isnull([15],0) as Curr03,  
                    isnull([16],0) as Curr04, isnull([17],0) as Curr05, isnull([18],0) as Curr06,  
                    isnull([19],0) as Curr07, isnull([20],0) as Curr08, isnull([21],0) as Curr09, 
                    isnull([22],0) as Curr10, isnull([23],0) as Curr11, isnull([24],0) as Curr12
               from #t5
                    pivot
                        (sum(TotalDppAmt)
                         for Periode
                             in ( [1], [2], [3], [4], [5], [6],
                                  [7], [8], [9],[10],[11],[12],
                                 [13],[14],[15],[16],[17],[18],
                                 [19],[20],[21],[22],[23],[24])
                        ) as pt
				) #t6
      select Descr, Curr01,Curr02,Curr03,Curr04,Curr05,Curr06,
                    Curr07,Curr08,Curr09,Curr10,Curr11,Curr12,
                    Prev01,Prev02,Prev03,Prev04,Prev05,Prev06,
                    Prev07,Prev08,Prev09,Prev10,Prev11,Prev12,
                   (Curr01-Prev01) as Diff01, (Curr02-Prev02) as Diff02,
                   (Curr03-Prev03) as Diff03, (Curr04-Prev04) as Diff04,
                   (Curr05-Prev05) as Diff05, (Curr06-Prev06) as Diff06,
                   (Curr07-Prev07) as Diff07, (Curr08-Prev08) as Diff08,
                   (Curr09-Prev09) as Diff09, (Curr10-Prev10) as Diff10,
                   (Curr11-Prev11) as Diff11, (Curr12-Prev12) as Diff12,
                   (Curr01+Curr02+Curr03+Curr04+Curr05+Curr06+Curr07+Curr08+Curr09+Curr10+Curr11+Curr12) as Curr13,
                   (Prev01+Prev02+Prev03+Prev04+Prev05+Prev06+Prev07+Prev08+Prev09+Prev10+Prev11+Prev12) as Prev13,
                   (Curr01+Curr02+Curr03+Curr04+Curr05+Curr06+Curr07+Curr08+Curr09+Curr10+Curr11+Curr12) - 
 (Prev01+Prev02+Prev03+Prev04+Prev05+Prev06+Prev07+Prev08+Prev09+Prev10+Prev11+Prev12) as Diff13,
                   @PeriodYear  PeriodYear, @param Param
        from #t6
       order by Descr
       drop table #t5
       drop table #t6
   end

END
GO
ALTER procedure [dbo].[uspfn_InitialScript]

as

;with x as (
select a.UserId, a.Password, a.FullName, a.IsActive, a.RequiredChange
     , LastChanged = (isnull((select top 1 ChangeDate from SysUserPwdHist where UserId = a.UserId order by ChangeDate desc), '1900-01-01'))
	 , DelayDays = datediff(DAY, (isnull((select top 1 ChangeDate from SysUserPwdHist where UserId = a.UserId order by ChangeDate desc), '1900-01-01')), getdate())
  from SysUser a
 where 1 = 1
   and UserId not in ('sa', 'ga')
   and Isnull(RequiredChange, 0) = 0
   and (datediff(DAY, (isnull((select top 1 ChangeDate from SysUserPwdHist where UserId = a.UserId order by ChangeDate desc), '1900-01-01')), getdate())) > 90
)
--select * from x
update x set RequiredChange = 1
GO
ALTER procedure [dbo].[uspfn_GetLookupLMP4Srv]   
@CompanyCode varchar(15), @BranchCode varchar(15),  
@SalesType varchar(5), @TypeOfGoods varchar(15), @ProductType varchar(15)  
as  
SELECT * FROM   
(  
SELECT  
 PickingSlipNo,   
 PickingSlipDate,  
 BPSFNo,   
 BPSFDate,  
 (  
   SELECT TOP 1 PRODUCTTYPE FROM spTrnSBPSFDtl  
  WHERE spTrnSBPSFHdr.CompanyCode = spTrnSBPSFDtl.CompanyCode  
  AND spTrnSBPSFHdr.BranchCode = spTrnSBPSFDtl.BranchCode  
  AND spTrnSBPSFHdr.BPSFNo = spTrnSBPSFDtl.BPSFNo  
 ) AS ProductType,
 spTrnSBPSFHdr.CustomerCode,
 spTrnSBPSFHdr.CustomerCodeShip,
 spTrnSBPSFHdr.CustomerCodeBill as CustomerCodeTagih,
 b.CustomerName,
 b.Address1,
 b.Address2,
 b.Address3,
 b.Address4,
 b.CustomerName CustomerNameTagih,
 b.Address1 Address1Tagih,
 b.Address2 Address2Tagih,
 b.Address3 Address3Tagih,
 b.Address4 Address4Tagih,
 c.LookUpValueName TransType  
FROM spTrnSBPSFHdr  
join gnMstCustomer b
ON spTrnSBPSFHdr.CompanyCode = b.CompanyCode
AND spTrnSBPSFHdr.CustomerCode = b.CustomerCode
join gnMstLookupDtl c on
spTrnSBPSFHdr.CompanyCode = c.CompanyCode
and spTrnSBPSFHdr.TransType= c.LookupValue 
AND c.CodeID = 'TTSR'
WHERE spTrnSBPSFHdr.CompanyCode = @CompanyCode  
AND spTrnSBPSFHdr.BranchCode    = @BranchCode  
AND spTrnSBPSFHdr.SalesType     = @SalesType  
AND spTrnSBPSFHdr.TypeOfGoods   = @TypeOfGoods  
AND (spTrnSBPSFHdr.Status = '1' OR spTrnSBPSFHdr.Status = '0')  
AND (spTrnSBPSFHdr.PickingSlipNo NOT IN (SELECT PickingSlipNo FROM spTrnSLmpHdr where CompanyCode = @CompanyCode AND BranchCode = @BranchCode))  
) A  
WHERE A.ProductType = @ProductType
GO
ALTER procedure [dbo].[uspfn_GetLookupLMP] @CompanyCode varchar(15), @BranchCode varchar(15), @SalesType varchar(15), @CodeID varchar(6),  
@TypeOfGoods varchar(15), @ProductType varchar(15)  
as  
SELECT * FROM   
(  
SELECT  
 PickingSlipNo, PickingSlipDate,  
 BPSFNo, BPSFDate,  
 (  
   SELECT TOP 1 PRODUCTTYPE FROM spTrnSBPSFDtl  
  WHERE spTrnSBPSFHdr.CompanyCode = spTrnSBPSFDtl.CompanyCode  
  AND spTrnSBPSFHdr.BranchCode = spTrnSBPSFDtl.BranchCode  
  AND spTrnSBPSFHdr.BPSFNo = spTrnSBPSFDtl.BPSFNo  
 ) AS ProductType,
 spTrnSBPSFHdr.CustomerCode,
 spTrnSBPSFHdr.CustomerCodeShip,
 spTrnSBPSFHdr.CustomerCodeBill as CustomerCodeTagih,
 b.CustomerName,
 b.Address1,
 b.Address2,
 b.Address3,
 b.Address4,
 b.CustomerName CustomerNameTagih,
 b.Address1 Address1Tagih,
 b.Address2 Address2Tagih,
 b.Address3 Address3Tagih,
 b.Address4 Address4Tagih,
 c.LookUpValueName TransType  
FROM spTrnSBPSFHdr  
left join gnMstCustomer b
ON spTrnSBPSFHdr.CompanyCode = b.CompanyCode
AND spTrnSBPSFHdr.CustomerCode = b.CustomerCode 
left join gnMstLookupDtl c on
spTrnSBPSFHdr.CompanyCode = c.CompanyCode
and spTrnSBPSFHdr.TransType= c.LookupValue 
AND c.CodeID = @CodeID
WHERE spTrnSBPSFHdr.CompanyCode = @CompanyCode  
AND spTrnSBPSFHdr.BranchCode    = @BranchCode  
AND spTrnSBPSFHdr.SalesType     = @SalesType  
AND spTrnSBPSFHdr.TypeOfGoods   = @TypeOfGoods  
AND (spTrnSBPSFHdr.Status = '1' OR spTrnSBPSFHdr.Status = '0')  
AND (spTrnSBPSFHdr.PickingSlipNo NOT IN (SELECT PickingSlipNo FROM spTrnSLmpHdr where CompanyCode = @CompanyCode AND BranchCode = @BranchCode))  
) A  
WHERE A.ProductType = @ProductType  
ORDER BY A.PickingSlipNo DESC
GO
ALTER procedure [dbo].[uspfn_SvTrnInvInquiryBatch]
	@CompanyCode  varchar(20),
	@BranchCode   varchar(20),
	@GroupJobType varchar(20)
as   

--declare	@CompanyCode  varchar(20)
--declare	@BranchCode   varchar(20)
--declare	@GroupJobType varchar(20)

--set @CompanyCode  = '6159401000' 
--set @BranchCode   = '6159401001'
--set @GroupJobType = 'FSC'

if @GroupJobType = 'ALL'
begin
	select convert(bit, 0) as IsSelect, a.JobOrderNo, a.JobOrderDate, a.JobType
		 , a.LaborDppAmt as LaborAmt
		 , a.PartsDppAmt as PartAmt
		 , a.MaterialDppAmt as MaterialAmt
		 , a.TotalDppAmount as TotalDppAmt
		 , a.TotalPPnAmount as TotalPPnAmt
		 , a.TotalSrvAmount as TotalAmt
		 , convert(varchar, '') as Remarks
	  from SvTrnService a
	 where a.CompanyCode = @CompanyCode
	   and a.BranchCode = @BranchCode
	   and a.ServiceStatus = '5'
end
else
if @GroupJobType = 'FSC'
begin
	select convert(bit, 0) as IsSelect, a.JobOrderNo, a.JobOrderDate, a.JobType
		 , a.LaborDppAmt as LaborAmt
		 , a.PartsDppAmt as PartAmt
		 , a.MaterialDppAmt as MaterialAmt
		 , a.TotalDppAmount as TotalDppAmt
		 , a.TotalPPnAmount as TotalPPnAmt
		 , a.TotalSrvAmount as TotalAmt
		 , convert(varchar, '') as Remarks
	  from SvTrnService a
	 where a.CompanyCode = @CompanyCode
	   and a.BranchCode = @BranchCode
	   and a.ServiceStatus = '5'
	   and a.IsLocked = '1'
end
else
begin
	select convert(bit, 0) as IsSelect, a.JobOrderNo, a.JobOrderDate, a.JobType
		 , a.LaborDppAmt as LaborAmt
		 , a.PartsDppAmt as PartAmt
		 , a.MaterialDppAmt as MaterialAmt
		 , a.TotalDppAmount as TotalDppAmt
		 , a.TotalPPnAmount as TotalPPnAmt
		 , a.TotalSrvAmount as TotalAmt
		 , convert(varchar, '') as Remarks
	  from SvTrnService a
	  left join SvMstJob b on b.JobType = a.JobType
	   and b.CompanyCode = a.CompanyCode
	   and b.ProductType = a.ProductType
	   and b.BasicModel = a.BasicModel
	 where a.CompanyCode = @CompanyCode
	   and a.BranchCode = @BranchCode
	   and a.ServiceStatus = '5'
	   and b.GroupJobType = @GroupJobType
end



select a.JobOrderNo, a.InvoiceNo, a.InvoiceDate, a.JobType
	 , a.LaborDppAmt as LaborAmt
	 , a.PartsDppAmt as PartAmt
	 , a.MaterialDppAmt as MaterialAmt
	 , a.TotalDppAmt
	 , a.TotalPPnAmt
	 , a.TotalSrvAmt as TotalAmt
	 , a.Remarks
  from SvTrnInvoice a, GnMstCoProfileService b, ArInterface c
 where 1 = 1
   and c.CompanyCode = a.CompanyCode
   and c.BranchCode = a.BranchCode
   and c.DocNo = a.InvoiceNo
   and c.StatusFlag < 3
   and b.CompanyCode = a.CompanyCode
   and b.BranchCode = a.BranchCode
   and a.CompanyCode = @CompanyCode
   and a.BranchCode = @BranchCode
GO
ALTER procedure [dbo].[uspfn_GnGetDataWSMRRS]
as

declare @CompanyCode  varchar(20)
declare @BranchCode   varchar(20)
declare @DealerCode   varchar(10)
declare @ProductType  varchar(10)
declare @TotalItem    int
declare @LastDate     datetime

declare @T_WSMRR     table (Line varchar(max), SeqNo int)
declare @T_WSMRR_DTL table 
(
    PoliceRegNo varchar(50),
    VinNo       varchar(50),
    ServiceType char(1),
    Initial     char(1), 
    ServiceDate datetime,
    Odometer    numeric(10,0),
    Working     varchar(max),
    CustStatify char(1),
    ReasStatify char(1),
    RemaStatify char(3),
    ReasonDesc  varchar(max),
    Solution    varchar(max),
    ContactCust char(1),
    ReasContact char(2),
    IsBooking   char(1),
    BookingType char(1),
    BookingDate datetime,
    CustComing  char(1),
    CreatedDate datetime
)

set @CompanyCode = (select top 1 CompanyCode from gnMstOrganizationHdr);
set @BranchCode  = (select top 1 BranchCode from gnMstOrganizationDtl where IsBranch = 0);
set @DealerCode  = isnull((select LockingBy from gnMstCoProfileService where CompanyCode = @CompanyCode and BranchCode = @BranchCode), @CompanyCode);
set @ProductType = (select top 1 ProductType from gnMstCoProfile where CompanyCode = @CompanyCode and BranchCode = @BranchCode);

set nocount on


--select * from 

insert into @T_WSMRR_DTL
select top 2500 a.PoliceRegNo
	 , replace(ChassisCode, '	','') + convert(varchar, ChassisNo) VinNo  
     , ServiceType = isnull((
		case @ProductType 
			when '4W' then (case when (a.JobType like 'PB%' or a.JobType like 'FSC%') then 'R' else 'N' end)
			when '2W' then (case when (a.JobType like 'FSC%') then 'K' when (a.JobType = 'CLAIM') then 'C' else 'N' end)
			else ''
		end), '')
     , Initials = isnull((
		case @ProductType 
			when '4W' then ' '
			when '2W' then (case when (a.JobType like 'FSC%') then substring(a.JobType, 5, 1) else 'N' end)
			else ''
		end), '')
     , a.JobOrderDate as ServiceDate
     , a.Odometer
     , a.JobType Working
     , '' CustomerSatisfy
     , '' ReasonNotSatisfy
     , '' RemarksNotSatisfy
	 , '' ReasonDesc
	 , '' Solution
	 , '' ContactCustomer
	 , '' ReasonNotContactCustomer
	 , case rtrim(isnull(a.BookingNo, '')) when '' then 'N' else 'Y' end as IsCustomerBooking
	 , 'D' BookingType
	 , convert(varchar, a.BookingDate, 112) 
	 , 'Y' as CustomerComing
	 , a.JobOrderDate CreatedDate
  from svTrnService a
 where 1 = 1
   and isnull(a.ChassisCode, '') <> ''
   and isnull(a.JobOrderDate, convert(datetime, '19000101'))
	> isnull((
    select top 1 LastSendDate
      from gnMstSendSchedule
     where DataType = 'WSMRRS'
     order by LastSendDate desc
    ), convert(datetime, '18990101'))   
 order by a.CreatedDate
 
set @TotalItem = (select count(*) from @T_WSMRR_DTL) 
set @LastDate  = (select top 1 CreatedDate from @T_WSMRR_DTL order by CreatedDate desc)
                   
insert into @T_WSMRR 
select 'HWSMRS' 
+ left(@DealerCode + replicate(' ', 10), 10)
+ left('1000000' + replicate(' ', 10), 10)
+ left((select top 1 isnull(CompanyName, '')
          from gnMstOrganizationHdr
         where CompanyCode = @CompanyCode)
	   + replicate(' ', 50)
	   , 50)
+ right(replicate('0', 6) + convert(varchar, @TotalItem), 6)
+ (select replace(convert(varchar, @LastDate,111),'/',''))
+ (select top 1 case ProductType
		when '2W' then 'A' 
		when '4W' then 'B' 
		else 'C'  
		end 
	  from gnMstCoProfile
	 where CompanyCode = @CompanyCode
	   and BranchCode = @BranchCode)
+ replicate(' ', 326)
, 0	   

insert into @T_WSMRR 
select '1'
     + left(PoliceRegNo + replicate(' ', 10), 10)
     + left(VinNo + replicate(' ', 20), 20)
     + ServiceType + Initial
     + replace((select replace(convert(varchar, ServiceDate,111),'/','')), '19000101', '        ')
     + right(replicate('0', 7) + convert(varchar, Odometer), 7)
     + left(Working + replicate(' ', 100), 100)
 + CustStatify + ReasStatify + RemaStatify
     + left(ReasonDesc + replicate(' ', 100), 100)
     + left(replace(Solution, '
', ', ') + replicate(' ', 150), 150)
     + ContactCust + ReasContact + IsBooking + BookingType
     + replace((select replace(convert(varchar, BookingDate,111),'/','')), '19000101', '        ')
     + CustComing
     , 1
  from @T_WSMRR_DTL

select @LastDate as LastDate 
select Line from @T_WSMRR order by SeqNo
GO

if object_id('usprpt_ArRpTrn010') is not null
	drop procedure usprpt_ArRpTrn010
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<BUKTI GIRO TERIMA>
-- =============================================

--usprpt_ArRpTrn010 '6043401','604340100','GTR/09/000001','GTR/09/000001','0','1'
CREATE  procedure [dbo].[usprpt_ArRpTrn010] 
(
	@CompanyCode VARCHAR(15),
	@BranchCode	VARCHAR(15),
	@DocNo VARCHAR(20),
	@DocNoEnd VARCHAR(20),
	@Status VARCHAR(1),
	@Source CHAR(1)
)
AS
IF @Source = '1'
BEGIN
	SELECT a.CompanyCode,a.BranchCode,a.DocNo,a.DocDate,
	d.CustomerName + ' (' + a.CustomerCode + ')' as pCustomer,   b.GiroCekNo,
	b.BankCode,g.BankName,b.GiroCekDueDate,b.Amount,
	a.TotalPayment,f.LookUpValueName AS City,
	UPPER(h.SignName) AS SignName1, UPPER(h.TitleSign) AS TitleSign1,
	UPPER(i.SignName) AS SignName2, UPPER(i.TitleSign) AS TitleSign2,
	c.InvoiceNo,c.AccountNo,c.DueDate,c.PaymentAmt
	FROM arTrnGiroCekTerimaHdr a
		INNER JOIN arTrnGiroCekTerimaDtl b 
		ON a.DocNo = b.DocNo
		INNER JOIN arTrnGiroCekTerimaInvoice c
		ON a.DocNo = c.DocNo
		AND b.BankCode = c.BankCode
		INNER JOIN gnMstCustomer d 
		ON a.CompanyCode = d.CompanyCode 
		AND a.CustomerCode = d.CustomerCode
		INNER JOIN gnMstCoProfile e
		ON e.CompanyCode = a.CompanyCode
		AND e.BranchCode = a.BranchCode
		INNER JOIN gnMstLookUpDtl f
		ON f.LookUpValue = e.CityCode
		AND f.CompanyCode = e.CompanyCode
		LEFT JOIN gnMstCustomerBank g
		ON g.CompanyCode = a.CompanyCode
		AND g.CustomerCode = a.CustomerCode
		AND g.BankCode = b.BankCode
		LEFT JOIN gnMstSIgnature h
		ON h.CompanyCode = a.CompanyCode
		AND h.BranchCode = a.BranchCode
		AND h.ProfitCenterCode = '000'
		AND h.DocumentType = Convert(varchar(3),a.DocNo)
		AND h.SeqNo = 1
		LEFT JOIN gnMstSIgnature i
		ON i.CompanyCode = a.CompanyCode
		AND i.BranchCode = a.BranchCode
		AND i.ProfitCenterCode = '000'
		AND i.DocumentType = Convert(varchar(3),a.DocNo)
		AND i.SeqNo = 2
	WHERE a.Status like '%' + @Status + '%'
	--AND b.Status like '%' + @Status + '%'
	AND a.bType = '0'
	AND f.CodeID = 'CITY'
	AND a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.DocNo BETWEEN @DocNo AND @DocNoEnd
	ORDER BY a.DocNo,a.DocDate,b.BankCode
END
ELSE
BEGIN
	SELECT a.CompanyCode,a.BranchCode,a.DocNo,a.DocDate,
	d.CustomerName + ' (' + a.CustomerCode + ')' as pCustomer,   b.GiroCekNo,
	b.BankCode,g.BankName,b.GiroCekDueDate,b.Amount,
	a.TotalPayment,f.LookUpValueName AS City,
	UPPER(h.SignName) AS SignName1, UPPER(h.TitleSign) AS TitleSign1,
	UPPER(i.SignName) AS SignName2, UPPER(i.TitleSign) AS TitleSign2,
	c.InvoiceNo,c.AccountNo,c.DueDate,c.PaymentAmt
	FROM arTrnGiroCekTerimaHdr a
		INNER JOIN arTrnGiroCekTerimaDtl b 
		ON a.DocNo = b.DocNo
		INNER JOIN arTrnGiroCekTerimaInvoice c
		ON a.DocNo = c.DocNo
		AND b.BankCode = c.BankCode
		INNER JOIN gnMstCustomer d 
		ON a.CompanyCode = d.CompanyCode 
		AND a.CustomerCode = d.CustomerCode
		INNER JOIN gnMstCoProfile e
		ON e.CompanyCode = a.CompanyCode
		AND e.BranchCode = a.BranchCode
		INNER JOIN gnMstLookUpDtl f
		ON f.LookUpValue = e.CityCode
		AND f.CompanyCode = e.CompanyCode
		LEFT JOIN gnMstCustomerBank g
		ON g.CompanyCode = a.CompanyCode
		AND g.CustomerCode = a.CustomerCode
		AND g.BankCode = b.BankCode
		LEFT JOIN gnMstSIgnature h
		ON h.CompanyCode = a.CompanyCode
		AND h.BranchCode = a.BranchCode
		AND h.ProfitCenterCode = '000'
		AND h.DocumentType = Convert(varchar(3),a.DocNo)
		AND h.SeqNo = 1
		LEFT JOIN gnMstSIgnature i
		ON i.CompanyCode = a.CompanyCode
		AND i.BranchCode = a.BranchCode
		AND i.ProfitCenterCode = '000'
		AND i.DocumentType = Convert(varchar(3),a.DocNo)
		AND i.SeqNo = 2
	WHERE a.Status = '0'
	--AND b.Status = '0'
	AND a.bType = '0'
	AND f.CodeID = 'CITY'
	AND a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.DocNo BETWEEN @DocNo AND @DocNoEnd
	ORDER BY a.DocNo,a.DocDate,b.BankCode
END
GO


CREATE procedure [dbo].[usprpt_SvRpCrm003V2_DrhPer_Web]
	@CompanyCode	  varchar(15),
	@BranchCode		  varchar(15),
	@OptionType		  varchar(100), 
	@ServiceDateFrom  varchar(15),
	@ServiceDateTo    varchar(15),
	@ReminderDateFrom varchar(15),
	@ReminderDateTo   varchar(15),
	@FollowUpDateFrom varchar(15),
	@FollowUpDateTo   varchar(15)
as

BEGIN
    select * into #t1
      from ( select CompanyCode, BranchCode, ChassisCode, ChassisNo, VisitInitial, CustomerCategory, 
                    RetentionNo, PMNow, PMNext, ReminderDate, IsConfirmed, IsBooked, BookingDate, 
                    IsVisited, FollowUpDate, IsSatisfied, Reason, LastRemark
               from svTrnDailyRetention a
              where RetentionNo = (select top 1 RetentionNo from svTrnDailyRetention
                                    where CompanyCode=a.CompanyCode
                                      and BranchCode =a.BranchCode
                                      and ChassisCode=a.ChassisCode
                                      and ChassisNo  =a.ChassisNo
                                    order by RetentionNo desc) ) #t1
      
	select e.LookUpValueName as Inisial
		 , b.BasicModel as [Type]
		 , b.PoliceRegNo as [No Polisi]
		 , case when b.TransmissionType is null then 'MT' else case when b.TransmissionType = ' ' then 'MT' else b.TransmissionType end end TM 
		 , year(getdate()) as [Tahun]
		 , b.EngineCode as [Kode Mesin]
		 , b.EngineNo as [No Mesin]
		 , b.ChassisCode as [Kode Rangka]
		 , b.ChassisNo as [No Rangka]
		 , c.CustomerName as [Nama Pelanggan]
		 , isnull(c.Address1, '')+' '+isnull(c.Address2, '')+' '+isnull(c.Address3, '')+' '+isnull(c.Address4, '') as [Alamat Pelanggan]
		 , c.PhoneNo as [No.Telpon Rumah]
		 , c.OfficePhoneNo as [No.Telpon Kantor]
		 , c.HPNo as [No. HP]
		 , case when (convert(varchar,b.LastServiceDate,112)='19000101') then a.JobOrderDate 
		        when b.LastServiceDate < a.JobOrderDate                  then a.JobOrderDate
		        else b.LastServiceDate 
		    end as [Tanggal Kunjungan]
		 , a.Odometer as [RM]
		 , d.PMNow as [P/M Saat Ini]
		 , d.PMNext as [P/M Berikut] 
		 , DateAdd(MONTH,3, b.LastServiceDate) as [Estimasi Berikut]
		 , case(d.ReminderDate) WHEN '19000101' THEN NULL ELSE d.ReminderDate END as [Tgl.Reminder]
		 , case(d.IsConfirmed)when '1' then 'Ya' else 'Tidak' END as [Berhasil DiHubungi]
		 , case(d.IsBooked) when '1' then 'Ya' else 'Tidak' END as [Booking]
		 , case(d.BookingDate) WHEN '19000101' THEN NULL ELSE d.BookingDate END as [Tgl.Booking]
		 , case(d.IsVisited) when '1' then 'Ya' else 'Tidak' END as [Konsumen Datang]
		 , case(d.FollowUpDate) WHEN '19000101' THEN NULL ELSE d.FollowUpDate END as [Tgl.FollowUp]
		 , case(d.IsSatisfied) when '1' then 'Ya' else 'Tidak' END as [Puas / Tidak]
		 , d.Reason as Alasan
		 , case when b.ContactName is null then convert(varchar,c.CustomerName) else b.ContactName end as [Nama Kontak]
		 , case when b.ContactAddress is null then isnull(c.Address1, '')+' '+isnull(c.Address2, '')+' '+isnull(c.Address3, '')+' '+isnull(c.Address4, '') else b.ContactAddress end as [Alamat Kontak]
		 , case when b.ContactPhone is null then c.PhoneNo else b.ContactPhone end as [No.Telepon Kontak]
		 , h.EmployeeName as [Nama Service Advisor]
		 , i.EmployeeName as [Nama Mekanik] 
		 , a.ServiceRequestDesc as [Permintaan Perawatan]		 
		 , convert(varchar,g.Remarks) as [Rekomendasi]
	  from svTrnService a  
	       left join SvMstCustomerVehicle b  
		          on b.Companycode =a.CompanyCode   
	             and b.ChassisCode =a.ChassisCode   
	             and b.ChassisNo   =a.ChassisNo  
	       left join GnMstCustomer c  
		          on c.CompanyCode =a.CompanyCode  
	             and c.CustomerCode=a.CustomerCode  
	       left join #t1 d --svTrnDailyRetention d  
		          on d.CompanyCode =a.CompanyCode  
	             and d.BranchCode  =a.BranchCode 
	             and d.ChassisCode =a.ChassisCode 
	             and d.ChassisNo   =a.ChassisNo  
	       left join gnMstLookupDtl e  
		          on e.CompanyCode =a.CompanyCode  
	             and e.CodeID      ='CIRS'  
	             and e.LookupValue =d.VisitInitial  
	       left join gnMstLookUpDtl f 
	              on b.CompanyCode =a.CompanyCode
	             and f.CodeId      ='CCRS'
	             and f.LookUpValue =d.CustomerCategory
	       left join svTrnInvoice g 
	              on g.CompanyCode =a.CompanyCode
	             and g.BranchCode  =a.BranchCode
	             and g.ProductType =a.ProductType
	             and g.InvoiceNo   =a.InvoiceNo
	       left join gnMstEmployee h 
	              on h.CompanyCode =a.CompanyCode
	             and h.BranchCode  =a.BranchCode
	             and h.EmployeeID  =a.ForemanID
	       left join gnMstEmployee i 
	              on i.CompanyCode =a.CompanyCode
	             and i.BranchCode  =a.BranchCode
	             and i.EmployeeID  =a.MechanicID
	       left join gnMstCoProfile p
	              on p.CompanyCode =a.CompanyCode
	             and p.BranchCode  =a.BranchCode
	 where a.CompanyCode = @CompanyCode  
	   and a.BranchCode  = @BranchCode  
	   and a.ServiceStatus in ('7','9')  -- 7:Invoice, 9:Faktur Pajak 
	   and (b.LastServiceDate is null or convert(varchar,a.JobOrderDate,112) >= convert(varchar,b.LastServiceDate,112))  
	   and (case when @ServiceDateFrom != '' 
	             then convert(varchar,a.JobOrderDate,112) 
	             else @ServiceDateFrom 
	        end) between @ServiceDateFrom and @ServiceDateTo
	   and (case when @ReminderDateFrom != '' 
	             then convert(varchar,d.ReminderDate,112) 
	             else @ReminderDateFrom 
	        end) between @ReminderDateFrom and @ReminderDateTo
	   and (case when @FollowUpDateFrom != '' 
	             then convert(varchar,d.FollowUpDate,112) 
	             else @FollowUpDateFrom 
	        end) between @FollowUpDateFrom and @FollowUpDateTo
     order by a.JobOrderNo
     
	drop table #t1
END
GO

Create procedure [dbo].[usprpt_SvRpCrm003V2_Drh_Web]
	@CompanyCode	Varchar(15),
	@BranchCode		Varchar(15),
	@DateParam		Datetime,
	@OptionType		Varchar(100), 
	@Range			int, 
	@Interval		int,
	@IncPDI			bit
as

--select @CompanyCode='6006406',@BranchCode='6006406',@DateParam='20120129',@OptionType='4FOLLOWUP',@Range=-1,@Interval=0,@IncPDI=0

if @OptionType = 'REMINDER'
begin
	select distinct 
		 e.LookUpValueName as Inisial
		 , b.BasicModel as [Type]
		 , b.PoliceRegNo as [No Polisi]
		 , case when b.TransmissionType is null then 'MT' else case when b.TransmissionType = ' ' then 'MT' else b.TransmissionType end end TM 
		 , year(getdate()) as [Tahun]
		 , b.EngineCode as [Kode Mesin]
		 , b.EngineNo as [No Mesin]
		 , b.ChassisCode as [Kode Rangka]
		 , b.ChassisNo as [No Rangka]
		 , c.CustomerName as [Nama Pelanggan]
		 , isnull(c.Address1, '')+' '+isnull(c.Address2, '')+' '+isnull(c.Address3, '')+' '+isnull(c.Address4, '') as [Alamat Pelanggan]
		 , c.PhoneNo as [No.Telpon Rumah]
		 , c.OfficePhoneNo as [No.Telpon Kantor]
		 , c.HPNo as [No. HP]
		 , case when (convert(varchar, b.LastServiceDate, 112) = '19000101') then null else b.LastServiceDate end as [Tanggal Kunjungan]
		 , a.Odometer as [RM]
		 , d.PMNow as [P/M Saat Ini]
		 , d.PMNext as [P/M Berikut]		 
		 , isnull(case when a.JobType like 'PB%' then 
 			case when REPLACE(a.JobType,'KM','') = 'PB100000' 
			then
				case when b.LastServiceDate is not null then DateAdd(MONTH,3, b.LastServiceDate) else b.LastServiceDate end
			else
				DateAdd(month
				,(select convert(int,(select b.TimePeriod from svMstRoutineService b
				where JobType = 'PB' + convert(varchar,convert(int,Substring(REPLACE(a.JobType,'KM',''),3,LEN(a.JobType)-2))+5000)
				)) - convert(int,(select TimePeriod from svMstRoutineService 
				where JobType = (select JobType from svTrnService where CompanyCode = a.CompanyCode and BranchCode = a.BranchCode and ServiceNo = a.ServiceNo))) TimePeriod
				)
				,b.LastServiceDate)
			end
 		   else DateAdd(MONTH,3, b.LastServiceDate)
		   end,'') as [Estimasi Berikut]  
		 , case(d.ReminderDate) WHEN '19000101' THEN NULL ELSE d.ReminderDate END as [Tgl.Reminder]
		 , case(d.IsConfirmed)when '1' then 'Ya' else 'Tidak' END as [Berhasil DiHubungi]
		 , case(d.IsBooked) when '1' then 'Ya' else 'Tidak' END as [Booking]
		 , case(d.BookingDate) WHEN '19000101' THEN NULL ELSE d.BookingDate END as [Tgl.Booking]
		 , case(d.IsVisited) when '1' then 'Ya' else 'Tidak' END as [Konsumen Datang]
		 , case(d.FollowUpDate) WHEN '19000101' THEN NULL ELSE d.FollowUpDate END as [Tgl.FollowUp]
		 , case(d.IsSatisfied) when '1' then 'Ya' else 'Tidak' END as [Puas / Tidak]
		 , d.Reason as Alasan
		 , case when b.ContactName is null then convert(varchar,c.CustomerName) else b.ContactName end as [Nama Kontak]
		 , case when b.ContactAddress is null then isnull(c.Address1, '')+' '+isnull(c.Address2, '')+' '+isnull(c.Address3, '')+' '+isnull(c.Address4, '') else b.ContactAddress end as [Alamat Kontak]
		 , case when b.ContactPhone is null then c.PhoneNo else b.ContactPhone end as [No.Telepon Kontak]
		 , h.EmployeeName as [Nama Service Advisor]
		 , i.EmployeeName as [Nama Mekanik] 
		 , a.ServiceRequestDesc as [Permintaan Perawatan]		 
		 , convert(varchar,g.Remarks) as [Rekomendasi]
	  from svTrnService a  
	  left join SvMstCustomerVehicle b  
		on b.Companycode = a.CompanyCode   
	   and b.ChassisCode = a.ChassisCode   
	   and b.ChassisNo = a.ChassisNo  
	  left join GnMstCustomer c  
		on c.CompanyCode = a.CompanyCode  
	   and c.CustomerCode = a.CustomerCode  
	  left join svTrnDailyRetention d  
		on d.CompanyCode = a.CompanyCode  
	   and d.BranchCode = a.BranchCode and d.PeriodYear = year(a.JobOrderDate)  
	   and d.PeriodMonth = month(a.JobOrderDate) and d.CustomerCode = a.CustomerCode  
	   and d.ChassisCode = a.ChassisCode and d.ChassisNo = a.ChassisNo  
	  left join gnMstLookupDtl e on e.CompanyCode = a.CompanyCode  
	   and e.CodeID = 'CIRS'  
	   and e.LookupValue = d.VisitInitial  
	  left join gnMstLookUpDtl f on b.CompanyCode = a.CompanyCode
	   and f.CodeId = 'CCRS'
	   and f.LookUpValue = d.CustomerCategory
	  left join svTrnInvoice g on g.CompanyCode = a.CompanyCode
	   and g.BranchCode = a.BranchCode
	   and g.ProductType = a.ProductType
	   and g.InvoiceNo = a.InvoiceNo
	  left join gnMstEmployee h on h.CompanyCode = a.CompanyCode
	   and h.BranchCode = a.BranchCode
	   and h.EmployeeID = a.ForemanID
	  left join gnMstEmployee i on i.CompanyCode = a.CompanyCode
	   and i.BranchCode = a.BranchCode
	   and i.EmployeeID = a.MechanicID
	 where 1 = 1  
	   and a.CompanyCode = @CompanyCode  
	   and a.BranchCode  = @BranchCode  
	   and convert(varchar, @DateParam, 112)  
		 between convert(varchar, dateadd(day, -@Interval, dateadd(month, @Range, a.JobOrderDate)), 112)  
		     and convert(varchar, dateadd(day, @Interval, dateadd(month, @Range, a.JobOrderDate)), 112)  
	   and a.JobType <> (case @IncPDI when 1 then '' else 'PDI' end)
	   and (b.LastServiceDate is null or convert(varchar, a.JobOrderDate, 112) >= convert(varchar, b.LastServiceDate, 112))  
	   and d.RetentionNo = isnull((
							select max(RetentionNo)
							  from svTrnDailyRetention
							 where CompanyCode = a.CompanyCode
							   and BranchCode = a.BranchCode
							   and PeriodYear = year(a.JobOrderDate)  
							   and PeriodMonth = month(a.JobOrderDate)
							   and CustomerCode = a.CustomerCode
						   ),0)  
end
						
if @OptionType = '4FOLLOWUP'
begin
	select distinct 
		 e.LookUpValueName as Inisial
		 , b.BasicModel as [Type]
		 , b.PoliceRegNo as [No Polisi]
		 , case when b.TransmissionType is null then 'MT' else case when b.TransmissionType = ' ' then 'MT' else b.TransmissionType end end TM 
		 , year(getdate()) as [Tahun]
		 , b.EngineCode as [Kode Mesin]
		 , b.EngineNo as [No Mesin]
		 , b.ChassisCode as [Kode Rangka]
		 , b.ChassisNo as [No Rangka]
		 , c.CustomerName as [Nama Pelanggan]
		 , isnull(c.Address1, '')+' '+isnull(c.Address2, '')+' '+isnull(c.Address3, '')+' '+isnull(c.Address4, '') as [Alamat Pelanggan]
		 , c.PhoneNo as [No.Telpon Rumah]
		 , c.OfficePhoneNo as [No.Telpon Kantor]
		 , c.HPNo as [No. HP]
		 , case when (convert(varchar, b.LastServiceDate, 112) = '19000101') then null else b.LastServiceDate end as [Tanggal Kunjungan]
		 , a.Odometer as [RM]
		 , d.PMNow as [P/M Saat Ini]
		 , d.PMNext as [P/M Berikut]		 
		 , isnull(case when a.JobType like 'PB%' then 
 			case when REPLACE(a.JobType,'KM','') = 'PB100000' 
			then
				case when b.LastServiceDate is not null then DateAdd(MONTH,3, b.LastServiceDate) else b.LastServiceDate end
			else
				DateAdd(month
				,(select convert(int,(select b.TimePeriod from svMstRoutineService b
				where JobType = 'PB' + convert(varchar,convert(int,Substring(REPLACE(a.JobType,'KM',''),3,LEN(a.JobType)-2))+5000)
				)) - convert(int,(select TimePeriod from svMstRoutineService 
				where JobType = (select JobType from svTrnService where CompanyCode = a.CompanyCode and BranchCode = a.BranchCode and ServiceNo = a.ServiceNo))) TimePeriod
				)
				,b.LastServiceDate)
			end
 		   else DateAdd(MONTH,3, b.LastServiceDate)
		   end,'') as [Estimasi Berikut]  
		 , case(d.ReminderDate) WHEN '19000101' THEN NULL ELSE d.ReminderDate END as [Tgl.Reminder]
		 , case(d.IsConfirmed)when '1' then 'Ya' else 'Tidak' END as [Berhasil DiHubungi]
		 , case(d.IsBooked) when '1' then 'Ya' else 'Tidak' END as [Booking]
		 , case(d.BookingDate) WHEN '19000101' THEN NULL ELSE d.BookingDate END as [Tgl.Booking]
		 , case(d.IsVisited) when '1' then 'Ya' else 'Tidak' END as [Konsumen Datang]
		 , case(d.FollowUpDate) WHEN '19000101' THEN NULL ELSE d.FollowUpDate END as [Tgl.FollowUp]
		 , case(d.IsSatisfied) when '1' then 'Ya' else 'Tidak' END as [Puas / Tidak]
		 , d.Reason as Alasan
		 , case when b.ContactName is null then convert(varchar,c.CustomerName) else b.ContactName end as [Nama Kontak]
		 , case when b.ContactAddress is null then isnull(c.Address1, '')+' '+isnull(c.Address2, '')+' '+isnull(c.Address3, '')+' '+isnull(c.Address4, '') else b.ContactAddress end as [Alamat Kontak]
		 , case when b.ContactPhone is null then c.PhoneNo else b.ContactPhone end as [No.Telepon Kontak]
		 , h.EmployeeName as [Nama Service Advisor]
		 , i.EmployeeName as [Nama Mekanik] 
		 , a.ServiceRequestDesc as [Permintaan Perawatan]		 
		 , convert(varchar,g.Remarks) as [Rekomendasi]
	  from svTrnService a  
	  left join SvMstCustomerVehicle b  
		on b.Companycode = a.CompanyCode   
	   and b.ChassisCode = a.ChassisCode   
	   and b.ChassisNo = a.ChassisNo  
	  left join GnMstCustomer c  
		on c.CompanyCode = a.CompanyCode  
	   and c.CustomerCode = a.CustomerCode  
	  left join svTrnDailyRetention d  
		on d.CompanyCode = a.CompanyCode  
	   and d.BranchCode = a.BranchCode and d.PeriodYear = year(a.JobOrderDate)  
	   and d.PeriodMonth = month(a.JobOrderDate) and d.CustomerCode = a.CustomerCode  
	   and d.ChassisCode = a.ChassisCode and d.ChassisNo = a.ChassisNo  
	  left join gnMstLookupDtl e  
		on e.CompanyCode = a.CompanyCode  
	   and e.CodeID = 'CIRS'  
	   and e.LookupValue = d.VisitInitial  
	  left join gnMstLookUpDtl f on b.CompanyCode = a.CompanyCode
	   and f.CodeId = 'CCRS'
	   and f.LookUpValue = d.CustomerCategory
	  left join svTrnInvoice g on g.CompanyCode = a.CompanyCode
	   and g.BranchCode = a.BranchCode
	   and g.ProductType = a.ProductType
	   and g.InvoiceNo = a.InvoiceNo
	  left join gnMstEmployee h on h.CompanyCode = a.CompanyCode
	   and h.BranchCode = a.BranchCode
	   and h.EmployeeID = a.ForemanID
	  left join gnMstEmployee i on i.CompanyCode = a.CompanyCode
	   and i.BranchCode = a.BranchCode
	   and i.EmployeeID = a.MechanicID
	 where 1 = 1  
	   and a.CompanyCode = @CompanyCode  
	   and a.BranchCode = @BranchCode  
	   and a.ServiceStatus not in ('0','1','2','3','4','5','6')  
	   and convert(varchar, @DateParam, 112) = convert(varchar, dateadd(day, @Interval, a.JobOrderDate), 112)    
	   and a.JobType <> (case @IncPDI when 1 then '' else 'PDI' end)
	   and (b.LastServiceDate is null or convert(varchar, a.JobOrderDate, 112) >= convert(varchar, b.LastServiceDate, 112))  
	   and d.RetentionNo = ISNULL((
								select max(RetentionNo)
								  from svTrnDailyRetention
								 where CompanyCode = a.CompanyCode
								   and BranchCode = a.BranchCode
								   and PeriodYear = year(a.JobOrderDate)  
								   and PeriodMonth = month(a.JobOrderDate)
								   and CustomerCode = a.CustomerCode
								),0)  
end
GO

if object_id('uspfn_CsInqTDaysCall') is not null
	drop procedure uspfn_CsInqTDaysCall
GO
create procedure [dbo].[uspfn_CsInqTDaysCall]
	@CompanyCode nvarchar(20),
	@BranchCode varchar(20),
	@DateFrom datetime,
	@DateTo datetime,
	@Outstanding char(1),
	@Status varchar(15)
as
begin
	declare @CurrDate datetime, @Param1 as varchar(20)
	declare @t_rem as table
	(
		RemCode varchar(20),
		RemDate datetime,
		RemValue int
	)
	declare @TDaysCallCutOffPeriod varchar(20);
	declare @TDaysCallSettingParam3 varchar(20);

	set @TDaysCallCutOffPeriod = '';
	set @TDaysCallSettingParam3 = '';

	set @CurrDate = getdate()

	-- REM3DAYSCALL
	set @Param1 = isnull((select SettingParam1 from CsSettings where CompanyCode = @CompanyCode and SettingCode = 'REM3DAYSCALL'), '0')
	begin try
		insert into @t_rem (RemCode, RemDate) values('REM3DAYSCALL', left(convert(varchar, dateadd(month, -convert(int, @Param1), @CurrDate), 112), 6) + '01')
	end try
	begin catch
		set @TDaysCallCutOffPeriod = ( select top 1 a.SettingParam1 from CsSettings a where a.CompanyCode = @CompanyCode);
		set @TDaysCallSettingParam3 = ( select top 1 a.SettingParam3 from CsSettings a where a.CompanyCode = @CompanyCode);
		insert into @t_rem (RemCode, RemDate) values('REM3DAYSCALL', convert(datetime, @TDaysCallCutOffPeriod));
	end catch

	declare @CurrentMonth tinyint;
	declare @PreviousMonth tinyint;
	declare @NextMonth tinyint;
	declare @CurrentDay tinyint;
	declare @DateComparison datetime;

	set @CurrentDay = datepart(day, getdate());
	set @CurrentMonth = DATEPART(month, getdate());
	if @CurrentMonth = 1 
		set @PreviousMonth=12
	else
		set @PreviousMonth=@CurrentMonth-1;
	if @CurrentMonth = 12 
		set @NextMonth=1
	else
		set @NextMonth=@CurrentMonth+1;
	
	if @Status = 'Inquiry' 
	begin
		select *
		  from CsLkuTDaysCallView a
		 where a.CompanyCode like @CompanyCode
		   and a.BranchCode like @BranchCode
		   and a.Outstanding = @Outstanding
		   and convert(varchar, a.CreatedDate, 112) between @DateFrom and @DateTo
	end
	else if @Status = 'Lookup'
	begin
		if @Outstanding = 'Y'
		begin
			if @TDaysCallSettingParam3 != 'CUTOFF'
			begin
				select *
				  from CsLkuTDaysCallView a
				 where a.CompanyCode like @CompanyCode
				   and a.BranchCode like @BranchCode
				   and a.DoDate >=  (select RemDate from @t_rem where RemCode = 'REM3DAYSCALL')
				   and a.Outstanding = 'Y'
			end
			else
			begin
				select *
				  from CsLkuTDaysCallView a
				 where a.CompanyCode like @CompanyCode
				   and a.BranchCode like @BranchCode
				   and a.DoDate >=  convert(datetime, @TDaysCallCutOffPeriod)
				   and a.Outstanding = 'Y'
			end
		end
		else
		begin
			select *
			  from CsLkuTDaysCallView a
			 where a.CompanyCode like @CompanyCode
			   and a.BranchCode like @BranchCode
			   and a.DoDate >=  (select RemDate from @t_rem where RemCode = 'REM3DAYSCALL')
			   and a.Outstanding = 'N'
		end
	end
 end
GO
ALTER procedure [dbo].[uspfn_SvInqGetClaimLku]
	 @CompanyCode		varchar(20),
	 @BranchCodeFrom    varchar(20),
	 @BranchCodeTo		varchar(20),
	 @IsSprClaim		bit = 0
	 
as

declare @prefix varchar(10)

if exists (select * from gnMstLookUpDtl 
			 where CompanyCode = @CompanyCode 
			   and CodeId = 'SRV_FLAG' 
			   and LookUpValue = 'CLM_MODE'
			   and ParaValue = '1')  -- 0: SPK, 1: INV --> Default: SPK
	set @prefix = 'INW%'
else
	set @prefix = 'SPK%'

if @BranchCodeFrom = '[All Branch]' and @BranchCodeTo = '[All Branch]'
begin
	select a.BranchCode, a.InvoiceNo, b.JobOrderDate as InvoiceDate, a.IsCbu, a.CategoryCode, a.ComplainCode, a.DefectCode  
	  , a.SubletHour, a.SubletAmt, a.CausalPartNo, a.TroubleDescription  
	  , a.ProblemExplanation, a.OperationNo, isnull(a.OperationHour,0) as OperationHour, isnull(a.OperationAmt,0) as OperationAmt    
	  from svTrnInvClaim a  
	  left join svTrnService b  
		on b.CompanyCode = a.CompanyCode  
	   and b.BranchCode = a.BranchCode  
	   and b.JobOrderNo = a.InvoiceNo  
	 where 1 = 1  
	   and a.CompanyCode = @CompanyCode  
--	   and a.BranchCode between @BranchCodeFrom and @BranchCodeTo  
	   and not exists (  
		  select 1 from svTrnClaimApplication  
		   where 1 = 1  
			 and CompanyCode = a.CompanyCode  
			 and BranchCode = a.BranchCode  
			 and ProductType = a.ProductType  
			 and InvoiceNo = a.InvoiceNo  
		  )  
	   and a.InvoiceNo like @prefix  
	   and isnull(b.IsSparepartClaim, 0) = @IsSprClaim
	 order by a.InvoiceNo  
end
else
begin
	select a.BranchCode, a.InvoiceNo, b.JobOrderDate as InvoiceDate, a.IsCbu, a.CategoryCode, a.ComplainCode, a.DefectCode  
	  , a.SubletHour, a.SubletAmt, a.CausalPartNo, a.TroubleDescription  
	  , a.ProblemExplanation, a.OperationNo, isnull(a.OperationHour,0) as OperationHour, isnull(a.OperationAmt,0) as OperationAmt  
	  from svTrnInvClaim a  
	  left join svTrnService b  
		on b.CompanyCode = a.CompanyCode  
	   and b.BranchCode = a.BranchCode  
	   and b.JobOrderNo = a.InvoiceNo  
	 where 1 = 1  
	   and a.CompanyCode = @CompanyCode  
	   and a.BranchCode between @BranchCodeFrom and @BranchCodeTo  
	   and not exists (  
		  select 1 from svTrnClaimApplication  
		   where 1 = 1  
			 and CompanyCode = a.CompanyCode  
			 and BranchCode = a.BranchCode  
			 and ProductType = a.ProductType  
			 and InvoiceNo = a.InvoiceNo  
		  )  
	   and a.InvoiceNo like @prefix  
	   and isnull(b.IsSparepartClaim, 0) = @IsSprClaim
	 order by a.InvoiceNo  
end
GO
ALTER procedure [dbo].[uspfn_spPickingHdrSales] @CompanyCode varchar(15), @BranchCode varchar(15), @PickingSlipNo varchar(25), @CodeID varchar(6)  
as      
SELECT DISTINCT  
                            spTrnSORDHdr.DocNo,        
                            spTrnSORDHdr.DocDate,                                                    
                            PaymentName =   
                            (select LookUpValueName from gnMstLookupDtl   
                            where LookupValue = spTrnSORDHdr.PaymentCode and CodeID = @CodeID),  
                            spTrnSORDHdr.OrderNo,                              
                            spTrnSORDHdr.OrderDate,  
                            CONVERT(bit, 1) ChkSelect,
                            spTrnSPickingHdr.Remark                            
                            FROM spTrnSPickingHdr   
                            LEFT JOIN spTrnSPickingDtl ON spTrnSPickingHdr.PickingSlipNo = spTrnSPickingDtl.PickingSlipNo AND  
                                spTrnSPickingHdr.CompanyCode = spTrnSPickingDtl.CompanyCode AND  
                                spTrnSPickingHdr.BranchCode = spTrnSPickingDtl.BranchCode      
                            INNER JOIN spTrnSORDHdr ON spTrnSORDHdr.DocNo = spTrnSPickingDtl.DocNo AND  
                                spTrnSORDHdr.CompanyCode = spTrnSPickingDtl.CompanyCode AND  
                                spTrnSORDHdr.BranchCode = spTrnSPickingDtl.BranchCode  
                            WHERE spTrnSPickingHdr.PickingSlipNo = @PickingSlipNo AND  
                            spTrnSPickingHdr.CompanyCode = @CompanyCode AND  
                            spTrnSPickingHdr.BranchCode = @BranchCode
GO
ALTER procedure [dbo].[uspfn_SvTrnJobOrderCreate]
	@CompanyCode varchar(15),
	@BranchCode varchar(15),
	@ProductType varchar(15),
	@ServiceNo bigint,
	@UserID varchar(15)
as      

declare @errmsg varchar(max)

begin try
	begin transaction
		declare @docseq int 
        set @docseq = isnull((
			select DocumentSequence from gnMstDocument 
			 where 1 = 1
			   and CompanyCode  = @CompanyCode
			   and BranchCode   = @BranchCode
			   and DocumentType = 'SPK'),0) + 1
        declare @JobOrderNo varchar(15)
		set @JobOrderNo = 'SPK/' + (select right(convert(char(4),getdate(),112),2)) + '/' 
                                 + right((replicate('0',6) + (select convert(varchar, @docseq))),6)
		update svTrnService
		   set ServiceType    = '2'
              ,JobOrderNo     = @JobOrderNo
              ,JobOrderDate   = getdate()
              ,LastUpdateBy   = @UserID
              ,LastUpdateDate = getdate()
		 where 1 = 1
		   and CompanyCode = @CompanyCode
		   and BranchCode  = @BranchCode
		   and ProductType = @ProductType
		   and ServiceNo   = @ServiceNo
		update gnMstDocument 
		   set DocumentSequence = @docseq
              ,LastUpdateBy     = @UserID
              ,LastUpdateDate   = getdate()
		 where 1 = 1
		   and CompanyCode  = @CompanyCode
		   and BranchCode   = @BranchCode
		   and DocumentType = 'SPK'
	commit transaction

end try
begin catch
	rollback transaction
	set @errmsg = N'tidak dapat konversi ke SPK pada ServiceNo = '
				+ convert(varchar,@ServiceNo)
				+ char(13) + error_message()
	raiserror (@errmsg,16,1);
end catch
GO
ALTER procedure [dbo].[uspfn_SvTrnServiceDeleteDtl]
	@CompanyCode varchar(15),
	@BranchCode varchar(15),
	@ProductType varchar(15),
	@ServiceNo bigint,
	@TaskPartType varchar(15),
	@TaskPartNo varchar(50),
	@PartSeq numeric(4,0)
as      
--begin tran
--declare	@CompanyCode as varchar(15)
--declare	@BranchCode as varchar(15)
--declare	@ProductType as varchar(15)
--declare	@ServiceNo as bigint
--declare	@TaskPartType as varchar(15)
--declare	@TaskPartNo as varchar(20)
--declare	@PartSeq as numeric(4,0)

--set	@CompanyCode = '6159401000'
--set	@BranchCode = '6159401001'
--set	@ProductType = '4W'
--set	@ServiceNo = '52727'
--set	@TaskPartType = 'L'
--set	@TaskPartNo = 'FSC 40000'
--set	@PartSeq = '0'

declare @errmsg varchar(max)
declare @reccount int;

declare @CompanyMD as varchar(15)
declare @BranchMD as varchar(15)

declare @Query varchar(max)
declare @DbMD varchar(max)

set @DbMD = dbo.GetDbMD(@CompanyCode, @BranchCode) 

if @TaskPartType = 'L'
begin
	if ((isnull((select count(*) from svTrnSrvTask
	 where 1 = 1
	   and CompanyCode = @CompanyCode
	   and BranchCode  = @BranchCode
	   and ProductType = @ProductType
	   and ServiceNo   = @ServiceNo),0)) > 1)
	begin
		delete svTrnSrvTask
		 where 1 = 1
		   and CompanyCode = @CompanyCode
		   and BranchCode  = @BranchCode
		   and ProductType = @ProductType
		   and ServiceNo   = @ServiceNo
		   and OperationNo = @TaskPartNo
	end
	else 
	begin
		--  add validation here to delete task
		set @reccount = isnull((
				select count(b.PartNo) from spTrnSORDHdr a, spTrnSORDDtl b
				 where 1 = 1
				   and a.CompanyCode = b.CompanyCode
				   and a.BranchCode  = b.BranchCode
				   and a.DocNo       = b.DocNo
				   and a.SalesType   = '2'
				   and a.Status     <> '3' 
				   and a.UsageDocNo  = isnull((
										select JobOrderNo from svTrnService
 										 where 1 = 1
										   and CompanyCode = @CompanyCode
										   and BranchCode  = @BranchCode
										   and ProductType = @ProductType
										   and ServiceNo   = @ServiceNo											
										),'')
					and a.CompanyCode = @CompanyCode
					and a.BranchCode  = @BranchCode
				),0)
		if (@reccount > 0) 
		begin
			set @errmsg = N'Task sudah tidak dapat dihapus karena terdapat Supply Slip sudah diproses'
						+ char(13) + 'Tolong di check lagi'
						+ char(13) + 'Terima kasih'
			raiserror (@errmsg,16,1);
			return
		end

		-- delete task
		delete svTrnSrvTask
		 where 1 = 1
		   and CompanyCode = @CompanyCode
		   and BranchCode  = @BranchCode
		   and ProductType = @ProductType
		   and ServiceNo   = @ServiceNo
		   and OperationNo = @TaskPartNo
		-- delete all item in spk
		delete svTrnSrvItem
		 where 1 = 1
		   and CompanyCode = @CompanyCode
		   and BranchCode  = @BranchCode
		   and ProductType = @ProductType
		   and ServiceNo   = @ServiceNo
	
		set @CompanyMD = (select CompanyMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)
		set @BranchMD = (select BranchMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)

		if (@CompanyCode != @CompanyMD and @BranchCode != @BranchMD)
		begin	   
			set @Query = 'delete '+ @DbMD +'..svSDMovement
    		 where 1 = 1
			   and CompanyCode = '''+ @CompanyCode +'''
			   and BranchCode  = '''+ @BranchCode +'''
			   and DocNo	   = (select JobOrderNo from svTrnService where CompanyCode = '''+ @CompanyCode +''' and BranchCode  = '''+ @BranchCode +''' and ServiceNo = '+ convert(varchar,@ServiceNo)  +')'
		exec(@Query)
		end
	end
end
else
begin
    set @reccount = isnull((
			select count(b.PartNo) from spTrnSORDHdr a, spTrnSORDDtl b
			 where 1 = 1
			   and a.CompanyCode = b.CompanyCode
			   and a.BranchCode  = b.BranchCode
			   and a.DocNo       = b.DocNo
			   and a.SalesType   = '2'
			   and a.Status     <> '3' 
			   and a.UsageDocNo  = isnull((
									select JobOrderNo from svTrnService
 									 where 1 = 1
									   and CompanyCode = @CompanyCode
									   and BranchCode  = @BranchCode
									   and ProductType = @ProductType
									   and ServiceNo   = @ServiceNo
									),'')
			  and b.PartNo      = @TaskPartNo
			   and a.CompanyCode = @CompanyCode
			   and a.BranchCode  = @BranchCode
			),0)

	declare @npartss int, @npartot int;
	set @npartot = isnull((
			select count(*) from svTrnSrvItem
			 where 1 = 1
			   and CompanyCode = @CompanyCode
			   and BranchCode  = @BranchCode
			   and ProductType = @ProductType
			   and ServiceNo   = @ServiceNo
			   and PartNo      = @TaskPartNo
			   and PartSeq     = @PartSeq
			   and isnull(SupplySlipNo, '') = ''
			), 0)
	set @npartss = isnull((
			select count(*) from svTrnSrvItem
			 where 1 = 1
			   and CompanyCode = @CompanyCode
			   and BranchCode  = @BranchCode
			   and ProductType = @ProductType
			   and ServiceNo   = @ServiceNo
			   and PartNo      = @TaskPartNo
			   and isnull(SupplySlipNo, '') <> ''
			), 0)

	if ((@reccount > 0 and @npartot <> 1 and @npartss > 0)
	 or (@reccount > 0 and @npartot  = 1 and @npartss = 0))
	begin
		set @errmsg = N'Part sudah tidak dapat dihapus karena Supply Slip sudah diproses'
					+ char(13) + 'Tolong di check lagi'
					+ char(13) + 'Terima kasih'
					+ char(13) + ''
					+ char(13) + 'Jml Part' + convert(varchar, @npartot)
					+ char(13) + 'Jml Supply Slip' + convert(varchar, @npartss)
		raiserror (@errmsg,16,1);
		return
	end

	delete svTrnSrvItem
	 where 1 = 1
	   and CompanyCode = @CompanyCode
	   and BranchCode  = @BranchCode
	   and ProductType = @ProductType
	   and ServiceNo   = @ServiceNo
	   and PartNo      = @TaskPartNo
	   and PartSeq     = @PartSeq
	
	set @CompanyMD = (select CompanyMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)
	set @BranchMD = (select BranchMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)

	if (@CompanyCode != @CompanyMD and @BranchCode != @BranchMD)
	begin	 
	set @Query =' 
	delete '+ @DbMD +'..svSDMovement
	 where 1 = 1
	   and CompanyCode = '''+ @CompanyCode +'''
	   and BranchCode  = '''+ @BranchCode +'''
	   and DocNo	   = (select JobOrderNo from svTrnService where CompanyCode = '''+ @CompanyCode +''' and BranchCode  = '''+ @BranchCode +''' and ServiceNo = '+ convert(varchar,@ServiceNo)  +')
	   and PartNo      = '''+ convert(varchar,@TaskPartNo) +'''
	   and PartSeq     = '+ convert(varchar,@PartSeq)

	   exec(@Query)
	end	   
end

exec uspfn_SvTrnServiceReCalculate @CompanyCode,@BranchCode,@ProductType,@ServiceNo,0
--rollback tran
GO
ALTER procedure [dbo].[uspfn_spSelectPickingSlip] 
@CompanyCode varchar(15), @BranchCode varchar(15), 
@ProductType varchar(4), @JobOrderNo varchar(25)
as
SELECT * INTO #t1 FROM (
SELECT
    DISTINCT c.DocNo, c.DocDate, d.PickingSlipNo, e.PartNo, e.PartNo PartNoOri, e.QtySupply, 
    e.QtyPicked, e.QtyBill, d.Status, f.LookUpValueName TransTypeDesc, c.TransType, g.LmpNo,
    d.PickedBy
FROM
    svTrnService a
LEFT JOIN svTrnSrvItem b ON b.CompanyCode = a.CompanyCode AND b.BranchCode = a.BranchCode 
    AND b.ProductType = a.ProductType AND b.ServiceNo=a.ServiceNo
LEFT JOIN spTrnSOrdHdr c ON c.CompanyCode = a.CompanyCode AND c.BranchCode = a.BranchCode 
    AND c.DocNo = b.SupplySlipNo
LEFT JOIN spTrnSPickingHdr d ON d.CompanyCode = a.CompanyCode AND d.BranchCode = a.BranchCode 
    AND d.PickingSlipNo = c.ExPickingSlipNo
LEFT JOIN spTrnSPickingDtl e ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode 
    AND e.PickingSlipNo = d.PickingSlipNo
LEFT JOIN gnMstLookUpDtl f ON f.CompanyCode = a.CompanyCode AND f.CodeId = 'TTSR' 
    AND f.LookUpValue = c.TransType
LEFT JOIN spTrnSLmpHdr g ON g.CompanyCode = a.CompanyCode AND g.BranchCode = a.BranchCode 
    AND g.PickingSlipNo = d.PickingSlipNo
WHERE 
    a.CompanyCode     = @CompanyCode
    AND a.BranchCode  = @BranchCode
    AND a.ProductType = @ProductType
    AND a.jobOrderNo  = @JobOrderNo
    AND b.SupplySlipNo <> ''
    AND b.PartSeq = (SELECT MAX(PartSeq) FROM SvTrnSrvItem WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
           AND ProductType = @ProductType AND ServiceNo = a.ServiceNo AND PartNo = b.PartNo)
    AND d.Status < 2
)#t1
SELECT Row_number() OVER(ORDER BY DocNo) No, * FROM #t1
DROP TABLE #t1
GO
--exec usprpt_spRpTrn032 '6006406','6006402','20120801', '20120831'
ALTER PROCEDURE [dbo].[usprpt_spRpTrn032CEK]
	@CompanyCode VARCHAR(20), 
	@BranchCode VARCHAR(20),
	@BegDate DATETIME,
	@EndDate DATETIME
AS
BEGIN
	(
		SELECT	pos.CompanyCode
				, pos.BranchCode
				, pos.POSNo AS DocNo
				, pos.POSDate AS DocDate
				, (
					select LookupValueName
					from gnMstLookUpDtl
					where CompanyCode = pos.CompanyCode and LookUpValue = pos.TypeOfGoods and CodeID = 'TPGO'
				  ) as TipePart
				, case pos.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta
				, (select SupplierName from gnMstSupplier where CompanyCode = pos.CompanyCode and SupplierCode = pos.SupplierCode) CustomerName
				, 'POS' JenisDokumen
		FROM	spTrnPPOSHdr pos with(nolock, nowait)
		WHERE pos.CompanyCode = @CompanyCode 
		AND pos.BranchCode = @BranchCode
		AND (pos.Status NOT IN (2, 3, 4, 5, 6, 7))
		AND CONVERT(VARCHAR, pos.PosDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112) 
	)
	union
	(
		SELECT	binn.CompanyCode
				, binn.BranchCode
				, binn.BinningNo AS DocNo
				, binn.BinningDate AS DocDate
				, (
					select LookupValueName
					from gnMstLookUpDtl
					where CompanyCode = binn.CompanyCode and LookUpValue = binn.TypeOfGoods and CodeID = 'TPGO'
				  ) as TipePart
				, case binn.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta
				, (select SupplierName from gnMstSupplier where CompanyCode = binn.CompanyCode and SupplierCode = binn.SupplierCode) CustomerName
				, 'BINNING' JenisDokumen
		FROM	spTrnPBinnHdr binn with(nolock, nowait)
		WHERE binn.CompanyCode = @CompanyCode 
		AND binn.BranchCode = @BranchCode
		AND (binn.Status NOT IN (3, 4))
		AND CONVERT(VARCHAR, binn.BinningDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112) 
	)
	union 
	(
		SELECT	rcv.CompanyCode
				, rcv.BranchCode
				, rcv.WRSNo AS DocNo
				, rcv.WRSDate AS DocDate
				, (
					select LookupValueName
					from gnMstLookUpDtl
					where CompanyCode = rcv.CompanyCode and LookUpValue = rcv.TypeOfGoods and CodeID='TPGO'
				  ) as TipePart
				, case rcv.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta
				, (select SupplierName from gnMstSupplier where CompanyCode = rcv.CompanyCode and SupplierCode = rcv.SupplierCode) CustomerName
				, 'RECEIVING' JenisDokumen
		FROM	spTrnPRcvHdr rcv with(nolock, nowait)
		WHERE	rcv.CompanyCode = @CompanyCode 
				AND rcv.BranchCode = @BranchCode
				AND rcv.Status NOT IN (3, 4)         
                AND rcv.ReceivingType = 1  -- add 30/10/2010  by dRU
                AND rcv.TransType = 4      -- add 30/10/2010  by dRU
				AND CONVERT(VARCHAR, rcv.WRSDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112) 
	)
	union
	(
			SELECT	rcv.CompanyCode
					, rcv.BranchCode
					, rcv.WRSNo AS DocNo
					, rcv.WRSDate AS DocDate
					, (
						select LookupValueName
						from gnMstLookUpDtl
						where CompanyCode = rcv.CompanyCode and LookUpValue = rcv.TypeOfGoods and CodeID='TPGO'
					  ) as TipePart
					, case rcv.Status 
						when 0 then '-'
						else 'x'
					end CetakSta
					, '-' glSta
					, '-' pjkSta
					, '-' tpjSta	
					, '-' postSta
					, (select SupplierName from gnMstSupplier where CompanyCode = rcv.CompanyCode and SupplierCode = rcv.SupplierCode) CustomerName
					, 'RECEIVING' JenisDokumen
			FROM	spTrnPRcvHdr rcv with(nolock, nowait)
			WHERE	rcv.CompanyCode = @CompanyCode 
					AND rcv.BranchCode = @BranchCode
					AND rcv.Status NOT IN (2, 3)
					AND rcv.ReceivingType = 3
					AND CONVERT(VARCHAR, rcv.WRSDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112) 
	)
	union
	(
		SELECT hpp.CompanyCode
				, hpp.BranchCode
				, hpp.HPPNo AS DocNo
				, hpp.HPPDate AS DocDate
				, (
					select LookupValueName
					from gnMstLookUpDtl
					where CompanyCode = hpp.CompanyCode and LookUpValue = hpp.TypeOfGoods and CodeID='TPGO'
				  ) as TipePart
				, case hpp.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta
				, (select SupplierName from gnMstSupplier where CompanyCode = hpp.CompanyCode and SupplierCode = rcv.SupplierCode) CustomerName	
				, 'HPP' JenisDokumen
		FROM	spTrnPHPP hpp with(nolock, nowait) 
				inner join spTrnPRcvHdr rcv with(nolock, nowait) on hpp.CompanyCode = rcv.CompanyCode
					and hpp.BranchCode = rcv.BranchCode
					and hpp.WRSNo = rcv.WRSNo
		WHERE	hpp.CompanyCode = @CompanyCode 
				AND hpp.BranchCode = @BranchCode
				AND (hpp.Status NOT IN (2, 3))
				AND CONVERT(VARCHAR, hpp.WRSDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112) 
	)
	union
	(
		SELECT a.CompanyCode
			, a.BranchCode
			, a.LampiranNo AS DocNo
			, a.CreatedDate AS DocDate
			, ISNULL((SELECT LookUpValueName 
				FROM GnMstLookUpDtl 
				WHERE CompanyCode = a.CompanyCode 
					AND CodeID = 'TPGO'
					AND LookupValue = b.TypeOfGoods),'') TipePart
			, CASE a.Status WHEN 0 then '-' else 'x' end CetakSta
			, '-' glSta
			, '-' pjkSta
			, '-' tpjSta	
			, '-' postSta
			, 'INTERNAL' CustomerName
			, 'TRANSSTOCK' JenisDokumen
		FROM spUtlStockTrfHdr a
		INNER JOIN spTrnSLmpHdr b ON a.CompanyCode = b.CompanyCode AND a.DealerCode = b.BranchCode AND a.LampiranNo = b.LmpNo
		WHERE a.CompanyCode = @CompanyCode 
			AND a.BranchCode = @BranchCode
			AND (a.Status <> 2)
			AND (CONVERT(VARCHAR,b.LmpDate,112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112))
	)
	union 
	(
		SELECT	ord.CompanyCode
				, ord.BranchCode
				, ord.DocNo AS DocNo
				, ord.DocDate AS DocDate
				, (
					select LookupValueName
					from gnMstLookUpDtl
					where CompanyCode = ord.CompanyCode and LookUpValue = ord.TypeOfGoods and CodeID='TPGO'
				  ) as TipePart
				, case ord.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta
				, (select CustomerName from gnMstCustomer where CompanyCode = ord.CompanyCode and CustomerCode = ord.CustomerCode) CustomerName
				, 'ORDER' JenisDokumen
		FROM	spTrnSORDHdr ord with(nolock, nowait) 
		WHERE	ord.CompanyCode = @CompanyCode 
				AND ord.BranchCode = @BranchCode
				AND (ord.Status NOT IN (2, 3, 4, 5))
				AND CONVERT(VARCHAR, ord.DocDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112) 				
	)
	union 
	(
		SELECT	supply.CompanyCode
				, supply.BranchCode
				, supply.DocNo AS DocNo
				, ord.DocDate AS DocDate
				, (
					select LookupValueName
					from gnMstLookUpDtl
					where CompanyCode = supply.CompanyCode and LookUpValue = ord.TypeOfGoods and CodeID = 'TPGO'
				  ) as TipePart
				, case supply.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta
				, (select CustomerName from gnMstCustomer where CompanyCode = supply.CompanyCode and CustomerCode = ord.CustomerCode) CustomerName
				, 'SUPPLY ORDER YUYUY' JenisDokumen
		FROM	spTrnSOSupply supply with(nolock, nowait) 
				inner join spTrnSORDHdr ord with(nolock, nowait) on supply.CompanyCode = ord.CompanyCode
					and supply.BranchCode = ord.BranchCode
					and supply.DocNo = ord.DocNo				
		WHERE	supply.CompanyCode = @CompanyCode 
				AND supply.BranchCode = @BranchCode
				AND (LEN(ISNULL(supply.PickingSlipNo, '')) = 0)
				AND CONVERT(VARCHAR, ord.DocDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112) 				
	)
	union
	(
		SELECT	pickSlip.CompanyCode
				, pickSlip.BranchCode
				, pickSlip.PickingSlipNo AS DocNo
				, pickSlip.PickingSlipDate AS DocDate
				, (
					select LookupValueName
					from gnMstLookUpDtl
					where CompanyCode = pickSlip.CompanyCode and LookUpValue = pickSlip.TypeOfGoods and CodeID='TPGO'
				  ) as TipePart
				, case pickSlip.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta
				, (select CustomerName from gnMstCustomer where CompanyCode = pickSlip.CompanyCode and CustomerCode = pickSlip.CustomerCode) CustomerName
				, 'PICKING SLIP' JenisDokumen
		FROM	spTrnSPickingHdr pickSlip with(nolock, nowait)
		WHERE	pickSlip.CompanyCode = @CompanyCode 
				AND pickSlip.BranchCode = @BranchCode
				AND (pickSlip.Status NOT IN (2, 3))
				AND CONVERT(VARCHAR, pickSlip.PickingSlipDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112) 								
	)
	union
	(
		SELECT	rtur.CompanyCode
				, rtur.BranchCode
				, rtur.ReturnNo AS DocNo
				, rtur.ReturnDate AS DocDate
				, (
					select LookupValueName
					from gnMstLookUpDtl
					where CompanyCode = rtur.CompanyCode and LookUpValue = rtur.TypeOfGoods and CodeID='TPGO'
				  ) as TipePart
				, case rtur.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta
				, (select CustomerName from gnMstCustomer where CompanyCode = rtur.CompanyCode and CustomerCode = rtur.CustomerCode) CustomerName
				, 'RETUR SP' JenisDokumen
		FROM	spTrnSRturHdr rtur with(nolock, nowait)
		WHERE	rtur.CompanyCode = @CompanyCode 
				AND rtur.BranchCode = @BranchCode
				AND (rtur.Status NOT IN (2, 3))
				AND CONVERT(VARCHAR, rtur.ReturnDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112)												
	)
	union
	(
		SELECT	rtur.CompanyCode
				, rtur.BranchCode
				, rtur.ReturnNo AS DocNo
				, rtur.ReturnDate AS DocDate
				, '-' as TipePart
				, case rtur.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta
				, (select CustomerName from gnMstCustomer where CompanyCode = rtur.CompanyCode and CustomerCode = rtur.CustomerCode) CustomerName
				, 'RETUR SRV' JenisDokumen
		FROM	spTrnSRturSrvHdr rtur with(nolock, nowait)
		WHERE	rtur.CompanyCode = @CompanyCode 
				AND rtur.BranchCode = @BranchCode
				AND (rtur.Status NOT IN (2, 3))
				AND CONVERT(VARCHAR, rtur.ReturnDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112)												
	)
	union
	(
		SELECT	rturSS.CompanyCode
				, rturSS.BranchCode
				, rturSS.ReturnNo AS DocNo
				, rturSS.ReturnDate AS DocDate 
				, (
					select LookupValueName
					from gnMstLookUpDtl
					where CompanyCode = rturSS.CompanyCode and LookUpValue = rturSS.TypeOfGoods and CodeID='TPGO'
				  ) as TipePart
				, case rturSS.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta	
				, (select CustomerName from gnMstCustomer where CompanyCode = rturSS.CompanyCode and CustomerCode = rturSS.CustomerCode) CustomerName
				, 'RETUR SUPPLY SLIP' JenisDokumen
		FROM	spTrnSRturSSHdr rturSS with(nolock, nowait)                           
		WHERE	rturSS.CompanyCode = @CompanyCode 
				AND rturSS.BranchCode = @BranchCode
				AND (rturSS.Status NOT IN (2, 3))
				AND CONVERT(VARCHAR, rturSS.ReturnDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112)																
	)
	union
	(            
		SELECT	bps.CompanyCode
				, bps.BranchCode
				, bps.BPSFNo AS DocNo
				, bps.BPSFDate AS DocDate
				, (
					select LookupValueName
					from gnMstLookUpDtl
					where CompanyCode = bps.CompanyCode and LookUpValue = bps.TypeOfGoods and CodeID='TPGO'
				 ) as TipePart
				, case bps.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta
				, (select CustomerName from gnMstCustomer where CompanyCode = bps.CompanyCode and CustomerCode = bps.CustomerCode) CustomerName
				, 'BPS' JenisDokumen
		FROM	spTrnSBPSFHdr bps with(nolock, nowait) 
		WHERE	bps.CompanyCode = @CompanyCode 
				AND bps.BranchCode = @BranchCode
				AND (bps.Status NOT IN (2, 3))
				AND CONVERT(VARCHAR, bps.BPSFDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112)																				
	)
	union
	(
		SELECT	invoice.CompanyCode
				, invoice.BranchCode
				, invoice.InvoiceNo AS DocNo
				, invoice.InvoiceDate AS DocDate
				, (
					select LookupValueName
					from gnMstLookUpDtl
					where CompanyCode = invoice.CompanyCode and LookUpValue = invoice.TypeOfGoods and CodeID='TPGO'
				  ) as TipePart
				, case invoice.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta
				, (select CustomerName from gnMstCustomer where CompanyCode = invoice.CompanyCode and CustomerCode = invoice.CustomerCode) CustomerName
				, 'INVOICE' JenisDokumen
		FROM	spTrnSInvoiceHdr invoice with(nolock, nowait) 
		WHERE	invoice.CompanyCode = @CompanyCode 
				AND invoice.BranchCode = @BranchCode
				AND (invoice.Status NOT IN (2, 3))
				AND CONVERT(VARCHAR, invoice.InvoiceDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112)				
	)
	union
	(
		SELECT	lmp.CompanyCode
				, lmp.BranchCode
				, lmp.LmpNo AS DocNo	
				, lmp.LmpDate AS DocDate
				, (
					select LookupValueName
					from gnMstLookUpDtl
					where CompanyCode = lmp.CompanyCode and LookUpValue = lmp.TypeOfGoods and CodeID='TPGO'
				  ) as TipePart
				, case lmp.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta	
				, (select CustomerName from gnMstCustomer where CompanyCode = lmp.CompanyCode and CustomerCode = lmp.CustomerCode) CustomerName
				, 'LAMPIRAN' JenisDokumen
		FROM	spTrnSLmpHdr lmp with(nolock, nowait)
		WHERE	lmp.CompanyCode = @CompanyCode 
				AND lmp.BranchCode = @BranchCode
				AND (lmp.Status NOT IN (1, 2, 3))
				AND CONVERT(VARCHAR, lmp.LmpDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112)				
	)
	union
	(
		SELECT	fpj.CompanyCode
				, fpj.BranchCode
				, fpj.FPJNo AS DocNo
				, fpj.FPJDate AS DocDate
				, (
					select LookupValueName
					from gnMstLookUpDtl
					where CompanyCode = fpj.CompanyCode and LookUpValue = fpj.TypeOfGoods and CodeID='TPGO'
				  ) as TipePart 
				, case fpj.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta
				, (select CustomerName from gnMstCustomer where CompanyCode = fpj.CompanyCode and CustomerCode = fpj.CustomerCode) CustomerName
				, 'FAKTUR PAJAK' JenisDokumen
		FROM	spTrnSFPJHdr fpj with(nolock, nowait)
		WHERE	fpj.CompanyCode = @CompanyCode 
				AND fpj.BranchCode = @BranchCode
				AND (fpj.Status NOT IN (1, 2, 3))
                AND ISNULL(fpj.FPJGovNo,'') = ''
				AND CONVERT(VARCHAR, fpj.FPJDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112)				
	)
	union 
	(
		SELECT	whTrf.CompanyCode
				, whTrf.BranchCode
				, whTrf.WHTrfNo AS DocNo
				, whTrf.WHTrfDate AS DocDate
				, (
					select LookupValueName
					from gnMstLookUpDtl
					where CompanyCode = whTrf.CompanyCode and LookUpValue = whTrf.TypeOfGoods and CodeID='TPGO'
				  ) as TipePart
				, case whTrf.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta
				, '' AS CustomerName
				, 'WAREHOUSE TRANSFER' JenisDokumen
		FROM	spTrnIWHTrfHdr whTrf with(nolock, nowait)
		WHERE	whTrf.CompanyCode = @CompanyCode 
				AND whTrf.BranchCode = @BranchCode
				AND (whTrf.Status NOT IN (2, 3))
				AND CONVERT(VARCHAR, whTrf.WHTrfDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112)				
	)
	union
	(
		SELECT	adj.CompanyCode
				, adj.BranchCode
				, adj.AdjustmentNo AS DocNo
				, adj.AdjustmentDate AS DocDate
				, (
					select LookupValueName
					from gnMstLookUpDtl
					where CompanyCode = adj.CompanyCode and LookUpValue = adj.TypeOfGoods and CodeID='TPGO'
				  ) as TipePart
				, case adj.Status 
					when 0 then '-'
					else 'x'
				end CetakSta
				, '-' glSta
				, '-' pjkSta
				, '-' tpjSta	
				, '-' postSta
				, '' AS CustomerName
				, 'ADJUSTMENT' JenisDokumen
		FROM	spTrnIAdjustHdr adj with(nolock, nowait)
		WHERE	adj.CompanyCode = @CompanyCode 
				AND adj.BranchCode = @BranchCode
				AND (adj.Status NOT IN (2, 3))
				AND CONVERT(VARCHAR, adj.AdjustmentDate, 112) between CONVERT(VARCHAR, @BegDate, 112) and CONVERT(VARCHAR, @EndDate, 112)
	)
END

select top 1 * from svtrnservice
GO
/*
ServiceStatus Listup :
RefferenceCode Description
=================================================
0	BUKA SPK
1	DALAM PENGERJAAN
2	TEST DRIVE
3	PEMERIKSAAN AKHIR
4	PENCUCIAN
5	TUTUP SPK
6	BATAL SPK
7	INVOICE
8	BATAL INVOICE
9	FAKTUR PAJAK
A	BATAL FAKTUR PAJAK
B	RETUR FAKTUR PAJAK
*/

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<REGISTER SUPPLY SLIP OUTSTANDING>
-- Modified By:	<yo>
-- Modified Date: <01-04-2012>
-- =============================================

--usprpt_SpRpRgs002 '6092401', '609240101', '', '', 'ALL', ''

ALTER procedure [dbo].[usprpt_SpRpRgs002]
	@CompanyCode	VARCHAR(15),
	@BranchCodeFrom	VARCHAR(15),
	@BranchCodeTo	VARCHAR(15),
	@StartDate		VARCHAR(30),
	@EndDate		VARCHAR(30),
	@TransType		VARCHAR(15),
	@TipePart		VARCHAR(15),
	@IsHolding		BIT 
AS
BEGIN
/*

declare	@CompanyCode	VARCHAR(15),
		@BranchCode	VARCHAR(15),	
		@StartDate VARCHAR(30),
		@EndDate VARCHAR(30),
		@TransType VARCHAR(15),
		@TipePart VARCHAR(15)

set	@CompanyCode	= '6006406'
set	@BranchCode	= '6006406'
set	@StartDate = '20120430'
set	@EndDate = '20120430'
set	@TransType = 'ALL'
set	@TipePart = ''
*/

	SELECT 
		a.DocNo,
		a.DocDate,
		a.UsageDocNo,
		a.UsageDocDate,
		(SELECT CustomerName FROM gnMstCustomer WHERE CompanyCode = a.CompanyCode
		AND CustomerCode = a.CustomerCode) as CustomerName,
		'SELURUH JENIS TRANSAKSI' as TransTypeDescHeader,
		b.PartNo,
		(SELECT PartNAme FROM spMstItemInfo WHERE CompanyCode = a.CompanyCode
		AND PartNo = b.PartNo) as PartName,
		(SELECT LookUpValueName FROM gnMstLookUpDtl WHERE CompanyCode = a.CompanyCode
		AND CodeID = 'TTSR' AND LookUpValue = a.TransType) as TransTypeDesc, 
		(e.SupplyQty - e.ReturnQty) as QtyOrder,
		b.RetailPrice,
		b.DiscAmt,
		b.SalesAmt HargaKotor,
		f.TotPPNAmt,
		f.TotFinalSalesAmt as HargaSS,
		(b1.CostPrice * b1.QtyBill) AS HargaPokok,
		a.BranchCode,
		@IsHolding IsHolding
	FROM
		spTrnSORDHdr a
	INNER JOIN spTrnSORDDtl b ON 
		b.CompanyCode = a.CompanyCode AND 
		b.BranchCode = a.BranchCode AND 
		b.DocNo = a.DocNo
	LEFT JOIN spTrnSLmpDtl b1 ON 
		b.CompanyCode = b1.CompanyCode AND 
		b.BranchCode = b1.BranchCode AND 
		b.DocNo = b1.DocNo AND 
		b.PartNo = b1.PartNo	
	INNER JOIN spTrnSLmpHdr f ON
		f.CompanyCode = a.CompanyCode AND
		f.BranchCode = a.BranchCode AND
		f.LmpNo = b1.LmpNo
	LEFT JOIN 
	(
		SELECT c.CompanyCode,c.BranchCode,d.SupplySlipNo as DocNo,c.JobOrderNo as UsageDocNo,d.PartNo,ISNULL(c.ServiceStatus,'0') as ServiceStatus,
		SUM(ISNULL(DemandQty,0)) as DemandQty,
		SUM(ISNULL(SupplyQty,0)) as SupplyQty,
		SUM(ISNULL(ReturnQty,0)) as ReturnQty 
		FROM svTrnService c
		inner join svTrnSrvItem d on c.CompanyCode=d.CompanyCode
		and c.BranchCode=d.BranchCode
		and c.ProductType=d.ProductType
		and c.ServiceNo=d.ServiceNo
		and d.SupplyQty>0
		GROUP BY c.CompanyCode,c.BranchCode,d.SupplySlipNo,c.JobOrderNo,d.PartNo,c.ServiceStatus
	) e ON e.CompanyCode=a.CompanyCode and e.BranchCode=a.BranchCode and e.DocNo=a.DocNo
	and e.UsageDocNo=a.UsageDocNo and e.PartNo=b.PartNo
	WHERE
		a.CompanyCode = @CompanyCode AND
		(case when @BranchCodeFrom = '' then '' else a.BranchCode end) between @BranchCodeFrom and @BranchCodeTo and
		convert(varchar, convert(datetime, (CASE WHEN @StartDate = '' THEN '' ELSE a.DocDate END)), 112) BETWEEN convert(varchar, convert(datetime, @StartDate), 112) 
			AND convert(varchar, convert(datetime, @EndDate), 112) AND 
		(CASE WHEN @TransType = 'ALL' THEN @TransType ELSE a.TransType END) = @TransType AND
		a.SalesType = '2' AND
		e.ServiceStatus < '6' AND
		a.TypeOfGoods = (CASE WHEN @TipePart = '' THEN a.TypeOfGoods ELSE @TipePart END) 
	ORDER BY
		a.BranchCode,
		a.DocNo
END
GO
ALTER procedure [dbo].[uspfn_sfEmpMutation_SdmsWeb]
	@CompanyCode  varchar(20) = '%',
	@BranchCode   varchar(20) = '%',
	@pDate        char(8)
as

--declare @CompanyCode varchar(20), @BranchCode varchar(20), @pDate char(8)
--select @CompanyCode = '%', @BranchCode = '%', @pDate = '20130320'
--uspfn_sfEmpMutation_SdmsWeb default, default, '20130301'
--select * from SfHistEmplMutation
--select * from SyncEmployee

;with x as (
select a.CompanyCode, a.BranchCode, b.CompanyName, a.BranchName from gnMstOrganizationDtl a
	left join gnmstorganizationhdr b on a.CompanyCode = b.CompanyCode
	)
select * into #rebuildCompany from x
order by x.CompanyCode, x.BranchCode

select CompanyCode, CompanyName, BranchCode, BranchName  
     , EmpBeg = isnull((  
        select count(*) from sfHistEmplMutation  
         where CompanyCode = a.CompanyCode  
           and BranchCode = a.BranchCode  
           and DeptCode = 'SALES'  
           and PosCode = 'S'  
           and MutaType = 'IN'  
           and left(convert(varchar, MutaDate, 112), 6) < left(@pDate, 6)  
           and exists (select 1 from SyncEmployee where sfHistEmplMutation.CompanyCode = CompanyCode and sfHistEmplMutation.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)
		   and isnull(sfHistEmplMutation.IsDeleted, 0) = 0
       ), 0)  
       - isnull((  
        select count(*) from sfHistEmplMutation m  
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'OUT'  
           and left(convert(varchar, m.MutaDate, 112), 6) < left(@pDate, 6)  
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
		   and isnull(m.IsDeleted, 0) = 0 
       ), 0)  
     , EmpJoin = isnull((  
        select count(*) from sfHistEmplMutation  
         where CompanyCode = a.CompanyCode  
           and BranchCode = a.BranchCode  
           and DeptCode = 'SALES'  
           and PosCode = 'S'  
           and left(convert(varchar, MutaDate, 112), 6) = left(@pDate, 6)  
           and convert(varchar, MutaDate, 112) <= @pDate  
           and MutaType = 'IN'  
           and MutaCode = 'JOIN'  
           and exists (select 1 from SyncEmployee where sfHistEmplMutation.CompanyCode = CompanyCode and sfHistEmplMutation.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
		   and isnull(sfHistEmplMutation.IsDeleted, 0) = 0  
       ), 0)  
     , EmpMutaIn = isnull((  
        select count(*) from sfHistEmplMutation  
         where CompanyCode = a.CompanyCode  
           and BranchCode = a.BranchCode  
           and DeptCode = 'SALES'  
           and PosCode = 'S'  
           and left(convert(varchar, MutaDate, 112), 6) = left(@pDate, 6)  
           and convert(varchar, MutaDate, 112) <= @pDate  
           and MutaType = 'IN'  
           and MutaCode != 'JOIN'  
           and exists (select 1 from SyncEmployee where sfHistEmplMutation.CompanyCode = CompanyCode and sfHistEmplMutation.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)
		   and isnull(sfHistEmplMutation.IsDeleted, 0) = 0		   
       ), 0)  
     , EmpResign = isnull((  
        select count(*) from sfHistEmplMutation m  
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and left(convert(varchar, m.MutaDate, 112), 6) = left(@pDate, 6)  
           and convert(varchar, m.MutaDate, 112) <= @pDate  
           and m.MutaType = 'OUT'  
        and m.MutaCode = 'RESIGN'  
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
		   and isnull(m.IsDeleted, 0) = 0	
       ), 0)  
     , EmpMutaOut = isnull((  
        select count(*) from sfHistEmplMutation m  
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and left(convert(varchar, m.MutaDate, 112), 6) = left(@pDate, 6)  
           and convert(varchar, m.MutaDate, 112) <= @pDate  
           and m.MutaType = 'OUT'  
           and m.MutaCode != 'RESIGN'  
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
		   and isnull(m.IsDeleted, 0) = 0
       ), 0)  
     , EmpAll = isnull((  
        select count(*) from sfHistEmplMutation  
         where CompanyCode = a.CompanyCode  
           and BranchCode = a.BranchCode  
           and DeptCode = 'SALES'  
           and PosCode = 'S'  
           and MutaType = 'IN'  
           and convert(varchar, MutaDate, 112) <= @pDate  
           and exists (select 1 from SyncEmployee where sfHistEmplMutation.CompanyCode = CompanyCode and sfHistEmplMutation.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
		   and isnull(sfHistEmplMutation.IsDeleted, 0) = 0
       ), 0)  
       - isnull((  
        select count(*) from sfHistEmplMutation m  
         where m.CompanyCode = a.CompanyCode  
           and m.BranchCode = a.BranchCode  
           and m.DeptCode = 'SALES'  
           and m.PosCode = 'S'  
           and m.MutaType = 'OUT'  
           and convert(varchar, m.MutaDate, 112) <= @pDate  
           and exists (select 1 from SyncEmployee where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and isnull(SalesID, '') != '' and isnull(IsDeleted, 0) = 0)  
           and exists (select 1 from sfHistEmplMutation where m.CompanyCode = CompanyCode and m.EmployeeID = EmployeeID and MutaCode = 'JOIN')  
		   and isnull(m.IsDeleted, 0) = 0
       ), 0)         
  from #rebuildCompany a
 where CompanyCode like @CompanyCode  
   and BranchCode like @BranchCode  
 order by CompanyName, BranchName
 
select isnull((select top 1 CompanyName from GnMstOrganizationHdr where CompanyCode = @CompanyCode), 'All Dealer') headercompanyname, replace(convert(varchar,convert(datetime,@pDate),106),' ','-') as FilterDate
GO
ALTER procedure [dbo].[uspfn_SvTrnServiceSaveItem]  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),  
 @ProductType varchar(15),  
 @ServiceNo bigint,  
 @BillType varchar(15),  
    @PartNo varchar(20),  
    @DemandQty numeric(18,2),  
    @PartSeq numeric(5,2),  
 @UserID varchar(15),  
 @DiscPct numeric(5,2)  
  
as        

 
--declare  @CompanyCode varchar(15),  
-- @BranchCode varchar(15),  
-- @ProductType varchar(15),  
-- @ServiceNo bigint,  
-- @BillType varchar(15),  
--    @PartNo varchar(20),  
--    @DemandQty numeric(18,2),  
--    @PartSeq numeric(5,2),  
-- @UserID varchar(15),  
-- @DiscPct numeric(5,2)  
  
--set @CompanyCode = '6156401000'  
--set @BranchCode = '6156401001'  
--set @ProductType = '4W'  
--set @ServiceNo = 49190  
--set @BillType = 'C'  
--set @PartNo = '01107-06127-000'  
--set @DemandQty = 5  
--set @PartSeq = -1  
--set @UserID = 'Trainingzzz'  
--set @DiscPct = 0  
  
  
declare @errmsg varchar(max)  
declare @QueryTemp as varchar(max)  
declare @IsSPK as char(1)
  
begin try  
 -- select data svTrnService  
 select * into #srv from (  
   select a.* from svTrnService a  
  where 1 = 1  
    and a.CompanyCode = @CompanyCode  
    and a.BranchCode  = @BranchCode  
    and a.ProductType = @ProductType  
    and a.ServiceNo   = @ServiceNo  
 )#srv  
   
 declare @CostPrice as decimal  
 declare @RetailPrice as decimal  
 declare @TypeOfGoods as varchar(2)  
 declare @CostPriceMD as decimal  
 declare @RetailPriceMD as decimal  
 declare @RetailPriceInclTaxMD as decimal  
   
 declare @DealerCode as varchar(2)  
 declare @CompanyMD as varchar(15)  
 declare @BranchMD as varchar(15)  
 declare @WarehouseMD as varchar(15)  
  
 set @DealerCode = 'MD'  
 set @CompanyMD = (select CompanyMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)  
 set @BranchMD = (select BranchMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)  
 set @WarehouseMD = (select WarehouseMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)  
 
if object_id('#tmpSvSDMovement') is not null drop table #tmpSvSDMovement
   
 if (@CompanyCode != @CompanyMD and @BranchCode != @BranchMD)   
 begin  
  set @DealerCode = 'SD'  

  set @IsSPK = isnull((select a.ServiceType from #srv a where a.ServiceType = '2'),0)
  
  declare @DbName as varchar(50)  
  set @DbName = (select DbMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)  
  
  declare @PurchaseDisc as decimal  
  set @PurchaseDisc = (select isnull(DiscPct, 0) from gnMstSupplierProfitCenter   
       where CompanyCode = @CompanyCode   
       and BranchCode = @BranchCode  
       and SupplierCode = @BranchMD
       and ProfitCenterCode = '300')  
         
  if (@PurchaseDisc = 0) raiserror ('Purchase Discount belum di-setting untuk Part tersebut!',16,1);            
       
  declare @tblTemp as table  
  (  
   CostPrice decimal(18,2),  
   RetailPrice decimal(18,2),  
   RetailPriceInclTax decimal(18,2),  
   TypeOfGoods varchar (2)  
  )  
       
  set @QueryTemp = 'select   
    a.CostPrice   
   ,a.RetailPrice  
   ,a.RetailPriceInclTax  
   ,b.TypeOfGoods  
     from ' + @DbName + '..spMstItemPrice a, ' + @DbName +'..spMstItems b  
   where 1 = 1  
     and a.CompanyCode = b.CompanyCode  
     and a.BranchCode = b.BranchCode  
     and a.PartNo = b.PartNo  
     and a.CompanyCode = ''' + @CompanyMD + '''  
     and a.BranchCode  = ''' + @BranchMD + '''  
     and a.PartNo      = ''' + @PartNo + ''''  
          
  insert into @tblTemp    
  exec (@QueryTemp)  
  
  --select * into #part1 from (  
  --select * from @tblTemp  
  --)#part1  
    
  set @CostPrice = ((select RetailPrice from @tblTemp) / 1.1 * ((100 - @PurchaseDisc) / 100))  
  --select @CostPrice  
  set @RetailPrice = (select RetailPrice from @tblTemp)
  --select a.RetailPrice from spMstItemPrice a where a.CompanyCode = @CompanyCode and a.BranchCode = @BranchCode and a.PartNo = @PartNo)    
  set @TypeOfGoods = (select TypeOfGoods from @tblTemp)  
    
  set @CostPriceMD = (select CostPrice from @tblTemp)  
  set @RetailPriceMD = (select RetailPrice from @tblTemp)  
  set @RetailPriceInclTaxMD = (select RetailPriceInclTax from @tblTemp)  
    
  -- select @PurchaseDisc  
 end   
 else  
 begin
 
 declare @tblTempPart as table  
  (  
   CostPrice decimal(18,2),  
   RetailPrice decimal(18,2),  
   RetailPriceInclTax decimal(18,2),  
   TypeOfGoods varchar (2)  
  )  

  set @QueryTemp = 'select   
    a.CostPrice   
   ,a.RetailPrice  
     from ' + @DbName + '..spMstItemPrice a  
   where 1 = 1  
     and a.CompanyCode = ''' + @CompanyMD + '''  
     and a.BranchCode  = ''' + @BranchMD + '''  
     and a.PartNo      = ''' + @PartNo + ''''  
          
  insert into @tblTempPart    
  exec (@QueryTemp)  
   
  --select * into #part from (  
  --select   
  --  a.CostPrice   
  -- ,a.RetailPrice  
  --  from spMstItemPrice a  
  -- where 1 = 1  
  --   and a.CompanyCode = @CompanyCode  
  --   and a.BranchCode  = @BranchCode  
  --   and a.PartNo      = @PartNo  
  --)#part  
    
  set @CostPrice = (select CostPrice from @tblTempPart)  
  set @RetailPrice = (select RetailPrice from @tblTempPart)  
 end  
      
 if (@PartSeq > 0)  
 begin    
  -- select data mst job  
  select * into #job from (  
  select b.*  
    from svTrnService a, svMstJob b  
   where 1 = 1  
     and b.CompanyCode = a.CompanyCode  
     and b.ProductType = a.ProductType  
     and b.BasicModel = a.BasicModel  
     and b.JobType = a.JobType  
        and a.CompanyCode = @CompanyCode  
     and a.BranchCode  = @BranchCode  
     and a.ServiceNo   = @ServiceNo  
     and b.GroupJobType = 'FSC'  
  )#  
  if exists (select * from #job)  
  begin  
   -- update svTrnSrvItem  
   set @Querytemp ='
   update svTrnSrvItem set  
     DemandQty      = '+ convert(varchar,@DemandQty) +'
    ,CostPrice      = '+ convert(varchar,@CostPrice) +' 
    ,RetailPrice    = isnull((  
         select top 1 b.RetailPrice from #srv a, svMstTaskPart b  
          where b.CompanyCode = a.CompanyCode  
            and b.ProductType = a.ProductType  
            and b.BasicModel = a.BasicModel  
            and b.JobType = a.JobType  
            and b.PartNo = '''+ @PartNo +''' 
            and b.BillType = ''F'' 
         ), (  
          select top 1 isnull(RetailPrice, 0) RetailPrice  
            from '+ @DbName +'..spMstItemPrice  
           where 1 = 1  
             and CompanyCode = '''+ @CompanyMD +'''
             and BranchCode = '''+ @BranchMD +'''
             and PartNo = '''+ @PartNo  +'''
          )  
         )  
    ,LastupdateBy   = (select LastupdateBy from #srv)  
    ,LastupdateDate = (select LastupdateDate from #srv)  
    ,BillType       = '''+ @BillType +'''
    ,DiscPct        = '+ convert(varchar,@DiscPct) +'  
    where 1 = 1  
      and CompanyCode  = '''+ @CompanyCode +''' 
      and BranchCode   = '''+ @BranchCode +''' 
      and ProductType  = (select ProductType from #srv)  
      and ServiceNo    = (select ServiceNo from #srv)  
      and PartNo       = '''+ @PartNo +''' 
      and PartSeq      = '+ convert(varchar,@PartSeq) +'' 
	  
	  exec(@QueryTemp) 
  end  
  else  
  begin  
   -- update svTrnSrvItem  
   update svTrnSrvItem set  
     DemandQty      = @DemandQty  
    ,CostPrice      = @CostPrice  
    ,RetailPrice    = @RetailPrice  
    ,LastupdateBy   = (select LastupdateBy from #srv)  
    ,LastupdateDate = (select LastupdateDate from #srv)  
    ,BillType       = @BillType  
    ,DiscPct        = @DiscPct  
    where 1 = 1  
      and CompanyCode  = @CompanyCode  
      and BranchCode   = @BranchCode  
      and ProductType  = (select ProductType from #srv)  
      and ServiceNo    = (select ServiceNo from #srv)  
      and PartNo       = @PartNo  
      and PartSeq      = @PartSeq           
  end   
    
  --update svSDMovement  
    if (@DealerCode = 'SD' and @IsSPK = '2')  
	 begin    
		set @QueryTemp = 'update ' + @DbName + '..svSDMovement set    
		QtyOrder    = ' + case when @DemandQty is null then '0' else convert(varchar, @DemandQty) end + ' 
		,DiscPct    = ' + case when  @DiscPct is null then '0' else convert(varchar, @DiscPct) end + '
		,CostPrice    = ' + case when @CostPrice is null then '0' else convert(varchar, @CostPrice) end + '  
		,RetailPrice   = ' + case when @RetailPrice is null then '0' else convert(varchar, @RetailPrice) end + '  
		,CostPriceMD   = ' + case when @CostPriceMD is null then '0' else convert(varchar, @CostPriceMD) end + '  
		,RetailPriceMD   = ' + case when @RetailPriceMD is null then '0' else convert(varchar, @RetailPriceMD) end + '  
		,RetailPriceInclTaxMD = ' + case when @RetailPriceInclTaxMD is null then '0' else convert(varchar, @RetailPriceInclTaxMD) end + '  
		,[Status]  = ''' + case when (select ServiceStatus from #srv) is null then '''' else (select ServiceStatus from #srv) end + '''  
		,LastupdateBy   = ''' + case when (select LastupdateBy from #srv) is null then '''' else (select LastupdateBy from #srv) end + '''  
		,LastupdateDate = ''' + case when (select LastupdateDate from #srv) is null then '''' else convert(varchar,(select LastupdateDate from #srv)) end + '''  
	    where CompanyCode = ''' + case when @CompanyCode is null then '''' else @CompanyCode end + '''
		  and BranchCode = ''' + case when @BranchCode is null then '''' else @BranchCode end + '''
		  and DocNo  = ''' + case when (select JobOrderNo from #srv) is null then '''' else (select JobOrderNo from #srv) end + '''  
		  and PartNo       =  ''' + case when @PartNo is null then '''' else @PartNo end  + '''
		  and PartSeq      = ' + case when @PartSeq is null then '0' else convert(varchar, @PartSeq) end + '';  
		  
		  --print @QueryTemp;  
		  exec 	(@QueryTemp);
	  end
 end  
 else  
 begin  
  if((select count(*) from svTrnSrvItem  
    where 1 = 1  
      and CompanyCode  = @CompanyCode  
      and BranchCode   = @BranchCode  
      and ProductType  = (select ProductType from #srv)  
      and ServiceNo    = (select ServiceNo from #srv)  
      and PartNo       = @PartNo  
      and (isnull(SupplySlipNo,'') = '')  
   ) > 0)  
  begin  
   raiserror ('Part yang sama sudah diproses di Entry SPK namun belum dapat No SSS, mohon diselesaikan dahulu!',16,1);  
  end  
  
  declare @PartSeqNew as int  
  set @PartSeqNew = (isnull((select isnull(max(PartSeq), 0) + 1    
      from svTrnSrvItem   
        where CompanyCode = @CompanyCode  
       and BranchCode  = @BranchCode   
       and ProductType = @ProductType  
       and ServiceNo   = @ServiceNo  
       and PartNo      = @PartNo), 1))  
         
  -- insert svTrnSrvItem  
  set @QueryTemp='insert into svTrnSrvItem (CompanyCode, BranchCode, ProductType, ServiceNo, PartNo, PartSeq, DemandQty, SupplyQty, ReturnQty, CostPrice, RetailPrice, TypeOfGoods, BillType, SupplySlipNo, SupplySlipDate, SSReturnNo, SSReturnDate, CreatedBy, CreatedDate, LastupdateBy, LastupdateDate, DiscPct, MechanicID)  
  select   
    '''+ @CompanyCode +''' CompanyCode  
   ,''' + @BranchCode +''' BranchCode  
   ,'''+ @ProductType +''' ProductType  
   ,'+ convert(varchar,@ServiceNo) +' ServiceNo  
   ,a.PartNo  
   ,'''+ convert(varchar,@PartSeqNew)  +'''
   --,(row_number() over (order by a.PartNo)) PartSeq  
   ,'+ convert(varchar,@DemandQty )+' DemandQty  
   ,''0'' SupplyQty  
   ,''0'' ReturnQty  
   ,'+ convert(varchar,isnull(@CostPrice,0))  +'
   ,a.RetailPrice   
   ,b.TypeOfGoods  
   ,'''+ @BillType +''' BillType  
   ,null SupplySlipNo  
   ,null SupplySlipDate  
   ,null SSReturnNo  
   ,null SSReturnDate  
   ,c.LastupdateBy CreatedBy  
   ,c.LastupdateDate CreatedDate  
   ,c.LastupdateBy  
   ,c.LastupdateDate  
   ,'+ convert(varchar,isnull(@DiscPct,0))  +'
   ,(select MechanicID from svTrnService where CompanyCode = '''+ @CompanyCode +''' and BranchCode = '''+ @BranchCode +''' and ServiceNo = '+ convert(varchar,@ServiceNo) +')  
    from '+ @DbName +'..spMstItemPrice a, '+ @DbName +'..spMstItems b, #srv c, gnmstcompanymapping d 
   where 1 = 1  
        and a.CompanyCode = b.CompanyCode  
     and a.BranchCode  = b.BranchCode  
	 and d.CompanyMd = a.CompanyCode
	 and d.BranchMD = a.BranchCode
        and d.CompanyCode = c.CompanyCode  
     and d.BranchCode  = c.BranchCode  
     and b.PartNo      = a.PartNo  
        and a.CompanyCode = '''+ @CompanyMD +'''
     and a.BranchCode  = '''+ @BranchMD +'''
     and a.PartNo      = '''+ @PartNo +''''    
	  exec(@QueryTemp)


  --select   @CostPrice   
  --xxx
  
  if (@DealerCode = 'SD' and @IsSPK = '2')  
  begin
	create table #tmpSvSDMovement(
		CompanyCode varchar(15)
		,BranchCode varchar(15)
		,JobOrderNo varchar(20)   
		,JobOrderDate datetime  
		,PartNo varchar(20)
		,PartSeqNew int
		,WarehouseMD varchar(20)   
		,DemandQty numeric(18,2)
		,Qty numeric(18,2)
		,DiscPct numeric(18,2)
		,CostPrice numeric(18,2)
		,RetailPrice numeric(18,2) 
		,TypeOfGoods varchar(15) 
		,CompanyMD varchar(15)
		,BranchMD varchar(15)   
		,WarehouseMD2 varchar(15)
		,RetailPriceInclTaxMD numeric(18,2) 
		,RetailPriceMD numeric(18,2) 
		,CostPriceMD numeric(18,2)  
		,QtyFlag char(1)
		,ProductType varchar(15) 
		,ProfitCenterCode varchar(15)
		,Status char(1)
		,ProcessStatus char(1)
		,ProcessDate datetime 
		,CreatedBy varchar(15) 
		,CreatedDate datetime 
		,LastUpdateBy varchar(15) 
		,LastUpdateDate datetime	
	);
   
	insert into #tmpSvSDMovement 
		select case when @CompanyCode is null then '' else @CompanyCode end 
		,case when @BranchCode is null then '' else @BranchCode end
		,case when (select JobOrderNo from #srv) is null then '' else (select JobOrderNo from #srv) end
		,case when (select JobOrderDate from #srv) is null then '1900/01/01' else (select JobOrderDate from #srv) end 
		,case when @PartNo is null then '' else  @PartNo end 
		,case when @PartSeqNew is null then '0' else convert(varchar, @PartSeqNew) end
		,case when @WarehouseMD is null then '' else @WarehouseMD end  
		,case when @DemandQty  is null then '0' else convert(varchar, @DemandQty) end
     	,case when @DemandQty  is null then '0' else convert(varchar, @DemandQty) end
		,case when @DiscPct is null then '0' else convert(varchar, @DiscPct) end  
		,case when @CostPrice is null then '0' else convert(varchar, @CostPrice) end 
		,case when @RetailPrice is null then '0' else convert(varchar, @RetailPrice) end  
		,case when @TypeOfGoods is null then '' else @TypeOfGoods end 
		,case when @CompanyMD is null then '' else @CompanyMD end   
		,case when @BranchMD is null then '' else @BranchMD end  
		,case when @WarehouseMD is null then '' else @WarehouseMD end  
		,case when @RetailPriceInclTaxMD is null then '0' else convert(varchar, @RetailPriceInclTaxMD) end  
		,case when @RetailPriceMD is null then '0' else convert(varchar, @RetailPriceMD) end   
		,case when @CostPriceMD is null then '0' else convert(varchar, @CostPriceMD) end
		,'x'
		,case when @ProductType is null then '' else @ProductType end  
		,'300'  
		,'0' 
		,'0'
		,'1900/01/01'  
		,case when (select CreatedBy from #srv) is null then '' else (select CreatedBy from #srv) end     
		,case when (select CreatedDate from #srv) is null then '1900/01/01' else convert(varchar,(select CreatedDate from #srv)) end 
		,case when (select LastUpdateBy from #srv) is null then '' else (select LastUpdateBy from #srv) end
		,case when (select LastUpdateDate from #srv) is null then '1900/01/01' else convert(varchar,(select LastUpdateDate from #srv)) end
     
	set @QueryTemp = '
	insert into ' + @DbName + '..svSDMovement (CompanyCode, BranchCode, DocNo, DocDate, PartNo, PartSeq, WarehouseCode, QtyOrder, Qty, DiscPct, CostPrice, RetailPrice,   
	TypeOfGoods, CompanyMD, BranchMD, WarehouseMD, RetailPriceInclTaxMD, RetailPriceMD, CostPriceMD, QtyFlag, ProductType, ProfitCenterCode, 
	Status, ProcessStatus, ProcessDate, CreatedBy,   
	CreatedDate, LastUpdateBy, LastUpdateDate)  
	select * from #tmpSvSDMovement';
	exec(@QueryTemp);
	
	drop table #tmpSvSDMovement;     
  
  end   
 end  
   
 update svTrnSrvItem  
    set DiscPct = @DiscPct  
  where 1 = 1  
    and CompanyCode = @CompanyCode  
    and BranchCode = @BranchCode  
    and ProductType = @ProductType  
    and ServiceNo = @ServiceNo  
    and PartNo = @PartNo  
   
 if (@DealerCode = 'SD' and @IsSPK = '2')  
 begin    
	set @QueryTemp = 'update ' + @DbName + '..svSDMovement   
	  set DiscPct = ' + convert(varchar,@DiscPct) 
	  + ' where 1 = 1'  
	  +	' and CompanyCode = ''' + case when @CompanyMD is null then '''' else  @CompanyMD end + ''''
	  + ' and BranchCode = ''' + case when @BranchMD is null then '''' else  @BranchMD end + ''''
	  + ' and DocNo = ''' + case when (select JobOrderNo from #srv) is null then '''' else (select JobOrderNo from #srv) end  + ''''
	  + ' and PartNo = ''' + case when @PartNo is null then '''' else @PartNo end + ''''  
	  + ' and PartSeq = ' + convert(varchar,@PartSeq) + '';
  
	exec (@QueryTemp)  
 end  
   
	drop table #srv  
end try  
begin catch  
 set @errmsg = error_message()  
 raiserror (@errmsg,16,1);  
end catch  

--rollback tran
GO
ALTER procedure [dbo].[usprpt_SpRpSum020] 
	@CompanyCode VARCHAR(15),
	@Month	INT,
	@Year INT,
	@TypeOfGoods VARCHAR(1)
	
AS
BEGIN

--usprpt_SpRpSum020 '6120201',6,2014,'0'
--
--DECLARE @CompanyCode VARCHAR(15)
--DECLARE @Month INT
--DECLARE @YEAR INT
--DECLARE @TypeOfGoods VARCHAR(15)
--declare @branchcode varchar(15)

--SET @CompanyCode = '6120201' 
--set @branchcode = '612020101' 
--SET	@Month = 6
--SET @YEAR = 2014
--SET @TypeOfGoods = '0'

SELECT * INTO #t1 FROM(
SELECT     
    a.CompanyCode  
  , a.BranchCode
  , ISNULL(SUM(b.SalesAmt), 0) PenjualanBruttoSales  
  , ISNULL(SUM(b.DiscAmt), 0) DiscountPenjualanSales   
  , ISNULL(SUM(b.NetSalesAmt), 0) PenjualanNettoSales 
  , ISNULL(SUM(b.CostPrice * b.QtyBill), 0) AS HPPBiayaSales 
  , ISNULL((SUM(b.NetSalesAmt) - SUM(b.CostPrice * b.QtyBill)), 0) LabaRugiSales 
 FROM SpTrnSFPJHdr a 
  LEFT JOIN SpTrnSFPJDtl b ON 
	a.CompanyCode = b.CompanyCode   
   AND a.BranchCode = b.BranchCode   
   AND a.FPJNo = b.FPJNo  
 WHERE  
	a.CompanyCode = @CompanyCode
	AND (MONTH(a.FPJDate) = @Month AND YEAR(a.FPJDate) = @YEAR)
	AND (CASE WHEN @TypeOfGoods <> '' THEN a.TypeOfGoods ELSE @TypeOfGoods END) = @TypeOfGoods 
GROUP BY 
	a.CompanyCode
    , a.BranchCode
) #t1

SELECT * INTO #t2 FROM(
SELECT     
   a.CompanyCode  
  , a.BranchCode
  , ISNULL(SUM(b.SalesAmt), 0) PenjualanBruttoSrv  
  , ISNULL(SUM(b.DiscAmt), 0) DiscountPenjualanSrv   
  , ISNULL(SUM(b.NetSalesAmt), 0) PenjualanNettoSrv 
  , ISNULL(SUM(b.CostPrice * b.QtyBill), 0) AS HPPBiayaSrv 
  , ISNULL((SUM(b.NetSalesAmt) - SUM(b.CostPrice * b.QtyBill)), 0) LabaRugiSrv 
 FROM spTrnSLmpHdr a 
  LEFT JOIN spTrnSLmpDtl b ON 
	a.CompanyCode = b.CompanyCode   
   AND a.BranchCode = b.BranchCode   
   AND a.LmpNo = b.LmpNo    
 WHERE  
	a.CompanyCode = @CompanyCode
	AND (MONTH(a.LmpDate) = @Month AND YEAR(a.LmpDate) = @Year)
	AND (CASE WHEN @TypeOfGoods <> '' THEN a.TypeOfGoods ELSE @TypeOfGoods END) = @TypeOfGoods 
GROUP BY 
	a.CompanyCode
    , a.BranchCode
) #t2
ORDER BY BranchCode ASC  

--select * from #t1 where BranchCode=@branchcode
--select * from #t2 where BranchCode=@branchcode
SELECT 
	row_number() over (order by org.BranchCode) No
	, BranchName
	, ISNULL(#t1.PenjualanBruttoSales, 0) PenjualanBruttoSales
	, ISNULL(#t1.DiscountPenjualanSales, 0) DiscountPenjualanSales
	, ISNULL(#t1.PenjualanNettoSales, 0) PenjualanNettoSales
	, ISNULL(#t1.HPPBiayaSales, 0) HPPBiayaSales
	, ISNULL(#t1.LabaRugiSales, 0) LabaRugiSales
	, ISNULL(#t2.PenjualanBruttoSrv, 0) PenjualanBruttoSrv
	, ISNULL(#t2.DiscountPenjualanSrv, 0) DiscountPenjualanSrv
	, ISNULL(#t2.PenjualanNettoSrv, 0) PenjualanNettoSrv
	, ISNULL(#t2.HPPBiayaSrv, 0) HPPBiayaSrv
	, ISNULL(#t2.LabaRugiSrv, 0) LabaRugiSrv
	--, ISNULL(#t1.PenjualanBruttoSales + #t2.PenjualanBruttoSrv, 0) TotPenjualanBrutto
	, ISNULL(#t1.PenjualanBruttoSales,0) + isnull(#t2.PenjualanBruttoSrv, 0) TotPenjualanBrutto
	--, ISNULL(#t1.DiscountPenjualanSales + #t2.DiscountPenjualanSrv, 0) TotDiscountPenjualan
	, ISNULL(#t1.DiscountPenjualanSales,0) + isnull(#t2.DiscountPenjualanSrv, 0) TotDiscountPenjualan
	--, ISNULL(#t1.PenjualanNettoSales + #t2.PenjualanNettoSrv, 0) TotPenjualanNetto
	, ISNULL(#t1.PenjualanNettoSales,0) + isnull(#t2.PenjualanNettoSrv, 0) TotPenjualanNetto
	--, ISNULL(#t1.HPPBiayaSales + #t2.HPPBiayaSrv, 0) TotHPPBiaya
	, ISNULL(#t1.HPPBiayaSales,0) + isnull(#t2.HPPBiayaSrv, 0) TotHPPBiaya
	--, ISNULL(#t1.LabaRugiSales + #t2.LabaRugiSrv, 0) TotLabaRugi
	, ISNULL(#t1.LabaRugiSales,0) + isnull(#t2.LabaRugiSrv, 0) TotLabaRugi
		
FROM gnMstOrganizationDtl org
	LEFT JOIN #t1 
		ON #t1.CompanyCode = org.CompanyCode
		AND #t1.BranchCode = org.BranchCode
	LEFT JOIN #t2 
		ON #t2.CompanyCode = org.CompanyCode
		AND #t2.BranchCode = org.BranchCode

DROP TABLE #t1
DROP TABLE #t2

END

--usprpt_SpRpSum020 '6114201', 11, 2010, ''
GO
ALTER PROCEDURE [dbo].[uspfn_spPartSales]  
AS  
  
BEGIN  
 declare @Date        date  
 declare @PeriodStart date  
 declare @PeriodEnd   date  
 declare @curDate  datetime  
 declare @CompanyCode varchar(15)  
  
 -- Setup collection date  
 set @Date        = getdate() --convert(date,'2014/04/30')  
    set @curDate     = getdate()  
 set @CompanyCode = isnull((select top 1 CompanyCode from gnMstOrganizationHdr),'9999999')  
 if not exists (select ParaValue from gnMstLookUpDtl  
                 where CompanyCode=@CompanyCode  
                   and CodeID     ='SEND'  
                   and LookUpValue='PARTSALES')  
  begin  
   insert into gnMstLookUpHdr  
      (CompanyCode, CodeID, CodeName, FieldLength, isNumber,   
       CreatedBy, CreatedDate, LastUpdateBy, LastUpdateDate,   
       isLocked, LockingBy, LockingDate)  
      values(@CompanyCode, 'SEND','PART SALES DATA SCHEDULE', 0, 0,  
       'AUTOMATIC', @Date, NULL, NULL, 0, NULL, NULL)  
   insert into gnMstLookUpDtl  
      (CompanyCode, CodeID, LookUpValue, SeqNo, ParaValue, LookUpValueName,  
       CreatedBy, CreatedDate, LastUpdateBy, LastUpdateDate)  
      values(@CompanyCode, 'SEND', 'PARTSALES', 1, convert(varchar,@Date,111),   
       'STARTING PART SALES DATE', 'AUTOMATIC', @Date, NULL, NULL)  
   set @PeriodStart = convert(date,'2014/01/01')  
   set @PeriodEnd   = dateadd(day,-1,@Date)  
  end  
 else  
  begin  
   set @PeriodStart = dateadd(day,-7,@Date)    
   set @PeriodEnd   = dateadd(day,-1,@Date)  
  end  
  
 -- Setup Part Sales table  
 if not exists (select * from sys.objects   
                     where object_id = object_id(N'[spHstPartSales]') and type=N'U')  
  create table [spHstPartSales]  
   (  
   [RecordID]   [uniqueidentifier] NOT NULL,  
   [RecordDate]  [datetime]   NOT NULL,  
   [CompanyCode]  [varchar](15)  NOT NULL,  
   [BranchCode]  [varchar](15)  NOT NULL,  
   [InvoiceNo]   [varchar](15)  NOT NULL,  
   [InvoiceDate]  [datetime]   NOT NULL,  
   [FPJNo]    [varchar](15)  NOT NULL,  
   [FPJDate]   [datetime]   NOT NULL,  
   [CustomerCode]  [varchar](15)  NOT NULL,  
   [CustomerName]  [varchar](100)  NOT NULL,  
   [CustomerClass]  [varchar](15)  NOT NULL,  
   [PartNo]   [varchar](20)  NOT NULL,  
   [PartName]   [varchar](100)  NULL,  
   [TypeOfGoods]  [char]   (1)  NOT NULL,  
   [TypeOfGoodsDesc] [varchar](30)  NOT NULL,  
   [QtyBill]   [numeric]( 9,2)  NOT NULL,  
   [CostPrice]   [numeric](12,0)  NOT NULL,  
   [RetailPrice]  [numeric](12,0)  NOT NULL,  
   [DiscPct]   [numeric]( 5,2)  NOT NULL,  
   [DiscAmt]   [numeric](12,0)  NOT NULL,  
   [NetSalesAmt]  [numeric](12,0)  NOT NULL,  
   [SendDate]   [datetime]   NULL,  
   constraint [PK_spHstPartSales] primary key clustered   
   ( [RecordID] ASC)  
   with (pad_index=OFF, statistics_norecompute=OFF, ignore_dup_key=OFF,   
     allow_row_locks=ON, allow_page_locks=ON) ON [PRIMARY]  
   ) on [PRIMARY]  
  
 -- Data Collection  
 select * into #SGO  
   from ( select h.CompanyCode, h.BranchCode, h.InvoiceNo, h.InvoiceDate,   
     h.FPJNo, h.FPJDate, h.CustomerCode, c.CustomerName,   
     CustomerClass = case when c.CategoryCode='00' then 'MAIN DEALER'  
           when c.CategoryCode='01' then 'SUB DEALER'  
           when c.CategoryCode='15' then 'PART SHOP'  
           else                          'DIRECT CUSTOMER'  
         end,  
     d.PartNo, i.PartName, h.TypeOfGoods,   
     TypeOfGoodsDesc = isnull((select LookUpValueName from gnMstLookUpDtl  
              where CompanyCode=h.CompanyCode  
             and CodeID='TPGO'  
             and LookUpValue=h.TypeOfGoods),''),  
     d.QtyBill, d.CostPrice, d.RetailPrice, d.DiscPct, d.DiscAmt, d.NetSalesAmt  
      from spTrnSInvoiceHdr h  
     inner join gnMstCustomer c  
       on h.CompanyCode=c.CompanyCode  
      and h.CustomerCode=c.CustomerCode  
     inner join spTrnSInvoiceDtl d  
       on h.CompanyCode=d.CompanyCode  
      and h.BranchCode=d.BranchCode  
      and h.InvoiceNo=d.InvoiceNo  
     inner join spMstItemInfo i  
       on d.CompanyCode=i.CompanyCode  
      and d.PartNo=i.PartNo  
  where 1=1  --h.TypeOfGoods in ('1','2','5')  -- 0:SGP, 1:SGO, 2:SGA, 3:NON SGP, 4:OTHERS, 5:NON SGA  
    and convert(varchar,h.InvoiceDate,111) between @PeriodStart and @PeriodEnd  
    and not exists (select top 1 1 from spHstPartSales  
                     where CompanyCode=h.CompanyCode  
        and BranchCode =h.BranchCode  
        and InvoiceNo  =h.InvoiceNo  
        and FPJNo      =h.FPJNo  
        and PartNo     =d.PartNo)  
  union all  
 select h.CompanyCode, h.BranchCode, h.LmpNo InvoiceNo, h.CreatedDate InvoiceDate,   
     h.BPSFNo, h.BPSFDate, h.CustomerCode, c.CustomerName,   
     'SERVICE' CustomerClass, d.PartNo, i.PartName, h.TypeOfGoods,   
     TypeOfGoodsDesc = isnull((select LookUpValueName from gnMstLookUpDtl  
           where CompanyCode=h.CompanyCode  
          and CodeID='TPGO'  
          and LookUpValue=h.TypeOfGoods),''),  
     d.QtyBill, d.CostPrice, d.RetailPrice, d.DiscPct, d.DiscAmt, d.NetSalesAmt  
   from spTrnSLmpHdr h  
  inner join gnMstCustomer c  
    on h.CompanyCode=c.CompanyCode  
   and h.CustomerCode=c.CustomerCode  
  inner join spTrnSLmpDtl d  
    on h.CompanyCode=d.CompanyCode  
   and h.BranchCode=d.BranchCode  
   and h.LmpNo=d.LmpNo  
  inner join spMstItemInfo i  
    on d.CompanyCode=i.CompanyCode  
   and d.PartNo=i.PartNo  
  where 1=1 --h.TypeOfGoods in ('1','2','5')  -- 0:SGP, 1:SGO, 2:SGA, 3:NON SGP, 4:OTHERS, 5:NON SGA  
    and convert(varchar,h.LmpDate,111) between @PeriodStart and @PeriodEnd   
    and not exists (select top 1 1 from spHstPartSales  
                     where CompanyCode=h.CompanyCode  
        and BranchCode =h.BranchCode  
        and InvoiceNo  =h.LmpNo  
        and FPJNo      =h.BPSFNo  
        and PartNo     =d.PartNo)  
     ) a  
  
 -- insert to Part Sales table  
 insert into spHstPartSales  select NEWID(), @curDate, *, NULL from #SGO  
  
 -- select Part Sales data  
 -- select * from spHstPartSales  
 select h.CompanyCode, dm.DealerAbbreviation, h.BranchCode, do.OutletAbbreviation, h.InvoiceNo, h.InvoiceDate,   
     h.FPJNo, h.FPJDate, h.CustomerCode, h.CustomerName, h.CustomerClass, h.PartNo, h.PartName, h.TypeOfGoods,   
     h.TypeOfGoodsDesc, h.QtyBill, h.CostPrice, h.RetailPrice, h.DiscPct, h.DiscAmt, h.NetSalesAmt  
   from spHstPartSales h  
   left join gnMstDealerMapping dm  
   on h.CompanyCode=dm.DealerCode  
   left join gnMstDealerOutletMapping do  
   on h.CompanyCode=do.DealerCode  
     and h.BranchCode=do.OutletCode  
     where h.RecordDate=@curDate  
  order by dm.DealerAbbreviation, h.BranchCode, h.InvoiceDate, h.PartNo  
 drop table #SGO  
END
GO
ALTER procedure [dbo].[uspfn_spTrnPPOSHdr] 
@CompanyCode varchar(10),@BranchCode varchar(10),
@TypeOfGoods varchar(10),
 @Status  int
as 
SELECT a.POSNo, a.PosDate , a.Status ,a.SupplierCode ,b.SupplierName, a.OrderType
                FROM spTrnPPOSHdr a
                INNER JOIN gnMstSupplier b ON b.SupplierCode = a.SupplierCode and b.CompanyCode = a.CompanyCode
    WHERE a.CompanyCode=@CompanyCode 
                AND a.BranchCode=@BranchCode
                AND a.TypeOfGoods=@TypeOfGoods
                AND a.Status <=@Status           ORDER BY a.POSNo DESC
GO
-- =========================================================================
-- Author:		Seandy A.K, Revision By: Osen Kusnadi (Convert to PivotGrid)
-- Create date: 19-7-2012, Revision On 2014-07-01
-- Description:	Sparepart Analysis Report
-- Query Activation : usprpt_SpRpSum024_Rev01 '','','','2012','1'
-- exec usprpt_SpRpSum024_Rev01 @Area=N'',@CompanyCode=N'', 
-- @BranchCode=N'',@Year=N'2013',@S1=N'''5'',''0'',''1'',''2'',''3'',''4'''
-- =========================================================================
ALTER procedure [dbo].[usprpt_SpRpSum024_Rev01]
	@Area			varchar(100),
	@CompanyCode	varchar(15),
	@BranchCode		varchar(15),
	@Year			varchar(4),
	@S1				varchar(50)
AS
BEGIN

declare @Query varchar(MAX), @Query1 varchar(MAX), @Query2 varchar(MAX)
declare @code varchar(15), @name varchar(250), @nCount INT, @nNum INT, @sDate varchar(10)

CREATE TABLE #TmpFilterEnum(
	[display]	[varchar](120),
	[value]		[varchar](32),
	[iconCls]	[varchar](22),
	[type]		[varchar](12) 
)

CREATE TABLE #TmpSalesSummary(
	id int,
	AccountID int,
	Account varchar(32),
	BranchCode varchar(15),
	BranchName varchar(64),
	[JAN] [decimal](18, 2) NOT NULL DEFAULT(0),
	[FEB] [decimal](18, 2) NOT NULL DEFAULT(0),
	[MAR] [decimal](18, 2) NOT NULL DEFAULT(0),
	[APR] [decimal](18, 2) NOT NULL DEFAULT(0),
	[MAY] [decimal](18, 2) NOT NULL DEFAULT(0),
	[JUN] [decimal](18, 2) NOT NULL DEFAULT(0),
	[JUL] [decimal](18, 2) NOT NULL DEFAULT(0),
	[AUG] [decimal](18, 2) NOT NULL DEFAULT(0),
	[SEP] [decimal](18, 2) NOT NULL DEFAULT(0),
	[OCT] [decimal](18, 2) NOT NULL DEFAULT(0),
	[NOV] [decimal](18, 2) NOT NULL DEFAULT(0),
	[DEC] [decimal](18, 2) NOT NULL DEFAULT(0)
)

CREATE TABLE #RawData(
	PeriodYear int,
	PeriodMonth int,
	BranchCode varchar(15),
	[N01] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N02] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N03] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N04] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N05] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N06] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N07] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N08] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N09] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N10] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N11] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N12] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N13] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N14] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N15] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N16] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N17] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N18] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N19] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N20] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N21] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N22] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N23] [decimal](18, 2) NOT NULL DEFAULT(0),
	[N24] [decimal](18, 2) NOT NULL DEFAULT(0)
)

-- STARTING TO PREPARE METADATA --

set @Query = '
	select distinct 
	a.BranchCode,
	b.OutletAbbreviation, ''active'',''outlet''
	from spHstSparePartAnalysis a
	left join GnMstDealerMapping c on a.CompanyCode = c.DealerCode
	left join GnMStDealerOutletMapping b on a.CompanyCode = b.DealerCode
		and a.BranchCode = b.OutletCode
	where a.PeriodYear = ''' + @Year + ''' and convert(varchar,a.TypeOfGoods) in (' + @S1 + ') '

	if @Area <> '' 
	begin
		IF (@Area = 'JABODETABEK' or @Area = 'CABANG')
			set @Query = @Query + ' AND c.Area IN (''JABODETABEK'',''CABANG'') '
		else
			set @Query = @Query + ' AND c.Area like ''' + @Area + ''' '
	end

	if @CompanyCode <> ''
	BEGIN
		set @Query = @Query + ' AND a.CompanyCode like ''' + @CompanyCode + ''' '
	END

	IF @BranchCode <> ''
	BEGIN
		set @Query = @Query + ' AND a.BranchCode like ''' + @BranchCode + ''' '
	END
									
	set @Query = @Query + ' order by a.BranchCode '

	select @Query1 = 'INSERT INTO #TmpFilterEnum ([value],display,iconCls,[type])  ' + @Query , @nNum=0

	print(@Query1)
	exec(@Query1)


WHILE @nNum < 12
BEGIN
	SET @nNum=@nNum+1
	SET @sDate = @Year + '-' +  RIGHT('0' + convert(varchar,@nnum),2) + '-01'
	SET @name = upper(datename(mm,@sDate))
	SET @code = SUBSTRING(@name,1,3)
	INSERT INTO #TmpFilterEnum ([value],display,iconCls,[type]) values ( @code,@name + ', ' + @Year,'active','period')	
END
-- PREPARING METADATA DONE

-- PREPARING ACCOUNT LIST --
DECLARE @AccountList table(id INT,name VARCHAR(32))
INSERT INTO @AccountList VALUES 
(1,'Penjualan Kotor'),(2,'Penjualan Bersih'),(3,'Penjualan ke 3S + 2S'),(4,'Penjualan ke Parts Shop'),
(5,'Penjualan ke Lain-lain'),(6,'Harga Pokok'),(7,'Penerimaan Pembelian'),(8,'Nilai Stock'),(9,'ITO'),
(10,'ITO (AVG)'),(11,'Ratio'),(12,'Ration Suzuki'),(13,'Demand Line'),(14,'Demand Qty'),
(15,'Demand Nilai'),(16,'Supply Line'),(17,'Supply Qty'),(18,'Supply Nilai'),(19,'Service Ratio Line'),
(20,'Service Ratio Qty'),(21,'Service Ratio Nilai'),(22,'Stock MC4'),(23,'Stock MC5'),(24,'Slow Moving')
-- ACCOUNT LIST DONE --

-- PREPARING PIVOT GRID --
select @Query1 = 'DECLARE BRANCH_CR CURSOR FOR ' + @Query
print(@Query1)
exec(@Query1)

DECLARE ACCOUNT_CR CURSOR FOR SELECT ID,NAME FROM @AccountList
DECLARE @gBranchCode varchar(15), @gBranchName varchar(108), @iconCls varchar(7), @gType varchar(17)

SET @nNum = 0

OPEN ACCOUNT_CR
FETCH NEXT FROM ACCOUNT_CR
INTO @code, @name

WHILE @@FETCH_STATUS = 0
BEGIN

	OPEN BRANCH_CR
	FETCH NEXT FROM BRANCH_CR
	INTO  @gBranchCode,@gBranchName,@iconCls,@gType 

	WHILE @@FETCH_STATUS = 0
	BEGIN
		
		SET @nNum = @nNum + 1

		INSERT INTO #TmpSalesSummary(id,AccountID,Account,BranchCode,BranchName)
		VALUES (@nNum,@code, @name,@gBranchCode,@gBranchName)

		FETCH NEXT FROM BRANCH_CR 
		INTO @gBranchCode,@gBranchName,@iconCls,@gType 
	END

	CLOSE BRANCH_CR

	FETCH NEXT FROM ACCOUNT_CR 
	INTO @code, @name
END

CLOSE ACCOUNT_CR
DEALLOCATE ACCOUNT_CR
DEALLOCATE BRANCH_CR

-- PIVOT GRID TEMPLATE DONE --

-- STARTING TO PREPARE DATA SUMMARY
set @Query = ' select * into #Summary from(
select c.GroupNo
		, c.Area
		, a.CompanyCode
		, c.DealerAbbreviation
		, a.BranchCode
		, b.OutletAbbreviation
		, a.PeriodYear
		, a.PeriodMonth
		, JumlahJaringan
		, SUM(isnull(PenjualanKotor,0)) PenjualanKotor
		, SUM(isnull(PenjualanBersih,0)) PenjualanBersih
		, isnull((select SUM(isnull(PenjualanBersih,0))
			 from spHstSparePartAnalysisDtl
			where CompanyCode = a.CompanyCode
			  and BranchCode = a.BranchCode
			  and PeriodYear = a.PeriodYear
			  and PeriodMonth = a.PeriodMonth
			  and TypeOfGoods = a.TypeOfGoods
			  and CustomerCategory in (''00'',''01'')),0) Penjualan3S2S
		, isnull((select SUM(isnull(PenjualanBersih,0))
			 from spHstSparePartAnalysisDtl
			where CompanyCode = a.CompanyCode
			  and BranchCode = a.BranchCode
			  and PeriodYear = a.PeriodYear
			  and PeriodMonth = a.PeriodMonth
			  and TypeOfGoods = a.TypeOfGoods
			  and CustomerCategory in (''15'')),0) PenjualanPartShop
		, isnull((select SUM(isnull(PenjualanBersih,0))
			 from spHstSparePartAnalysisDtl
			where CompanyCode = a.CompanyCode
			  and BranchCode = a.BranchCode
			  and PeriodYear = a.PeriodYear
			  and PeriodMonth = a.PeriodMonth
			  and TypeOfGoods = a.TypeOfGoods
			  and CustomerCategory not in (''00'',''01'',''15'')),0) PenjualanOthers
		, SUM(isnull(HargaPokok,0)) HargaPokok
		, SUM(isnull(PenerimaanPembelian,0))PenerimaanPembelian
		, SUM(isnull(NilaiStock,0)) NilaiStock
		, (select SUM(isnull(e.NilaiStock,0))
				 from spHstSparepartAnalysis e
				where e.CompanyCode = a.CompanyCode
				  and e.BranchCode = a.BranchCode
				  and e.PeriodYear = a.PeriodYear
				  and e.PeriodMonth = a.PeriodMonth
				  '
set @Query = @Query + ' and convert(varchar,e.TypeOfGoods) in (' + @S1 + ')
				Group by CompanyCode, BranchCode,PeriodYear,PeriodMonth
				  ) test
		, case when SUM(isnull(HargaPokok,0)) = 0 
				then 0
				else (SUM(isnull(NilaiStock,0)) / case when SUM(isnull(HargaPokok,0)) = 0 then 1 else SUM(isnull(HargaPokok,0)) end) 
				end ITO
		, isnull((select case when SUM(isnull(d.HargaPokok,0)) = 0 
				then 0
				else (SUM(isnull(a.NilaiStock,0))
					/ (SUM(isnull(d.HargaPokok,0)) / (select distinct Count(d.PeriodYear)
					from spHstSparepartAnalysis e
								where e.CompanyCode = a.CompanyCode
								  and e.BranchCode = a.BranchCode
								  and convert(int,convert(varchar,e.PeriodYear) + RIGHT(''0'' + convert(varchar,e.PeriodMonth),2))
										between convert(int,convert(varchar, case when a.PeriodMonth < 7 
																	  then  
																			(a.PeriodYear - 1)
																	  else 
																			a.PeriodYear
																	  end) +
												RIGHT(''0'' + convert(varchar, case when a.PeriodMonth < 7
																	  then 
																		(12 + (a.PeriodMonth - 5))
																	  else
																		(a.PeriodMonth - 5)
																	  end), 2))
										and convert(int,convert(varchar,a.PeriodYear) + RIGHT(''0'' + convert(varchar,a.PeriodMonth),2))
										'
					set @Query = @Query + ' and TypeOfGoods in (' + @S1 + ') Group by CompanyCode,BranchCode)
					 ))
				end
			from spHstSparepartAnalysis d
			where d.CompanyCode = a.CompanyCode
			  and d.BranchCode = a.BranchCode
			  and convert(int,convert(varchar,d.PeriodYear) + RIGHT(''0'' + convert(varchar,d.PeriodMonth),2))
										between convert(int,convert(varchar, case when a.PeriodMonth < 7 
																	  then  
																			(a.PeriodYear - 1)
																	  else 
																			a.PeriodYear
																	  end) +
												RIGHT(''0'' + convert(varchar, case when a.PeriodMonth < 7
																	  then 
																		(12 + (a.PeriodMonth - 5))
																	  else
																		(a.PeriodMonth - 5)
																	  end), 2))
										and convert(int,convert(varchar,a.PeriodYear) + RIGHT(''0'' + convert(varchar,a.PeriodMonth),2))
										'
					set @Query = @Query + ' and d.TypeOfGoods in (' + @S1 + ') Group by CompanyCode,BranchCode
		  ),0) AVGITO
		, SUM(isnull(PenjualanBersih,0) - isnull(HargaPokok,0)) / case when SUM(isnull(HargaPokok,0)) = 0 then 1 else SUM(HargaPokok) end * 100 Ratio
		, SUM(isnull(PenjualanBersih,0) - isnull(HargaPokok,0)) / case when SUM(isnull(PenjualanBersih,0)) = 0 then 1 else SUM(PenjualanBersih) end * 100 RatioSuzuki
		, SUM(isnull(DemandLine,0)) DemandLine
		, SUM(isnull(DemandQuantity,0)) DemandQuantity
		, SUM(isnull(DemandNilai,0)) DemandNilai
		, SUM(isnull(SupplyLine,0)) SupplyLine
		, SUM(isnull(SupplyQuantity,0)) SupplyQuantity
		, SUM(isnull(SupplyNilai,0)) SupplyNilai
		, (SUM(isnull(SupplyLine,0)) / case when SUM(isnull(DemandLine,0)) = 0 then 1 else SUM(isnull(DemandLine,0)) end) * 100 ServiceRatioLine
		, (SUM(isnull(SupplyQuantity,0)) / case when SUM(isnull(DemandQuantity,0)) = 0 then 1 else SUM(isnull(DemandQuantity,0)) end) * 100 ServiceRatioQuantity
		, (SUM(isnull(SupplyNilai,0)) / case when SUM(isnull(DemandNilai,0)) = 0 then 1 else SUM(isnull(DemandNilai,0)) end) * 100 ServiceRatioNilai
		, SUM(isnull(DataStockMC4,0)) DataStockMC4
		, SUM(isnull(DataStockMC5,0)) DataStockMC5
		, (SUM(isnull(SlowMoving,0)) / case when SUM(isnull(NilaiStock,0)) = 0 then 1 else SUM(isnull(NilaiStock,0)) end) * 100 SlowMoving
	from spHstSparePartAnalysis a
	left join GnMstDealerMapping c on a.CompanyCode = c.DealerCode
	left join GnMStDealerOutletMapping b on a.CompanyCode = b.DealerCode
		and a.BranchCode = b.OutletCode
	where (c.Area like '
	set @Query = @Query + Case when @Area <> '' 
								then  case when (@Area = 'JABODETABEK' or @Area = 'CABANG')
										then '''JABODETABEK'''
										else @Area end
								else '''%%''' end
	set @Query = @Query + ' or c.Area like ' + Case when @Area <> '' 
													then  case when (@Area = 'JABODETABEK' or @Area = 'CABANG')
															then '''CABANG'''
															else @Area end
													else '''%%''' end
set @Query = @Query + ') and a.CompanyCode like ' 
set @Query = @Query + case when @CompanyCode <> '' then '''' + @CompanyCode + '''' else '''%%''' end
set @Query = @Query + ' and a.BranchCode like '
set @Query = @Query + case when @BranchCode <> '' then '''' + @BranchCode + '''' else '''%%''' end
set @Query = @Query + ' and a.PeriodYear = ''' + @Year + ''''
set @Query = @Query + ' and convert(varchar,a.TypeOfGoods) in (' + @S1 + ')'
set @Query = @Query + ' group by c.GroupNo
		, c.Area
		, a.CompanyCode
		, c.DealerAbbreviation
		, a.BranchCode
		, b.OutletAbbreviation
		, a.PeriodYear
		, a.PeriodMonth
		, a.JumlahJaringan
		, a.TypeOfGoods
)#Summary

select * into #PivotData from (
select PeriodYear
	, PeriodMonth
	, BranchCode
	, SUM(PenjualanKotor) PenjualanKotor
	, SUM(PenjualanBersih) PenjualanBersih
	, SUM(Penjualan3S2S) Penjualan3S2S
	, SUM(PenjualanPartShop) PenjualanPartShop
	, SUM(PenjualanOthers) PenjualanOthers
	, SUM(HargaPokok) HargaPokok
	, SUM(PenerimaanPembelian) PenerimaanPembelian
	, SUM(NilaiStock) NilaiStock
	, SUM(ITO) ITO
	, isnull((case when SUM(isnull(HargaPokok,0)) = 0 
				then 0
				else (SUM(isnull(NilaiStock,0))/ (SUM(isnull(HargaPokok,0)) / 6))
				end
		  ),0) AVGITO
	, SUM(isnull(PenjualanBersih,0) - isnull(HargaPokok,0)) / case when SUM(isnull(HargaPokok,0)) = 0 then 1 else SUM(HargaPokok) end * 100 Ratio
	, SUM(isnull(PenjualanBersih,0) - isnull(HargaPokok,0)) / case when SUM(isnull(PenjualanBersih,0)) = 0 then 1 else SUM(PenjualanBersih) end * 100 RatioSuzuki
	, SUM(DemandLine) DemandLine
	, SUM(DemandQuantity) DemandQuantity
	, SUM(DemandNilai) DemandNilai
	, SUM(SupplyLine) SupplyLine
	, SUM(SupplyQuantity) SupplyQuantity
	, SUM(SupplyNilai) SupplyNilai
	, (SUM(isnull(SupplyLine,0)) / case when SUM(isnull(DemandLine,0)) = 0 then 1 else SUM(isnull(DemandLine,0)) end) * 100 ServiceRatioLine
	, (SUM(isnull(SupplyQuantity,0)) / case when SUM(isnull(DemandQuantity,0)) = 0 then 1 else SUM(isnull(DemandQuantity,0)) end) * 100 ServiceRatioQuantity
	, (SUM(isnull(SupplyNilai,0)) / case when SUM(isnull(DemandNilai,0)) = 0 then 1 else SUM(isnull(DemandNilai,0)) end) * 100 ServiceRatioNilai
	, SUM(DataStockMC4) DataStockMC4
	, SUM(DataStockMC5) DataStockMC5
	, (SUM(isnull(SlowMoving,0)) / case when SUM(isnull(NilaiStock,0)) = 0 then 1 else SUM(isnull(NilaiStock,0)) end) * 100 SlowMoving
from #Summary
group by 
	 PeriodYear
	, PeriodMonth
	, BranchCode) a

insert into #RawData select * from #PivotData

'
print(@Query)
exec(@Query)

select * from #TmpFilterEnum
select* from #TmpSalesSummary
select* from #RawData





END
GO
ALTER PROCEDURE [dbo].[usprpt_PmRpInqLostCaseWeb] 
@CompanyCode		VARCHAR(15) , --= '6159401000',
	@BranchCode			VARCHAR(15) , --= '6159401001',
	@PeriodBegin		VARCHAR(15) , --= '20140101',
	@PeriodEnd			VARCHAR(15) , --= '20140330',
	@BranchManager		VARCHAR(15) , --= '3-BIT',
	@SalesHead			VARCHAR(15) , --= '028',
	@SalesCoordinator	VARCHAR(15) , --= '028',
	@Salesman			VARCHAR(15) --= ''


AS
BEGIN
	SET NOCOUNT ON;
-- Get EmployeeID
--=======================================================================
DECLARE @SalesmanID		VARCHAR(MAX);

if @BranchManager = '' and  @SalesHead = '' and @Salesman = ''
begin
set @SalesmanID = 'select EmployeeID from HrEmployee where PersonnelStatus = ''1''
			and Department = ''SALES'' and Position = ''S'''
end
else if @BranchManager <> '' and @SalesHead = '' and @Salesman = ''
begin
set @SalesmanID = 'select EmployeeID from HrEmployee where TeamLeader in (
			select EmployeeID from HrEmployee where TeamLeader = '''+@BranchManager+''')
			and PersonnelStatus = ''1'''
end
else if @BranchManager <> '' and @SalesHead <> '' and @Salesman = ''
begin
set @SalesmanID = 'select EmployeeID from HrEmployee where TeamLeader  = '''+@SalesHead+'''
			and PersonnelStatus = ''1'''
end
else
begin
set @SalesmanID = 'select EmployeeID from HrEmployee where EmployeeID  = '''+@Salesman+'''
			and PersonnelStatus = ''1'''
end
--=======================================================================

-- Group By Tipe Kendaraan
--=======================================================================
DECLARE @ByTipeKendaraan		VARCHAR(MAX);
DECLARE @Query1		VARCHAR(MAX);

set @ByTipeKendaraan = 'select
	 a.CompanyCode, a.BranchCode, a.InquiryNumber, a.TipeKendaraan, a.EmployeeID, a.LastProgress
	from 
	 PMKDP a 
	where
	 a.CompanyCode = '''+@CompanyCode+'''
	 and a.BranchCode = '''+@BranchCode+'''
	 and a.InquiryNumber IN (SELECT DISTINCT InquiryNumber FROM PmStatusHistory WHERE CompanyCode = a.CompanyCode 
		and BranchCode = a.BranchCode AND LastProgress=''LOST'' AND CONVERT(VARCHAR, UpdateDate, 112) 
		BETWEEN '''+convert(varchar(30),@PeriodBegin)+''' AND '''+convert(varchar(30),@PeriodEnd)+''')
	 and EmployeeID in ('+@SalesmanID+')
	 and a.TipeKendaraan <> '''''

set @Query1 = 'SELECT 
	DISTINCT(TipeKendaraan),
	(select count(*) from ('+@ByTipeKendaraan+') b where lastprogress <> ''LOST'' AND a.TipeKendaraan = b.TipeKendaraan) Active, 
	(select count(*) from ('+@ByTipeKendaraan+') b where lastprogress = ''LOST'' AND a.TipeKendaraan = b.TipeKendaraan) NonActive
	FROM ('+@ByTipeKendaraan+') a'
	
exec (@Query1)
print (@Query1)

-- Group By Perolehan Data
--======================================================================
DECLARE @ByPerolehanData		VARCHAR(MAX);
DECLARE @Query2		VARCHAR(MAX);

set @ByPerolehanData = 'select
	 a.CompanyCode, a.BranchCode, a.InquiryNumber, a.PerolehanData, a.EmployeeID, a.LastProgress
	from 
	 PMKDP a 
	where
	 a.CompanyCode = '''+@CompanyCode+'''
	 and a.BranchCode = '''+@BranchCode+'''
	 and a.InquiryNumber IN (SELECT DISTINCT InquiryNumber FROM PmStatusHistory WHERE CompanyCode = a.CompanyCode 
		and BranchCode = a.BranchCode AND LastProgress=''LOST'' AND CONVERT(VARCHAR, UpdateDate, 112) 
		BETWEEN '''+@PeriodBegin+''' AND '''+@PeriodEnd+''')
	 and EmployeeID in ('+@SalesmanID+')'

set @Query2 = 'SELECT 
	DISTINCT(PerolehanData),
	(select count(*) from ('+@ByPerolehanData+') b where lastprogress <> ''LOST'' AND a.PerolehanData = b.PerolehanData) Active, 
	(select count(*) from ('+@ByPerolehanData+') b where lastprogress = ''LOST'' AND a.PerolehanData = b.PerolehanData) NonActive
	FROM ('+@ByPerolehanData+') a'
	
exec (@Query2)

-- Group By Salesman
--=====================================================================
DECLARE @BySalesman		VARCHAR(MAX);
DECLARE @Query3		VARCHAR(MAX);

set @BySalesman = 'select
	 a.CompanyCode, a.BranchCode, a.InquiryNumber, b.EmployeeName, a.EmployeeID, a.LastProgress
	from 
	 PMKDP a
	inner join HrEmployee b
		ON b.CompanyCode = a.CompanyCode and b.EmployeeID = a.EmployeeID
	where
	 a.CompanyCode = '''+@CompanyCode+'''
	 and a.BranchCode = '''+@BranchCode+'''
	 and a.InquiryNumber IN (SELECT DISTINCT InquiryNumber FROM PmStatusHistory WHERE CompanyCode = a.CompanyCode 
		and BranchCode = a.BranchCode AND LastProgress=''LOST'' AND CONVERT(VARCHAR, UpdateDate, 112) 
		BETWEEN '''+@PeriodBegin+''' AND '''+@PeriodEnd+''')
	 and a.EmployeeID in ('+@SalesmanID+')'

set @Query3 = 'SELECT 
	DISTINCT (EmployeeName) Karyawan,
	(select count(*) from ('+@BySalesman+') b where lastprogress <> ''LOST'' AND a.EmployeeID = b.EmployeeID) Active, 
	(select count(*) from ('+@BySalesman+') b where lastprogress = ''LOST'' AND a.EmployeeID = b.EmployeeID) NonActive
	FROM ('+@BySalesman+') a'
	
exec (@Query3)

-- Group By Sales Coordinator
--=====================================================================
DECLARE @BranchName		VARCHAR(MAX);
DECLARE @Query4		VARCHAR(MAX);
set @BranchName = 'SELECT 
	  a.CompanyCode, a.BranchCode, a.InquiryNumber, a.LastProgress, a.SpvEmployeeID, b.BranchName 
	 FROM PMKDP a 
	 LEFT JOIN GnMstOrganizationDtl b
	 ON b.CompanyCode = a.CompanyCode AND b.BranchCode = a.BranchCode
	 WHERE
	 a.CompanyCode = '''+@CompanyCode+'''
	 and a.BranchCode = '''+@BranchCode+'''
	 and a.InquiryNumber IN (SELECT DISTINCT InquiryNumber FROM PmStatusHistory WHERE CompanyCode = a.CompanyCode 
		and BranchCode = a.BranchCode AND LastProgress=''LOST'' AND CONVERT(VARCHAR, UpdateDate, 112) 
		BETWEEN '''+@PeriodBegin+''' AND '''+@PeriodEnd+''')
	 and a.EmployeeID in ('+@SalesmanID+')'

set @Query4 = 'SELECT 
	DISTINCT (BranchName) Supervisor,
	(select count(*) from ('+@BranchName+') b where lastprogress <> ''LOST'' AND a.BranchName = b.BranchName) Active, 
	(select count(*) from ('+@BranchName+') b where lastprogress = ''LOST'' AND a.BranchName = b.BranchName) NonActive
	FROM ('+@BranchName+') a'
	
exec (@Query4)

-- Group By Sales Head
--=====================================================================
--DECLARE @BranchName		VARCHAR(MAX);
DECLARE @Query5		VARCHAR(MAX);

set @BranchName = 'SELECT 
	  a.CompanyCode, a.BranchCode, a.InquiryNumber, a.LastProgress, a.SpvEmployeeID, b.BranchName 
	 FROM PMKDP a 
	 LEFT JOIN GnMstOrganizationDtl b
	 ON b.CompanyCode = a.CompanyCode AND b.BranchCode = a.BranchCode
	 WHERE
	 a.CompanyCode = '''+@CompanyCode+'''
	 and a.BranchCode = '''+@BranchCode+'''
	 and a.InquiryNumber IN (SELECT DISTINCT InquiryNumber FROM PmStatusHistory WHERE CompanyCode = a.CompanyCode 
		and BranchCode = a.BranchCode AND LastProgress=''LOST'' AND CONVERT(VARCHAR, UpdateDate, 112) 
		BETWEEN '''+@PeriodBegin+''' AND '''+@PeriodEnd+''')
	 and a.EmployeeID in ('+@SalesmanID+')'

set @Query5 = 'SELECT 
	DISTINCT (BranchName) SalesHead,
	(select count(*) from ('+@BranchName+') b where lastprogress <> ''LOST'' AND a.BranchName = b.BranchName) Active, 
	(select count(*) from ('+@BranchName+') b where lastprogress = ''LOST'' AND a.BranchName = b.BranchName) NonActive
	FROM ('+@BranchName+') a'
	
exec (@Query5)

-- Group By Branch Name
--=======================================================================
--DECLARE @BranchName		VARCHAR(MAX);
DECLARE @Query6		VARCHAR(MAX);

set @BranchName = 'SELECT 
	  a.CompanyCode, a.BranchCode, a.InquiryNumber, a.LastProgress, a.SpvEmployeeID, b.BranchName 
	 FROM PMKDP a 
	 LEFT JOIN GnMstOrganizationDtl b
	 ON b.CompanyCode = a.CompanyCode AND b.BranchCode = a.BranchCode
	 WHERE
	 a.CompanyCode = '''+@CompanyCode+'''
	 and a.BranchCode = '''+@BranchCode+'''
	 and a.InquiryNumber IN (SELECT DISTINCT InquiryNumber FROM PmStatusHistory WHERE CompanyCode = a.CompanyCode 
		and BranchCode = a.BranchCode AND LastProgress=''LOST'' AND CONVERT(VARCHAR, UpdateDate, 112) 
		BETWEEN '''+@PeriodBegin+''' AND '''+@PeriodEnd+''')
	 and a.EmployeeID in ('+@SalesmanID+')'

set @Query3 = 'SELECT 
	DISTINCT (BranchName),
	(select count(*) from ('+@BranchName+') b where lastprogress <> ''LOST'' AND a.BranchName = b.BranchName) Active, 
	(select count(*) from ('+@BranchName+') b where lastprogress = ''LOST'' AND a.BranchName = b.BranchName) NonActive
	FROM ('+@BranchName+') a'
	
exec (@Query3)

-- Query Utama
--=======================================================================================
DECLARE @Utama		VARCHAR(MAX);

set @Utama = 'SELECT
 a.CompanyCode, a.BranchCode, a.InquiryNumber, a.NamaProspek, a.Inquirydate, ISNULL(a.TipeKendaraan,''-'') TipeKendaraan, 
 ISNULL(a.Variant,''-'') Variant, ISNULL(a.Transmisi,''-'') Transmisi,
 b.RefferenceDesc1 Warna, a.PerolehanData, c.EmployeeName Employee, d.EmployeeName Supervisor,
 a.LastProgress, e.UpdateDate TglLost, f.LookUpValueName KategoriLost, g.LookUpValueName Reason,
 a.LostCaseVoiceofCustomer VOC, a.SpvEmployeeID
FROM
 PmKDP a
LEFT JOIN OmMstRefference b
ON b.CompanyCode = a.CompanyCode AND b.RefferenceType = ''COLO'' AND b.RefferenceCode = a.ColourCode
LEFT JOIN HrEmployee c
ON c.CompanyCode = a.CompanyCode AND c.EmployeeID = a.EmployeeID
LEFT JOIN HrEmployee d
ON d.CompanyCode = a.CompanyCode AND d.EmployeeID = a.SpvEmployeeID
LEFT JOIN PmStatusHistory e
ON e.InquiryNumber = a.InquiryNumber AND e.CompanyCode = a.CompanyCode 
AND e.BranchCode = a.BranchCode AND e.SequenceNo = (SELECT TOP 1 SequenceNo FROM PmStatusHistory
		WHERE InquiryNumber = a.InquiryNumber AND CompanyCode = a.CompanyCode 
		AND BranchCode = a.BranchCode AND LastProgress=''LOST'' ORDER BY SequenceNo DESC)
LEFT JOIN GnMstLookUpDtl f
ON f.CompanyCode = a.CompanyCode AND f.CodeID = ''PLCC'' AND f.LookUpValue = a.LostCaseCategory
LEFT JOIN GnMstLookUpDtl g
ON g.CompanyCode = a.CompanyCode AND g.CodeID = ''ITLR'' AND g.LookUpValue = a.LostCaseReasonID
WHERE
 a.CompanyCode = '''+@CompanyCode+''' 
 AND a.BranchCode = '''+@BranchCode+'''
 AND a.LastProgress = ''LOST'' 
 AND CONVERT(VARCHAR, e.UpdateDate, 112) BETWEEN '''+@PeriodBegin+''' AND '''+@PeriodEnd+''' 
 AND a.EmployeeID in ('+@SalesmanID+')'

Exec (@Utama)

-- Pivot
--=====================================================================
declare	@columns			VARCHAR(MAX)
declare	@columns2			VARCHAR(MAX)
declare	@Pivot				VARCHAR(MAX)

select	@columns = coalesce(@columns + ',[' + cast(LookUpValue as varchar) + ']',
				'[' + cast(LookUpValue as varchar)+ ']') 
		,@columns2 = coalesce(@columns2 + ',isnull([' + cast(LookUpValue as varchar) + '],0) as '+ LookUpValue +'',
		'isnull([' + cast(LookUpValue as varchar)+ '],0) as '+ LookUpValue +'')
from
(
	select	a.LookUpValue
	from	gnMstLookUpDtl a
	where	CompanyCode=@CompanyCode and CodeID='PLCC'
) as x

set @Pivot='
select 
	p.TipeKendaraan, '+ @columns2 +'
from (
	select 
		a.TipeKendaraan
		,d.LookupValue LostCaseCategory
		,count(d.LookupValue) Quantity
	from 
		pmKDP a	
	left join PmStatusHistory b
	on b.InquiryNumber = a.InquiryNumber AND b.CompanyCode = a.CompanyCode 
	and b.BranchCode = a.BranchCode and b.SequenceNo = (select top 1 SequenceNo from PmStatusHistory
			where InquiryNumber = a.InquiryNumber and CompanyCode = a.CompanyCode 
			and BranchCode = a.BranchCode and LastProgress=''LOST'' order by SequenceNo desc)
	left join gnMstLookUpDtl d on d.CompanyCode=a.CompanyCode and CodeID=''PLCC'' 
		and LookUpValue=a.LostCaseCategory
	where
		a.LastProgress= ''LOST''
		and a.EmployeeID in ('+@SalesmanID+')
		and convert(varchar, b.UpdateDate, 112) between '''+@PeriodBegin+''' and '''+@PeriodEnd+''' 
	group by
		a.CompanyCode,a.BranchCode,d.LookupValue,a.TipeKendaraan
) as b
pivot
(
	sum(Quantity)
	for LostCaseCategory 
	in ('+@columns+')
) as p
order by p.TipeKendaraan'


exec(@Pivot)



-- Get GnMstLookUpDtl (Kategori Lost Case) 
--===========================
SELECT LookupValue+' : '+LookUpValueName AS Kategori, LookupValue FROM gnMstLookupDtl 
WHERE CompanyCode=@CompanyCode AND CodeID='PLCC'

END
GO
ALTER procedure [dbo].[usprpt_GnGenerateSeqTaxWoBranchUnion]
	@CompanyCode as varchar(15)
	,@BranchCode as varchar(15)
	,@StartDate as varchar(8)
	,@FPJDate as varchar(8)
	,@ProfitCenterCode as varchar(3)
	,@UserId as varchar(15)
	,@DocNo as varchar(5000)
AS
BEGIN

--declare @CompanyCode as varchar(15)
--	,@BranchCode as varchar(15)
--	,@StartDate as varchar(8)
--	,@FPJDate as varchar(8)
--	,@ProfitCenterCode as varchar(3)
--	,@UserId as varchar(15)
--	,@DocNo as varchar(5000)

--set @CompanyCode = '6115204001'
--set @BranchCode = '6115204301'
--set @StartDate = '20140901'
--set @FPJDate = '20140909'
--set @ProfitCenterCode = '300'
--set @UserId = 'ga'
--set @DocNo = '|6115204301 INV/14/102569|'

declare @IsUnion as varchar(1)
set @IsUnion = '0'

if(select count(LookUpValue) from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH') > 0
	set @IsUnion = '1'

declare @t_tax table(
	CompanyCode varchar(15)
	,BranchCode varchar(15)
	,ProfitCenterCode varchar(3)
	,DocNo varchar(15)
	,DocDate varchar(15)
	,DueDate datetime 
	,RefNo varchar(15)
	,RefDate datetime
	,TaxTransCode varchar(2)
	,CustomerCodeBill varchar(15)
)

if @ProfitCenterCode='' or @ProfitCenterCode='300'
begin
	insert into @t_tax
	SELECT	CompanyCode, BranchCode, '300' AS ProfitCenterCode, InvoiceNo AS DocNo, convert(varchar,InvoiceDate,112) AS DocDate, convert(varchar,DueDate,112) DueDate
			, '' AS RefNo, NULL AS RefDate
			,(
				SELECT	ISNULL(TaxTransCode, '') 
				FROM	GnMstCustomerProfitCenter 
				WHERE	CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode 
						AND CustomerCode = a.CustomerCodeBill AND ProfitCenterCode = '300'
			) AS TaxTransCode
			, CustomerCodeBill
	FROM	SpTrnSFPJHdr a
	WHERE	CompanyCode = @CompanyCode  
			AND isPKP = 1 AND ISNULL(FPJGovNo, '') = ''
			AND CONVERT(VARCHAR, InvoiceDate, 112) BETWEEN @StartDate AND @FPJDate
			AND ((case when @ProfitCenterCode='' then BranchCode+' '+InvoiceNo end) = BranchCode+' '+InvoiceNo
				or (case when @ProfitCenterCode<>'' then @DocNo end) like '%|'+BranchCode+' '+InvoiceNo+'|%')
	GROUP BY CompanyCode, BranchCode, InvoiceNo, CustomerCodeBill,convert(varchar,InvoiceDate,112),convert(varchar,DueDate,112), CustomerCodeBill
end

if @ProfitCenterCode='' or @ProfitCenterCode='200'
begin
	insert into @t_tax
	SELECT	CompanyCode, BranchCode, '200' AS ProfitCenterCode, FPJNo AS DocNo, convert(varchar,FPJDate,112) AS DocDate, DueDate
			, '' AS RefNo, NULL AS RefDate
			,(
				SELECT	ISNULL(TaxTransCode, '') 
				FROM	GnMstCustomerProfitCenter 
				WHERE	CompanyCode = SVTrnFakturPajak.CompanyCode AND BranchCode = SVTrnFakturPajak.BranchCode 
						AND CustomerCode = SVTrnFakturPajak.CustomerCodeBill AND ProfitCenterCode = '200'
			) AS TaxTransCode
			, CustomerCodeBill
	FROM	SVTrnFakturPajak
	WHERE	CompanyCode = @CompanyCode 
			AND isPKP = 1 AND ISNULL(FPJGovNo, '') = ''
			AND IsLocked= 0
			AND CONVERT(VARCHAR, FPJDate, 112) BETWEEN @StartDate AND @FPJDate
			AND ((case when @ProfitCenterCode='' then BranchCode+' '+FPJNo end)=BranchCode+' '+FPJNo
				or (case when @ProfitCenterCode<>'' then @DocNo end) like '%|' + BranchCode+' '+FPJNo + '|%'
			)
end

if @ProfitCenterCode='' or @ProfitCenterCode='100'
begin
	insert into @t_tax
	SELECT	CompanyCode, BranchCode, '100' AS ProfitCenterCode, InvoiceNo AS DocNo, convert(varchar,InvoiceDate,112) AS DocDate, DueDate
			, '' AS RefNo, NULL AS RefDate
			,(
				SELECT	ISNULL(TaxTransCode, '') 
				FROM	GnMstCustomerProfitCenter 
				WHERE	CompanyCode = OmFakturPajakHdr.CompanyCode AND BranchCode = OmFakturPajakHdr.BranchCode 
						AND CustomerCode = OmFakturPajakHdr.CustomerCode AND ProfitCenterCode = '100') AS TaxTransCode
			, CustomerCode
	FROM	OmFakturPajakHdr
	WHERE	CompanyCode = @CompanyCode
			AND TaxType = 'Standard' AND ISNULL(FakturPajakNo, '') = ''
			AND CONVERT(VARCHAR, InvoiceDate, 112) BETWEEN @StartDate AND @FPJDate
		AND ((case when @ProfitCenterCode='' then BranchCode+' '+InvoiceNo end)=BranchCode+' '+InvoiceNo
			or (case when @ProfitCenterCode<>'' then @DocNo end) like '%|' + BranchCode+' '+InvoiceNo + '|%'
		)
end

if @ProfitCenterCode='' or @ProfitCenterCode='000'
begin
	insert into @t_tax
	SELECT	CompanyCode, BranchCode, '000' AS ProfitCenterCode, InvoiceNo AS DocNo, convert(varchar,InvoiceDate,112) AS DocDate, DueDate
			, FPJNo AS RefNo, FPJDate AS RefDate
			,(
				SELECT	ISNULL(TaxTransCode, '') 
				FROM	GnMstCustomerProfitCenter 
				WHERE	CompanyCode = ARFakturPajakHdr.CompanyCode AND BranchCode = ARFakturPajakHdr.BranchCode 
						AND CustomerCode = ARFakturPajakHdr.CustomerCode AND ProfitCenterCode = '000'
			) AS TaxTransCode
			, CustomerCode
	FROM	ARFakturPajakHdr
	WHERE	CompanyCode = @CompanyCode 
			AND TaxType = 'Standard' AND ISNULL(FakturPajakNo, '') = ''
			AND CONVERT(VARCHAR, InvoiceDate, 112) BETWEEN @StartDate AND @FPJDate
		AND ((case when @ProfitCenterCode='' then BranchCode+' '+InvoiceNo end)=BranchCode+' '+InvoiceNo
			or (case when @ProfitCenterCode<>'' then @DocNo end) like '%|' + BranchCode+' '+InvoiceNo + '|%'
		)
end

select * into #f1
from (
	select row_number() over(order by a.BranchCode,a.DocDate,b.LookupValue,a.CustomerCodeBill,a.ProfitCenterCode asc) OrderNo,a.*,isnull(b.LookupValue,'')LookupValue
	from @t_tax a
	left join gnMstLookupDtl b on b.CompanyCode = a.CompanyCode
		and b.CodeID = 'FPJG'
		and b.LookupValue = a.CustomerCodeBill	
) #f1  order by LookupValue desc
		
SELECT	* INTO #f2 
FROM 
	( 
		SELECT  TaxCabCode 
		FROM	GnMstCoProfile  
		WHERE	CompanyCode = @CompanyCode AND BranchCode = @BranchCode 
) #f2 

-- create FPJGovNo
select * into #f3 
from (
	select 
		a.OrderNo,a.CompanyCode,a.BranchCode,year(DocDate) PeriodTaxYear
		,month(DocDate) PeriodTaxMonth,ProfitCenterCode
		,DocDate as FPJGovDate,DocNo,convert(datetime,DocDate) DocDate,RefNo,RefDate,@UserId CreatedBy,getDate() CreatedDate
		,TaxTransCode
		,CustomerCodeBill
		,LookupValue
	from 
		#f1 a	
) #f3

--drop table #f3, #f1, #f2

if convert(varchar,@FPJDate,112) < '20130401'
begin
	select * into #f4 from(
		select * 		
			, LEFT(TaxTransCode+'000',3)+'.'+
			RIGHT('000'+isnull((select TaxCabCode from #f2),'000'),3)+'-'+
			RIGHT( isnull(convert(varchar(4),year(DocDate)),year(getDate())),2 )+'.'+ 
			RIGHT( '00000000'+convert(varchar,isnull(
												(select	isnull(FPJSeqNo,0)
												from	GnMstFPJSeqNo
												where	CompanyCode= a.CompanyCode and BranchCode= @BranchCode
														and Year= year(DocDate)
														and convert(varchar,EffectiveDate,112) < '20130401'), 0)+a.OrderNo
												),8 )FPJGovNo
			from #f3 a
	)#f4
	
	--insert to tabel GenerateTax
	insert into
		GnGenerateTax(
			CompanyCode, BranchCode, PeriodTaxYear, PeriodTaxMonth, ProfitCenterCode, FPJGovNo, 
			FPJGovDate, DocNo, DocDate , RefNo, RefDate, CreatedBy, CreatedDate
	) 
	select 
		CompanyCode, BranchCode, PeriodTaxYear, PeriodTaxMonth, ProfitCenterCode, FPJGovNo, 
		FPJGovDate, DocNo, DocDate , RefNo, RefDate, CreatedBy, CreatedDate
	from 
		#f4
	
	drop table #f1
	drop table #f2

	-- update Master Sequence
	update	GnMstFPJSeqNo
	set		FPJSeqNo = FPJSeqNo + isnull((select max(OrderNo) from #f4),0)
	from	GnMstFPJSeqNo
	where	CompanyCode= @CompanyCode and BranchCode= @BranchCode and Year= (select top 1 PeriodTaxYear from #f3)
	
	-- update Sparepart
	update	SPTrnSFPJHdr
	set		FPJGovNo= a.FPJGovNo
			,FPJSignature= a.FPJGovDate
	from	#f4 a, SPTrnSFPJHdr b
	where	a.CompanyCode= b.CompanyCode and a.BranchCode= b.BranchCode and a.DocNo= b.InvoiceNo

	-- update Service
	update	SVTrnFakturPajak
	set		FPJGovNo= a.FPJGovNo
			,SignedDate= a.FPJGovDate
	from	#f4 a, SVTrnFakturPajak b
	where	a.CompanyCode= b.CompanyCode and a.BranchCode= b.BranchCode and a.DocNo= b.FPJNo

	-- update Sales
	update	OmFakturPajakHdr
	set		FakturPajakNo= a.FPJGovNo
			,FakturPajakDate= a.FPJGovDate 
	from	#f4 a, OmFakturPajakHdr b
	where	a.CompanyCode= b.CompanyCode and a.BranchCode= b.BranchCode and a.DocNo= b.InvoiceNo

	-- update Finance
	update	ArFakturPajakHdr
	set		FakturPajakNo= a.FPJGovNo
			,FakturPajakDate= a.FPJGovDate
	from	#f4 a, ArFakturPajakHdr b
	where	a.CompanyCode= b.CompanyCode and a.BranchCode= b.BranchCode and a.DocNo= b.InvoiceNo

	--select top 1 convert(decimal,right(FPJGovNo,8)) from #f4 order by right(FPJGovNo,8) desc
	drop table #f3,#f4
end
else
begin
 ---------------------------------------------------------------------------------------------------
 --									Region Setelah Tanggal 1 April 2013                           --
 ---------------------------------------------------------------------------------------------------
	Declare @TotalFPJ				varchar(25)
	Declare @TotalFPJX				varchar(25)
	Declare @EndFPJ					varchar(25)
	Declare @CurrentFPJ				varchar(25)
	Declare @CountFPJNo				int
	Declare @CountUnValidFPJ		int
	Declare @CurrentDocNo			varchar(100)
	Declare @CurrentCompanyCode		varchar(15)
	Declare @CurrentBranchCode		varchar(15)
	Declare @CurrentTaxTransCode	varchar(2)
	Declare @CurrentCustCodeBill	varchar(15)			
			
	select * into #tblSeqNoFPJ from (
		select row_number() over(order by CompanyCode, BranchCode ,Year ,SeqNo asc) OrderNo, *
		  from GnMstFPJSeqNo with (NOLOCK, NOWAIT)
		 where CompanyCode = @CompanyCode 
			and 
			(
				(	case when @IsUnion = 0 then BranchCode end)= @BranchCode
					or (case when @IsUnion = 1 then BranchCode end) = 
						(select ParaValue from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH')
			)
			and Year = YEAR(getdate()) 
			and isActive = 1
			and EffectiveDate <= getdate()
			and isnull(BeginTaxNo,'') <> '' 
			and isnull(EndTaxNo,'') <> ''
	)#tblSeqNoFPJ	
				
	set @TotalFPJ = isnull((select TOP 1 FPJSeqNo from #tblSeqNoFPJ order by SeqNo Asc),'')
	set @EndFPJ = isnull((select TOP 1 EndTaxNo from #tblSeqNoFPJ order by SeqNo asc),'')
	set @CountFPJNo = (select SUM(convert(bigint,EndTaxNo) - convert(bigint,FPJSeqNo)) from #tblSeqNoFPJ where LEN(FPJSeqNo) <= 11) 			
						
	if (@TotalFPJ = '0' or @TotalFPJ = '')
	begin
		drop table #f1, #f2, #f3, #tblSeqNoFPJ
		raiserror('Tidak terdapat No Faktur Pajak yang aktif. Silahkan setting No Faktur Pajak terlebih dahulu',16 ,1);
		return
	end
	else
	begin
		if @CountFPJNo - isnull((select max(OrderNo) from #f1),0) < 0
		begin
			drop table #f1, #f2, #f3, #tblSeqNoFPJ
			raiserror('Faktur Pajak Aktif tidak mencukupi jumlah dokumen yang diperlukan. Silahkan setting No Faktur Pajak dengan no seq aktif selanjutnya.',16 ,1);
			return
		end
	end
	
	declare @Awal as bit
	declare @CCodeBill as varchar(15)
	set @Awal = 1	
									
	DECLARE temp CURSOR FOR
	SELECT	CompanyCode, BranchCode, DocNo, TaxTransCode, CustomerCodeBill
	FROM	#f3 

	OPEN temp
	FETCH NEXT FROM temp INTO @CurrentCompanyCode,@CurrentBranchCode,@CurrentDocNo,@CurrentTaxTransCode,@CurrentCustCodeBill
	WHILE @@FETCH_STATUS = 0
	BEGIN	
		if @Awal = 1
		begin -- -1
			print 'Nothing to do'
			set @Awal = 0
			set @CCodeBill = @CurrentCustCodeBill
		end	--	-1		
		else
		begin	-- 0			
			if @CurrentCustCodeBill = (select top 1 LookupValue from gnMstLookupDtl where CompanyCode = @CurrentCompanyCode and CodeID = 'FPJG' and LookupValue = @CurrentCustCodeBill)
			begin --1
				if @CCodeBill = @CurrentCustCodeBill
				begin
					print @CurrentFPJ + ' for ' + @CurrentCustCodeBill				
				end
				else
				begin
					print 'update ' + convert(varchar, convert(bigint,@TotalFPJ) + 1)
					-- update Master Sequence
					if convert(bigint,@TotalFPJ) + 1 < convert(bigint,@EndFPJ)
					begin
						update	GnMstFPJSeqNo
						set		FPJSeqNo = convert(bigint,@TotalFPJ) + 1
						where	CompanyCode= @CompanyCode
							and 
							(
								(	case when @IsUnion = 0 then BranchCode end)= @BranchCode
									or (case when @IsUnion = 1 then BranchCode end) = 
										(select ParaValue from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH')
							)
						  and	Year = YEAR(getdate())
						  and	SeqNo = (select MIN(SeqNo)
										   from GnMstFPJSeqNo 
										  where CompanyCode = @CompanyCode 
											and 
											(
												(	case when @IsUnion = 0 then BranchCode end)= @BranchCode
													or (case when @IsUnion = 1 then BranchCode end) = 
														(select ParaValue from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH')
											)
											and Year = YEAR(getdate())
											and isActive = 1
											and EffectiveDate <= getdate()
											and isnull(BeginTaxNo,0) <> 0 
											and isnull(EndTaxNo,0) <> 0)
					end
					else
					begin
						update GnMstFPJSeqNo
						set FPJSeqNo = convert(bigint,@TotalFPJ) + 1, isActive = 0
						where CompanyCode = @CompanyCode
							and 
							(
								(	case when @IsUnion = 0 then BranchCode end)= @BranchCode
									or (case when @IsUnion = 1 then BranchCode end) = 
										(select ParaValue from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH')
							)
						  and Year = YEAR(getdate())
						  and SeqNo = (select MIN(SeqNo)
										   from GnMstFPJSeqNo 
										  where CompanyCode = @CompanyCode 
											and 
											(
												(	case when @IsUnion = 0 then BranchCode end)= @BranchCode
													or (case when @IsUnion = 1 then BranchCode end) = 
														(select ParaValue from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH')
											)
											and Year = YEAR(getdate())
											and isActive = 1
											and EffectiveDate <= getdate()
											and isnull(BeginTaxNo,0) <> 0 
											and isnull(EndTaxNo,0) <> 0)
					end
				end
			end
			else
			begin
				if @CCodeBill = @CurrentCustCodeBill
				begin
					print @CurrentFPJ + ' for ' + @CurrentCustCodeBill					
				end
				else
				begin					
					print 'update ' + convert(varchar, convert(bigint,@TotalFPJ) + 1)
					 --update Master Sequence
					if convert(bigint,@TotalFPJ) + 1 < convert(bigint,@EndFPJ)
					begin --3
						update	GnMstFPJSeqNo
						set		FPJSeqNo = convert(bigint,@TotalFPJ) + 1
						where	CompanyCode= @CompanyCode
						  and	(
									(case when @IsUnion = 0 then BranchCode end)= @BranchCode
									or (case when @IsUnion = 1 then BranchCode end) = 
										(select ParaValue from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH')
								) 
						  and	Year = YEAR(getdate())
						  and	SeqNo = (select MIN(SeqNo)
										   from GnMstFPJSeqNo 
										  where CompanyCode = @CompanyCode 
										  and	(
													(case when @IsUnion = 0 then BranchCode end)= @BranchCode
													or (case when @IsUnion = 1 then BranchCode end) = 
														(select ParaValue from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH')
												) 
											and Year = YEAR(getdate())
											and isActive = 1
											and EffectiveDate <= getdate()
											and isnull(BeginTaxNo,0) <> 0 
											and isnull(EndTaxNo,0) <> 0)
					end --3
					else
					begin --4
						update GnMstFPJSeqNo
						set FPJSeqNo = convert(bigint,@TotalFPJ) + 1, isActive = 0
						where CompanyCode = @CompanyCode
						  and	(
									(case when @IsUnion = 0 then BranchCode end)= @BranchCode
									or (case when @IsUnion = 1 then BranchCode end) = 
										(select ParaValue from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH')
								) 
						  and Year = YEAR(getdate())
						  and SeqNo = (select MIN(SeqNo)
										   from GnMstFPJSeqNo 
										  where CompanyCode = @CompanyCode 
										  and	(
													(case when @IsUnion = 0 then BranchCode end)= @BranchCode
													or (case when @IsUnion = 1 then BranchCode end) = 
														(select ParaValue from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH')
												) 
											and Year = YEAR(getdate())
											and isActive = 1
											and EffectiveDate <= getdate()
											and isnull(BeginTaxNo,0) <> 0 
											and isnull(EndTaxNo,0) <> 0)
					end --4
				end				
			end
		end
		
		set @CCodeBill = @CurrentCustCodeBill
		set @TotalFPJ =   (select FPJSeqNo
							  from GnMstFPJSeqNo
							 where CompanyCode = @CompanyCode 
								and 
								(
									(	case when @IsUnion = 0 then BranchCode end)= @BranchCode
										or (case when @IsUnion = 1 then BranchCode end) = 
											(select ParaValue from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH')
								)
							   and Year = YEAR(getdate()) 
							   and isActive = 1
							   and EffectiveDate <= getdate()
							   and isnull(BeginTaxNo,'') <> '' 
							   and isnull(EndTaxNo,'') <> ''
							   and SeqNo = (select MIN(SeqNo)
											  from GnMstFPJSeqNo 
											 where CompanyCode = @CompanyCode 
												and 
												(
													(	case when @IsUnion = 0 then BranchCode end)= @BranchCode
														or (case when @IsUnion = 1 then BranchCode end) = 
															(select ParaValue from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH')
												)
												and Year = YEAR(getdate()) 
												and isActive = 1 
												and EffectiveDate <= getdate()
												and isnull(BeginTaxNo,0) <> 0 
												and isnull(EndTaxNo,0) <> 0))
		set @EndFPJ = (select EndTaxNo
							  from GnMstFPJSeqNo
							 where CompanyCode = @CompanyCode 
								and 
								(
									(	case when @IsUnion = 0 then BranchCode end)= @BranchCode
										or (case when @IsUnion = 1 then BranchCode end) = 
											(select ParaValue from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH')
								)
								and Year = YEAR(getdate()) 
							   and isActive = 1
							   and EffectiveDate <= getdate()
							   and isnull(BeginTaxNo,'') <> '' 
							   and isnull(EndTaxNo,'') <> ''
							   and SeqNo = (select MIN(SeqNo)
											  from GnMstFPJSeqNo 
											 where CompanyCode = @CompanyCode 
											   and BranchCode = @BranchCode
											   and Year = YEAR(getdate()) 
											   and isActive = 1 
											   and EffectiveDate <= getdate()
											   and isnull(BeginTaxNo,0) <> 0 
											   and isnull(EndTaxNo,0) <> 0))
											   
     
        set @TotalFPJX  = RIGHT('00000000000'+convert(varchar(11),@TotalFPJ),11)
		set @CurrentFPJ = (select LEFT (convert(varchar,@CurrentTaxTransCode) + '000',3)+'.'+
						   	      LEFT (convert(varchar,@TotalFPJX),3) + '-' +
								  RIGHT(convert(varchar,YEAR(getdate())),2) + '.' +
								  RIGHT('00000000'+convert(varchar,(convert(bigint,@TotalFPJ)+1)),8))											  		
		
		--insert to tabel GenerateTax
		insert into
			GnGenerateTax(
				CompanyCode, BranchCode, PeriodTaxYear, PeriodTaxMonth, ProfitCenterCode, FPJGovNo, 
				FPJGovDate, DocNo, DocDate , RefNo, RefDate, CreatedBy, CreatedDate
		) 
		select 
			CompanyCode, BranchCode, PeriodTaxYear, PeriodTaxMonth, ProfitCenterCode
			, @CurrentFPJ FPJGovNo
			, FPJGovDate, DocNo, DocDate , RefNo, RefDate, CreatedBy, CreatedDate
		from 
			#f3
		where CompanyCode = @CurrentCompanyCode
		  and BranchCode = @CurrentBranchCode
		  and DocNo = @CurrentDocNo
		  and TaxTransCode = @CurrentTaxTransCode			
			  						
			---- update Sparepart
			update	SPTrnSFPJHdr
			set		FPJGovNo= @CurrentFPJ
					,FPJSignature= a.FPJGovDate
			from	#f3 a, SPTrnSFPJHdr b
			where	a.CompanyCode= b.CompanyCode and a.BranchCode= b.BranchCode and a.DocNo= b.InvoiceNo 
				and b.CompanyCode = @CurrentCompanyCode and b.BranchCode = @CurrentBranchCode and b.InvoiceNo = @CurrentDocNo

			-- update Service
			update	SVTrnFakturPajak
			set		FPJGovNo= @CurrentFPJ
					,SignedDate= a.FPJGovDate
			from	#f3 a, SVTrnFakturPajak b
			where	a.CompanyCode = b.CompanyCode and a.BranchCode = b.BranchCode and a.DocNo= b.FPJNo
				and b.CompanyCode = @CurrentCompanyCode  and b.BranchCode = @CurrentBranchCode  and b.FPJNo = @CurrentDocNo

			-- update Sales
			update	OmFakturPajakHdr
			set		FakturPajakNo= @CurrentFPJ
					,FakturPajakDate= a.FPJGovDate 
			from	#f3 a, OmFakturPajakHdr b
			where	a.CompanyCode = b.CompanyCode and a.BranchCode = b.BranchCode and a.DocNo= b.InvoiceNo
				and b.CompanyCode = @CurrentCompanyCode  and b.BranchCode = @CurrentBranchCode  and b.InvoiceNo = @CurrentDocNo

			-- update Finance
			update	ArFakturPajakHdr
			set		FakturPajakNo= @CurrentFPJ
					,FakturPajakDate= a.FPJGovDate
			from	#f3 a, ArFakturPajakHdr b
			where	a.CompanyCode = b.CompanyCode and a.BranchCode = b.BranchCode and a.DocNo= b.InvoiceNo
				and b.CompanyCode = @CurrentCompanyCode  and b.BranchCode = @CurrentBranchCode  and b.InvoiceNo = @CurrentDocNo
				
			FETCH NEXT FROM temp INTO @CurrentCompanyCode,@CurrentBranchCode,@CurrentDocNo,@CurrentTaxTransCode,@CurrentCustCodeBill
		END
	CLOSE temp
	DEALLOCATE temp

	declare @countLoop as int
	set @countLoop = 0
	set @countLoop = (SELECT COUNT(*) FROM #f3)
	IF @countLoop = 1
	begin --4
		update GnMstFPJSeqNo
		set FPJSeqNo = convert(bigint,@TotalFPJ) + 1, isActive = 0
		where CompanyCode = @CompanyCode
		  and	(
					(case when @IsUnion = 0 then BranchCode end)= @BranchCode
					or (case when @IsUnion = 1 then BranchCode end) = 
						(select ParaValue from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH')
				) 
		  and Year = YEAR(getdate())
		  and SeqNo = (select MIN(SeqNo)
						   from GnMstFPJSeqNo 
						  where CompanyCode = @CompanyCode 
						  and	(
									(case when @IsUnion = 0 then BranchCode end)= @BranchCode
									or (case when @IsUnion = 1 then BranchCode end) = 
										(select ParaValue from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH')
								) 
							and Year = YEAR(getdate())
							and isActive = 1
							and EffectiveDate <= getdate()
							and isnull(BeginTaxNo,0) <> 0 
							and isnull(EndTaxNo,0) <> 0)
	end --4
					
	--select convert(varchar,convert(bigint,@TotalFPJ) + 1) FPJGovNo	
	drop table #f1, #f2, #f3, #tblSeqNoFPJ		
end	
	-- update TransDate Sparepart
	update GnMstCoProfileSpare 
	set TransDate = convert(datetime, @FPJDate) 
	WHERE CompanyCode= @CompanyCode and convert(datetime, TransDate, 112) < @FPJDate

	-- update TransDate Service
	update GnMstCoProfileService 
	set TransDate = convert(datetime, @FPJDate) 
	WHERE CompanyCode= @CompanyCode and convert(datetime, TransDate, 112) < @FPJDate 

	-- update TransDate Sales
	update GnMstCoProfileSales 
	set TransDate = convert(datetime, @FPJDate) 
	WHERE CompanyCode= @CompanyCode and convert(datetime, TransDate, 112) < @FPJDate 

	-- update TransDate Finance
	update GnMstCoProfileFinance 
	set TransDateAR = convert(datetime, @FPJDate) 
	WHERE CompanyCode= @CompanyCode and convert(datetime, TransDateAR, 112) < @FPJDate
	
END
GO
ALTER procedure [dbo].[usprpt_OmRpSalesTrn007]
	-- Add the parameters for the stored procedure here
	@CompanyCode VARCHAR(15),
	@BranchCode	 VARCHAR(15),
	@ReqNoA		 VARCHAR(15),
	@ReqNoB		 VARCHAR(15)

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
SELECT
	row_number () OVER (ORDER BY a.ReqNo) AS No
	, a.ReqNo
	, a.SKPKNo
	, a.FakturPolisiNo
	--, ISNULL(e.RefferenceDONo, '') DONo
	, ISNULL(c.SuzukiDONo, '') DONo
	, (SELECT dbo.GetDateIndonesian (a.FakturPolisiDate)) AS 'Tanggal'
	--, ISNULL(e.RefferenceDoDate, '') DODate
	, ISNULL(c.SuzukiDODate, '') DODate
	, ISNULL(d.CompanyName, '') CompanyName
	, ISNULL(d.Address1, '') CoAdd1
	, ISNULL(d.Address2, '') CoAdd2
	, ISNULL(d.Address3, '') CoAdd3
	, case d.ProductType 
		when '2W' then 'Harap dibuatkan Faktur untuk motor SUZUKI :'
		when '4W' then 'Harap dibuatkan Faktur untuk mobil SUZUKI :'
		when 'A' then 'Harap dibuatkan Faktur untuk motor SUZUKI :'
		when 'B' then 'Harap dibuatkan Faktur untuk mobil SUZUKI :'
		else 'Harap dibuatkan Faktur untuk SUZUKI :'
		end as Note
	--, ISNULL(e.RefferenceSJNo, '') SJNo
	--, ISNULL(e.RefferenceSJDate, '') SJDate
	, ISNULL(c.SuzukiSJNo, '') SJNo
	, ISNULL(c.SuzukiSJDate, '') SJDate
	, ISNULL(c.SalesModelCode, '') Model
	, ISNULL(f.SalesModelDesc, '') ModelDesc
	, ISNULL(g.RefferenceDesc1, '') Warna
	, ISNULL(c.SalesModelYear, 0) Tahun
	, a.ChassisNo
	, ISNULL(c.EngineNo, 0) EngineNo
	, ((CASE ISNULL(a.DealerCategory, '') WHEN 'M' THEN 'Main Dealer' WHEN 'S' THEN 'Sub Dealer' WHEN 'R' THEN 'Show Room' END) + ' / ' + h.CustomerName) AS  Penjual
	, a.SalesmanName
	, a.SKPKName
	, a.SKPKAddress1 Alamat1
	, a.SKPKAddress2 Alamat2
	, a.SKPKAddress3 Alamat3
	, ISNULL(i.LookUpValueName, '') City
	, a.SKPKTelp1
	, a.SKPKTelp2
	, a.SKPKHP
	, ISNULL(a.SKPKBirthday, '') SKPKDay
	, a.FakturPolisiName
	, a.FakturPolisiAddress1
	, a.FakturPolisiAddress2
	, a.FakturPolisiAddress3
	, a.FakturPolisiTelp1
	, a.FakturPolisiTelp2
	, a.FakturPolisiHP
	, a.FakturPolisiBirthday
	, (select ISNULL(LookUpValueName, '') from gnMstLookUpDtl where CompanyCode=a.CompanyCode and CodeID='FPCT' and LookUpValue=a.DealerCategory
		) AS DealerCategory
	, ISNULL(b.Remark, '') Remark
	, ISNULL(UPPER(z.SignName), '') AS SignName1
	, ISNULL(UPPER(z.TitleSign), '') AS TitleSign1 
	, a.IDNo
FROM
 omTrSalesReqDetail a
JOIN
 omTrSalesReq b ON b.CompanyCode=a.CompanyCode AND b.BranchCode=a.BranchCode
 AND b.ReqNo=a.ReqNo 
LEFT JOIN
 sdms..omMstVehicle c ON c.CompanyCode= '6159401'--a.CompanyCode 
 AND c.ChassisCode=a.ChassisCode
 AND c.ChassisNo=a.ChassisNo
LEFT JOIN
 gnMstCoProfile d ON d.CompanyCode=a.CompanyCode AND d.BranchCode=a.BranchCode
--LEFT JOIN omTrPurchaseBPUDetail j on a.CompanyCode=j.CompanyCode and c.ChassisCode=j.ChassisCode
--	and a.ChassisNo=j.ChassisNo
--LEFT JOIN
-- omTrPurchaseBPU e ON e.CompanyCode=j.CompanyCode AND e.BranchCode=j.BranchCode
--	and e.BPUNo=j.BPUNo
--	and e.PONo = c.PONo
LEFT JOIN
 sdms..omMstModel f ON f.CompanyCode= '6159401' --c.CompanyCode 
 AND f.SalesModelCode=c.SalesModelCode
LEFT JOIN
 sdms..omMstRefference g ON g.CompanyCode= '6159401' --c.CompanyCode
  AND g.RefferenceType='COLO'
 AND g.RefferenceCode=c.ColourCode
LEFT JOIN
 gnMstCustomer h ON h.CompanyCode=b.CompanyCode AND h.CustomerCode=b.SubDealerCode
LEFT JOIN
 gnMstLookUpDtl i ON i.CompanyCode=a.CompanyCode AND i.CodeID='CITY' 
 AND i.LookUpValue=a.SKPKCity
LEFT JOIN gnMstSIgnature z
	ON z.CompanyCode = a.CompanyCode
	AND z.BranchCode = a.BranchCode
	AND z.ProfitCenterCode = '100'
	AND z.DocumentType = 'RFP'
	AND z.SeqNo = 1
WHERE
 a.CompanyCode	  = @CompanyCode
 AND a.BranchCode = @BranchCode
 AND a.ReqNo BETWEEN @ReqNoA AND @ReqNoB
ORDER BY ReqNo
END
GO
ALTER procedure [dbo].[usprpt_PmRpInqFollowUpWeb] 
(
	@CompanyCode		VARCHAR(15),
	@BranchCode			VARCHAR(15),
	@PeriodBegin		DATETIME,
	@PeriodEnd			DATETIME,
	@BranchManager		VARCHAR(15),
	@SalesHead			VARCHAR(15),
	@Salesman			VARCHAR(15)
)
AS 
BEGIN
SET NOCOUNT ON;
----

IF(@BranchManager='' AND @SalesHead ='' AND @Salesman ='')
BEGIN
	SELECT * INTO #empl FROM (
		--SH =ALL AND S=ALL
		SELECT a.EmployeeID, a.Position, a.TeamLeader FROM HrEmployee a 
		WHERE a.Department ='SALES'
		AND a.Position = 'S'
		AND a.PersonnelStatus = '1'
		AND a.CompanyCode = @CompanyCode
	)#empl

	SELECT * INTO #t FROM (
		SELECT
			f.BranchName, a.InquiryNumber, a.NamaProspek Pelanggan, a.AlamatProspek, a.TelpRumah, a.NamaPerusahaan, CONVERT(VARCHAR(20),a.InquiryDate,106) InquiryDate, a.TipeKendaraan,
			a.Variant, a.Transmisi, b.RefferenceDesc1 Warna, a.PerolehanData,
			c.EmployeeName Employee, d.EmployeeName Supervisor, CONVERT(VARCHAR(20),e.NextFollowUpDate,106) NextFollowUpDate, a.LastProgress, e.ActivityDetail
			FROM PmKDP a
		LEFT JOIN OmMstRefference b
			ON b.CompanyCode = a.CompanyCode AND b.RefferenceType='COLO' AND b.RefferenceCode=a.ColourCode
		LEFT JOIN HrEmployee c
			ON c.CompanyCode = a.CompanyCode AND c.EmployeeID = a.EmployeeID
		LEFT JOIN HrEmployee d
			ON d.CompanyCode = a.CompanyCode AND d.EmployeeID = a.SpvEmployeeID
		LEFT JOIN PmActivities e
			ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode AND e.InquiryNumber=a.InquiryNumber
			AND e.ActivityID = (SELECT TOP 1 ActivityID FROM PmActivities WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode AND InquiryNumber=a.InquiryNumber ORDER BY ActivityID DESC) 
		LEFT JOIN gnMstOrganizationDtl f
			ON f.CompanyCode = a.CompanyCode AND f.BranchCode = a.BranchCode
		WHERE
			a.CompanyCode = @CompanyCode 
			AND a.LastProgress <> 'LOST'
			AND ((CASE WHEN @BranchCode='' THEN a.BranchCode END)<>'' OR (CASE WHEN @BranchCode<>'' THEN a.BranchCode END)=@BranchCode)
			AND CONVERT(varchar(20),e.NextFollowUpDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd
			--AND ((CASE WHEN @Outlet='' THEN a.OutletID END)<>'' OR (CASE WHEN @Outlet<>'' THEN a.OutletID END)=@Outlet)
			--AND ((CASE WHEN @SPV='' THEN a.SpvEmployeeID END)<>'' OR (CASE WHEN @SPV<>'' THEN a.SpvEmployeeID END)=@SPV)
			--AND ((CASE WHEN @EMP='' THEN a.EmployeeID END)<>'' OR (CASE WHEN @EMP<>'' THEN a.EmployeeID END)=@EMP)
	) #t

	DROP TABLE #empl
	SELECT InquiryNumber, Pelanggan, AlamatProspek, TelpRumah, NamaPerusahaan, InquiryDate, TipeKendaraan, Variant, Transmisi, Warna, PerolehanData,
	Employee, Supervisor, NextFollowUpDate, LastProgress, ActivityDetail FROM #t ORDER BY InquiryNumber
	DROP TABLE #t

END
ELSE IF(@BranchManager<>'' AND @SalesHead ='' AND @Salesman ='')
BEGIN
	SELECT * INTO #empl1 FROM (
		--SH =ALL AND S=ALL
		SELECT a.EmployeeID, a.Position, a.TeamLeader FROM HrEmployee a WHERE a.Department ='SALES'
		AND a.CompanyCode = @CompanyCode
		AND a.Position = 'S'
		AND a.PersonnelStatus = '1'
		AND a.TeamLeader IN (SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader=@BranchManager)
	)#empl1

	SELECT * INTO #t1 FROM (
		SELECT
			f.BranchName, a.InquiryNumber, a.NamaProspek Pelanggan, a.AlamatProspek, a.TelpRumah, a.NamaPerusahaan, CONVERT(VARCHAR(20),a.InquiryDate,106) InquiryDate, a.TipeKendaraan,
			a.Variant, a.Transmisi, b.RefferenceDesc1 Warna, a.PerolehanData,
			c.EmployeeName Employee, d.EmployeeName Supervisor, CONVERT(VARCHAR(20),e.NextFollowUpDate,106) NextFollowUpDate, a.LastProgress, e.ActivityDetail
			FROM PmKDP a
		LEFT JOIN OmMstRefference b
			ON b.CompanyCode = a.CompanyCode AND b.RefferenceType='COLO' AND b.RefferenceCode=a.ColourCode
		LEFT JOIN HrEmployee c
			ON c.CompanyCode = a.CompanyCode AND c.EmployeeID = a.EmployeeID
		LEFT JOIN HrEmployee d
			ON d.CompanyCode = a.CompanyCode AND d.EmployeeID = a.SpvEmployeeID
		LEFT JOIN PmActivities e
			ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode AND e.InquiryNumber=a.InquiryNumber
			AND e.ActivityID = (SELECT TOP 1 ActivityID FROM PmActivities WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode AND InquiryNumber=a.InquiryNumber ORDER BY ActivityID DESC) 
		LEFT JOIN gnMstOrganizationDtl f
			ON f.CompanyCode = a.CompanyCode AND f.BranchCode = a.BranchCode
		WHERE
			a.CompanyCode = @CompanyCode 
			AND a.LastProgress <> 'LOST' 
			AND ((CASE WHEN @BranchCode='' THEN a.BranchCode END)<>'' OR (CASE WHEN @BranchCode<>'' THEN a.BranchCode END)=@BranchCode)
			AND CONVERT(varchar(20),e.NextFollowUpDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd AND a.EmployeeID IN (SELECT g.EmployeeID FROM #empl1 g)
			--AND ((CASE WHEN @Outlet='' THEN a.OutletID END)<>'' OR (CASE WHEN @Outlet<>'' THEN a.OutletID END)=@Outlet)
			--AND ((CASE WHEN @SPV='' THEN a.SpvEmployeeID END)<>'' OR (CASE WHEN @SPV<>'' THEN a.SpvEmployeeID END)=@SPV)
			--AND ((CASE WHEN @EMP='' THEN a.EmployeeID END)<>'' OR (CASE WHEN @EMP<>'' THEN a.EmployeeID END)=@EMP)
	) #t1

	DROP TABLE #empl1
	SELECT InquiryNumber, Pelanggan, AlamatProspek, TelpRumah, NamaPerusahaan, InquiryDate, TipeKendaraan, Variant, Transmisi, Warna, PerolehanData,
	Employee, Supervisor, NextFollowUpDate, LastProgress, ActivityDetail FROM #t1 ORDER BY InquiryNumber
	DROP TABLE #t1

END
ELSE IF(@BranchManager<>'' AND @SalesHead <>'' AND @Salesman ='')
BEGIN
	SELECT * INTO #empl2 FROM (
		--S=ALL
		SELECT a.EmployeeID, a.Position, a.TeamLeader FROM HrEmployee a WHERE a.Department ='SALES'
		AND a.CompanyCode = @CompanyCode 
		AND a.Position = 'S'
		AND a.PersonnelStatus = '1'
		AND a.TeamLeader = @SalesHead
	)#empl2

	SELECT * INTO #t2 FROM (
		SELECT
			f.BranchName, a.InquiryNumber, a.NamaProspek Pelanggan, a.AlamatProspek, a.TelpRumah, a.NamaPerusahaan, CONVERT(VARCHAR(20),a.InquiryDate,106) InquiryDate, a.TipeKendaraan,
			a.Variant, a.Transmisi, b.RefferenceDesc1 Warna, a.PerolehanData,
			c.EmployeeName Employee, d.EmployeeName Supervisor, CONVERT(VARCHAR(20),e.NextFollowUpDate,106) NextFollowUpDate, a.LastProgress, e.ActivityDetail
			FROM PmKDP a
		LEFT JOIN OmMstRefference b
			ON b.CompanyCode = a.CompanyCode AND b.RefferenceType='COLO' AND b.RefferenceCode=a.ColourCode
		LEFT JOIN HrEmployee c
			ON c.CompanyCode = a.CompanyCode AND c.EmployeeID = a.EmployeeID
		LEFT JOIN HrEmployee d
			ON d.CompanyCode = a.CompanyCode AND d.EmployeeID = a.SpvEmployeeID
		LEFT JOIN PmActivities e
			ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode AND e.InquiryNumber=a.InquiryNumber
			AND e.ActivityID = (SELECT TOP 1 ActivityID FROM PmActivities WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode AND InquiryNumber=a.InquiryNumber ORDER BY ActivityID DESC) 
		LEFT JOIN gnMstOrganizationDtl f
			ON f.CompanyCode = a.CompanyCode AND f.BranchCode = a.BranchCode
		WHERE
			a.CompanyCode = @CompanyCode 
			AND a.LastProgress <> 'LOST' 
			AND ((CASE WHEN @BranchCode='' THEN a.BranchCode END)<>'' OR (CASE WHEN @BranchCode<>'' THEN a.BranchCode END)=@BranchCode)
			AND CONVERT(varchar(20),e.NextFollowUpDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd AND a.EmployeeID IN (SELECT g.EmployeeID FROM #empl2 g)
			--AND ((CASE WHEN @Outlet='' THEN a.OutletID END)<>'' OR (CASE WHEN @Outlet<>'' THEN a.OutletID END)=@Outlet)
			--AND ((CASE WHEN @SPV='' THEN a.SpvEmployeeID END)<>'' OR (CASE WHEN @SPV<>'' THEN a.SpvEmployeeID END)=@SPV)
			--AND ((CASE WHEN @EMP='' THEN a.EmployeeID END)<>'' OR (CASE WHEN @EMP<>'' THEN a.EmployeeID END)=@EMP)
	) #t2

	DROP TABLE #empl2
	SELECT InquiryNumber, Pelanggan, AlamatProspek, TelpRumah, NamaPerusahaan, InquiryDate, TipeKendaraan, Variant, Transmisi, Warna, PerolehanData,
	Employee, Supervisor, NextFollowUpDate, LastProgress, ActivityDetail FROM #t2 ORDER BY InquiryNumber
	DROP TABLE #t2
END
ELSE
BEGIN
	SELECT * INTO #empl3 FROM (
		SELECT a.EmployeeID, a.Position, a.TeamLeader FROM HrEmployee a WHERE a.Department ='SALES'
		AND a.CompanyCode = @CompanyCode AND  
		a.EmployeeID=@Salesman
	)#empl3

	SELECT * INTO #t3 FROM (
		SELECT
			f.BranchName, a.InquiryNumber, a.NamaProspek Pelanggan, a.AlamatProspek, a.TelpRumah, a.NamaPerusahaan, CONVERT(VARCHAR(20),a.InquiryDate,106) InquiryDate, a.TipeKendaraan,
			a.Variant, a.Transmisi, b.RefferenceDesc1 Warna, a.PerolehanData,
			c.EmployeeName Employee, d.EmployeeName Supervisor, CONVERT(VARCHAR(20),e.NextFollowUpDate,106) NextFollowUpDate, a.LastProgress, e.ActivityDetail
			FROM PmKDP a
		LEFT JOIN OmMstRefference b
			ON b.CompanyCode = a.CompanyCode AND b.RefferenceType='COLO' AND b.RefferenceCode=a.ColourCode
		LEFT JOIN HrEmployee c
			ON c.CompanyCode = a.CompanyCode AND c.EmployeeID = a.EmployeeID
		LEFT JOIN HrEmployee d
			ON d.CompanyCode = a.CompanyCode AND d.EmployeeID = a.SpvEmployeeID
		LEFT JOIN PmActivities e
			ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode AND e.InquiryNumber=a.InquiryNumber
			AND e.ActivityID = (SELECT TOP 1 ActivityID FROM PmActivities WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode AND InquiryNumber=a.InquiryNumber ORDER BY ActivityID DESC) 
		LEFT JOIN gnMstOrganizationDtl f
			ON f.CompanyCode = a.CompanyCode AND f.BranchCode = a.BranchCode
		WHERE
			a.CompanyCode = @CompanyCode 
			AND a.LastProgress <> 'LOST' 
			AND ((CASE WHEN @BranchCode='' THEN a.BranchCode END)<>'' OR (CASE WHEN @BranchCode<>'' THEN a.BranchCode END)=@BranchCode)
			AND CONVERT(varchar(20),e.NextFollowUpDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd AND a.EmployeeID IN (SELECT g.EmployeeID FROM #empl3 g)
			--AND ((CASE WHEN @Outlet='' THEN a.OutletID END)<>'' OR (CASE WHEN @Outlet<>'' THEN a.OutletID END)=@Outlet)
			--AND ((CASE WHEN @SPV='' THEN a.SpvEmployeeID END)<>'' OR (CASE WHEN @SPV<>'' THEN a.SpvEmployeeID END)=@SPV)
			--AND ((CASE WHEN @EMP='' THEN a.EmployeeID END)<>'' OR (CASE WHEN @EMP<>'' THEN a.EmployeeID END)=@EMP)
	) #t3

	DROP TABLE #empl3
	SELECT InquiryNumber, Pelanggan, AlamatProspek, TelpRumah, NamaPerusahaan, InquiryDate, TipeKendaraan, Variant, Transmisi, Warna, PerolehanData,
	Employee, Supervisor, NextFollowUpDate, LastProgress, ActivityDetail FROM #t3 ORDER BY InquiryNumber
	DROP TABLE #t3
END
----
END
GO
ALTER procedure [dbo].[usprpt_SvRpReport021V3]
	@CompanyCode varchar(15),
	@BranchCode  varchar(15),
	@ProductType varchar(15), 
	@PeriodYear  int,
	@Month1      int = 1,
	@Month2      int,
	@UserID      varchar(20)
as
--select @CompanyCode=N'6026401',@BranchCode=N'602640100',@ProductType=N'4W',@PeriodYear=2012,@Month2=1,@UserID=N'ga'
set nocount on

if @Month1 > @Month2 set @Month1 = @Month2

-- A. Sales Revenue (SR)
declare @A_01 numeric(18, 4) -- Total Labor Sales Revenue ( 2 + 3 + 4 )
declare @A_02 numeric(18, 4) --   Labor Sales - Chargeable to Customer CPUS (External)
declare @A_03 numeric(18, 4) --   Labor Sales - Non Chargeable (Warranty, FS1, FS2, FS3, FS4, FS5, FS6, FS7)
declare @A_04 numeric(18, 4) --   Labor Sales - Non Chargeable (Internal, PDI)
declare @A_05 numeric(18, 4) -- Total Parts Sales Revenue ( 6 + 7 + 8 )
declare @A_06 numeric(18, 4) --   Parts Sales - Chargeable to Customer CPUS (External)
declare @A_07 numeric(18, 4) --   Parts Sales - Non Chargeable (Warranty, FS1)
declare @A_08 numeric(18, 4) --   Parts Sales - Non Chargeable (Internal, PDI)
declare @A_09 numeric(18, 4) -- Total Counter Parts Sales Revenue
declare @A_10 numeric(18, 4) -- Total Lubricant Sales Revenue ( 11 + 12 + 13 )  
declare @A_11 numeric(18, 4) --   Lubricant Sales - Chargeable to Customer CPUS (External)
declare @A_12 numeric(18, 4) --   Lubricant Sales - Non Chargeable (Warranty, FS1)
declare @A_13 numeric(18, 4) --   Lubricant Sales - Non Chargeable (Internal, PDI)
declare @A_14 numeric(18, 4) -- Total Sublet Sales Revenue
declare @A_15 numeric(18, 4) -- Total Service Sales Revenue ( 16 + 17 + 18 )    
declare @A_16 numeric(18, 4) --   Service Sales - Chargeable to Customer CPUS (External)
declare @A_17 numeric(18, 4) --   Service Sales - Non Chargeable (Warranty, FS1)
declare @A_18 numeric(18, 4) --   Service Sales - Non Chargeable (Internal, PDI)
declare @A_19 numeric(18, 4) -- Hours Sold  
declare @A_20 numeric(18, 4) -- Total Available Hours  
declare @A_21 numeric(18, 4) -- Hours Sold / Available Hours  
declare @A_22 numeric(18, 4) -- Service Revenue Targer Per Unit (Based on RKA) 
declare @A_23 numeric(18, 4) -- Service Revenue per Unit exclude PDI (CPUS, Warranty, FS1) ((16 + 17) / 29)
declare @A_24 numeric(18, 4) -- Labour  Sales Turnover / Productive staff (Technician & Foreman)  (1 / 61)
declare @A_25 numeric(18, 4) -- Labour Sales Turnover / Service Advisors (1 / 60)
declare @A_26 numeric(18, 4) -- Labour Sales Turnover / Stall (1 / 56)
declare @A_27 numeric(18, 4) -- Absorption Rate
-- B. No of Unit Intake
declare @B_28 numeric(18, 4) -- Unit Entry Target
declare @B_29 numeric(18, 4) -- No of Work Order ( 30 + 31 )
declare @B_30 numeric(18, 4) -- Passenger Car
declare @B_31 numeric(18, 4) -- Commercial Vehicle 
declare @B_32 numeric(18, 4) -- PDI
-- C. No of JobType
declare @C_33 numeric(18, 4) -- Chargeable /  Customer Paid Unit Service (CPUS) (34 + 38 + 42 + 43)
declare @C_34 numeric(18, 4) --   Periodical Maintenance under Warranty Period (= 100,000 km / = 3 Years) (sum of 35 to 37)
declare @C_35 numeric(18, 4) --     10,000*; 30,000; 50,000; 70,000; & 90,000 km
declare @C_36 numeric(18, 4) --     20,000*; 60,000 & 100,000 km
declare @C_37 numeric(18, 4) --     40,000 & 80,000 km 
declare @C_38 numeric(18, 4) --   Periodical Maintenance out of Warranty Period (> 100,000 km / >3 years) (sum of 39 to 41)
declare @C_39 numeric(18, 4) --     +10,000; +30,000; +50,000; +70,000; & +90,000 km
declare @C_40 numeric(18, 4) --     +20,000; +60,000 & +100,000 km
declare @C_41 numeric(18, 4) --     +40,000 & +80,000 km
declare @C_42 numeric(18, 4) --   5,000 km multiplier & above
declare @C_43 numeric(18, 4) --   G/R Non Periodical Maintenance and Others
declare @C_44 numeric(18, 4) -- No. of Free Service (FS 1, FS 2, and FS 3) (sum of 45 to 47)
declare @C_45 numeric(18, 4) --   KSG  1,000 km
declare @C_46 numeric(18, 4) --   KSG  5,000 km
declare @C_47 numeric(18, 4) --   KSG 10,000 km
declare @C_48 numeric(18, 4) --   KSG 20,000 km
declare @C_53 numeric(18, 4) --   KSG 30,000 km
declare @C_54 numeric(18, 4) --   KSG 40,000 km
declare @C_55 numeric(18, 4) --   KSG 50,000 km
declare @C_49 numeric(18, 4) -- Non-chargeable Repair (Warranty, Repeated Job, PDI) (Sum of 49 to 51)
declare @C_50 numeric(18, 4) --   No. of Warranty Repair
declare @C_51 numeric(18, 4) --   Repeat Job (Rework)
declare @C_52 numeric(18, 4) --   No. of PDI intake
-- D. Workshop Service Strength
declare @D_53 numeric(18, 4) -- No. of Working Stalls ( Available stalls Exclude Inspection Stall and Washing Stall)
declare @D_54 numeric(18, 4) -- Total No. of Staff (55 + 56 + 57 + 58 + 61 + 62)
declare @D_55 numeric(18, 4) --   No. of Admin & Support Staff
declare @D_56 numeric(18, 4) --   No. of Service Relation Officer (SRO)
declare @D_57 numeric(18, 4) --   No. of Service Advisors
declare @D_58 numeric(18, 4) --   No. of Productive Staff (59 + 60)
declare @D_59 numeric(18, 4) --     No. of Foreman
declare @D_60 numeric(18, 4) --     No. of Technician
declare @D_61 numeric(18, 4) --   No. of PDI Staff
declare @D_62 numeric(18, 4) --   No. of Part Staff
-- E. Productivity Indicator
declare @E_01 numeric(18, 4)
declare @E_02 numeric(18, 4)
declare @E_03 numeric(18, 4)
declare @E_04 numeric(18, 4)
declare @E_05 numeric(18, 4)
declare @E_06 numeric(18, 4)
declare @E_07 numeric(18, 4)
declare @E_08 numeric(18, 4)
declare @E_09 numeric(18, 4)
-- F. Activity
declare @F_72 numeric(18, 4)
declare @F_73 numeric(18, 4)
declare @F_74 numeric(18, 4)
declare @F_75 numeric(18, 4)
declare @F_76 numeric(18, 4)
declare @F_77 numeric(18, 4)
declare @F_78 numeric(18, 4)
declare @F_79 numeric(18, 4)
-- G. 
declare @G_01 numeric(18, 4)
declare @G_02 numeric(18, 4)
declare @G_03 numeric(18, 4)
declare @G_04 numeric(18, 4)
declare @G_05 numeric(18, 4)
declare @G_06 numeric(18, 4)
declare @G_07 numeric(18, 4)
declare @G_08 numeric(18, 4)
declare @G_09 numeric(18, 4)
declare @G_10 numeric(18, 4)
declare @G_11 numeric(18, 4)
declare @G_12 numeric(18, 4)

-- declare table msi data
declare @t_msidat as table
(
	MsiGrCode varchar(10),
	MsiCode   varchar(10),
	MsiMonth  int,
	MsiData   numeric(18, 4) 
)

-- declare table msi group
declare @t_msigrp as table
(
	MsiGroup  varchar(max),
	MsiGrDesc varchar(max)
)

declare @Month0 int set @Month0 = @Month1

while @Month0 <= @Month2
begin
	if exists (
		select * from SvHstSzkMSI
		 where CompanyCode = @CompanyCode
		   and BranchCode = @BranchCode
		   and PeriodYear = @PeriodYear
		   and PeriodMonth = @Month0
		   and PeriodMonth < @Month2) 
	begin
		set @Month0 = @Month0 + 1
		continue
	end			   

	-- A. Calculate Sales Revenue
	-- Labor Sales Revenue @A_01 -> @P_04
	declare @t_inv_tsk as table
	(
		InvoiceNo varchar(20),
		HourSold  numeric(18,2),  
		LbrDppAmt numeric(18,0),
		IsSubCon  bit,
		JobType   varchar(20),
		KsgType   varchar(20)  
	)
   	
	insert into @t_inv_tsk
	select a.InvoiceNo, b.OperationHour
		 , ceiling(b.OperationHour * b.OperationCost * (100.0 - b.DiscPct) * 0.01) LbrDppAmt
		 , IsSubCon = isnull((
						  select top 1 IsSubCon from svMstTask
						   where CompanyCode = a.CompanyCode
							 and BasicModel = a.BasicModel
							 and OperationNo = b.OperationNo
						  ), 0)
		 , a.JobType		
		 , case 
			  when (c.JobType like 'FS%' and c.GroupJobType = 'FSC' and c.WarrantyOdometer = 1000)  then 'FSC01'
			  when (c.JobType like 'FS%' and c.GroupJobType = 'FSC' and c.WarrantyOdometer = 5000)  then 'FSC02'
			  when (c.JobType like 'FS%' and c.GroupJobType = 'FSC' and c.WarrantyOdometer = 10000) then 'FSC03'
			  when (c.JobType like 'FS%' and c.GroupJobType = 'FSC' and c.WarrantyOdometer = 20000) then 'FSC04'
			  when (c.JobType like 'FS%' and c.GroupJobType = 'FSC' and c.WarrantyOdometer = 30000) then 'FSC05'
			  when (c.JobType like 'FS%' and c.GroupJobType = 'FSC' and c.WarrantyOdometer = 40000) then 'FSC06'
			  when (c.JobType like 'FS%' and c.GroupJobType = 'FSC' and c.WarrantyOdometer = 50000) then 'FSC07'
			  else ''
		   end as KsgType
	  from svTrnInvoice a
	 inner join svTrnInvTask b
		on b.CompanyCode = a.CompanyCode
	   and b.BranchCode = a.BranchCode
	   and b.InvoiceNo = a.InvoiceNo
	  left join svMstJob c
		on c.CompanyCode = a.CompanyCode
	   and c.BasicModel = a.BasicModel
	   and c.JobType = a.JobType
	 where a.CompanyCode = @CompanyCode
	   and a.BranchCode = @BranchCode
	   and Year(a.Invoicedate) = @PeriodYear
	   and Month(a.Invoicedate) = @Month0
	   and a.JobType != 'REWORK'

	set @A_01 = ISNULL((select sum(LbrDppAmt) from @t_inv_tsk where IsSubCon = 0),0)
	-- CLAIM & FSC
	set @A_03 = ISNULL((select sum(LbrDppAmt) from @t_inv_tsk where IsSubCon = 0 and (substring(InvoiceNo, 1 ,3) = 'INW' or substring(InvoiceNo, 1 ,3) = 'INF' and JobType != 'PDI')),0)
	-- INTERNAL & PDI
	set @A_04 = ISNULL((select sum(LbrDppAmt) from @t_inv_tsk where IsSubCon = 0 and (substring(InvoiceNo, 1 ,3) = 'INI' or substring(InvoiceNo, 1 ,3) = 'INF' and JobType = 'PDI')), 0)
	-- CPUS
	set @A_02 = @A_01 - (@A_03 + @A_04)
	
	-- Part Sales Revenue @P_06 -> @P_13 ex @P_09
	declare @t_inv_itm as table
	(
		InvoiceNo  varchar(20),
		GroupTpgo  varchar(50), 
		IsSublet   varchar(10),
		GroupJob   varchar(50),
		SprAmt     numeric(18,0)
	)	
	insert into @t_inv_itm
	select a.InvoiceNo
		 , c.ParaValue as GroupTpgo
		 , case when TypeofGoods in ('0', '1') then '0' else '1' end IsSublet
		 , case 
			 when left(a.InvoiceNo, 3) = 'INI' or a.JobType = 'PDI' then 'INT,PDI'
			 when left(a.InvoiceNo, 3) = 'INW' or left(a.InvoiceNo, 3) = 'INF' then 'CLM,FSC'
			 else 'CPUS'
		   end GroupJob
		 , (ceiling((b.SupplyQty - b.ReturnQty) * b.RetailPrice * (100.0 - b.DiscPct) * 0.01)) SprAmt
	  from svTrnInvoice a
	 inner join svTrnInvItem b
		on b.CompanyCode = a.CompanyCode
	   and b.BranchCode = a.BranchCode
	   and b.InvoiceNo = a.InvoiceNo
	  left join gnMstLookupDtl c
		on c.CompanyCode = a.CompanyCode
	   and c.CodeID = 'GTGO'
	   and c.LookupValue = b.TypeOfGoods
	 where a.CompanyCode = @CompanyCode
	   and a.BranchCode = @BranchCode
	   and Year(a.Invoicedate) = @PeriodYear
	   and Month(a.Invoicedate) = @Month0
	   and a.JobType != 'REWORK'

	set @A_05 = isnull((select sum(SprAmt) from @t_inv_itm where IsSublet = 0 and GroupTpgo = 'SPAREPART'), 0)
	set @A_06 = isnull((select sum(SprAmt) from @t_inv_itm where IsSublet = 0 and GroupTpgo = 'SPAREPART' and GroupJob = 'CPUS'), 0)
	set @A_07 = isnull((select sum(SprAmt) from @t_inv_itm where IsSublet = 0 and GroupTpgo = 'SPAREPART' and GroupJob = 'CLM,FSC'), 0)
	set @A_08 = isnull((select sum(SprAmt) from @t_inv_itm where IsSublet = 0 and GroupTpgo = 'SPAREPART' and GroupJob = 'INT,PDI'), 0)
	set @A_09 = isnull((
	            select sum(TotDppAmt)
	              from spTrnSFPJHdr
	             where 1 = 1
	               and CompanyCode = @CompanyCode
	               and BranchCode = @BranchCode
	               and year(FPJDate) = @PeriodYear
	               and month(FPJDate) = @Month0
	               and TypeOfGoods = 0
	             ), 0)
	set @A_10 = isnull((select sum(SprAmt) from @t_inv_itm where IsSublet = 0 and GroupTpgo != 'SPAREPART'), 0)
	set @A_11 = isnull((select sum(SprAmt) from @t_inv_itm where IsSublet = 0 and GroupTpgo != 'SPAREPART' and GroupJob = 'CPUS'), 0)
	set @A_12 = isnull((select sum(SprAmt) from @t_inv_itm where IsSublet = 0 and GroupTpgo != 'SPAREPART' and GroupJob = 'CLM,FSC'), 0)
	set @A_13 = isnull((select sum(SprAmt) from @t_inv_itm where IsSublet = 0 and GroupTpgo != 'SPAREPART' and GroupJob = 'INT,PDI'), 0)

	-- Sublet --> Subcon Task + Part Non SGP & Part Non SGO
	set @A_14 = isnull((select sum(isnull(LbrDppAmt, 0)) from @t_inv_tsk where IsSubCon = 1), 0) + isnull((select sum(isnull(SprAmt, 0)) from @t_inv_itm where IsSublet = 1), 0)
	
	set @A_16 = @A_02 + @A_06 + @A_11 + @A_14
	set @A_17 = @A_03 + @A_07 + @A_12
	set @A_18 = @A_04 + @A_08 + @A_13
	set @A_15 = @A_16 + @A_17 + @A_18
	
	set @A_19 = (select sum(HourSold) from @t_inv_tsk where IsSubCon = 0)
	set @A_20 = isnull((select sum(a.WorkingHours)
						  from gnMstAbsence a
						 where 1 = 1
						   and a.CompanyCode=@CompanyCode
						   and a.BranchCode=@BranchCode
						   and Year(a.WorkingDate)=@PeriodYear
						   and Month(a.WorkingDate)=@Month0  
						   and exists (
						      select * from gnMstEmployee 
						       where CompanyCode = a.CompanyCode
						         and BranchCode = a.BranchCode
						         and EmployeeID = a.EmployeeID
						         and TitleCode = '9'
						   ) 
						 ),0)
	set @A_21 = (case isnull(@A_20, 0) when 0 then 0 else 1.0 * isnull(@A_19, 0)/ @A_20 end) * 100.0
	set @A_22 = isnull((
						select ServiceAmount
						  from svMstTarget
						 where CompanyCode=@CompanyCode
						   and BranchCode=@BranchCode
						   and ProductType=@ProductType
						   and PeriodYear=@PeriodYear
						   and PeriodMonth=@Month0
						 ),0)
						 
	-- B. No of Unit Intake					 
	set @B_28 = isnull((
						select TotalUnitService
						  from svMstTarget
						 where CompanyCode=@CompanyCode
						   and BranchCode=@BranchCode
						   and ProductType=@ProductType
						   and PeriodYear=@PeriodYear
						   and PeriodMonth=@Month0
						 ),0)
						 
	declare @t_inv_unit as table
	(
		CompanyCode  varchar(20),
		BasicModel   varchar(50), 
		Unit         varchar(50),
		InvoiceDate  varchar(50),
		JmlInvoice   int,
		GroupType    varchar(20)
	)	
	insert into @t_inv_unit
	select x.*, case y.IsLocked when 0 then 'P' else 'C' end as GroupType 
	  from (
			select a.CompanyCode, a.BasicModel
				 , a.ChassisCode + convert(varchar, a.ChassisNo) Unit
				 , convert(varchar, a.JobOrderDate, 112) JobOrderDate
				 , count(a.InvoiceNo) JmlInvoice
			  from svTrnInvoice a
			 where a.CompanyCode = @CompanyCode
			   and a.BranchCode = @BranchCode
			   and year(a.InvoiceDate) = @PeriodYear
			   and month(a.InvoiceDate) = @Month0
			   and a.JobType != 'REWORK'
			 group by a.CompanyCode, a.BasicModel, a.ChassisCode, a.ChassisNo, convert(varchar, a.JobOrderDate, 112)
			)x
	  left join svMstRefferenceService y
		on y.CompanyCode = x.CompanyCode
	   and y.RefferenceType = 'BASMODEL'
	   and y.RefferenceCode = x.BasicModel

	declare @t_inv_unit_pdi as table
	(
		CompanyCode  varchar(20),
		BasicModel   varchar(50), 
		Unit         varchar(50),
		InvoiceDate  varchar(50),
		JmlInvoice   int,
		GroupType    varchar(20)
	)	
	insert into @t_inv_unit_pdi
	select x.*, case y.IsLocked when 0 then 'P' else 'C' end as GroupType 
	  from (
			select a.CompanyCode, a.BasicModel
				 , a.ChassisCode + convert(varchar, a.ChassisNo) Unit
				 , convert(varchar, a.JobOrderDate, 112) JobOrderDate
				 , count(a.InvoiceNo) JmlInvoice
			  from svTrnInvoice a
			 where a.CompanyCode = @CompanyCode
			   and a.BranchCode = @BranchCode
			   and a.JobType = 'PDI'
			   and year(a.InvoiceDate) = @PeriodYear
			   and month(a.InvoiceDate) = @Month0
			 group by a.CompanyCode, a.BasicModel, a.ChassisCode, a.ChassisNo, convert(varchar, a.JobOrderDate, 112)
			)x
	  left join svMstRefferenceService y
		on y.CompanyCode = x.CompanyCode
	   and y.RefferenceType = 'BASMODEL'
	   and y.RefferenceCode = x.BasicModel

	declare @t_inv_unit_exc as table
	(
		CompanyCode  varchar(20),
		BasicModel   varchar(50), 
		Unit         varchar(50),
		InvoiceDate  varchar(50),
		JmlInvoice   int,
		GroupType    varchar(20)
	)	

	insert into @t_inv_unit_exc
	select a.* from @t_inv_unit a
	 where not exists (
		select * from @t_inv_unit_pdi
		 where CompanyCode = a.CompanyCode
		   and Unit = a.Unit
		   and InvoiceDate = a.InvoiceDate
		   
	 )


	set @B_29 = (select count(*) from @t_inv_unit_exc)
	set @B_30 = (select count(*) from @t_inv_unit_exc where GroupType = 'P')
	set @B_31 = (select count(*) from @t_inv_unit_exc where GroupType = 'C')
	set @B_32 = (select count(*) from @t_inv_unit_pdi)
					
	-- C. No of JobType
	declare @t_inv_job as table
	(
		JobType      varchar(20),
		ChassisCode  varchar(20),
		ChassisNo    varchar(20), 
		JobOrderDate varchar(20)
	)
	
	insert into @t_inv_job
	select JobType, ChassisCode, ChassisNo, convert(varchar, JobOrderDate, 112) JobOrderDate
	  from svTrnInvoice
	 where 1 = 1
	   and BranchCode = @BranchCode
	   and year(InvoiceDate) = @PeriodYear
	   and month(InvoiceDate) = @Month0
	   and JobType != 'REWORK'
	 group by ChassisCode, ChassisNo, JobType, convert(varchar, JobOrderDate, 112)
	 
	-- RTN Unit
	declare @t_unit_rtn as table
	(
		InvoiceDate  varchar(20),
		ChassisCode  varchar(50), 
		ChassisNo    varchar(50),
		GroupJobType varchar(50),
		JobType      varchar(50),
		Odometer     numeric(10)
	)	
	insert into @t_unit_rtn
	select distinct convert(varchar, a.InvoiceDate, 112) InvoiceDate
		 , a.ChassisCode, convert(varchar, a.ChassisNo) ChassisNo
		 , b.GroupJobType, a.JobType
		 , b.WarrantyOdometer as Odometer
	  from svTrnInvoice a
	 inner join svMstJob b
		on b.CompanyCode = a.CompanyCode
	   and b.ProductType = a.ProductType
	   and b.BasicModel = a.BasicModel
	   and b.JobType = a.JobType
	 where a.CompanyCode = @CompanyCode
	   and a.BranchCode = @BranchCode
	   and year(a.InvoiceDate) = @PeriodYear
	   and month(a.InvoiceDate) = @Month0
	   and b.GroupJobType = 'RTN'
	   and not exists (
		select 1 from svTrnInvoice
		 where 1 = 1
		   and CompanyCode = a.CompanyCode
		   and BranchCode = a.BranchCode
		   and ChassisCode = a.ChassisCode
		   and ChassisNo = a.ChassisNo
		   and convert(varchar, InvoiceDate, 112) = convert(varchar, a.InvoiceDate, 112)
		   and (JobType = 'PDI' or JobType like 'FS%')
	   )
		 
   
	set @C_35 = (select count(*) from @t_unit_rtn where Odometer in (10000,30000,50000,70000,90000))
	set @C_36 = (select count(*) from @t_unit_rtn where Odometer in (20000,60000,100000))
	set @C_37 = (select count(*) from @t_unit_rtn where Odometer in (40000,80000))
	set @C_34 = @C_35 + @C_36 + @C_37

	set @C_39 = (select count(*) from @t_unit_rtn where Odometer in (110000,130000,150000,170000,190000,210000,230000,250000,270000,290000))
	set @C_40 = (select count(*) from @t_unit_rtn where Odometer in (120000,160000,200000,220000,260000,300000))
	set @C_41 = (select count(*) from @t_unit_rtn where Odometer in (140000,180000,240000,280000))
	set @C_38 = @C_39 + @C_40 + @C_41
	
	set @C_42 = (select count(*) from @t_unit_rtn where (Odometer % 10000) = 5000)
	
	-- FSC Job
	declare @t_unit_fsc_clm as table
	(
		InvoiceDate  varchar(20),
		ChassisCode  varchar(50), 
		ChassisNo    varchar(50),
		GroupJobType varchar(50),
		JobType      varchar(50),
		Odometer     numeric(10),
		InvoiceNo	 varchar(50)
	)	
	insert into @t_unit_fsc_clm
	select distinct convert(varchar, a.InvoiceDate, 112) InvoiceDate
		 , a.ChassisCode, convert(varchar, a.ChassisNo) ChassisNo
		 , b.GroupJobType, a.JobType
		 , b.WarrantyOdometer as Odometer
		 , a.InvoiceNo
	  from svTrnInvoice a
	 inner join svMstJob b
		on b.CompanyCode = a.CompanyCode
	   and b.ProductType = a.ProductType
	   and b.BasicModel = a.BasicModel
	   and b.JobType = a.JobType
	 where a.CompanyCode = @CompanyCode
	   and a.BranchCode = @BranchCode
	   and year(a.InvoiceDate) = @PeriodYear
	   and month(a.InvoiceDate) = @Month0
	   and b.GroupJobType in ('FSC','CLM')
	   and not exists (
		select 1 from svTrnInvoice
		 where 1 = 1
		   and CompanyCode = a.CompanyCode
		   and BranchCode = a.BranchCode
		   and ChassisCode = a.ChassisCode
		   and ChassisNo = a.ChassisNo
		   and convert(varchar, InvoiceDate, 112) = convert(varchar, a.InvoiceDate, 112)
		   and a.JobType = 'PDI'
		   )

	set @C_45 = (select count(*) from @t_unit_fsc_clm where GroupJobType = 'FSC' and Odometer = 1000 and InvoiceNo like 'INF%')
	set @C_46 = (select count(*) from @t_unit_fsc_clm where GroupJobType = 'FSC' and Odometer = 5000 and InvoiceNo like 'INF%')
	set @C_47 = (select count(*) from @t_unit_fsc_clm where GroupJobType = 'FSC' and Odometer = 10000 and InvoiceNo like 'INF%')
	set @C_48 = (select count(*) from @t_unit_fsc_clm where GroupJobType = 'FSC' and Odometer = 20000 and InvoiceNo like 'INF%')
	set @C_53 = (select count(*) from @t_unit_fsc_clm where GroupJobType = 'FSC' and Odometer = 30000 and InvoiceNo like 'INF%')
	set @C_54 = (select count(*) from @t_unit_fsc_clm where GroupJobType = 'FSC' and Odometer = 40000 and InvoiceNo like 'INF%')
	set @C_55 = (select count(*) from @t_unit_fsc_clm where GroupJobType = 'FSC' and Odometer = 50000 and InvoiceNo like 'INF%')
	set @C_44 = @C_45 + @C_46 + @C_47 + @C_48 + @C_53 + @C_54 + @C_55
	set @C_50 = (select count(*) from @t_unit_fsc_clm where GroupJobType = 'CLM' and InvoiceNo like 'INW%')
	
	set @C_52 = (select count(*) from @t_inv_tsk where JobType = 'PDI')

	-- Unit Others
	declare @t_unit_oth as table
	(
		InvoiceDate  varchar(20),
		ChassisCode  varchar(50), 
		ChassisNo    varchar(50),
		GroupJobType varchar(50),
		JobType      varchar(50),
		Odometer     numeric(10)
	)	
	insert into @t_unit_oth
	select distinct convert(varchar, a.InvoiceDate, 112) InvoiceDate
		 , a.ChassisCode, convert(varchar, a.ChassisNo) ChassisNo
		 , b.GroupJobType, a.JobType
		 , b.WarrantyOdometer as Odometer
	  from svTrnInvoice a
	 inner join svMstJob b
		on b.CompanyCode = a.CompanyCode
	   and b.ProductType = a.ProductType
	   and b.BasicModel = a.BasicModel
	   and b.JobType = a.JobType
	 where a.CompanyCode = @CompanyCode
	   and a.BranchCode = @BranchCode
	   and year(a.InvoiceDate) = @PeriodYear
	   and month(a.InvoiceDate) = @Month0
	   and b.GroupJobType not in ('FSC','CLM','RTN')

	set @C_51 = (select count(*) from @t_unit_oth where JobType = 'REWORK')

	-- Unit ALL
	declare @t_unit_all as table
	(
		InvoiceDate  varchar(20),
		ChassisCode  varchar(50), 
		ChassisNo    varchar(50)
	)	
	insert into @t_unit_all
	select distinct convert(varchar, a.JobOrderDate, 112) InvoiceDate
		 , a.ChassisCode, convert(varchar, a.ChassisNo) ChassisNo
	  from svTrnInvoice a
	 inner join svMstJob b
		on b.CompanyCode = a.CompanyCode
	   and b.ProductType = a.ProductType
	   and b.BasicModel = a.BasicModel
	   and b.JobType = a.JobType
	 where a.CompanyCode = @CompanyCode
	   and a.BranchCode = @BranchCode
	   and year(a.InvoiceDate) = @PeriodYear
	   and month(a.InvoiceDate) = @Month0

	-- Unit ALL
	declare @t_job_all as table
	(
		ChassisCode  varchar(50), 
		ChassisNo    varchar(50),
		GroupJobType varchar(20),
		JobType      varchar(20),
		Odometer     numeric(18,0),
		JobOrderDate datetime
	)	
	insert into @t_job_all
	select a.ChassisCode, a.ChassisNo
		 , case b.GroupJobType 
			 when 'RTN' then 
				(case 
					when b.WarrantyOdometer in (10000,30000,50000,70000,90000) then 'PB.A.1 3 5 7 9'
					when b.WarrantyOdometer in (20000,60000,100000) then 'PB.A.2 6 10'
					when b.WarrantyOdometer in (40000,80000) then 'PB.A.4 8'
					when b.WarrantyOdometer in (110000,130000,150000,170000,190000) then 'PB.B.1 3 5 7 9'
					when b.WarrantyOdometer in (120000,160000,110000) then 'PB.B.2 6 10'
					when b.WarrantyOdometer in (140000,180000) then 'PB.B.4 8'
					when b.WarrantyOdometer in (210000,230000,250000,270000,290000) then 'PB.B.1 3 5 7 9'
					when b.WarrantyOdometer in (220000,260000,210000) then 'PB.B.2 6 10'
					when b.WarrantyOdometer in (240000,280000) then 'PB.B.4 8'
					when b.WarrantyOdometer in (  5000, 15000, 25000, 35000, 45000, 55000, 65000, 75000, 85000, 95000) then 'PB.C.5000'
					when b.WarrantyOdometer in (105000,115000,125000,135000,145000,155000,165000,175000,185000,195000) then 'PB.C.5000'
					when b.WarrantyOdometer in (205000,215000,225000,235000,245000,155000,265000,275000,285000,295000) then 'PB.C.5000'
					else 'OTHERS'
					end
				)
			 when 'FSC' then 
				(case b.PdiFscSeq when 0 then 'PDI' else 'FS' end)
			 when 'CLM' then 'CLAIM'
			 else 'OTHERS'
		   end as GroupJobType
		 , case b.GroupJobType 
			 when 'RTN' then 'PB' + right(replicate(' ', 5) + convert(varchar, b.WarrantyOdometer), 6) 
			 when 'FSC' then 
				(case b.PdiFscSeq when 0 then 'PDI' else ('FS' + right(replicate(' ', 5) + convert(varchar, b.WarrantyOdometer), 6)) end)
			 when 'CLM' then 'CLAIM'
			 else 'OTHERS'
		   end as JobType
		 , b.WarrantyOdometer
		 , convert(datetime, convert(varchar, a.JobOrderDate, 112)) JobOrderDate  
	  from svTrnInvoice a  
	  left join svMstJob b
		on b.CompanyCode = a.CompanyCode
	   and b.BasicModel = a.BasicModel
	   and b.JobType = a.JobType  
	 where a.CompanyCode = @CompanyCode
	   and a.BranchCode = @BranchCode
	   and year(a.InvoiceDate) = @PeriodYear
	   and month(a.InvoiceDate) = @Month0
	 group by a.ChassisCode, a.ChassisNo, b.GroupJobType, b.PdiFscSeq, b.WarrantyOdometer, convert(varchar, a.JobOrderDate, 112)  

	set @C_49 = @C_50 + @C_51 + @C_52
	set @C_43 = (select count(*) from @t_job_all where GroupJobType = 'OTHERS')
	set @C_33 = @C_34 + @C_38 + @C_42 + @C_43

	-- D. Workshop Service Strength
	set @D_53 = isnull((
						select TotalStall
						  from svMstTarget
						 where CompanyCode=@CompanyCode
						   and BranchCode=@BranchCode
						   and ProductType=@ProductType
						   and PeriodYear=@PeriodYear
						   and PeriodMonth=@Month0
						 ),0)					
	set @D_55 = isnull((
					select count(*) from gnMstEmployee
					 where CompanyCode = @CompanyCode
					   and BranchCode  = @BranchCode
					   and TitleCode  in ('6', '11', '22')
					   and PersonnelStatus = '1'
					), 0)
	set @D_56 = isnull((
					select count(*) from gnMstEmployee
					 where CompanyCode = @CompanyCode
					   and BranchCode  = @BranchCode
					   and TitleCode  in ('4')
					   and PersonnelStatus = '1'
					), 0)
	set @D_57 = isnull((
					select count(*) from gnMstEmployee
					 where CompanyCode = @CompanyCode
					   and BranchCode  = @BranchCode
					   and TitleCode  in ('3')
					   and PersonnelStatus = '1'
					), 0)
	set @D_59 = isnull((
					select count(*) from gnMstEmployee
					 where CompanyCode = @CompanyCode
					   and BranchCode  = @BranchCode
					   and TitleCode  in ('8')
					   and PersonnelStatus = '1'
					), 0)
	set @D_60 = isnull((
					select count(*) from gnMstEmployee
					 where CompanyCode = @CompanyCode
					   and BranchCode  = @BranchCode
					   and TitleCode  in ('9')
					   and PersonnelStatus = '1'
					), 0)
	set @D_58 = @D_59 + @D_60
	set @D_61 = 0
	set @D_62 = isnull((
					select count(*) from gnMstEmployee
					 where CompanyCode = @CompanyCode
					   and BranchCode  = @BranchCode
					   and TitleCode  in ('7', '10')
					   and PersonnelStatus = '1'
					), 0)
	set @D_54 = @D_55 + @D_56 + @D_57 + @D_58 + @D_61 + @D_62

	-- E. Productivity Indicators
	set @E_01 = (case isnull(@D_58, 0) when 0 then 0 else 1.0 * isnull(@B_29, 0) / @D_58 end)
	set @E_02 = (case isnull(@D_60, 0) when 0 then 0 else 1.0 * isnull(@B_29, 0) / @D_60 end)
	set @E_03 = (case isnull(@D_53, 0) when 0 then 0 else 1.0 * isnull(@B_29, 0) / @D_53 end)
	set @E_04 = (case isnull(@D_57, 0) when 0 then 0 else 1.0 * isnull(@B_29, 0) / @D_57 end)
	set @E_05 = isnull((
						select TotalWorkingDays
						  from svMstTarget
						 where CompanyCode=@CompanyCode
						   and BranchCode=@BranchCode
						   and ProductType=@ProductType
						   and PeriodYear=@PeriodYear
						   and PeriodMonth=@Month0
						 ),0)					
					
	set @E_06 = (case isnull(@E_05, 0) when 0 then 0 else 1.0 * isnull(@E_01, 0) / @E_05 end)
	set @E_07 = (case isnull(@E_05, 0) when 0 then 0 else 1.0 * isnull(@E_02, 0) / @E_05 end)
	set @E_08 = (case isnull(@E_05, 0) when 0 then 0 else 1.0 * isnull(@E_03, 0) / @E_05 end)
	set @E_09 = (case isnull(@E_05, 0) when 0 then 0 else 1.0 * isnull(@E_04, 0) / @E_05 end)

	-- F. Service Retention & Marketing Activity
	set @F_72 = isnull((
						select SMRTarget
						  from svMstTarget
						 where CompanyCode=@CompanyCode
						   and BranchCode=@BranchCode
						   and ProductType=@ProductType
						   and PeriodYear=@PeriodYear
						   and PeriodMonth=@Month0
						 ),0)
	set @F_73 =	isnull((
					select count(*)
					  from svTrnDailyRetention
					 where 1 = 1
					   and CompanyCode = @CompanyCode
					   and BranchCode  = @BranchCode
					   --and PeriodYear  = @PeriodYear
					   --and PeriodMonth = @Month0
					   and year(ReminderDate) = @PeriodYear
					   and month(ReminderDate) = @Month0
					   and isnull(IsReminder,0) = 1
					), 0)
	set @F_74 =	isnull((
					select count(*)
					  from dbo.svTrnDailyRetention
					 where 1 = 1
					   and CompanyCode = @CompanyCode
					   and BranchCode  = @BranchCode
					   --and PeriodYear  = @PeriodYear
					   --and PeriodMonth = @Month0
					   and year(VisitDate) = @PeriodYear
					   and month(VisitDate) = @Month0
					   and isnull(IsVisited,0) = 1
					), 0)
	set @F_75 =	isnull((
					select count(*)
					  from dbo.svTrnDailyRetention
					 where 1 = 1
					   and CompanyCode = @CompanyCode
					   and BranchCode  = @BranchCode
					   --and PeriodYear  = @PeriodYear
					   --and PeriodMonth = @Month0
					   and year(FollowUpDate) = @PeriodYear
					   and month(FollowUpDate) = @Month0
					   and isnull(IsFollowUp,0) = 1
					), 0)
	set @F_76 =	isnull((
					select count(*)
					  from dbo.svTrnDailyRetention
					 where 1 = 1
					   and CompanyCode = @CompanyCode
					   and BranchCode  = @BranchCode
					   --and PeriodYear  = @PeriodYear --sebelum perubahan
					   --and PeriodMonth = @Month0     --sebelum perubahan
					   and year(BookingDate) = @PeriodYear --Sesudah Perubahan
					   and month(BookingDate) = @Month0    --Sesudah Perubahan
					   and isnull(IsBooked,0) = 1
					), 0)
	set @F_77 = (case isnull(@F_72, 0) when 0 then 0 else 100.0 * isnull(@F_74, 0) / @F_72 end)
	set @F_78 = (case isnull(@B_29, 0) when 0 then 0 else 100.0 * isnull(@F_75, 0) / @B_29 end)
	set @F_79 = (case isnull(@B_29, 0) when 0 then 0 else 100.0 * isnull(@F_76, 0) / @B_29 end)

	-- G. CSI Performance
	set @G_01 = null
	set @G_02 = null
	set @G_03 = null
	set @G_04 = null
	set @G_05 = null
	set @G_06 = null
	set @G_07 = isnull((
					select count(*)
					  from dbo.svTrnDailyRetention
					 where 1 = 1
					   and CompanyCode = @CompanyCode
					   and BranchCode  = @BranchCode
					   and PeriodYear  = @PeriodYear
					   and PeriodMonth = @Month0
					   and isnull(IsFollowUp,0) = 1
					   and isnull(IsSatisfied,0) = 1
					), 0)
	set @G_08 = isnull((
					select count(*)
					  from dbo.svTrnDailyRetention
					 where 1 = 1
					   and CompanyCode = @CompanyCode
					   and BranchCode  = @BranchCode
					   and PeriodYear  = @PeriodYear
					   and PeriodMonth = @Month0
					   and isnull(IsFollowUp,0) = 1
					   and isnull(IsSatisfied,0) = 0
					), 0)
	set @G_09 = isnull((
					select count(*)
					  from dbo.svTrnDailyRetention
					 where 1 = 1
					   and CompanyCode = @CompanyCode
					   and BranchCode  = @BranchCode
					   and PeriodYear  = @PeriodYear
					   and PeriodMonth = @Month0
					   and isnull(IsClosed,0) = 1
					), 0) 
	set @G_10 = (case isnull(@B_29, 0) when 0 then 0 else 1.0 * isnull(@G_07, 0)/ @B_29 end)
	set @G_11 = (case isnull(@B_29, 0) when 0 then 0 else 1.0 * isnull(@G_08, 0)/ @B_29 end)
	set @G_12 = (case isnull(@B_29, 0) when 0 then 0 else (isnull(@G_04, 0) + isnull(@G_08, 0))/ @B_29 end)

	-- Additional Calculation
	set @A_23 = (case isnull(@B_29, 0) when 0 then 0 else 1.0 * (isnull(@A_16, 0) + isnull(@A_17, 0))/ @B_29 end)
	set @A_24 = (case isnull(@D_58, 0) when 0 then 0 else @A_01 / @D_58 end)
	set @A_25 = (case isnull(@D_57, 0) when 0 then 0 else @A_01 / @D_57 end)
	set @A_26 = (case isnull(@D_53, 0) when 0 then 0 else @A_01 / @D_53 end)

	insert into @t_msidat select 'A', 'MSI_01', @Month0, @A_01
	insert into @t_msidat select 'A', 'MSI_02', @Month0, @A_02
	insert into @t_msidat select 'A', 'MSI_03', @Month0, @A_03
	insert into @t_msidat select 'A', 'MSI_04', @Month0, @A_04
	insert into @t_msidat select 'A', 'MSI_05', @Month0, @A_05
	insert into @t_msidat select 'A', 'MSI_06', @Month0, @A_06
	insert into @t_msidat select 'A', 'MSI_07', @Month0, @A_07
	insert into @t_msidat select 'A', 'MSI_08', @Month0, @A_08 
	insert into @t_msidat select 'A', 'MSI_09', @Month0, @A_09
	insert into @t_msidat select 'A', 'MSI_10', @Month0, @A_10
	insert into @t_msidat select 'A', 'MSI_11', @Month0, @A_11
	insert into @t_msidat select 'A', 'MSI_12', @Month0, @A_12
	insert into @t_msidat select 'A', 'MSI_13', @Month0, @A_13
	insert into @t_msidat select 'A', 'MSI_14', @Month0, @A_14
	insert into @t_msidat select 'A', 'MSI_15', @Month0, @A_15
	insert into @t_msidat select 'A', 'MSI_16', @Month0, @A_16
	insert into @t_msidat select 'A', 'MSI_17', @Month0, @A_17
	insert into @t_msidat select 'A', 'MSI_18', @Month0, @A_18
	insert into @t_msidat select 'A', 'MSI_19', @Month0, @A_19
	insert into @t_msidat select 'A', 'MSI_20', @Month0, @A_20
	insert into @t_msidat select 'A', 'MSI_21', @Month0, @A_21
	insert into @t_msidat select 'A', 'MSI_22', @Month0, @A_22
	insert into @t_msidat select 'A', 'MSI_23', @Month0, @A_23
	insert into @t_msidat select 'A', 'MSI_24', @Month0, @A_24
	insert into @t_msidat select 'A', 'MSI_25', @Month0, @A_25
	insert into @t_msidat select 'A', 'MSI_26', @Month0, @A_26
	insert into @t_msidat select 'A', 'MSI_27', @Month0, @A_27

	insert into @t_msidat select 'B', 'MSI_28', @Month0, @B_28
	insert into @t_msidat select 'B', 'MSI_29', @Month0, @B_29
	insert into @t_msidat select 'B', 'MSI_30', @Month0, @B_30
	insert into @t_msidat select 'B', 'MSI_31', @Month0, @B_31
	insert into @t_msidat select 'B', 'MSI_32', @Month0, @B_32

	insert into @t_msidat select 'C', 'MSI_33', @Month0, @C_33
	insert into @t_msidat select 'C', 'MSI_34', @Month0, @C_34
	insert into @t_msidat select 'C', 'MSI_35', @Month0, @C_35
	insert into @t_msidat select 'C', 'MSI_36', @Month0, @C_36
	insert into @t_msidat select 'C', 'MSI_37', @Month0, @C_37
	insert into @t_msidat select 'C', 'MSI_38', @Month0, @C_38
	insert into @t_msidat select 'C', 'MSI_39', @Month0, @C_39
	insert into @t_msidat select 'C', 'MSI_40', @Month0, @C_40
	insert into @t_msidat select 'C', 'MSI_41', @Month0, @C_41
	insert into @t_msidat select 'C', 'MSI_42', @Month0, @C_42
	insert into @t_msidat select 'C', 'MSI_43', @Month0, @C_43
	insert into @t_msidat select 'C', 'MSI_44', @Month0, @C_44
	insert into @t_msidat select 'C', 'MSI_45', @Month0, @C_45
	insert into @t_msidat select 'C', 'MSI_46', @Month0, @C_46
	insert into @t_msidat select 'C', 'MSI_47', @Month0, @C_47
	insert into @t_msidat select 'C', 'MSI_48', @Month0, @C_48
	insert into @t_msidat select 'C', 'MSI_49', @Month0, @C_53
	insert into @t_msidat select 'C', 'MSI_50', @Month0, @C_54
	insert into @t_msidat select 'C', 'MSI_51', @Month0, @C_55
	insert into @t_msidat select 'C', 'MSI_52', @Month0, @C_49
	insert into @t_msidat select 'C', 'MSI_53', @Month0, @C_50
	insert into @t_msidat select 'C', 'MSI_54', @Month0, @C_51
	insert into @t_msidat select 'C', 'MSI_55', @Month0, @C_52

	insert into @t_msidat select 'D', 'MSI_56', @Month0, @D_53
	insert into @t_msidat select 'D', 'MSI_57', @Month0, @D_54
	insert into @t_msidat select 'D', 'MSI_58', @Month0, @D_55
	insert into @t_msidat select 'D', 'MSI_59', @Month0, @D_56
	insert into @t_msidat select 'D', 'MSI_60', @Month0, @D_57
	insert into @t_msidat select 'D', 'MSI_61', @Month0, @D_58
	insert into @t_msidat select 'D', 'MSI_62', @Month0, @D_59
	insert into @t_msidat select 'D', 'MSI_63', @Month0, @D_60
	insert into @t_msidat select 'D', 'MSI_64', @Month0, @D_61
	insert into @t_msidat select 'D', 'MSI_65', @Month0, @D_62

	insert into @t_msidat select 'E', 'MSI_66', @Month0, @E_01
	insert into @t_msidat select 'E', 'MSI_67', @Month0, @E_02
	insert into @t_msidat select 'E', 'MSI_68', @Month0, @E_03
	insert into @t_msidat select 'E', 'MSI_69', @Month0, @E_04
	insert into @t_msidat select 'E', 'MSI_70', @Month0, @E_05
	insert into @t_msidat select 'E', 'MSI_71', @Month0, @E_06
	insert into @t_msidat select 'E', 'MSI_72', @Month0, @E_07
	insert into @t_msidat select 'E', 'MSI_73', @Month0, @E_08
	insert into @t_msidat select 'E', 'MSI_74', @Month0, @E_09

	insert into @t_msidat select 'F', 'MSI_75', @Month0, @F_72
	insert into @t_msidat select 'F', 'MSI_76', @Month0, @F_73
	insert into @t_msidat select 'F', 'MSI_77', @Month0, @F_74
	insert into @t_msidat select 'F', 'MSI_78', @Month0, @F_75
	insert into @t_msidat select 'F', 'MSI_79', @Month0, @F_76
	insert into @t_msidat select 'F', 'MSI_80', @Month0, @F_77
	insert into @t_msidat select 'F', 'MSI_81', @Month0, @F_78
	insert into @t_msidat select 'F', 'MSI_82', @Month0, @F_79

	insert into @t_msidat select 'G', 'MSI_83', @Month0, @G_01
	insert into @t_msidat select 'G', 'MSI_84', @Month0, @G_02
	insert into @t_msidat select 'G', 'MSI_85', @Month0, @G_03
	insert into @t_msidat select 'G', 'MSI_86', @Month0, @G_04
	insert into @t_msidat select 'G', 'MSI_87', @Month0, @G_05
	insert into @t_msidat select 'G', 'MSI_88', @Month0, @G_06
	insert into @t_msidat select 'G', 'MSI_89', @Month0, @G_07
	insert into @t_msidat select 'G', 'MSI_90', @Month0, @G_08
	insert into @t_msidat select 'G', 'MSI_91', @Month0, @G_09
	insert into @t_msidat select 'G', 'MSI_92', @Month0, @G_10
	insert into @t_msidat select 'G', 'MSI_93', @Month0, @G_11
	insert into @t_msidat select 'G', 'MSI_94', @Month0, @G_12
	
	set @Month0 = @Month0 + 1
	delete @t_inv_tsk
	delete @t_inv_itm
	delete @t_inv_unit
	delete @t_inv_unit_pdi
	delete @t_inv_unit_exc
	delete @t_inv_job
end	

insert into @t_msigrp values ('A', 'A. Sales Revenue')
insert into @t_msigrp values ('B', 'B. No of Unit Intake')
insert into @t_msigrp values ('C', 'C. No of Job Type')
insert into @t_msigrp values ('D', 'D. Workshop Service Strength')
insert into @t_msigrp values ('E', 'E. Productivity Indicators')
insert into @t_msigrp values ('F', 'F. Service Retention & Marketing Activity')
insert into @t_msigrp values ('G', 'G. CSI Performance')

delete SvHstSzkMSI
 where CompanyCode = @CompanyCode
   and BranchCode = @BranchCode
   and PeriodYear = @PeriodYear
   and PeriodMonth in (select distinct MsiMonth from @t_msidat)

insert into SvHstSzkMSI (CompanyCode, BranchCode, PeriodYear, PeriodMonth, SeqNo, MsiGroup, MsiDesc, Unit, MsiData, CreatedBy, CreatedDate)
select @CompanyCode CompanyCode, @BranchCode BranchCode
	 , @PeriodYear PeriodYear, a.MsiMonth PeriodMonth
	 , convert(int, right(MsiCode, 2)) as SeqNo
	 , MsiGrDesc as MsiGroup, Description as MsiDesc, DescriptionEng Unit, a.MsiData
	 , @UserID, GETDATE ()
  from (select MsiGrCode, MsiCode, MsiMonth, MsiData from @t_msidat) a
  left join svMstRefferenceService b
    on b.CompanyCode = @CompanyCode
   and b.RefferenceType = 'MSIDATA'
   and b.RefferenceCode = a.MsiCode
  left join @t_msigrp c
    on c.MsiGroup = a.MsiGrCode

select CompanyCode, BranchCode, PeriodYear, SeqNo, MsiGroup, MsiDesc, Unit
	 , (isnull( [1], 0) + isnull( [2], 0) + isnull( [3], 0) 
	 +  isnull( [4], 0) + isnull( [5], 0) + isnull( [6], 0) 
	 +  isnull( [7], 0) + isnull( [8], 0) + isnull( [9], 0)
	 +  isnull([10], 0) + isnull([11], 0) + isnull([12], 0)) / (@Month2 - @Month1 + 1) as Average
	 , (isnull( [1], 0) + isnull( [2], 0) + isnull( [3], 0) 
	 +  isnull( [4], 0) + isnull( [5], 0) + isnull( [6], 0) 
	 +  isnull( [7], 0) + isnull( [8], 0) + isnull( [9], 0)
	 +  isnull([10], 0) + isnull([11], 0) + isnull([12], 0)) as Total
	 , isnull( [1], 0)  [1]
	 , isnull( [2], 0)  [2]
	 , isnull( [3], 0)  [3]
	 , isnull( [4], 0)  [4]
	 , isnull( [5], 0)  [5]
	 , isnull( [6], 0)  [6]
	 , isnull( [7], 0)  [7]
	 , isnull( [8], 0)  [8]
	 , isnull( [9], 0)  [9]
	 , isnull([10], 0) [10]
	 , isnull([11], 0) [11]
	 , isnull([12], 0) [12]
  from (
	select CompanyCode, BranchCode, PeriodYear, PeriodMonth, SeqNo, MsiGroup, MsiDesc, Unit, MsiData from SvHstSzkMSI
	 where CompanyCode = @CompanyCode
	   and BranchCode = @BranchCode
	   and PeriodYear = @PeriodYear
	   and PeriodMonth >= @Month1
	   and PeriodMonth <= @Month2
  )#
 pivot (sum(MsiData) for PeriodMonth in ([1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12])) as pvt
 order by pvt.MsiGroup, pvt.SeqNo
GO

if object_id('uspfn_ReloadCSTdayCallResource') is not null
	drop procedure uspfn_ReloadCSTdayCallResource
GO
create procedure [dbo].[uspfn_ReloadCSTdayCallResource]
as

begin
	declare @ParamDate datetime;
	declare @RecordCount int;
	
	set @ParamDate = convert(varchar(4), datepart(year, getdate()) )+ '-01-01';

	if object_id('CsLkuTDayCallView') is not null
	begin
		select 'CsLkuTDayCallView is exist';

		delete CsLkuTDayCallView 
		 where DODate >= @ParamDate

		set @RecordCount = ( select count(CompanyCode) from CsLkuTDayCallView );

		if @RecordCount = 0
		begin
			select 'Record is null -> regenerating';

			drop table CsLkuTDayCallView;
			
			with x as (
				select * from CsLkuTDayCallViewSource
			)
			select *
			  into CsLkuTDayCallView
			  from x
		end
		

		insert into CsLkuTDayCallView
		select *
		  from CsLkuTDayCallViewSource
		 where DODate >= @ParamDate
	end
	else
	begin
		select 'CsLkuTDayCallView is not exists';

		with x as (
			select * from CsLkuTDayCallViewSource
		)
		select *
		  into CsLkuTDayCallView
		  from x
	end

end;
GO
--declare	@CompanyCode varchar(15)
--declare	@BranchCode  varchar(15)
--declare	@ProductType varchar(15) 
--declare	@PeriodYear  int
--declare	@PeriodMonth int

--set	@CompanyCode = '6006406'
--set	@BranchCode  = '6006407'
--set	@ProductType = '4W'
--set	@PeriodYear  = '2012'
--set	@PeriodMonth = '05'

ALTER procedure [dbo].[usprpt_SvRpReport008]
	@CompanyCode as varchar(20),
	@BranchCode as varchar(20),
	@ProductType as varchar(20),
	@PeriodYear as int,
	@PeriodMonth as int

as

begin


declare @ActivityGroup as table
(
	GroupCols varchar(20),
	GroupDesc varchar(90),
	GroupPara varchar(max)
)
insert into @ActivityGroup values ('G01S01','PDI','PDI')
insert into @ActivityGroup values ('G01S02','FS1K','FS1000')
insert into @ActivityGroup values ('G01S03','FS5K','FS5000')
insert into @ActivityGroup values ('G01S04','FS10K','FS10000')
insert into @ActivityGroup values ('G01S05','FS20K','FS20000')
insert into @ActivityGroup values ('G01S06','CLAIM','CLAIM')
insert into @ActivityGroup values ('G01S07','  5000 KM /  3 Bulan',  'PB5000')
insert into @ActivityGroup values ('G01S08',' 10000 KM /  6 Bulan', 'PB10000')
insert into @ActivityGroup values ('G01S09',' 15000 KM /  9 Bulan', 'PB15000')
insert into @ActivityGroup values ('G01S10',' 20000 KM / 12 Bulan', 'PB20000')
insert into @ActivityGroup values ('G01S11',' 25000 KM / 15 Bulan', 'PB25000')
insert into @ActivityGroup values ('G01S12',' 30000 KM / 18 Bulan', 'PB30000')
insert into @ActivityGroup values ('G01S13',' 35000 KM / 21 Bulan', 'PB35000')
insert into @ActivityGroup values ('G01S14',' 40000 KM / 24 Bulan', 'PB40000')
insert into @ActivityGroup values ('G01S15',' 45000 KM / 27 Bulan', 'PB45000')
insert into @ActivityGroup values ('G01S16',' 50000 KM / 30 Bulan', 'PB50000')
insert into @ActivityGroup values ('G01S17',' 55000 KM / 33 Bulan', 'PB55000')
insert into @ActivityGroup values ('G01S18',' 60000 KM / 36 Bulan', 'PB60000')
insert into @ActivityGroup values ('G01S19',' 65000 KM / 39 Bulan', 'PB65000')
insert into @ActivityGroup values ('G01S20',' 70000 KM / 42 Bulan', 'PB70000')
insert into @ActivityGroup values ('G01S21',' 75000 KM / 45 Bulan', 'PB75000')
insert into @ActivityGroup values ('G01S22',' 80000 KM / 48 Bulan', 'PB80000')
insert into @ActivityGroup values ('G01S23',' 85000 KM / 51 Bulan', 'PB85000')
insert into @ActivityGroup values ('G01S24',' 90000 KM / 54 Bulan', 'PB90000')
insert into @ActivityGroup values ('G01S25',' 95000 KM / 57 Bulan', 'PB95000')
insert into @ActivityGroup values ('G01S26','100000 KM / 60 Bulan','PB100000')
insert into @ActivityGroup values ('G01S27','> 100000 KM','')
insert into @ActivityGroup values ('G01S28','Others','')

insert into @ActivityGroup values ('G02S01','Perbaikan Ringan','')
insert into @ActivityGroup values ('G02S02','Perbaikan Berat','')
insert into @ActivityGroup values ('G02S03','Check Emisi','')
insert into @ActivityGroup values ('G02S04','Rework','REWORK')

insert into @ActivityGroup values ('G03S01','Balancing','')
insert into @ActivityGroup values ('G03S02','Spooring','')
insert into @ActivityGroup values ('G03S03','Perbaikan A/C','')
insert into @ActivityGroup values ('G03S04','Accessories','')
insert into @ActivityGroup values ('G03S05','Cuci','')
insert into @ActivityGroup values ('G03S06','Service Radiator','')
insert into @ActivityGroup values ('G03S07','Bubut','')

insert into @ActivityGroup values ('G04S01','Total Pekerjaan','')
insert into @ActivityGroup values ('G04S02','Total Unit','')

declare @ActivityData as table
(
	BasicModel varchar(20),
	GroupCols  varchar(20),
	NoOfUnit   int
)

----------------------------------------------------------------------------------------
-- CLAIM & PB (RTN) --> Number of Unit = Number of Task
----------------------------------------------------------------------------------------
;with t as (
select distinct BasicModel, JobType, ChassisCode + convert(varchar, ChassisNo) Chassis
	 , convert(varchar(10),InvoiceDate,121) InvoiceDate
  from svTrnInvoice
 where year (InvoiceDate)=@PeriodYear 
   and month(InvoiceDate)=@PeriodMonth
   and (JobType like 'PB%' or JobType in ('PDI','CLAIM'))
   and CompanyCode = @CompanyCode
   and BranchCode = @BranchCode
   and ProductType = @ProductType
) 
insert into @ActivityData
select t.BasicModel, b.GroupCols, count(t.Chassis) NoOfUnit
  from t, @ActivityGroup b
 where t.JobType like (b.GroupPara)
 group by b.GroupCols, t.BasicModel, b.GroupDesc, b.GroupPara

----------------------------------------------------------------------------------------
-- For PDI, FSC, CLAIM & PB (RTN) --> Number of Unit = Number of Task
----------------------------------------------------------------------------------------
;with t as (
select distinct a.BasicModel, left(a.JobType, 2) + convert(varchar, c.WarrantyOdometer) as JobType, a.ChassisCode + convert(varchar, a.ChassisNo) Chassis
	 , convert(varchar(10), a.InvoiceDate,121) InvoiceDate
  from svTrnInvoice a
 inner join svMstJob c
	on c.CompanyCode = a.CompanyCode
   and c.BasicModel = a.BasicModel
   and c.JobType = a.JobType
 where year (a.InvoiceDate)=@PeriodYear 
   and month(a.InvoiceDate)=@PeriodMonth
   and a.JobType like 'FSC%'
   and a.CompanyCode = @CompanyCode
   and a.BranchCode = @BranchCode
   and a.ProductType = @ProductType
   and not exists (
	select 1 from svTrnInvoice
	 where 1 = 1
	   and CompanyCode = a.CompanyCode
	   and BranchCode = a.BranchCode
	   and ChassisCode = a.ChassisCode
	   and ChassisNo = a.ChassisNo
	   and convert(varchar, InvoiceDate, 112) = convert(varchar, a.InvoiceDate, 112)
	   and JobType = 'PDI'
   )
) 
insert into @ActivityData
select t.BasicModel, b.GroupCols, count(t.Chassis) NoOfUnit
  from t, @ActivityGroup b
 where t.JobType = b.GroupPara
 group by b.GroupCols, t.BasicModel, b.GroupDesc, b.GroupPara


----------------------------------------------------------------------------------------
-- For Others --> Number of Unit
----------------------------------------------------------------------------------------
;with t as (
select distinct BasicModel, ChassisCode + convert(varchar, ChassisNo) Chassis
	 , convert(varchar(10),InvoiceDate,112) InvoiceDate
  from svTrnInvoice
 where year (InvoiceDate)=@PeriodYear 
   and month(InvoiceDate)=@PeriodMonth
   and CompanyCode = @CompanyCode
   and BranchCode = @BranchCode
   and ProductType = @ProductType
) 
insert into @ActivityData
select t.BasicModel, 'G01S28'
	 , count(t.Chassis) 
       - isnull((
		 select count(*) from (
			select distinct ChassisCode + convert(varchar, ChassisNo) Chassis
			     , convert(varchar(10),InvoiceDate,112) JobDate
			  from svTrnInvoice
			 where 1 = 1
			   and year (InvoiceDate)=@PeriodYear 
			   and month(InvoiceDate)=@PeriodMonth
			   and ((JobType like 'FSC%' or JobType like 'PB%')
			      or JobType in ('PDI','CLAIM','REWORK'))
			   and CompanyCode = @CompanyCode
			   and BranchCode = @BranchCode
			   and ProductType = @ProductType
			   and BasicModel = t.BasicModel
			)#
		), 0) UnitNonOthers
  from t
 group by t.BasicModel

----------------------------------------------------------------------------------------
-- For Perbaikan Ringan & Berat --> Number of Task
----------------------------------------------------------------------------------------
insert into @ActivityData
select a.BasicModel, 'G02S01', count(b.OperationNo)
  from svTrnInvoice a, svTrnInvTask b
 where b.CompanyCode = a.CompanyCode
   and b.BranchCode  = a.BranchCode
   and b.ProductType = a.ProductType
   and b.InvoiceNo   = a.InvoiceNo
   and b.OperationHour <= 5
   and a.CompanyCode = @CompanyCode
   and a.BranchCode  = @BranchCode
   and a.ProductType = @ProductType
   and year (a.InvoiceDate)=@PeriodYear 
   and month(a.InvoiceDate)=@PeriodMonth
   and not  (a.JobType like 'FSC%' or JobType in ('PDI','CLAIM','REWORK'))
 and not  (b.OperationNo like 'PB%')
 group by a.BasicModel

insert into @ActivityData
select a.BasicModel, 'G02S02', count(b.OperationNo)
  from svTrnInvoice a, svTrnInvTask b
 where b.CompanyCode = a.CompanyCode
   and b.BranchCode  = a.BranchCode
   and b.ProductType = a.ProductType
   and b.InvoiceNo   = a.InvoiceNo
   and b.OperationHour > 5
   and a.CompanyCode = @CompanyCode
   and a.BranchCode  = @BranchCode
   and a.ProductType = @ProductType
   and year (a.InvoiceDate)=@PeriodYear 
   and month(a.InvoiceDate)=@PeriodMonth
   and not  (a.JobType like 'FSC%' or JobType in ('PDI','CLAIM','REWORK'))
   and not  (b.OperationNo like 'PB%')
 group by a.BasicModel

----------------------------------------------------------------------------------------
-- For ReWork --> Number of Unit
----------------------------------------------------------------------------------------
;with t as (
select distinct BasicModel, JobType, ChassisCode + convert(varchar, ChassisNo) Chassis
	 , convert(varchar(10),InvoiceDate,121) InvoiceDate
  from svTrnInvoice
 where year (InvoiceDate)=@PeriodYear 
   and month(InvoiceDate)=@PeriodMonth
   and JobType = 'REWORK'
   and CompanyCode = @CompanyCode
   and BranchCode = @BranchCode
   and ProductType = @ProductType
) 
insert into @ActivityData
select t.BasicModel, 'G02S04', count(t.Chassis) NoOfUnit
  from t
 group by t.BasicModel

----------------------------------------------------------------------------------------
-- For G04S01 --> Number of All Task
----------------------------------------------------------------------------------------
insert into @ActivityData
select BasicModel, 'G04S01', sum(NoOfUnit)
  from @ActivityData
 where (GroupCols like 'G01%' and GroupCols <> 'G01S28')
	or (GroupCols like 'G02%' and GroupCols <> 'G02S04')
	or (GroupCols like 'G03%')
 group by BasicModel

----------------------------------------------------------------------------------------
-- For G04S02 --> Number of All Unit
----------------------------------------------------------------------------------------
insert into @ActivityData
select BasicModel, 'G04S02', sum(NoOfUnit)
  from @ActivityData
 where GroupCols like 'G01%' or GroupCols = 'G02S04'
 group by BasicModel

select * into #tx from (select (row_number() over (order by GroupCols)) RecNo, * from @ActivityGroup)#
select * into #ty from (select 'All Model' AllModel, * from @ActivityData) #

declare @col as nvarchar(max), @num as int, @max as int
set @col = ''
set @num = 1
set @max = (select max(RecNo) from #tx)

while (@num <= @max)
begin
	set @col = @col + N',['+ (select GroupCols from #tx where RecNo = @num) + N']'
	set @num = @num + 1
end
set @col = substring(@col, 2, len(@col))

declare @sql as nvarchar(max)
set @sql = N'
select * into #t1 from (
	select * 
	  from (select NoOfUnit, GroupCols, BasicModel from #ty where BasicModel <> '''') as header
		pivot (sum(NoOfUnit) for GroupCols in (' + @col + N')) as piv
)#

select * into #t2 from (
	select * 
	  from (select NoOfUnit, GroupCols, AllModel from #ty where BasicModel <> '''') as header
		pivot (sum(NoOfUnit) FOR GroupCols in (' + @col + N')) as piv
)#
select * from #t1
select * from #t2
'

exec sp_executesql @sql
select * from @ActivityGroup
select * from GnMstCoProfile where CompanyCode = @CompanyCode and BranchCode = @BranchCode

drop table #tx
drop table #ty

end
GO
ALTER procedure [dbo].[usprpt_PmRpInqSummaryWeb] 
(
	@CompanyCode		VARCHAR(15),
	@BranchCode			VARCHAR(15),
	@PeriodBegin		DATETIME,
	@PeriodEnd			DATETIME,
	@BranchManager		VARCHAR(15),
	@SalesHead			VARCHAR(15),
	@Salesman			VARCHAR(15),
	@Jns				VARCHAR(1),
	@print				int = 0
	
)
AS 
BEGIN
SET NOCOUNT ON;
declare @position varchar(20), @SC varchar(20)
set @position= (
				select position 
				from HrEmployee 
				where employeeid=(select TeamLeader from HrEmployee where EmployeeID = @salesman) 
				)
set @SC= (select TeamLeader from HrEmployee where EmployeeID = @salesman)
if @print = 0
begin 
	IF @Jns = '1'
BEGIN
	SELECT * INTO #deptSales FROM(
		SELECT 
				'4' idx,
			   a.EmployeeID,
			   a.Position,
			   a.EmployeeName,
			   a.TeamLeader,
				(SELECT COUNT(StatusProspek) FROM PmKdp b WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
				AND b.StatusProspek = '10' AND (b.EmployeeID = a.EmployeeID) AND CONVERT(varchar(20),InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) NEW,
				(SELECT COUNT(StatusProspek) FROM PmKdp b WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
				AND b.LastProgress = 'P' AND (b.EmployeeID = a.EmployeeID) AND CONVERT(varchar(20),InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) PROSPECT,
				(SELECT COUNT(StatusProspek) FROM PmKdp b WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
				AND b.LastProgress = 'HP' AND (b.EmployeeID = a.EmployeeID) AND CONVERT(varchar(20),InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) HOTPROSPECT,
				(SELECT COUNT(StatusProspek) FROM PmKdp b WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
				AND b.LastProgress = 'SPK' AND (b.EmployeeID = a.EmployeeID) AND CONVERT(varchar(20),InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) SPK,
				(SELECT COUNT(StatusProspek) FROM PmKdp b WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
				AND b.LastProgress = 'DO' AND (b.EmployeeID = a.EmployeeID) AND CONVERT(varchar(20),InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) DO,
				(SELECT COUNT(StatusProspek) FROM PmKdp b WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
				AND b.LastProgress = 'DELIVERY' AND (b.EmployeeID = a.EmployeeID) AND CONVERT(varchar(20),InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) DELIVERY,
				(SELECT COUNT(StatusProspek) FROM PmKdp b WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
				AND b.LastProgress = 'LOST' AND (b.EmployeeID = a.EmployeeID) AND CONVERT(varchar(20),InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) LOST
		FROM HrEmployee a WHERE a.Department = 'SALES' AND a.CompanyCode = @CompanyCode and a.PersonnelStatus ='1'
	)#deptSales

	--Sales Coordinator
	SELECT * INTO #qryS_SC FROM(
		SELECT 
				'3' idx,
			   a.EmployeeID,
			   a.Position, 
			   a.EmployeeName,
			   a.TeamLeader,
				(SELECT ISNULL(SUM(NEW), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID)) NEW,
				(SELECT ISNULL(SUM(PROSPECT), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID)) PROSPECT, 
				(SELECT ISNULL(SUM(HOTPROSPECT), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID)) HOTPROSPECT,
				(SELECT ISNULL(SUM(SPK), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID)) SPK,
				(SELECT ISNULL(SUM(DO), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID)) DO,
				(SELECT ISNULL(SUM(DELIVERY), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID)) DELIVERY,
				(SELECT ISNULL(SUM(LOST), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID)) LOST
		FROM #deptSales a WHERE a.Position = 'SC' 
	)#qryS_SC

	--Sales Head
	SELECT * INTO #qrySH FROM(
		SELECT 
				'2' idx,
			   a.EmployeeID,
			   a.Position, 
			   a.EmployeeName,
			   a.TeamLeader,
			   (SELECT ISNULL(SUM(NEW), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID)) NEW,
				(SELECT ISNULL(SUM(PROSPECT), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID)) PROSPECT, 
				(SELECT ISNULL(SUM(HOTPROSPECT), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID)) HOTPROSPECT,
				(SELECT ISNULL(SUM(SPK), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID)) SPK,
				(SELECT ISNULL(SUM(DO), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID)) DO,
				(SELECT ISNULL(SUM(DELIVERY), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID)) DELIVERY,
				(SELECT ISNULL(SUM(LOST), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID)) LOST
			   --(SELECT ISNULL(SUM(NEW), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID) AND b.Position = 'SC') NEW,
			   --(SELECT ISNULL(SUM(PROSPECT), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID) AND b.Position = 'SC') PROSPECT,
			   --(SELECT ISNULL(SUM(HOTPROSPECT), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID) AND b.Position = 'SC') HOTPROSPECT,
			   --(SELECT ISNULL(SUM(SPK), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID) AND b.Position = 'SC') SPK,
			   --(SELECT ISNULL(SUM(DO), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID) AND b.Position = 'SC') DO,
			   --(SELECT ISNULL(SUM(DELIVERY), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID) AND b.Position = 'SC') DELIVERY,
			   --(SELECT ISNULL(SUM(LOST), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID) AND b.Position = 'SC') LOST
		FROM #deptSales a WHERE a.Position = 'SH' 
	)#qrySH

	IF(@BranchManager = '' AND @SalesHead = '' AND @Salesman = '')
		BEGIN
			--Branch Manager
			SELECT * INTO #qryBM0 FROM(
				SELECT 
					'1' idx,
					a.EmployeeID,
					a.Position, 
					a.EmployeeName,
					a.TeamLeader,
  					(SELECT ISNULL(SUM(NEW), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) NEW,
					(SELECT ISNULL(SUM(PROSPECT), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) PROSPECT,
					(SELECT ISNULL(SUM(HOTPROSPECT), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) HOTPROSPECT,
					(SELECT ISNULL(SUM(SPK), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) SPK,
					(SELECT ISNULL(SUM(DO), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) DO,
					(SELECT ISNULL(SUM(DELIVERY), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) DELIVERY,
					(SELECT ISNULL(SUM(LOST), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) LOST
				FROM #deptSales a WHERE a.Position = 'BM' --AND a.EmployeeID = @BranchManager
			)#qryBM

			SELECT * INTO #qryAll0 FROM(
				SELECT * FROM #qryBM0
				UNION
				SELECT * FROM #qrySH WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM0)     
				UNION
				--SELECT * FROM #qryS_SC WHERE TeamLeader IN (SELECT EmployeeID FROM #qrySH WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM0)) 
				--UNION
				SELECT * FROM #deptSales WHERE TeamLeader IN (SELECT EmployeeID FROM #qrySH WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM0))
			)#qryAll0

			SELECT 
				CASE a.Position
				WHEN 'BM' THEN 'Branch Manager'
				WHEN 'SH' THEN 'Sales Head'
				WHEN 'SC' THEN 'Sales Coordinator'
				WHEN 'S' THEN 'Salesman'
				ELSE 'Sales'
				END AS Position,
				a.EmployeeName, a.NEW, a.PROSPECT, a.HOTPROSPECT, a.SPK, a.DO, a.DELIVERY, a.LOST  
			FROM #qryAll0 a ORDER BY a.idx ASC
		
			DROP TABLE #qryAll0
			DROP TABLE #qryBM0
		END ELSE 
	IF(@SalesHead = '' AND @Salesman = '')
		BEGIN
			--Branch Manager
			SELECT * INTO #qryBM FROM(
				SELECT 
					'1' idx,
					a.EmployeeID,
					a.Position, 
					a.EmployeeName,
					a.TeamLeader,
  					(SELECT ISNULL(SUM(NEW), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) NEW,
					(SELECT ISNULL(SUM(PROSPECT), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) PROSPECT,
					(SELECT ISNULL(SUM(HOTPROSPECT), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) HOTPROSPECT,
					(SELECT ISNULL(SUM(SPK), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) SPK,
					(SELECT ISNULL(SUM(DO), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) DO,
					(SELECT ISNULL(SUM(DELIVERY), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) DELIVERY,
					(SELECT ISNULL(SUM(LOST), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) LOST
				FROM #deptSales a WHERE a.Position = 'BM' AND a.EmployeeID = @BranchManager
			)#qryBM

			SELECT * INTO #qryAll FROM(
				SELECT * FROM #qryBM
				UNION
				SELECT * FROM #qrySH WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM)     
				UNION
				--SELECT * FROM #qryS_SC WHERE TeamLeader IN (SELECT EmployeeID FROM #qrySH WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM)) 
				--UNION
				SELECT * FROM #deptSales WHERE TeamLeader IN (SELECT EmployeeID FROM #qrySH WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM))
			)#qryAll

			SELECT 
				CASE a.Position
				WHEN 'BM' THEN 'Branch Manager'
				WHEN 'SH' THEN 'Sales Head'
				WHEN 'SC' THEN 'Sales Coordinator'
				WHEN 'S' THEN 'Salesman'
				ELSE 'Sales'
				END AS Position,
				a.EmployeeName, a.NEW, a.PROSPECT, a.HOTPROSPECT, a.SPK, a.DO, a.DELIVERY, a.LOST  
			FROM #qryAll a ORDER BY a.idx ASC
		
			DROP TABLE #qryAll
			DROP TABLE #qryBM
		END
	ELSE IF(@Salesman = '')
		BEGIN
			--Branch Manager
			SELECT * INTO #qryBM2 FROM(
				SELECT
					'1' idx, 
					a.EmployeeID,
					a.Position, 
					a.EmployeeName,
					a.TeamLeader,
  					(SELECT ISNULL(SUM(NEW), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) NEW,
					(SELECT ISNULL(SUM(PROSPECT), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) PROSPECT,
					(SELECT ISNULL(SUM(HOTPROSPECT), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) HOTPROSPECT,
					(SELECT ISNULL(SUM(SPK), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) SPK,
					(SELECT ISNULL(SUM(DO), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) DO,
					(SELECT ISNULL(SUM(DELIVERY), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) DELIVERY,
					(SELECT ISNULL(SUM(LOST), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) LOST
				FROM #deptSales a WHERE a.Position = 'BM' AND a.EmployeeID = @BranchManager
			)#qryBM2

			SELECT * INTO #qryAll2 FROM(
				SELECT * FROM #qryBM2
				UNION
				SELECT * FROM #qrySH WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM2) AND EmployeeID = @SalesHead     
				UNION
				--SELECT * FROM #qryS_SC WHERE TeamLeader IN 
				--(SELECT EmployeeID FROM #qrySH WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM2) AND EmployeeID = @SalesHead) 
				--UNION
				SELECT * FROM #deptSales WHERE TeamLeader IN 
				--(SELECT EmployeeID FROM #qryS_SC WHERE TeamLeader IN 
				(SELECT EmployeeID FROM #qrySH WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM2) AND EmployeeID = @SalesHead )
				--) 
			)#qryAll2

			SELECT 
				CASE a.Position
				WHEN 'BM' THEN 'Branch Manager'
				WHEN 'SH' THEN 'Sales Head'
				WHEN 'SC' THEN 'Sales Coordinator'
				WHEN 'S' THEN 'Salesman'
				ELSE 'Sales'
				END AS Position,
				a.EmployeeName, a.NEW, a.PROSPECT, a.HOTPROSPECT, a.SPK, a.DO, a.DELIVERY, a.LOST  
			FROM #qryAll2 a ORDER BY a.idx ASC

			DROP TABLE #qryAll2
			DROP TABLE #qryBM2
		END
	ELSE
		BEGIN
			--Branch Manager
			SELECT * INTO #qryBM3 FROM(
				SELECT
					'1' idx, 
					a.EmployeeID,
					a.Position, 
					a.EmployeeName,
					a.TeamLeader,
  					(SELECT ISNULL(SUM(NEW), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) NEW,
					(SELECT ISNULL(SUM(PROSPECT), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) PROSPECT,
					(SELECT ISNULL(SUM(HOTPROSPECT), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) HOTPROSPECT,
					(SELECT ISNULL(SUM(SPK), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) SPK,
					(SELECT ISNULL(SUM(DO), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) DO,
					(SELECT ISNULL(SUM(DELIVERY), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) DELIVERY,
					(SELECT ISNULL(SUM(LOST), 0) FROM #qrySH b WHERE b.TeamLeader = a.EmployeeID) LOST
				FROM #deptSales a WHERE a.Position = 'BM' AND a.EmployeeID = @BranchManager
			)#qryBM3

			SELECT * INTO #qryAll3 FROM(
				SELECT * FROM #qryBM3
				UNION
				SELECT * FROM #qrySH WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM3) AND EmployeeID = @SalesHead     
				UNION
				SELECT * FROM #qryS_SC WHERE EmployeeID IN (@SC)
				--(SELECT EmployeeID FROM #qrySH WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM3) AND EmployeeID = @SalesHead) 
				UNION
				SELECT * FROM #deptSales WHERE TeamLeader IN 
				--(SELECT EmployeeID FROM #qryS_SC WHERE TeamLeader IN 
				(SELECT EmployeeID FROM #qrySH WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM3) AND EmployeeID = @SalesHead )--)
				AND EmployeeID = @Salesman 
			)#qryAll3

			SELECT 
				CASE a.Position
				WHEN 'BM' THEN 'Branch Manager'
				WHEN 'SH' THEN 'Sales Head'
				WHEN 'SC' THEN 'Sales Coordinator'
				WHEN 'S' THEN 'Salesman'
				ELSE 'Sales'
				END AS Position,
				a.EmployeeName, a.NEW, a.PROSPECT, a.HOTPROSPECT, a.SPK, a.DO, a.DELIVERY, a.LOST 
			FROM #qryAll3 a ORDER BY a.idx ASC 

			DROP TABLE #qryAll3
			DROP TABLE #qryBM3
		END
		DROP TABLE #deptSales
		DROP TABLE #qryS_SC
		DROP TABLE #qrySH
	END
ELSE IF @Jns = '2'
	BEGIN
		SELECT * INTO #dByTipe FROM(
			SELECT b.EmployeeID, (b.TipeKendaraan + ' ' + b.Variant) ModelKendaraan, LastProgress, StatusProspek FROM PmKdp b 
			inner join HrEmployee c 
				on b.CompanyCode = c.CompanyCode and b.EmployeeID = c.EmployeeID 
			WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
			AND (CONVERT(varchar(20),b.InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) and c.PersonnelStatus = '1'
		)#dByTipe

		SELECT * INTO #dSls FROM (
			SELECT 
				a.EmployeeID,
				c.Position,
				c.TeamLeader,
				a.ModelKendaraan,
				(SELECT COUNT(StatusProspek) FROM #dByTipe b WHERE b.StatusProspek = '10' AND b.EmployeeID = a.EmployeeID 
				AND b.ModelKendaraan = a.ModelKendaraan) NEW,
				(SELECT COUNT(StatusProspek) FROM #dByTipe b WHERE b.LastProgress = 'P' AND b.EmployeeID = a.EmployeeID 
				AND b.ModelKendaraan = a.ModelKendaraan) PROSPECT,
				(SELECT COUNT(StatusProspek) FROM #dByTipe b WHERE b.LastProgress = 'HP' AND b.EmployeeID = a.EmployeeID 
				AND b.ModelKendaraan = a.ModelKendaraan) HOTPROSPECT,
				(SELECT COUNT(StatusProspek) FROM #dByTipe b WHERE b.LastProgress = 'SPK' AND b.EmployeeID = a.EmployeeID 
				AND b.ModelKendaraan = a.ModelKendaraan) SPK,
				(SELECT COUNT(StatusProspek) FROM #dByTipe b WHERE b.LastProgress = 'DO' AND b.EmployeeID = a.EmployeeID 
				AND b.ModelKendaraan = a.ModelKendaraan) DO,
				(SELECT COUNT(StatusProspek) FROM #dByTipe b WHERE b.LastProgress = 'DELIVERY' AND b.EmployeeID = a.EmployeeID 
				AND b.ModelKendaraan = a.ModelKendaraan) DELIVERY,
				(SELECT COUNT(StatusProspek) FROM #dByTipe b WHERE b.LastProgress = 'LOST' AND b.EmployeeID = a.EmployeeID 
				AND b.ModelKendaraan = a.ModelKendaraan) LOST
			FROM #dByTipe a, HrEmployee c WHERE a.EmployeeID = c.EmployeeID
			GROUP BY a.EmployeeID, c.Position, c.TeamLeader, a.ModelKendaraan
		)#dSls

		--Kondisi SH = '' AND S = ''
		IF(@BranchManager = '' AND @SalesHead = '' AND @Salesman = '')
		BEGIN
			SELECT * INTO #dt27_0 FROM(
				SELECT
					a.ModelKendaraan,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST 
				FROM #dSls a WHERE a.TeamLeader IN (SELECT c.EmployeeID FROM HrEmployee c )--WHERE c.TeamLeader IN(@BranchManager)) 
				--(SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader = @BranchManager))   
				GROUP BY a.ModelKendaraan
			)#dt27_0

			SELECT ModelKendaraan TipeKendaraan, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt27_0 ORDER BY ModelKendaraan

			DROP TABLE #dt27_0
		END ELSE
		IF (@SalesHead = '' AND @Salesman = '')
		BEGIN
			SELECT * INTO #dt27_1 FROM(
				SELECT
					a.ModelKendaraan,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST 
				FROM #dSls a WHERE a.TeamLeader IN (SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader IN(@BranchManager)) 
				--(SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader = @BranchManager))   
				GROUP BY a.ModelKendaraan
			)#dt27_1

			SELECT ModelKendaraan TipeKendaraan, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt27_1 ORDER BY ModelKendaraan

			DROP TABLE #dt27_1
		END
		--Kondisi S = ''
		ELSE IF (@Salesman = '')
		BEGIN
			SELECT * INTO #dt27_2 FROM(
				SELECT
					a.ModelKendaraan,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST
				FROM #dSls a 
				WHERE a.TeamLeader = @SalesHead
				--(SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader = @SalesHead)) -- >ID SH   
				GROUP BY a.ModelKendaraan
			)#dt27_2

			SELECT ModelKendaraan TipeKendaraan, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt27_2 ORDER BY ModelKendaraan

			DROP TABLE #dt27_2
		END
		ELSE
		BEGIN
			SELECT * INTO #dt27_3 FROM(
				SELECT
					a.ModelKendaraan,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST
				FROM #dSls a WHERE a.EmployeeID = @Salesman   
				GROUP BY a.ModelKendaraan
			)#dt27_3

			SELECT ModelKendaraan TipeKendaraan, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt27_3 ORDER BY ModelKendaraan

			DROP TABLE #dt27_3

		DROP TABLE #dSls
		DROP TABLE #dByTipe
		END
	END
ELSE IF @Jns = '3'
	BEGIN
		SELECT * INTO #dByTipe2 FROM(
			SELECT b.EmployeeID, b.PerolehanData, LastProgress, StatusProspek FROM PmKdp b 
			inner join HrEmployee c 
				on b.CompanyCode = c.CompanyCode and b.EmployeeID = c.EmployeeID 
			WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
			AND (CONVERT(varchar(20),b.InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) and c.PersonnelStatus = '1'
		)#dByTipe2

		SELECT * INTO #dSls2 FROM (
			SELECT 
				a.EmployeeID,
				c.Position,
				c.TeamLeader,
				a.PerolehanData,
				(SELECT COUNT(StatusProspek) FROM #dByTipe2 b WHERE b.StatusProspek <> '20' AND b.EmployeeID = a.EmployeeID 
				AND b.PerolehanData = a.PerolehanData) NEW,
				(SELECT COUNT(StatusProspek) FROM #dByTipe2 b WHERE b.LastProgress = 'P' AND b.EmployeeID = a.EmployeeID 
				AND b.PerolehanData = a.PerolehanData) PROSPECT,
				(SELECT COUNT(StatusProspek) FROM #dByTipe2 b WHERE b.LastProgress = 'HP' AND b.EmployeeID = a.EmployeeID 
				AND b.PerolehanData = a.PerolehanData) HOTPROSPECT,
				(SELECT COUNT(StatusProspek) FROM #dByTipe2 b WHERE b.LastProgress = 'SPK' AND b.EmployeeID = a.EmployeeID 
				AND b.PerolehanData = a.PerolehanData) SPK,
				(SELECT COUNT(StatusProspek) FROM #dByTipe2 b WHERE b.LastProgress = 'DO' AND b.EmployeeID = a.EmployeeID 
				AND b.PerolehanData = a.PerolehanData) DO,
				(SELECT COUNT(StatusProspek) FROM #dByTipe2 b WHERE b.LastProgress = 'DELIVERY' AND b.EmployeeID = a.EmployeeID 
				AND b.PerolehanData = a.PerolehanData) DELIVERY,
				(SELECT COUNT(StatusProspek) FROM #dByTipe2 b WHERE b.LastProgress = 'LOST' AND b.EmployeeID = a.EmployeeID 
				AND b.PerolehanData = a.PerolehanData) LOST
			FROM #dByTipe2 a, HrEmployee c WHERE a.EmployeeID = c.EmployeeID
			GROUP BY a.EmployeeID, c.Position, c.TeamLeader, a.PerolehanData
		)#dSls2

		IF(@BranchManager = '' AND @SalesHead = '' AND @Salesman = '')
		BEGIN
			SELECT * INTO #dt37_0 FROM(
				SELECT
					a.PerolehanData,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST 
				FROM #dSls2 a WHERE a.TeamLeader IN (SELECT c.EmployeeID FROM HrEmployee c )--WHERE c.TeamLeader IN(@BranchManager))
				--(SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader = @BranchManager))   
				GROUP BY a.PerolehanData
			)#dt37_0

			SELECT PerolehanData SumberData, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt37_0 ORDER BY PerolehanData

			DROP TABLE #dt37_0
		END ELSE
		--Kondisi SH = '' AND S = ''
		IF (@SalesHead = '' AND @Salesman = '')
		BEGIN
			SELECT * INTO #dt37_1 FROM(
				SELECT
					a.PerolehanData,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST 
				FROM #dSls2 a WHERE a.TeamLeader IN (SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader IN(@BranchManager))
				--(SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader = @BranchManager))   
				GROUP BY a.PerolehanData
			)#dt37_1

			SELECT PerolehanData SumberData, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt37_1 ORDER BY PerolehanData

			DROP TABLE #dt37_1
		END
		--Kondisi S = ''
		ELSE IF (@Salesman = '')
		BEGIN
			SELECT * INTO #dt37_2 FROM(
				SELECT
					a.PerolehanData,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST
				FROM #dSls2 a WHERE a.TeamLeader IN (@SalesHead)
				--(SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader = @SalesHead)) -- >ID SH   
				GROUP BY a.PerolehanData
			)#dt37_2

			SELECT PerolehanData SumberData, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt37_2 ORDER BY PerolehanData

			DROP TABLE #dt37_2
		END
		ELSE
		begin
			SELECT * INTO #dt37_3 FROM(
				SELECT
					a.PerolehanData,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST
				FROM #dSls2 a WHERE a.EmployeeID = @Salesman   
				GROUP BY a.PerolehanData
			)#dt37_3

			SELECT PerolehanData SumberData, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt37_3 ORDER BY PerolehanData

			DROP TABLE #dt37_3

		DROP TABLE #dSls2
		DROP TABLE #dByTipe2
		end
	END
end
else Begin
Print 'For Print Preview'
	SELECT * INTO #deptSalesP FROM(
		SELECT 
				'4' idx,
			   a.EmployeeID,
			   a.Position,
			   a.EmployeeName,
			   a.TeamLeader,
				(SELECT COUNT(StatusProspek) FROM PmKdp b WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
				AND b.StatusProspek = '10' AND (b.EmployeeID = a.EmployeeID) AND CONVERT(varchar(20),InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) NEW,
				(SELECT COUNT(StatusProspek) FROM PmKdp b WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
				AND b.LastProgress = 'P' AND (b.EmployeeID = a.EmployeeID) AND CONVERT(varchar(20),InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) PROSPECT,
				(SELECT COUNT(StatusProspek) FROM PmKdp b WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
				AND b.LastProgress = 'HP' AND (b.EmployeeID = a.EmployeeID) AND CONVERT(varchar(20),InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) HOTPROSPECT,
				(SELECT COUNT(StatusProspek) FROM PmKdp b WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
				AND b.LastProgress = 'SPK' AND (b.EmployeeID = a.EmployeeID) AND CONVERT(varchar(20),InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) SPK,
				(SELECT COUNT(StatusProspek) FROM PmKdp b WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
				AND b.LastProgress = 'DO' AND (b.EmployeeID = a.EmployeeID) AND CONVERT(varchar(20),InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) DO,
				(SELECT COUNT(StatusProspek) FROM PmKdp b WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
				AND b.LastProgress = 'DELIVERY' AND (b.EmployeeID = a.EmployeeID) AND CONVERT(varchar(20),InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) DELIVERY,
				(SELECT COUNT(StatusProspek) FROM PmKdp b WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
				AND b.LastProgress = 'LOST' AND (b.EmployeeID = a.EmployeeID) AND CONVERT(varchar(20),InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) LOST
		FROM HrEmployee a WHERE a.Department = 'SALES' AND a.CompanyCode = @CompanyCode and a.PersonnelStatus ='1'
	)#deptSalesP

	--Sales Coordinator
	SELECT * INTO #qryS_SCP FROM(
		SELECT 
				'3' idx,
			   a.EmployeeID,
			   a.Position, 
			   a.EmployeeName,
			   a.TeamLeader,
				(SELECT ISNULL(SUM(NEW), 0) FROM #deptSalesP b WHERE (b.TeamLeader = a.EmployeeID)) NEW,
				(SELECT ISNULL(SUM(PROSPECT), 0) FROM #deptSalesP b WHERE (b.TeamLeader = a.EmployeeID)) PROSPECT, 
				(SELECT ISNULL(SUM(HOTPROSPECT), 0) FROM #deptSalesP b WHERE (b.TeamLeader = a.EmployeeID)) HOTPROSPECT,
				(SELECT ISNULL(SUM(SPK), 0) FROM #deptSalesP b WHERE (b.TeamLeader = a.EmployeeID)) SPK,
				(SELECT ISNULL(SUM(DO), 0) FROM #deptSalesP b WHERE (b.TeamLeader = a.EmployeeID)) DO,
				(SELECT ISNULL(SUM(DELIVERY), 0) FROM #deptSalesP b WHERE (b.TeamLeader = a.EmployeeID)) DELIVERY,
				(SELECT ISNULL(SUM(LOST), 0) FROM #deptSalesP b WHERE (b.TeamLeader = a.EmployeeID)) LOST
		FROM #deptSalesP a WHERE a.Position = 'SC' 
	)#qryS_SCP

	--Sales Head
	SELECT * INTO #qrySHP FROM(
		SELECT 
				'2' idx,
			   a.EmployeeID,
			   a.Position, 
			   a.EmployeeName,
			   a.TeamLeader,
			   (SELECT ISNULL(SUM(NEW), 0) FROM #deptSalesP b WHERE (b.TeamLeader = a.EmployeeID)) NEW,
				(SELECT ISNULL(SUM(PROSPECT), 0) FROM #deptSalesP b WHERE (b.TeamLeader = a.EmployeeID)) PROSPECT, 
				(SELECT ISNULL(SUM(HOTPROSPECT), 0) FROM #deptSalesP b WHERE (b.TeamLeader = a.EmployeeID)) HOTPROSPECT,
				(SELECT ISNULL(SUM(SPK), 0) FROM #deptSalesP b WHERE (b.TeamLeader = a.EmployeeID)) SPK,
				(SELECT ISNULL(SUM(DO), 0) FROM #deptSalesP b WHERE (b.TeamLeader = a.EmployeeID)) DO,
				(SELECT ISNULL(SUM(DELIVERY), 0) FROM #deptSalesP b WHERE (b.TeamLeader = a.EmployeeID)) DELIVERY,
				(SELECT ISNULL(SUM(LOST), 0) FROM #deptSalesP b WHERE (b.TeamLeader = a.EmployeeID)) LOST
			   --(SELECT ISNULL(SUM(NEW), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID) AND b.Position = 'SC') NEW,
			   --(SELECT ISNULL(SUM(PROSPECT), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID) AND b.Position = 'SC') PROSPECT,
			   --(SELECT ISNULL(SUM(HOTPROSPECT), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID) AND b.Position = 'SC') HOTPROSPECT,
			   --(SELECT ISNULL(SUM(SPK), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID) AND b.Position = 'SC') SPK,
			   --(SELECT ISNULL(SUM(DO), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID) AND b.Position = 'SC') DO,
			   --(SELECT ISNULL(SUM(DELIVERY), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID) AND b.Position = 'SC') DELIVERY,
			   --(SELECT ISNULL(SUM(LOST), 0) FROM #deptSales b WHERE (b.TeamLeader = a.EmployeeID) AND b.Position = 'SC') LOST
		FROM #deptSalesP a WHERE a.Position = 'SH' 
	)#qrySHP
	
	SELECT * INTO #dByTipeP FROM(
			SELECT b.EmployeeID, (b.TipeKendaraan + ' ' + b.Variant) ModelKendaraan, LastProgress, StatusProspek FROM PmKdp b 
			inner join HrEmployee c 
				on b.CompanyCode = c.CompanyCode and b.EmployeeID = c.EmployeeID 
			WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
			AND (CONVERT(varchar(20),b.InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) and c.PersonnelStatus = '1'
		)#dByTipeP

		SELECT * INTO #dSlsP FROM (
			SELECT 
				a.EmployeeID,
				c.Position,
				c.TeamLeader,
				a.ModelKendaraan,
				(SELECT COUNT(StatusProspek) FROM #dByTipeP b WHERE b.StatusProspek = '10' AND b.EmployeeID = a.EmployeeID 
				AND b.ModelKendaraan = a.ModelKendaraan) NEW,
				(SELECT COUNT(StatusProspek) FROM #dByTipeP b WHERE b.LastProgress = 'P' AND b.EmployeeID = a.EmployeeID 
				AND b.ModelKendaraan = a.ModelKendaraan) PROSPECT,
				(SELECT COUNT(StatusProspek) FROM #dByTipeP b WHERE b.LastProgress = 'HP' AND b.EmployeeID = a.EmployeeID 
				AND b.ModelKendaraan = a.ModelKendaraan) HOTPROSPECT,
				(SELECT COUNT(StatusProspek) FROM #dByTipeP b WHERE b.LastProgress = 'SPK' AND b.EmployeeID = a.EmployeeID 
				AND b.ModelKendaraan = a.ModelKendaraan) SPK,
				(SELECT COUNT(StatusProspek) FROM #dByTipeP b WHERE b.LastProgress = 'DO' AND b.EmployeeID = a.EmployeeID 
				AND b.ModelKendaraan = a.ModelKendaraan) DO,
				(SELECT COUNT(StatusProspek) FROM #dByTipeP b WHERE b.LastProgress = 'DELIVERY' AND b.EmployeeID = a.EmployeeID 
				AND b.ModelKendaraan = a.ModelKendaraan) DELIVERY,
				(SELECT COUNT(StatusProspek) FROM #dByTipeP b WHERE b.LastProgress = 'LOST' AND b.EmployeeID = a.EmployeeID 
				AND b.ModelKendaraan = a.ModelKendaraan) LOST
			FROM #dByTipeP a, HrEmployee c WHERE a.EmployeeID = c.EmployeeID
			GROUP BY a.EmployeeID, c.Position, c.TeamLeader, a.ModelKendaraan
		)#dSlsP
		
		SELECT * INTO #dByTipe2P FROM(
			SELECT b.EmployeeID, b.PerolehanData, LastProgress, StatusProspek FROM PmKdp b 
			inner join HrEmployee c 
				on b.CompanyCode = c.CompanyCode and b.EmployeeID = c.EmployeeID 
			WHERE b.CompanyCode = @CompanyCode AND b.BranchCode in (case when @BranchCode = '' then b.BranchCode  else @BranchCode end)
			AND (CONVERT(varchar(20),b.InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd) and c.PersonnelStatus = '1'
		)#dByTipe2P

		SELECT * INTO #dSls2P FROM (
			SELECT 
				a.EmployeeID,
				c.Position,
				c.TeamLeader,
				a.PerolehanData,
				(SELECT COUNT(StatusProspek) FROM #dByTipe2P b WHERE b.StatusProspek <> '20' AND b.EmployeeID = a.EmployeeID 
				AND b.PerolehanData = a.PerolehanData) NEW,
				(SELECT COUNT(StatusProspek) FROM #dByTipe2P b WHERE b.LastProgress = 'P' AND b.EmployeeID = a.EmployeeID 
				AND b.PerolehanData = a.PerolehanData) PROSPECT,
				(SELECT COUNT(StatusProspek) FROM #dByTipe2P b WHERE b.LastProgress = 'HP' AND b.EmployeeID = a.EmployeeID 
				AND b.PerolehanData = a.PerolehanData) HOTPROSPECT,
				(SELECT COUNT(StatusProspek) FROM #dByTipe2P b WHERE b.LastProgress = 'SPK' AND b.EmployeeID = a.EmployeeID 
				AND b.PerolehanData = a.PerolehanData) SPK,
				(SELECT COUNT(StatusProspek) FROM #dByTipe2P b WHERE b.LastProgress = 'DO' AND b.EmployeeID = a.EmployeeID 
				AND b.PerolehanData = a.PerolehanData) DO,
				(SELECT COUNT(StatusProspek) FROM #dByTipe2P b WHERE b.LastProgress = 'DELIVERY' AND b.EmployeeID = a.EmployeeID 
				AND b.PerolehanData = a.PerolehanData) DELIVERY,
				(SELECT COUNT(StatusProspek) FROM #dByTipe2P b WHERE b.LastProgress = 'LOST' AND b.EmployeeID = a.EmployeeID 
				AND b.PerolehanData = a.PerolehanData) LOST
			FROM #dByTipe2P a, HrEmployee c WHERE a.EmployeeID = c.EmployeeID
			GROUP BY a.EmployeeID, c.Position, c.TeamLeader, a.PerolehanData
		)#dSls2P
		
		IF(@BranchManager = '' AND @SalesHead = '' AND @Salesman = '')
		BEGIN
			--Branch Manager
			SELECT * INTO #qryBMP0 FROM(
				SELECT 
					'1' idx,
					a.EmployeeID,
					a.Position, 
					a.EmployeeName,
					a.TeamLeader,
  					(SELECT ISNULL(SUM(NEW), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) NEW,
					(SELECT ISNULL(SUM(PROSPECT), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) PROSPECT,
					(SELECT ISNULL(SUM(HOTPROSPECT), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) HOTPROSPECT,
					(SELECT ISNULL(SUM(SPK), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) SPK,
					(SELECT ISNULL(SUM(DO), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) DO,
					(SELECT ISNULL(SUM(DELIVERY), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) DELIVERY,
					(SELECT ISNULL(SUM(LOST), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) LOST
				FROM #deptSalesP a --WHERE a.Position = 'BM' --AND a.EmployeeID = @BranchManager
			)#qryBMP0

			SELECT * INTO #qryAllP0 FROM(
				SELECT * FROM #qryBMP0
				UNION
				SELECT * FROM #qrySHP WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBMP0)     
				UNION
				--SELECT * FROM #qryS_SCP WHERE TeamLeader IN (SELECT EmployeeID FROM #qrySHP WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBMP0)) 
				--UNION
				SELECT * FROM #deptSalesP WHERE TeamLeader IN (SELECT EmployeeID FROM #qrySHP WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBMP0))
			)#qryAllP0

			SELECT 
				CASE a.Position
				WHEN 'BM' THEN 'Branch Manager'
				WHEN 'SH' THEN 'Sales Head'
				WHEN 'SC' THEN 'Sales Coordinator'
				WHEN 'S' THEN 'Salesman'
				ELSE 'Sales'
				END AS Position,
				a.EmployeeName, a.NEW, a.PROSPECT, a.HOTPROSPECT, a.SPK, a.DO, a.DELIVERY, a.LOST  
			FROM #qryAllP0 a ORDER BY a.idx ASC
		
			DROP TABLE #qryAllP0
			DROP TABLE #qryBMP0
			
			--table2
			SELECT * INTO #dt27_1P0 FROM(
				SELECT
					a.ModelKendaraan,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST 
				FROM #dSlsP a WHERE a.TeamLeader IN (SELECT c.EmployeeID FROM HrEmployee c ) --WHERE c.TeamLeader IN(@BranchManager)) 
				--(SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader = @BranchManager))   
				GROUP BY a.ModelKendaraan
			)#dt27_1P0

			SELECT ModelKendaraan TipeKendaraan, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt27_1P0 ORDER BY ModelKendaraan

			DROP TABLE #dt27_1P0
			
			--table3
			SELECT * INTO #dt37_1P0 FROM(
				SELECT
					a.PerolehanData,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST 
				FROM #dSls2P a --WHERE a.TeamLeader IN (SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader IN(@BranchManager))
				--(SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader = @BranchManager))   
				GROUP BY a.PerolehanData
			)#dt37_1P0

			SELECT PerolehanData SumberData, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt37_1P0 ORDER BY PerolehanData

			DROP TABLE #dt37_1P0
			
		END
	ELSE
		IF(@SalesHead = '' AND @Salesman = '')
		BEGIN
			--Branch Manager
			SELECT * INTO #qryBMP FROM(
				SELECT 
					'1' idx,
					a.EmployeeID,
					a.Position, 
					a.EmployeeName,
					a.TeamLeader,
  					(SELECT ISNULL(SUM(NEW), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) NEW,
					(SELECT ISNULL(SUM(PROSPECT), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) PROSPECT,
					(SELECT ISNULL(SUM(HOTPROSPECT), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) HOTPROSPECT,
					(SELECT ISNULL(SUM(SPK), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) SPK,
					(SELECT ISNULL(SUM(DO), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) DO,
					(SELECT ISNULL(SUM(DELIVERY), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) DELIVERY,
					(SELECT ISNULL(SUM(LOST), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) LOST
				FROM #deptSalesP a WHERE a.Position = 'BM' AND a.EmployeeID = @BranchManager
			)#qryBMP

			SELECT * INTO #qryAllP FROM(
				SELECT * FROM #qryBMP
				UNION
				SELECT * FROM #qrySHP WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBMP)     
				UNION
				--SELECT * FROM #qryS_SCP WHERE TeamLeader IN (SELECT EmployeeID FROM #qrySHP WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBMP)) 
				--UNION
				SELECT * FROM #deptSalesP WHERE TeamLeader IN (SELECT EmployeeID FROM #qrySHP WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM))
			)#qryAllP

			SELECT 
				CASE a.Position
				WHEN 'BM' THEN 'Branch Manager'
				WHEN 'SH' THEN 'Sales Head'
				WHEN 'SC' THEN 'Sales Coordinator'
				WHEN 'S' THEN 'Salesman'
				ELSE 'Sales'
				END AS Position,
				a.EmployeeName, a.NEW, a.PROSPECT, a.HOTPROSPECT, a.SPK, a.DO, a.DELIVERY, a.LOST  
			FROM #qryAllP a ORDER BY a.idx ASC
		
			DROP TABLE #qryAllP
			DROP TABLE #qryBMP
			
			--table2
			SELECT * INTO #dt27_1P FROM(
				SELECT
					a.ModelKendaraan,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST 
				FROM #dSlsP a WHERE a.TeamLeader IN (SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader IN(@BranchManager)) 
				--(SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader = @BranchManager))   
				GROUP BY a.ModelKendaraan
			)#dt27_1P

			SELECT ModelKendaraan TipeKendaraan, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt27_1P ORDER BY ModelKendaraan

			DROP TABLE #dt27_1P
			
			--table3
			SELECT * INTO #dt37_1P FROM(
				SELECT
					a.PerolehanData,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST 
				FROM #dSls2P a WHERE a.TeamLeader IN (SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader IN(@BranchManager))
				--(SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader = @BranchManager))   
				GROUP BY a.PerolehanData
			)#dt37_1P

			SELECT PerolehanData SumberData, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt37_1P ORDER BY PerolehanData

			DROP TABLE #dt37_1
			
		END
	ELSE IF(@Salesman = '')
		BEGIN
			--Branch Manager
			SELECT * INTO #qryBM2P FROM(
				SELECT
					'1' idx, 
					a.EmployeeID,
					a.Position, 
					a.EmployeeName,
					a.TeamLeader,
  					(SELECT ISNULL(SUM(NEW), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) NEW,
					(SELECT ISNULL(SUM(PROSPECT), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) PROSPECT,
					(SELECT ISNULL(SUM(HOTPROSPECT), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) HOTPROSPECT,
					(SELECT ISNULL(SUM(SPK), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) SPK,
					(SELECT ISNULL(SUM(DO), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) DO,
					(SELECT ISNULL(SUM(DELIVERY), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) DELIVERY,
					(SELECT ISNULL(SUM(LOST), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) LOST
				FROM #deptSalesP a WHERE a.Position = 'BM' AND a.EmployeeID = @BranchManager
			)#qryBM2P

			SELECT * INTO #qryAll2P FROM(
				SELECT * FROM #qryBM2P
				UNION
				SELECT * FROM #qrySHP WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM2P) AND EmployeeID = @SalesHead     
				UNION
				--SELECT * FROM #qryS_SC WHERE TeamLeader IN 
				--(SELECT EmployeeID FROM #qrySH WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM2) AND EmployeeID = @SalesHead) 
				--UNION
				SELECT * FROM #deptSalesP WHERE TeamLeader IN 
				--(SELECT EmployeeID FROM #qryS_SC WHERE TeamLeader IN 
				(SELECT EmployeeID FROM #qrySHP WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM2P) AND EmployeeID = @SalesHead )
				--) 
			)#qryAll2P

			SELECT @CompanyCode CompanyCode, @BranchCode BranchCode, ''TeamID, '' PositionID, a.EmployeeName,
				CASE a.Position
				WHEN 'BM' THEN 'Branch Manager'
				WHEN 'SH' THEN 'Sales Head'
				WHEN 'SC' THEN 'Sales Coordinator'
				WHEN 'S' THEN 'Salesman'
				ELSE 'Sales'
				END AS PositionName,
				 a.NEW, a.PROSPECT, a.HOTPROSPECT, a.SPK, a.DO, a.DELIVERY, a.LOST  
			FROM #qryAll2P a ORDER BY a.idx ASC

			DROP TABLE #qryAll2P
			DROP TABLE #qryBM2P
			
			--table2
			SELECT * INTO #dt27_2P FROM(
				SELECT
					a.ModelKendaraan,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST
				FROM #dSlsP a 
				WHERE a.TeamLeader =@SalesHead
				--(SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader = @SalesHead)) -- >ID SH   
				GROUP BY a.ModelKendaraan
			)#dt27_2P

			SELECT ModelKendaraan TipeKendaraan, '' GroupCode, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt27_2P ORDER BY ModelKendaraan

			DROP TABLE #dt27_2P
			
			--table3
			SELECT * INTO #dt37_2P FROM(
				SELECT
					a.PerolehanData,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST
				FROM #dSls2P a WHERE a.TeamLeader IN (@SalesHead)
				--(SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader = @SalesHead)) -- >ID SH   
				GROUP BY a.PerolehanData
			)#dt37_2P

			SELECT @CompanyCode CompanyCode, PerolehanData Source, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt37_2P ORDER BY PerolehanData

			DROP TABLE #dt37_2P
			
		END
	ELSE
		BEGIN
			--Branch Manager
			SELECT * INTO #qryBM3P FROM(
				SELECT
					'1' idx, 
					a.EmployeeID,
					a.Position, 
					a.EmployeeName,
					a.TeamLeader,
  					(SELECT ISNULL(SUM(NEW), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) NEW,
					(SELECT ISNULL(SUM(PROSPECT), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) PROSPECT,
					(SELECT ISNULL(SUM(HOTPROSPECT), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) HOTPROSPECT,
					(SELECT ISNULL(SUM(SPK), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) SPK,
					(SELECT ISNULL(SUM(DO), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) DO,
					(SELECT ISNULL(SUM(DELIVERY), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) DELIVERY,
					(SELECT ISNULL(SUM(LOST), 0) FROM #qrySHP b WHERE b.TeamLeader = a.EmployeeID) LOST
				FROM #deptSalesP a WHERE a.Position = 'BM' AND a.EmployeeID = @BranchManager
			)#qryBM3P

			SELECT * INTO #qryAll3P FROM(
				SELECT * FROM #qryBM3P
				UNION
				SELECT * FROM #qrySHP WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM3P) AND EmployeeID = @SalesHead     
				UNION
				SELECT * FROM #qryS_SCP WHERE EmployeeID IN (@SC)
				--(SELECT EmployeeID FROM #qrySH WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM3) AND EmployeeID = @SalesHead) 
				UNION
				SELECT * FROM #deptSalesP WHERE TeamLeader IN 
				--(SELECT EmployeeID FROM #qryS_SC WHERE TeamLeader IN 
				(SELECT EmployeeID FROM #qrySHP WHERE TeamLeader IN (SELECT EmployeeID FROM #qryBM3P) AND EmployeeID = @SalesHead )--)
				AND EmployeeID = @Salesman 
			)#qryAll3P

			SELECT 
				CASE a.Position
				WHEN 'BM' THEN 'Branch Manager'
				WHEN 'SH' THEN 'Sales Head'
				WHEN 'SC' THEN 'Sales Coordinator'
				WHEN 'S' THEN 'Salesman'
				ELSE 'Sales'
				END AS Position,
				a.EmployeeName, a.NEW, a.PROSPECT, a.HOTPROSPECT, a.SPK, a.DO, a.DELIVERY, a.LOST 
			FROM #qryAll3P a ORDER BY a.idx ASC 

			DROP TABLE #qryAll3
			DROP TABLE #qryBM3
			
			--table2
			SELECT * INTO #dt27_3P FROM(
				SELECT
					a.ModelKendaraan,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST
				FROM #dSlsP a WHERE a.EmployeeID = @Salesman   
				GROUP BY a.ModelKendaraan
			)#dt27_3P

			SELECT ModelKendaraan TipeKendaraan, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt27_3P ORDER BY ModelKendaraan

			DROP TABLE #dt27_3P
			
			--table3
			SELECT * INTO #dt37_3P FROM(
				SELECT
					a.PerolehanData,
					SUM(a.NEW) NEW,
					SUM(a.PROSPECT) PROSPECT,
					SUM(a.HOTPROSPECT) HOTPROSPECT,
					SUM(a.SPK) SPK,
					SUM(a.DO) DO,
					SUM(a.DELIVERY) DELIVERY,
					SUM(a.LOST) LOST
				FROM #dSls2P a WHERE a.EmployeeID = @Salesman   
				GROUP BY a.PerolehanData
			)#dt37_3

			SELECT PerolehanData SumberData, NEW, PROSPECT, HOTPROSPECT, SPK, DO, DELIVERY, LOST FROM #dt37_3P ORDER BY PerolehanData

			DROP TABLE #dt37_3P
			
		END
End
END
GO
ALTER procedure [dbo].[uspfn_SvTrnInvoiceCancel]
	@CompanyCode   varchar(20),
	@BranchCode    varchar(20),
	@InvoiceNo     varchar(20),
	@UserInfo      varchar(max)
as  

declare @errmsg varchar(max)
declare @JobOrderNo varchar(20) 

begin try
set nocount on
	set @JobOrderNo = (Select JobOrderNo from svTrnInvoice where CompanyCode = @CompanyCode and BranchCode = @BranchCode and InvoiceNo = @InvoiceNo)
	
	if exists (
	select * from ArInterface
	 where CompanyCode = @CompanyCode
	   and BranchCode  = @BranchCode
	   and (StatusFlag > '0' or ReceiveAmt > 0 or BlockAmt > 0 or DebetAmt > 0 or CreditAmt > 0)
	   and DocNo in (Select InvoiceNo from svTrnInvoice where CompanyCode = @CompanyCode and BranchCode = @BranchCode and JobOrderNo = @JobOrderNo)
	)
	begin
		raiserror('Invoice sudah ada proses Receiving, transaksi tidak bisa dilanjutkan',16 ,1 );
	end

	if exists (
	select * from svTrnFakturPajak
	 where CompanyCode = @CompanyCode
	   and BranchCode = @BranchCode
	   and FPJNo in (select FPJNo from svTrnInvoice where CompanyCode = @CompanyCode and BranchCode = @BranchCode and JobOrderNo = @JobOrderNo)
	   and isnull(FPJGovNo, '') <> ''
	   and left(FPJGovNo, 3) <> 'SHN'
	)
	begin
		raiserror('Invoice sudah tergenerate Nomor Pajak Pemerintah, transaksi tidak bisa dilanjutkan',16 ,1 );
	end

	;with x as (
		select a.BranchCode, a.CustomerCode, a.SalesAmt, b.TotalSrvAmt
		  from gnTrnBankBook a, svTrnInvoice b
		 where 1 = 1
		   and b.CompanyCode = a.CompanyCode
		   and b.BranchCode = a.BranchCode
		   and b.CustomerCodeBill = a.CustomerCode
		   and a.ProfitCenterCode = '200'
		   and a.CompanyCode = @BranchCode
		   and a.BranchCode = @BranchCode
		   and b.JobOrderNo = @JobOrderNo
	)
	update x set SalesAmt = SalesAmt - TotalSrvAmt where SalesAmt > 0

	delete from glInterface 
	 where CompanyCode = @CompanyCode
	   and BranchCode = @BranchCode
	   and DocNo in (Select InvoiceNo from svTrnInvoice where CompanyCode = @CompanyCode and BranchCode = @BranchCode and JobOrderNo = @JobOrderNo)
	delete from arInterface 
	 where CompanyCode = @CompanyCode
	   and BranchCode = @BranchCode
	   and DocNo in (Select InvoiceNo from svTrnInvoice where CompanyCode = @CompanyCode and BranchCode = @BranchCode and JobOrderNo = @JobOrderNo)

	update svTrnService set ServiceStatus = 5, InvoiceNo = ''
	 where CompanyCode = @CompanyCode
	   and BranchCode = @BranchCode
	   and JobOrderNo = @JobOrderNo

	delete svTrnFakturPajak
	 where CompanyCode = @CompanyCode
	   and BranchCode = @BranchCode
	   and FPJNo in (select FPJNo from svTrnInvoice where CompanyCode = @CompanyCode and BranchCode = @BranchCode and JobOrderNo = @JobOrderNo)

	-------------------------------------------------------------------------------------------------------------------
	-- Insert into table log
	-------------------------------------------------------------------------------------------------------------------
	declare @TransID   uniqueidentifier; 
	declare @TransCode varchar(20);

	set @TransID = newid()
	set @TransCode = 'CANCEL INVOICE' 

	insert into svTrnInvoiceLog (
		TransID,TransCode,CompanyCode,BranchCode,ProductType,InvoiceNo,InvoiceDate,InvoiceStatus,
		FPJNo,FPJDate,JobOrderNo,JobOrderDate,JobType,ServiceRequestDesc,ChassisCode,ChassisNo,
		EngineCode,EngineNo,PoliceRegNo,BasicModel,CustomerCode,CustomerCodeBill,Odometer,
		IsPKP,TOPCode,TOPDays,DueDate,SignedDate,LaborDiscPct,PartsDiscPct,MaterialDiscPct,
		PphPct,PpnPct,LaborGrossAmt,PartsGrossAmt,MaterialGrossAmt,LaborDiscAmt,PartsDiscAmt,MaterialDiscAmt,
		LaborDppAmt,PartsDppAmt,MaterialDppAmt,TotalDppAmt,TotalPphAmt,TotalPpnAmt,TotalSrvAmt,
		Remarks,PrintSeq,PostingFlag,PostingDate,CreatedBy,CreatedDate
	) 
	select 
		@TransID, @TransCode,CompanyCode,BranchCode,ProductType,InvoiceNo,InvoiceDate,InvoiceStatus,
		FPJNo,FPJDate,JobOrderNo,JobOrderDate,JobType,left(ServiceRequestDesc, 200),ChassisCode,ChassisNo,
		EngineCode,EngineNo,PoliceRegNo,BasicModel,CustomerCode,CustomerCodeBill,Odometer,
		IsPKP,TOPCode,TOPDays,DueDate,SignedDate,LaborDiscPct,PartsDiscPct,MaterialDiscPct,
		PphPct,PpnPct,LaborGrossAmt,PartsGrossAmt,MaterialGrossAmt,LaborDiscAmt,PartsDiscAmt,MaterialDiscAmt,
		LaborDppAmt,PartsDppAmt,MaterialDppAmt,TotalDppAmt,TotalPphAmt,TotalPpnAmt,TotalSrvAmt,
		Remarks,PrintSeq,PostingFlag,PostingDate,@UserInfo,CreatedDate
	from svTrnInvoice
	 where CompanyCode = @CompanyCode and BranchCode = @BranchCode and InvoiceNo in (Select InvoiceNo from svTrnInvoice where CompanyCode = @CompanyCode and BranchCode = @BranchCode and JobOrderNo = @JobOrderNo)

	insert into svTrnInvTaskLog(TransID,TransCode,CompanyCode,BranchCode,ProductType,InvoiceNo,OperationNo,OperationHour,ClaimHour,OperationCost,SubConPrice,IsSubCon,SharingTask)
	select @TransID,@TransCode,CompanyCode,BranchCode,ProductType,InvoiceNo,OperationNo,OperationHour,ClaimHour,OperationCost,SubConPrice,IsSubCon,SharingTask from svTrnInvTask 
	 where CompanyCode = @CompanyCode and BranchCode = @BranchCode and InvoiceNo in (Select InvoiceNo from svTrnInvoice where CompanyCode = @CompanyCode and BranchCode = @BranchCode and JobOrderNo = @JobOrderNo)

	insert into svTrnInvItemLog(TransID,TransCode,CompanyCode, BranchCode, ProductType, InvoiceNo, PartNo, MovingCode, ABCClass, SupplyQty, ReturnQty, CostPrice, RetailPrice, TypeOfGoods)
	select @TransID,@TransCode,CompanyCode, BranchCode, ProductType, InvoiceNo, PartNo, MovingCode, ABCClass, SupplyQty, ReturnQty, CostPrice, RetailPrice, TypeOfGoods from svTrnInvItem
	 where CompanyCode = @CompanyCode and BranchCode = @BranchCode and InvoiceNo in (Select InvoiceNo from svTrnInvoice where CompanyCode = @CompanyCode and BranchCode = @BranchCode and JobOrderNo = @JobOrderNo)

	delete svTrnInvItemDtl where CompanyCode = @CompanyCode and BranchCode = @BranchCode and InvoiceNo in (Select InvoiceNo from svTrnInvoice where CompanyCode = @CompanyCode and BranchCode = @BranchCode and JobOrderNo = @JobOrderNo)
	delete svTrnInvItem where CompanyCode = @CompanyCode and BranchCode = @BranchCode and InvoiceNo in (Select InvoiceNo from svTrnInvoice where CompanyCode = @CompanyCode and BranchCode = @BranchCode and JobOrderNo = @JobOrderNo)
	delete svTrnInvMechanic where CompanyCode = @CompanyCode and BranchCode = @BranchCode and InvoiceNo in (Select InvoiceNo from svTrnInvoice where CompanyCode = @CompanyCode and BranchCode = @BranchCode and JobOrderNo = @JobOrderNo)
	delete svTrnInvTask where CompanyCode = @CompanyCode and BranchCode = @BranchCode and InvoiceNo in (Select InvoiceNo from svTrnInvoice where CompanyCode = @CompanyCode and BranchCode = @BranchCode and JobOrderNo = @JobOrderNo)
	delete svTrnInvoice where CompanyCode = @CompanyCode and BranchCode = @BranchCode and InvoiceNo in (Select InvoiceNo from svTrnInvoice where CompanyCode = @CompanyCode and BranchCode = @BranchCode and JobOrderNo = @JobOrderNo)

	declare @CompanyMD as varchar(15)
	declare @BranchMD as varchar(15)

	set @CompanyMD = (select CompanyMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)
	set @BranchMD = (select BranchMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)

	if (@CompanyCode != @CompanyMD and @BranchCode != @BranchMD)
	begin
	declare @Query VARCHAR(MAX)
		
	set @Query ='update '+dbo.GetDbMD(@CompanyCode, @BranchCode)+'..svSDMovement 
		set Status = ''9'',
			LastUpdateBy = '''+ @UserInfo +''',
			LastUpdateDate = '''+ convert(varchar,getdate()) +'''
		where CompanyCode = '''+ @CompanyCode +''' and BranchCode = '''+ @BranchCode +'''
		and DocNo in (Select InvoiceNo from svTrnInvoice where CompanyCode = '''+ @CompanyCode +''' and BranchCode = '''+ @BranchCode +''' and JobOrderNo = '''+ @JobOrderNo +''')'	
	end
end try
begin catch
    set @errmsg = 'InvoiceNo : ' + @InvoiceNo + char(13) + 'Error Message:' + char(13) + error_message()
    raiserror (@errmsg,16,1);
end catch
GO
ALTER procedure [dbo].[usprpt_PmRpInqPeriodeWeb] 
(
	@CompanyCode		VARCHAR(15),
	@BranchCode			VARCHAR(15),
	@PeriodBegin		DATETIME,
	@PeriodEnd			DATETIME,
	@BranchManager		VARCHAR(50),
	@SalesHead			VARCHAR(15),
	@Salesman			VARCHAR(15),
	@isexel				varchar(15) = ''
)
AS 
BEGIN
SET NOCOUNT ON;
----
declare @inqno VARCHAR(50)
--set @BranchManager = (SELECT a.TeamLeader FROM HrEmployee a WHERE a.Department ='SALES'
--		AND a.CompanyCode = @CompanyCode AND a.EmployeeID = @SalesHead )
IF(@isexel = '')
begin
	IF(@BranchManager = '' AND @SalesHead ='' AND @Salesman ='')
BEGIN
	SELECT * INTO #empl0 FROM (
		--SH =ALL AND S=ALL
		SELECT a.EmployeeID, a.Position, a.TeamLeader FROM HrEmployee a WHERE a.Department ='SALES'
		AND a.CompanyCode = @CompanyCode AND  a.Department ='SALES'
		AND a.Position = 'S'
		AND a.PersonnelStatus = '1' 
	)#empl0

	SELECT * INTO #t0 FROM (
		SELECT
			f.BranchName OutletName, case when @isexel = '' then a.InquiryNumber else cast( a.InquiryNumber as varchar(50)) end as InquiryNumber
			, a.NamaProspek Pelanggan, a.AlamatProspek, a.TelpRumah, a.NamaPerusahaan, 
			a.AlamatPerusahaan, a.Handphone, a.InquiryDate, a.TipeKendaraan, a.Variant, a.Transmisi, b.RefferenceDesc1 Warna, 
			a.PerolehanData, c.EmployeeName Employee, d.EmployeeName Supervisor, e.NextFollowUpDate, a.LastProgress,a.LastUpdateStatus, 
			a.SPKDate, a.LostCaseDate, e.ActivityDetail
			FROM PmKDP a
		LEFT JOIN OmMstRefference b
			ON b.CompanyCode = a.CompanyCode AND b.RefferenceType='COLO' AND b.RefferenceCode=a.ColourCode
		LEFT JOIN HrEmployee c
			ON c.CompanyCode = a.CompanyCode AND c.EmployeeID = a.EmployeeID
		LEFT JOIN HrEmployee d
			ON d.CompanyCode = a.CompanyCode AND d.EmployeeID = a.SpvEmployeeID
		LEFT JOIN PmActivities e
			ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode AND e.InquiryNumber=a.InquiryNumber
			AND e.ActivityID = (SELECT TOP 1 ActivityID FROM PmActivities WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode AND InquiryNumber=a.InquiryNumber ORDER BY ActivityID DESC) 
		LEFT JOIN gnMstOrganizationDtl f
			ON f.CompanyCode = a.CompanyCode AND f.BranchCode = a.BranchCode
		WHERE
			a.CompanyCode = @CompanyCode 
			AND ((CASE WHEN @BranchCode='' THEN a.BranchCode END)<>'' OR (CASE WHEN @BranchCode<>'' THEN a.BranchCode END)=@BranchCode)
			AND CONVERT(varchar(20),a.InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd 
	) #t0

	DROP TABLE #empl0
	SELECT OutletName
		,InquiryNumber
		,Pelanggan
		,AlamatProspek
		,TelpRumah
		,NamaPerusahaan
		,AlamatPerusahaan
		,Handphone
		,CASE(InquiryDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), InquiryDate, 106) END InquiryDate
		,TipeKendaraan
		,Variant
		,Transmisi
		,Warna
		,PerolehanData
		,Employee
		,Supervisor
		,CASE(NextFollowUpDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), NextFollowUpDate, 106) END NextFollowUpDate
		,LastProgress
		,LastUpdateStatus
		,CASE(SPKDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), SPKDate, 106) END SPKDate
		,CASE(LostCaseDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), LostCaseDate, 106) END LostCaseDate, ActivityDetail FROM #t0 ORDER BY InquiryNumber
	DROP TABLE #t0
END
ELSE IF(@SalesHead ='' AND @Salesman ='')
BEGIN
	SELECT * INTO #empl1 FROM (
		--SH =ALL AND S=ALL
		SELECT a.EmployeeID, a.Position, a.TeamLeader FROM HrEmployee a WHERE a.Department ='SALES'
		AND a.CompanyCode = @CompanyCode AND  a.Department ='SALES'
		AND a.Position = 'S'
		AND a.PersonnelStatus = '1' AND
		a.TeamLeader IN (SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader=@BranchManager)
	)#empl1

	SELECT * INTO #t1 FROM (
		SELECT
			f.BranchName OutletName, a.InquiryNumber, a.NamaProspek Pelanggan, a.AlamatProspek, a.TelpRumah, a.NamaPerusahaan, 
			a.AlamatPerusahaan, a.Handphone, a.InquiryDate, a.TipeKendaraan, a.Variant, a.Transmisi, b.RefferenceDesc1 Warna, 
			a.PerolehanData, c.EmployeeName Employee, d.EmployeeName Supervisor, e.NextFollowUpDate, a.LastProgress,a.LastUpdateStatus, 
			a.SPKDate, a.LostCaseDate, e.ActivityDetail
			FROM PmKDP a
		LEFT JOIN OmMstRefference b
			ON b.CompanyCode = a.CompanyCode AND b.RefferenceType='COLO' AND b.RefferenceCode=a.ColourCode
		LEFT JOIN HrEmployee c
			ON c.CompanyCode = a.CompanyCode AND c.EmployeeID = a.EmployeeID
		LEFT JOIN HrEmployee d
			ON d.CompanyCode = a.CompanyCode AND d.EmployeeID = a.SpvEmployeeID
		LEFT JOIN PmActivities e
			ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode AND e.InquiryNumber=a.InquiryNumber
			AND e.ActivityID = (SELECT TOP 1 ActivityID FROM PmActivities WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode AND InquiryNumber=a.InquiryNumber ORDER BY ActivityID DESC) 
		LEFT JOIN gnMstOrganizationDtl f
			ON f.CompanyCode = a.CompanyCode AND f.BranchCode = a.BranchCode
		WHERE
			a.CompanyCode = @CompanyCode 
			AND ((CASE WHEN @BranchCode='' THEN a.BranchCode END)<>'' OR (CASE WHEN @BranchCode<>'' THEN a.BranchCode END)=@BranchCode)
			AND CONVERT(varchar(20),a.InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd AND a.EmployeeID IN (SELECT g.EmployeeID FROM #empl1 g)
	) #t1

	DROP TABLE #empl1
	SELECT OutletName
		,InquiryNumber
		,Pelanggan
		,AlamatProspek
		,TelpRumah
		,NamaPerusahaan
		,AlamatPerusahaan
		,Handphone
		,CASE(InquiryDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), InquiryDate, 106) END InquiryDate
		,TipeKendaraan
		,Variant
		,Transmisi
		,Warna
		,PerolehanData
		,Employee
		,Supervisor
		,CASE(NextFollowUpDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), NextFollowUpDate, 106) END NextFollowUpDate
		,LastProgress
		,LastUpdateStatus
		,CASE(SPKDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), SPKDate, 106) END SPKDate
		,CASE(LostCaseDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), LostCaseDate, 106) END LostCaseDate, ActivityDetail FROM #t1 ORDER BY InquiryNumber
	DROP TABLE #t1

END
ELSE IF(@Salesman = '')
BEGIN
	SELECT * INTO #empl2 FROM (
		--S=ALL
		SELECT a.EmployeeID, a.Position, a.TeamLeader FROM HrEmployee a WHERE a.Department ='SALES'
		AND a.CompanyCode = @CompanyCode AND  a.Department ='SALES'
		AND a.Position = 'S'
		AND a.PersonnelStatus = '1' AND
		a.TeamLeader = @SalesHead
	)#empl2

	SELECT * INTO #t2 FROM (
		SELECT
			f.BranchName OutletName, a.InquiryNumber, a.NamaProspek Pelanggan, a.AlamatProspek, a.TelpRumah, a.NamaPerusahaan, 
			a.AlamatPerusahaan, a.Handphone, a.InquiryDate, a.TipeKendaraan, a.Variant, a.Transmisi, b.RefferenceDesc1 Warna, 
			a.PerolehanData, c.EmployeeName Employee, d.EmployeeName Supervisor, e.NextFollowUpDate, a.LastProgress,a.LastUpdateStatus, 
			a.SPKDate, a.LostCaseDate, e.ActivityDetail
			FROM PmKDP a
		LEFT JOIN OmMstRefference b
			ON b.CompanyCode = a.CompanyCode AND b.RefferenceType='COLO' AND b.RefferenceCode=a.ColourCode
		LEFT JOIN HrEmployee c
			ON c.CompanyCode = a.CompanyCode AND c.EmployeeID = a.EmployeeID
		LEFT JOIN HrEmployee d
			ON d.CompanyCode = a.CompanyCode AND d.EmployeeID = a.SpvEmployeeID
		LEFT JOIN PmActivities e
			ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode AND e.InquiryNumber=a.InquiryNumber
			AND e.ActivityID = (SELECT TOP 1 ActivityID FROM PmActivities WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode AND InquiryNumber=a.InquiryNumber ORDER BY ActivityID DESC) 
		LEFT JOIN gnMstOrganizationDtl f
			ON f.CompanyCode = a.CompanyCode AND f.BranchCode = a.BranchCode
		WHERE
			a.CompanyCode = @CompanyCode 
			AND ((CASE WHEN @BranchCode='' THEN a.BranchCode END)<>'' OR (CASE WHEN @BranchCode<>'' THEN a.BranchCode END)=@BranchCode)
			AND CONVERT(varchar(20),a.InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd AND a.EmployeeID IN (SELECT g.EmployeeID FROM #empl2 g)
	) #t2
	
	DROP TABLE #empl2
	SELECT OutletName
		,InquiryNumber
		,Pelanggan
		,AlamatProspek
		,TelpRumah
		,NamaPerusahaan
		,AlamatPerusahaan
		,Handphone
		,CASE(InquiryDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), InquiryDate, 106) END InquiryDate
		,TipeKendaraan
		,Variant
		,Transmisi
		,Warna
		,PerolehanData
		,Employee
		,Supervisor
		,CASE(NextFollowUpDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), NextFollowUpDate, 106) END NextFollowUpDate
		,LastProgress
		,LastUpdateStatus
		,CASE(SPKDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), SPKDate, 106) END SPKDate
		,CASE(LostCaseDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), LostCaseDate, 106) END LostCaseDate, ActivityDetail FROM #t2 ORDER BY InquiryNumber
	DROP TABLE #t2
END
ELSE
BEGIN
	SELECT * INTO #empl3 FROM (
		SELECT a.EmployeeID, a.Position, a.TeamLeader FROM HrEmployee a WHERE a.Department ='SALES'
		AND a.CompanyCode = @CompanyCode AND  a.Department ='SALES'
		AND a.Position = 'S'
		AND a.PersonnelStatus = '1' AND
		a.EmployeeID=@Salesman
	)#empl3

	SELECT * INTO #t3 FROM (
		SELECT
			f.BranchName OutletName, a.InquiryNumber, a.NamaProspek Pelanggan, a.AlamatProspek, a.TelpRumah, a.NamaPerusahaan, 
			a.AlamatPerusahaan, a.Handphone, a.InquiryDate, a.TipeKendaraan, a.Variant, a.Transmisi, b.RefferenceDesc1 Warna, 
			a.PerolehanData, c.EmployeeName Employee, d.EmployeeName Supervisor, e.NextFollowUpDate, a.LastProgress,a.LastUpdateStatus, 
			a.SPKDate, a.LostCaseDate, e.ActivityDetail
			FROM PmKDP a
		LEFT JOIN OmMstRefference b
			ON b.CompanyCode = a.CompanyCode AND b.RefferenceType='COLO' AND b.RefferenceCode=a.ColourCode
		LEFT JOIN HrEmployee c
			ON c.CompanyCode = a.CompanyCode AND c.EmployeeID = a.EmployeeID
		LEFT JOIN HrEmployee d
			ON d.CompanyCode = a.CompanyCode AND d.EmployeeID = a.SpvEmployeeID
		LEFT JOIN PmActivities e
			ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode AND e.InquiryNumber=a.InquiryNumber
			AND e.ActivityID = (SELECT TOP 1 ActivityID FROM PmActivities WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode AND InquiryNumber=a.InquiryNumber ORDER BY ActivityID DESC) 
		LEFT JOIN gnMstOrganizationDtl f
			ON f.CompanyCode = a.CompanyCode AND f.BranchCode = a.BranchCode
		WHERE
			a.CompanyCode = @CompanyCode 
			AND ((CASE WHEN @BranchCode='' THEN a.BranchCode END)<>'' OR (CASE WHEN @BranchCode<>'' THEN a.BranchCode END)=@BranchCode)
			AND CONVERT(varchar(20),a.InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd AND a.EmployeeID IN (SELECT g.EmployeeID FROM #empl3 g)
	) #t3

	DROP TABLE #empl3
	SELECT OutletName
		,InquiryNumber
		,Pelanggan
		,AlamatProspek
		,TelpRumah
		,NamaPerusahaan
		,AlamatPerusahaan
		,Handphone
		,CASE(InquiryDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), InquiryDate, 106) END InquiryDate
		,TipeKendaraan
		,Variant
		,Transmisi
		,Warna
		,PerolehanData
		,Employee
		,Supervisor
		,CASE(NextFollowUpDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), NextFollowUpDate, 106) END NextFollowUpDate
		,LastProgress
		,LastUpdateStatus
		,CASE(SPKDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), SPKDate, 106) END SPKDate
		,CASE(LostCaseDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), LostCaseDate, 106) END LostCaseDate, ActivityDetail FROM #t3 ORDER BY InquiryNumber
	DROP TABLE #t3
END
end
else begin
	IF(@BranchManager = '' AND @SalesHead ='' AND @Salesman ='')
BEGIN
	SELECT * INTO #empl00 FROM (
		--SH =ALL AND S=ALL
		SELECT a.EmployeeID, a.Position, a.TeamLeader FROM HrEmployee a WHERE a.Department ='SALES'
		AND a.CompanyCode = @CompanyCode AND  a.Department ='SALES'
		AND a.Position = 'S'
		AND a.PersonnelStatus = '1' 
	)#empl00

	SELECT * INTO #t00 FROM (
		SELECT
			f.BranchName OutletName, case when @isexel = '' then a.InquiryNumber else cast( a.InquiryNumber as varchar(50)) end as InquiryNumber
			, a.NamaProspek Pelanggan, a.AlamatProspek, a.TelpRumah, a.NamaPerusahaan, 
			a.AlamatPerusahaan, a.Handphone, a.InquiryDate, a.TipeKendaraan, a.Variant, a.Transmisi, b.RefferenceDesc1 Warna, 
			a.PerolehanData, c.EmployeeName Employee, d.EmployeeName Supervisor, e.NextFollowUpDate, a.LastProgress,a.LastUpdateStatus, 
			a.SPKDate, a.LostCaseDate, e.ActivityDetail
			FROM PmKDP a
		LEFT JOIN OmMstRefference b
			ON b.CompanyCode = a.CompanyCode AND b.RefferenceType='COLO' AND b.RefferenceCode=a.ColourCode
		LEFT JOIN HrEmployee c
			ON c.CompanyCode = a.CompanyCode AND c.EmployeeID = a.EmployeeID
		LEFT JOIN HrEmployee d
			ON d.CompanyCode = a.CompanyCode AND d.EmployeeID = a.SpvEmployeeID
		LEFT JOIN PmActivities e
			ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode AND e.InquiryNumber=a.InquiryNumber
			AND e.ActivityID = (SELECT TOP 1 ActivityID FROM PmActivities WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode AND InquiryNumber=a.InquiryNumber ORDER BY ActivityID DESC) 
		LEFT JOIN gnMstOrganizationDtl f
			ON f.CompanyCode = a.CompanyCode AND f.BranchCode = a.BranchCode
		WHERE
			a.CompanyCode = @CompanyCode 
			AND ((CASE WHEN @BranchCode='' THEN a.BranchCode END)<>'' OR (CASE WHEN @BranchCode<>'' THEN a.BranchCode END)=@BranchCode)
			AND CONVERT(varchar(20),a.InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd 
	) #t00

	DROP TABLE #empl00
	SELECT OutletName
		,convert(varchar(50),InquiryNumber) as InquiryNumber
		,Pelanggan
		,AlamatProspek
		,TelpRumah
		,NamaPerusahaan
		,AlamatPerusahaan
		,Handphone
		,CASE(InquiryDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), InquiryDate, 106) END InquiryDate
		,TipeKendaraan
		,Variant
		,Transmisi
		,Warna
		,PerolehanData
		,Employee
		,Supervisor
		,CASE(NextFollowUpDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), NextFollowUpDate, 106) END NextFollowUpDate
		,LastProgress
		,LastUpdateStatus
		,CASE(SPKDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), SPKDate, 106) END SPKDate
		,CASE(LostCaseDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), LostCaseDate, 106) END LostCaseDate, ActivityDetail FROM #t00 ORDER BY InquiryNumber
	DROP TABLE #t00
END
ELSE IF(@SalesHead ='' AND @Salesman ='')
BEGIN
	SELECT * INTO #empl10 FROM (
		--SH =ALL AND S=ALL
		SELECT a.EmployeeID, a.Position, a.TeamLeader FROM HrEmployee a WHERE a.Department ='SALES'
		AND a.CompanyCode = @CompanyCode AND  a.Department ='SALES'
		AND a.Position = 'S'
		AND a.PersonnelStatus = '1' AND
		a.TeamLeader IN (SELECT c.EmployeeID FROM HrEmployee c WHERE c.TeamLeader=@BranchManager)
	)#empl10

	SELECT * INTO #t10 FROM (
		SELECT
			f.BranchName OutletName, a.InquiryNumber, a.NamaProspek Pelanggan, a.AlamatProspek, a.TelpRumah, a.NamaPerusahaan, 
			a.AlamatPerusahaan, a.Handphone, a.InquiryDate, a.TipeKendaraan, a.Variant, a.Transmisi, b.RefferenceDesc1 Warna, 
			a.PerolehanData, c.EmployeeName Employee, d.EmployeeName Supervisor, e.NextFollowUpDate, a.LastProgress,a.LastUpdateStatus, 
			a.SPKDate, a.LostCaseDate, e.ActivityDetail
			FROM PmKDP a
		LEFT JOIN OmMstRefference b
			ON b.CompanyCode = a.CompanyCode AND b.RefferenceType='COLO' AND b.RefferenceCode=a.ColourCode
		LEFT JOIN HrEmployee c
			ON c.CompanyCode = a.CompanyCode AND c.EmployeeID = a.EmployeeID
		LEFT JOIN HrEmployee d
			ON d.CompanyCode = a.CompanyCode AND d.EmployeeID = a.SpvEmployeeID
		LEFT JOIN PmActivities e
			ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode AND e.InquiryNumber=a.InquiryNumber
			AND e.ActivityID = (SELECT TOP 1 ActivityID FROM PmActivities WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode AND InquiryNumber=a.InquiryNumber ORDER BY ActivityID DESC) 
		LEFT JOIN gnMstOrganizationDtl f
			ON f.CompanyCode = a.CompanyCode AND f.BranchCode = a.BranchCode
		WHERE
			a.CompanyCode = @CompanyCode 
			AND ((CASE WHEN @BranchCode='' THEN a.BranchCode END)<>'' OR (CASE WHEN @BranchCode<>'' THEN a.BranchCode END)=@BranchCode)
			AND CONVERT(varchar(20),a.InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd AND a.EmployeeID IN (SELECT g.EmployeeID FROM #empl10 g)
	) #t10

	DROP TABLE #empl10
	SELECT OutletName
		,convert(varchar(50), InquiryNumber) as InquiryNumber
		,Pelanggan
		,AlamatProspek
		,TelpRumah
		,NamaPerusahaan
		,AlamatPerusahaan
		,Handphone
		,CASE(InquiryDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), InquiryDate, 106) END InquiryDate
		,TipeKendaraan
		,Variant
		,Transmisi
		,Warna
		,PerolehanData
		,Employee
		,Supervisor
		,CASE(NextFollowUpDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), NextFollowUpDate, 106) END NextFollowUpDate
		,LastProgress
		,LastUpdateStatus
		,CASE(SPKDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), SPKDate, 106) END SPKDate
		,CASE(LostCaseDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), LostCaseDate, 106) END LostCaseDate, ActivityDetail FROM #t10 ORDER BY InquiryNumber
	DROP TABLE #t10

END
ELSE IF(@Salesman = '')
BEGIN
	SELECT * INTO #empl20 FROM (
		--S=ALL
		SELECT a.EmployeeID, a.Position, a.TeamLeader FROM HrEmployee a WHERE a.Department ='SALES'
		AND a.CompanyCode = @CompanyCode AND  a.Department ='SALES'
		AND a.Position = 'S'
		AND a.PersonnelStatus = '1' AND
		a.TeamLeader = @SalesHead
	)#empl20

	SELECT * INTO #t20 FROM (
		SELECT
			f.BranchName OutletName, a.InquiryNumber, a.NamaProspek Pelanggan, a.AlamatProspek, a.TelpRumah, a.NamaPerusahaan, 
			a.AlamatPerusahaan, a.Handphone, a.InquiryDate, a.TipeKendaraan, a.Variant, a.Transmisi, b.RefferenceDesc1 Warna, 
			a.PerolehanData, c.EmployeeName Employee, d.EmployeeName Supervisor, e.NextFollowUpDate, a.LastProgress,a.LastUpdateStatus, 
			a.SPKDate, a.LostCaseDate, e.ActivityDetail
			FROM PmKDP a
		LEFT JOIN OmMstRefference b
			ON b.CompanyCode = a.CompanyCode AND b.RefferenceType='COLO' AND b.RefferenceCode=a.ColourCode
		LEFT JOIN HrEmployee c
			ON c.CompanyCode = a.CompanyCode AND c.EmployeeID = a.EmployeeID
		LEFT JOIN HrEmployee d
			ON d.CompanyCode = a.CompanyCode AND d.EmployeeID = a.SpvEmployeeID
		LEFT JOIN PmActivities e
			ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode AND e.InquiryNumber=a.InquiryNumber
			AND e.ActivityID = (SELECT TOP 1 ActivityID FROM PmActivities WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode AND InquiryNumber=a.InquiryNumber ORDER BY ActivityID DESC) 
		LEFT JOIN gnMstOrganizationDtl f
			ON f.CompanyCode = a.CompanyCode AND f.BranchCode = a.BranchCode
		WHERE
			a.CompanyCode = @CompanyCode 
			AND ((CASE WHEN @BranchCode='' THEN a.BranchCode END)<>'' OR (CASE WHEN @BranchCode<>'' THEN a.BranchCode END)=@BranchCode)
			AND CONVERT(varchar(20),a.InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd AND a.EmployeeID IN (SELECT g.EmployeeID FROM #empl20 g)
	) #t20
	
	DROP TABLE #empl20
	SELECT OutletName
		,convert(varchar(50), InquiryNumber) as InquiryNumber
		,Pelanggan
		,AlamatProspek
		,TelpRumah
		,NamaPerusahaan
		,AlamatPerusahaan
		,Handphone
		,CASE(InquiryDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), InquiryDate, 106) END InquiryDate
		,TipeKendaraan
		,Variant
		,Transmisi
		,Warna
		,PerolehanData
		,Employee
		,Supervisor
		,CASE(NextFollowUpDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), NextFollowUpDate, 106) END NextFollowUpDate
		,LastProgress
		,LastUpdateStatus
		,CASE(SPKDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), SPKDate, 106) END SPKDate
		,CASE(LostCaseDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), LostCaseDate, 106) END LostCaseDate, ActivityDetail FROM #t20 ORDER BY InquiryNumber
	DROP TABLE #t20
END
ELSE
BEGIN
	SELECT * INTO #empl30 FROM (
		SELECT a.EmployeeID, a.Position, a.TeamLeader FROM HrEmployee a WHERE a.Department ='SALES'
		AND a.CompanyCode = @CompanyCode AND  a.Department ='SALES'
		AND a.Position = 'S'
		AND a.PersonnelStatus = '1' AND
		a.EmployeeID=@Salesman
	)#empl30

	SELECT * INTO #t30 FROM (
		SELECT
			f.BranchName OutletName, a.InquiryNumber, a.NamaProspek Pelanggan, a.AlamatProspek, a.TelpRumah, a.NamaPerusahaan, 
			a.AlamatPerusahaan, a.Handphone, a.InquiryDate, a.TipeKendaraan, a.Variant, a.Transmisi, b.RefferenceDesc1 Warna, 
			a.PerolehanData, c.EmployeeName Employee, d.EmployeeName Supervisor, e.NextFollowUpDate, a.LastProgress,a.LastUpdateStatus, 
			a.SPKDate, a.LostCaseDate, e.ActivityDetail
			FROM PmKDP a
		LEFT JOIN OmMstRefference b
			ON b.CompanyCode = a.CompanyCode AND b.RefferenceType='COLO' AND b.RefferenceCode=a.ColourCode
		LEFT JOIN HrEmployee c
			ON c.CompanyCode = a.CompanyCode AND c.EmployeeID = a.EmployeeID
		LEFT JOIN HrEmployee d
			ON d.CompanyCode = a.CompanyCode AND d.EmployeeID = a.SpvEmployeeID
		LEFT JOIN PmActivities e
			ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode AND e.InquiryNumber=a.InquiryNumber
			AND e.ActivityID = (SELECT TOP 1 ActivityID FROM PmActivities WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode AND InquiryNumber=a.InquiryNumber ORDER BY ActivityID DESC) 
		LEFT JOIN gnMstOrganizationDtl f
			ON f.CompanyCode = a.CompanyCode AND f.BranchCode = a.BranchCode
		WHERE
			a.CompanyCode = @CompanyCode 
			AND ((CASE WHEN @BranchCode='' THEN a.BranchCode END)<>'' OR (CASE WHEN @BranchCode<>'' THEN a.BranchCode END)=@BranchCode)
			AND CONVERT(varchar(20),a.InquiryDate, 112) BETWEEN @PeriodBegin AND @PeriodEnd AND a.EmployeeID IN (SELECT g.EmployeeID FROM #empl30 g)
	) #t30

	DROP TABLE #empl30
	SELECT OutletName
		,convert(varchar(50), InquiryNumber) as InquiryNumber
		,Pelanggan
		,AlamatProspek
		,TelpRumah
		,NamaPerusahaan
		,AlamatPerusahaan
		,Handphone
		,CASE(InquiryDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), InquiryDate, 106) END InquiryDate
		,TipeKendaraan
		,Variant
		,Transmisi
		,Warna
		,PerolehanData
		,Employee
		,Supervisor
		,CASE(NextFollowUpDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), NextFollowUpDate, 106) END NextFollowUpDate
		,LastProgress
		,LastUpdateStatus
		,CASE(SPKDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), SPKDate, 106) END SPKDate
		,CASE(LostCaseDate) WHEN '19000101' THEN '' ELSE CONVERT(varchar(20), LostCaseDate, 106) END LostCaseDate, ActivityDetail FROM #t30 ORDER BY InquiryNumber
	DROP TABLE #t30
END
end

----
END
GO
ALTER Procedure [dbo].[uspfn_spGetSPKNoService] @CompanyCode varchar(15), @BranchCode varchar(15), @LmpNo varchar(20)  
as  
SELECT c.*,   
d.CustomerCode, d.CustomerName, d.CustomerGovName, d.Address1, d.Address2, d.Address3, d.Address4,  
d.CityCode ,e.LookUpValueName as City, d.HpNo, d.FaxNo, c.VIN, c.EngineNo, x.LmpNo, x.DocDate as LmpDate  FROM   
(  
 SELECT TOP 1 a.*   
 FROM SpTrnSLmpDtl a   
 WHERE a.companyCode =   @CompanyCode  
   AND a.branchCode    = @BranchCode  
   AND a.lmpno         = @LmpNo   
) x   
INNER JOIN spTrnSOrdHdr b ON b.CompanyCode = x.CompanyCode   
  AND b.BranchCode = x.BranchCode   
  AND b.DocNo = x.DocNo   
INNER JOIN svTrnService c ON c.CompanyCode = b.CompanyCode  
  AND c.BranchCode = b.BranchCode  
  AND c.JobOrderNo = b.UsageDocNo  
INNER JOIN GnMstCustomer d on c.CompanyCode = d.CompanyCode  
  AND c.CustomerCode = d.CustomerCode  
LEFT JOIN GnMstLookupDtl e on e.CompanyCode = d.CompanyCode  
and e.CodeID = 'City'  
and e.LookupValue = d.CityCode  
WHERE x.CompanyCode = @CompanyCode   
  AND x.BranchCode  = @BranchCode   
  AND x.Lmpno       = @LmpNo
GO
-- usprpt_QueryCustomerDealer '0','2012-1-1','2012-12-12','Cabang','6006406','6006401'
ALTER procedure [dbo].[uspfn_QueryCustomerDealer]
	@CheckDate	bit,
	@StartDate	Datetime,
	@EndDate	Datetime,
	@Area		varchar(15),
	@Dealer		varchar(15),
	@Outlet		varchar(15)
as 
if @Outlet = ''
begin
	select a.CompanyCode
		, b.DealerAbbreviation
		, a.CustomerCode
		, a.SuzukiCode
		, a.Suzuki2Code
		, a.CustomerName
		, a.CustomerGovName
		, a.Address1 + a.Address2 + a.Address3 + a.Address4 Address
		, a.ProvinceCode
		, a.ProvinceName
		, a.CityCode
		, a.CityName
		, a.ZipNo
		, a.KelurahanDesa
		, a.KecamatanDistrik
		, a.KotaKabupaten
		, a.IbuKota
		, a.PhoneNo
		, a.HPNo
		, a.FaxNo
		, a.OfficePhoneNo
		, a.Email
		, a.Gender
		, a.BirthDate
		, a.isPKP
		, a.NPWPNo
		, a.NPWPDate
		, a.SKPNo
		, a.SKPDate
		, a.CustomerType
		, a.CustomerTypeDesc
		, a.CategoryCode
		, a.CategoryDesc
		, a.Status
		, a.CustomerStatus
	from gnMstCustomerDealer a
	left join GnMstDealerMapping b on a.CompanyCode = b.DealerCode
	where  case when @CheckDate = 1 
				then convert(varchar,a.CreatedDate,112) 
				else convert(varchar,@StartDate,112) 
				end between convert(varchar,@StartDate,112) and convert(varchar,@EndDate,112) 
	  and isnull(b.Area,'')			like case when isnull(@Area,'') <> ''	then @Area		else '%%' end
	  and isnull(b.DealerCode,'')	like case when isnull(@Dealer,'') <> '' then @Dealer	else '%%' end
end
else
begin
	select a.CompanyCode
		, c.DealerAbbreviation
		, a.CustomerCode
		, a.SuzukiCode
		, a.Suzuki2Code
		, a.CustomerName
		, a.CustomerGovName
		, a.Address1 + a.Address2 + a.Address3 + a.Address4 Address
		, a.ProvinceCode
		, a.ProvinceName
		, a.CityCode
		, a.CityName
		, a.ZipNo
		, a.KelurahanDesa
		, a.KecamatanDistrik
		, a.KotaKabupaten
		, a.IbuKota
		, a.PhoneNo
		, a.HPNo
		, a.FaxNo
		, a.OfficePhoneNo
		, a.Email
		, a.Gender
		, a.BirthDate
		, a.isPKP
		, a.NPWPNo
		, a.NPWPDate
		, a.SKPNo
		, a.SKPDate
		, a.CustomerType
		, a.CustomerTypeDesc
		, a.CategoryCode
		, a.CategoryDesc
		, a.Status
		, a.CustomerStatus
	from gnMstCustomerDealer a
	left join GnMstDealerMapping c on a.CompanyCode = c.DealerCode
	where  case when @CheckDate = 1 
				then convert(varchar,a.CreatedDate,112) 
				else convert(varchar,@StartDate,112) 
				end between convert(varchar,@StartDate,112) and convert(varchar,@EndDate,112) 
	  and isnull(c.Area,'')			like case when isnull(@Area,'') <> ''	then @Area		else '%%' end
	  and isnull(c.DealerCode,'')	like case when isnull(@Dealer,'') <> '' then @Dealer	else '%%' end
	  and a.CustomerCode in (select distinct k.CustomerCode 
									from gnMstCustomerDealerProfitCenter k
									left join GnMstDealerMapping l on k.CompanyCode = l.DealerCode
									where isnull(l.Area,'')			 like case when isnull(@Area,'') <> ''	then @Area		else '%%' end
										and isnull(k.CompanyCode,'') like case when isnull(@Dealer,'') <> '' then @Dealer	else '%%' end
										and isnull(k.BranchCode,'')	 like case when isnull(@Outlet,'') <> '' then @Outlet	else '%%' end)
end

--select * from OmHstInquirySales
--select * from GnMstCustomerDealer
GO
ALTER procedure [dbo].[uspfn_LookupCustomer]
	@CompanyCode varchar(13),
	@BranchCode varchar(13)
as
begin
	SELECT distinct 
	       a.CustomerCode
		 , a.CustomerName
	     , isnull(a.Address1,'') + ' ' + isnull(a.Address2,'') + ' ' + isnull(a.Address3,'') +' ' + isnull(a.Address4,'') as Address
		 , a.Address1
		 , a.Address2
		 , a.Address3
		 , a.Address4
		 , '' as LookupValue
		 , '' as ProfitCenter
	  FROM gnMstCustomer a with(nolock, nowait)
	  left JOIN gnMstCustomerProfitCenter b with(nolock, nowait)
		ON b.CompanyCode = a.CompanyCode
	   AND b.CustomerCode = a.CustomerCode
	   AND b.BranchCode = @BranchCode
	   AND b.isBlackList = 0
	  left JOIN gnMstLookUpDtl c
		ON c.CompanyCode = a.CompanyCode
	   AND c.CodeID = 'PFCN'
	   AND c.LookupValue = b.ProfitCenterCode
	 WHERE 1 = 1
	   AND a.CompanyCode = @CompanyCode
end
GO

if object_id('usprpt_ArRpTrn013') is not null
	drop procedure usprpt_ArRpTrn013
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<BUKTI CEK SETOR>
-- =============================================

CREATE  procedure [dbo].[usprpt_ArRpTrn013] 
(
	@CompanyCode VARCHAR(15),
	@BranchCode	VARCHAR(15),
	@DocNo VARCHAR(20),
	@DocNoEnd VARCHAR(20),
	@Status VARCHAR(1),
	@Source CHAR(1)
)
AS
IF @Source = '1'
BEGIN
	SELECT a.CompanyCode,a.BranchCode,a.DocNo,a.DocDate,
	a.BankCode,d.BankName,b.GiroCekNo,b.BankCodeCust,c.BankName AS BankNameCust,
	b.GiroCekDueDate,b.Amount,a.TotalGiroCek,f.LookUpValueName AS City,
	UPPER(h.SignName) AS SignName1, UPPER(h.TitleSign) AS TitleSign1,
	UPPER(i.SignName) AS SignName2, UPPER(i.TitleSign) AS TitleSign2
	FROM arTrnGiroCekSetorHdr a
		INNER JOIN arTrnGiroCekSetorDtl b
		ON a.DocNo = b.DocNo
		LEFT JOIN gnMstCustomerBank c
		ON c.CompanyCode = a.CompanyCode
		AND c.CustomerCode = b.CustomerCode
		AND c.BankCode = b.BankCodeCust
		LEFT JOIN gnMstBankCompany d
		ON d.CompanyCode = a.CompanyCode
		AND d.BranchCode = a.BranchCode
		AND d.BankCode = a.BankCode
		INNER JOIN gnMstCoProfile e
		ON e.CompanyCode = a.CompanyCode
		AND e.BranchCode = a.BranchCode
		INNER JOIN gnMstLookUpDtl f
		ON f.LookUpValue = e.CityCode
		AND f.CompanyCode = e.CompanyCode
		LEFT JOIN gnMstSIgnature h
		ON h.CompanyCode = a.CompanyCode
		AND h.BranchCode = a.BranchCode
		AND h.ProfitCenterCode = '000'
		AND h.DocumentType = Convert(varchar(3),a.DocNo)
		AND h.SeqNo = 1
		LEFT JOIN gnMstSIgnature i
		ON i.CompanyCode = a.CompanyCode
		AND i.BranchCode = a.BranchCode
		AND i.ProfitCenterCode = '000'
		AND i.DocumentType = Convert(varchar(3),a.DocNo)
		AND i.SeqNo = 2
	WHERE a.Status like '%' + @Status + '%'
	--AND b.Status in ('0','1')
	AND a.bType = '1'
	AND f.CodeID = 'CITY'
	AND a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.DocNo BETWEEN @DocNo AND @DocNoEnd
	ORDER BY a.DocNo,b.GiroCekNo
END
ELSE
BEGIN
	SELECT a.CompanyCode,a.BranchCode,a.DocNo,a.DocDate,
	a.BankCode,d.BankName,b.GiroCekNo,b.BankCodeCust,c.BankName AS BankNameCust,
	b.GiroCekDueDate,b.Amount,a.TotalGiroCek,f.LookUpValueName AS City,
	UPPER(h.SignName) AS SignName1, UPPER(h.TitleSign) AS TitleSign1,
	UPPER(i.SignName) AS SignName2, UPPER(i.TitleSign) AS TitleSign2
	FROM arTrnGiroCekSetorHdr a
		INNER JOIN arTrnGiroCekSetorDtl b
		ON a.DocNo = b.DocNo
		LEFT JOIN gnMstCustomerBank c
		ON c.CompanyCode = a.CompanyCode
		AND c.CustomerCode = b.CustomerCode
		AND c.BankCode = b.BankCodeCust
		LEFT JOIN gnMstBankCompany d
		ON d.CompanyCode = a.CompanyCode
		AND d.BranchCode = a.BranchCode
		AND d.BankCode = a.BankCode
		INNER JOIN gnMstCoProfile e
		ON e.CompanyCode = a.CompanyCode
		AND e.BranchCode = a.BranchCode
		INNER JOIN gnMstLookUpDtl f
		ON f.LookUpValue = e.CityCode
		AND f.CompanyCode = e.CompanyCode
		LEFT JOIN gnMstSIgnature h
		ON h.CompanyCode = a.CompanyCode
		AND h.BranchCode = a.BranchCode
		AND h.ProfitCenterCode = '000'
		AND h.DocumentType = Convert(varchar(3),a.DocNo)
		AND h.SeqNo = 1
		LEFT JOIN gnMstSIgnature i
		ON i.CompanyCode = a.CompanyCode
		AND i.BranchCode = a.BranchCode
		AND i.ProfitCenterCode = '000'
		AND i.DocumentType = Convert(varchar(3),a.DocNo)
		AND i.SeqNo = 2
	WHERE --a.Status = '0'
	--AND b.Status in ('0','1')
--	AND 
a.bType = '1'
	AND f.CodeID = 'CITY'
	AND a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.DocNo BETWEEN @DocNo AND @DocNoEnd
	ORDER BY a.DocNo,b.GiroCekNo
END
GO
ALTER procedure [dbo].[uspfn_CheckChassisNoMatch]
	@CompanyCode varchar(25),
	@BranchCode varchar(25),
	@SONumber varchar(50)
as

begin
	declare @CountSOVin int;
	declare @CountSOModel int;

	set @CountSOVin = (
		select count(a.SONo)
		  from omTrSalesSOVin a
		 where a.CompanyCode = @CompanyCode
		   and a.BranchCode = @BranchCode
		   and a.SONo = @SONumber
		   and a.ChassisNo != 0
	);

	set @CountSOModel = (
		select SUM(QuantitySO) 
		  from omTrSalesSOModel a
		 where a.CompanyCode = @CompanyCode
		   and a.BranchCode = @BranchCode
		   and a.SONo = @SONumber
	);

	if @CountSOModel = 0
		select convert(bit, 0) as Status;
	if @CountSOModel = @CountSOVin
		select convert(bit, 1) as Status;
	else
		select convert(bit, 0) as Status
end
GO
ALTER procedure [dbo].[sp_spCategoryCodeview] ( @CompanyCode varchar(10))

		 as
		 
		    select 
                a.LookupValue 'CategoryCode', a.LookupValueName 'CategoryName', a.CompanyCode
            from 
                gnMstLookupdtl a
				            where 
                          
                a.CodeID='CSCT'  and a.CompanyCode=@CompanyCode
GO
ALTER procedure [dbo].[uspfn_GetCustomerByProfitCenterCodeId]  
@CompanyCode varchar(15),  
@BranchCode varchar(15),  
@ProfitCenterCode varchar(15)  
as  
SELECT a.CustomerCode, a.CustomerName  
     , a.Address1 + ' ' + a.Address2 + ' ' + a.Address3 +' ' + a.Address4 as Address, 
     a.Address1, a.Address2, a.Address3, a.Address4  
  , c.LookupValue, c.LookUpValueName as ProfitCenter  
     , b.Salesman  
  FROM gnMstCustomer a with(nolock, nowait)  
 INNER JOIN gnMstCustomerProfitCenter b with(nolock, nowait)  
 ON b.CompanyCode = a.CompanyCode  
   AND b.CustomerCode = a.CustomerCode  
 INNER JOIN gnMstLookUpDtl c  
 ON c.CompanyCode = a.CompanyCode  
   AND c.CodeID = 'PFCN'  
   AND c.LookupValue = b.ProfitCenterCode  
 WHERE 1 = 1  
   AND a.CompanyCode = @CompanyCode  
   AND b.BranchCode = @BranchCode 
   AND b.ProfitCenterCode = @ProfitCenterCode  
   AND b.isBlackList = 0  
   AND c.LookupValue= b.ProfitCenterCode   
 AND a.Status = 1 order by a.CustomerCode
GO
ALTER procedure [dbo].[uspfn_SvTrnServiceSelectDtl]
	@CompanyCode varchar(15),
	@BranchCode  varchar(15),
	@ProductType varchar(15),
	@ServiceNo   bigint
as      

begin

declare @t1 as table
(
 TaskPartSeq int
,BillType varchar(10)
,BillTypeDesc varchar(max)
,TypeOfGoods varchar(10)
,TypeOfGoodsDesc varchar(70)
,TaskPartNo varchar(50)
,OprHourDemandQty numeric(18,2)
,SupplyQty numeric(18,2)
,ReturnQty numeric(18,2)
,OprRetailPrice numeric(18,2)
,OprRetailPriceTotal numeric(18,2)
,SupplySlipNo varchar(20)
,TaskPartDesc varchar(max)
,BasicModel varchar(15)
,JobType varchar(15)
,IsSubCon bit
,Status varchar(10)
,GTGO varchar(10)
,DiscPct numeric(18,2)
,QtyAvail numeric(18,2)
,TaskStatus varchar(50)
)

declare @JobOrderNo varchar(15)
    set @JobOrderNo = isnull((select JobOrderNo from svTrnService where CompanyCode = @CompanyCode and BranchCode = @BranchCode and ProductType = @ProductType and ServiceNo = @ServiceNo), '')

insert into @t1
select 0 TaskSeq 
      ,a.BillType
      ,b.Description BillTypeDesc
      ,a.TypeOfGoods
      ,case a.TypeOfGoods when 'L' then 'Labor (Jasa)' end TypeOfGoodsDesc
      ,a.OperationNo
      ,a.OperationHour
      ,0 OperationHourSupply
      ,0 OperationHourReturn
      ,a.OperationCost
      ,a.OperationHour * a.OperationCost * (100 - a.DiscPct) * 0.01 OprRetailPriceTotal
      ,'' SupplySlipNo
      ,rtrim(d.Description) OperationDesc 
	  ,c.BasicModel
	  ,c.JobType
	  ,a.IsSubCon
	  ,(select min(MechanicStatus) from svTrnSrvMechanic 
		where CompanyCode = a.CompanyCode 
			and BranchCode = a.BranchCode
			and ProductType = a.ProductType
			and ServiceNo = a.ServiceNo
			and OperationNo = a.OperationNo) MechanicStatus
	  ,''
	  ,a.DiscPct
	  ,0
      ,case(a.TaskStatus)
          when 0 then 'Open Task'
          when 1 then 'Work In Progress'
          when 2 then 'Close Task'
          when 9 then 'Cancel'
       end TaskStatus
  from svTrnSrvTask a with (nolock,nowait)
  left join svMstBillingType b with (nolock,nowait)
    on b.CompanyCode = a.CompanyCode
   and b.BillType = a.BillType
  left join svTrnService c with (nolock,nowait)
    on c.CompanyCode = a.CompanyCode
   and c.BranchCode = a.BranchCode
   and c.ProductType = a.ProductType
   and c.ServiceNo = a.ServiceNo
  left join svMstTask d with (nolock,nowait)
    on d.CompanyCode = a.CompanyCode
   and d.ProductType = a.ProductType
   and d.BasicModel = c.BasicModel
   and (d.JobType = c.JobType or d.JobType = 'CLAIM' or d.JobType = 'OTHER')
   and d.OperationNo = a.OperationNo 
 where 1 = 1
   and a.CompanyCode = @CompanyCode
   and a.BranchCode  = @BranchCode
   and a.ProductType = @ProductType
   and a.ServiceNo   = @ServiceNo

declare @tblTemp as table
(
	PartNo  varchar(20),
	QtyAvail decimal
)

declare @DealerCode as varchar(2)
declare @CompanyMD as varchar(15)
declare @BranchMD as varchar(15)

set @DealerCode = 'MD'
set @CompanyMD = (select CompanyMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)
set @BranchMD = (select BranchMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)

if (@CompanyCode != @CompanyMD and @BranchCode != @BranchMD)
begin	
	set @DealerCode = 'SD'
	declare @DbName as varchar(50)
	set @DbName = (select DbMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)
	
	declare @QueryTemp as varchar(max)
	
	set @QueryTemp = 'select 
			 distinct
			 a.PartNo
			 , (b.OnHand - (b.AllocationSP + b.AllocationSR + b.AllocationSL) - (b.ReservedSP + b.ReservedSR + b.ReservedSL)) 
		 from svTrnSrvItem a	 
		 left join ' + @DbName + '..spMstItems b on 
			a.PartNo = b.PartNo 
			and b.CompanyCode = ''' + @CompanyMD + '''
			and b.BranchCode = ''' + @BranchMD + '''
		 where a.CompanyCode = ''' + @CompanyCode + '''
		   and a.BranchCode  = ''' + @BranchCode + '''
		   and a.ProductType = ''' + @ProductType + '''
		   and a.ServiceNo   = ' + convert(varchar,@ServiceNo) + ''		   
				
		--print(@QueryTemp)		
		insert into @tblTemp		
		exec (@QueryTemp)		
end

insert into @t1
select a.PartSeq
      ,a.BillType
      ,b.Description BillTypeDesc
      ,a.TypeOfGoods
      ,rtrim(c.LookupValueName) + case lower(g.ParaValue) when 'sparepart' then ' (SPR)' else ' (MTR)' end TypeOfGoodsDesc
      ,a.PartNo
      ,a.DemandQty
      ,a.SupplyQty
      ,a.ReturnQty
      ,a.RetailPrice
      ,(case isnull(a.SupplyQty, 0)
         when 0 then (isnull(a.DemandQty, 0) * isnull(a.RetailPrice, 0))
         else ((isnull(a.SupplyQty, 0) - isnull(a.ReturnQty, 0)) * isnull(a.RetailPrice, 0))
        end) * (100.0 - a.DiscPct) * 0.01
        as RetailPriceTotal
      ,a.SupplySlipNo
      ,rtrim(d.PartName) OperationDesc 
	  ,''
	  ,''
	  ,0
	  ,''
	  ,g.ParaValue
	  ,a.DiscPct
	  ,case when @DealerCode = 'MD' then (i.OnHand - (i.AllocationSP + i.AllocationSR + i.AllocationSL) - (i.ReservedSP + i.ReservedSR + i.ReservedSL)) else e.QtyAvail end QtyAvail
	  ,''
  from svTrnSrvItem a with (nolock,nowait)
  left join svMstBillingType b with (nolock,nowait)
    on b.CompanyCode = a.CompanyCode
   and b.BillType = a.BillType
  left join gnMstLookupDtl c with (nolock,nowait)
    on c.CompanyCode = a.CompanyCode
   and c.CodeID = 'TPGO'
   and c.LookupValue = TypeOfGoods
  left join spMstItemInfo d with (nolock,nowait)
    on d.CompanyCode = a.CompanyCode
   and d.PartNo = a.PartNo
  left join gnMstLookupDtl g with (nolock,nowait)
    on g.CompanyCode = a.CompanyCode
   and g.CodeID = 'GTGO'
   and g.LookupValue = TypeOfGoods
  left join svTrnService s with (nolock,nowait)
    on s.CompanyCode = a.CompanyCode
   and s.BranchCode = a.BranchCode
   and s.ServiceNo = a.ServiceNo
  left join spMstItems i
    on i.CompanyCode = a.CompanyCode 
   and i.BranchCode = a.BranchCode
   and i.ProductType = a.ProductType
   and i.PartNo = a.PartNo
   left join @tblTemp e
    on e.PartNo = a.PartNo
 where 1 = 1
   and a.CompanyCode = @CompanyCode
   and a.BranchCode  = @BranchCode
   and a.ProductType = @ProductType
   and a.ServiceNo   = @ServiceNo

select * into #t1 from (
select 
 a.* 
,P01 = isnull((
	select count(*) from spTrnSORDDtl with(nowait,nolock)
	 where 1 = 1
	   and CompanyCode = @CompanyCode
	   and BranchCode  = @BranchCode
	   and PartNo      = a.TaskPartNo
	   and DocNo in (select aa.DocNo
					   from spTrnSORDHdr aa with(nowait,nolock), svTrnService bb with(nowait,nolock)
					  where 1 = 1
						and bb.CompanyCode = aa.CompanyCode
						and bb.BranchCode  = aa.BranchCode
						and bb.JobOrderNo  = aa.UsageDocNo
						and isnull(bb.JobOrderNo, '') <> ''
						and aa.CompanyCode = @CompanyCode
						and aa.BranchCode  = @BranchCode
						and bb.ServiceNo   = @ServiceNo
					 )
	),0)
,P02 = isnull((
	select count(DocNo) from spTrnSOSupply with(nowait,nolock)
	 where 1 = 1
	   and CompanyCode = @CompanyCode
	   and BranchCode  = @BranchCode
	   and PartNo = a.TaskPartNo
	   and DocNo  = a.SupplySlipNo
	),0)
,P03 = isnull((
	select count(bb.PickingSlipNo) from spTrnSOSupply aa with(nowait,nolock)
	  left join spTrnSPickingHdr bb with(nowait,nolock) on 1 = 1
	   and bb.CompanyCode   = aa.CompanyCode
	   and bb.BranchCode    = aa.BranchCode
	   and bb.PickingSlipNo = aa.PickingSlipNo
	 where 1 = 1
	   and aa.CompanyCode = @CompanyCode
	   and aa.BranchCode  = @BranchCode
	   and aa.PartNo = a.TaskPartNo
	   and aa.DocNo  = a.SupplySlipNo
	   and isnull(aa.PickingSlipNo, '') <> ''
	),0)
,P04 = isnull((
	select count(bb.PickingSlipNo) from spTrnSOSupply aa with(nowait,nolock)
	  left join spTrnSPickingHdr bb with(nowait,nolock) on 1 = 1
	   and bb.CompanyCode   = aa.CompanyCode
	   and bb.BranchCode    = aa.BranchCode
	   and bb.PickingSlipNo = aa.PickingSlipNo
	   and bb.Status >= '2'
	 where 1 = 1
	   and aa.CompanyCode = @CompanyCode
	   and aa.BranchCode  = @BranchCode
	   and aa.PartNo = a.TaskPartNo
	   and aa.DocNo  = a.SupplySlipNo
	   and isnull(aa.PickingSlipNo, '') <> ''
	),0)
,P05 = isnull((
	select count(bb.PickingSlipNo) from spTrnSOSupply aa with(nowait,nolock)
	  left join spTrnSLmpHdr bb with(nowait,nolock) on 1 = 1
	   and bb.CompanyCode   = aa.CompanyCode
	   and bb.BranchCode    = aa.BranchCode
	   and bb.PickingSlipNo = aa.PickingSlipNo
	 where 1 = 1
	   and aa.CompanyCode = @CompanyCode
	   and aa.BranchCode  = @BranchCode
	   and aa.PartNo = a.TaskPartNo
	   and aa.DocNo  = a.SupplySlipNo
	   and isnull(aa.PickingSlipNo, '') <> ''
	),0)
,P06 = isnull((
	select count(bb.PickingSlipNo) from spTrnSOSupply aa with(nowait,nolock)
	  left join spTrnSLmpHdr bb with(nowait,nolock) on 1 = 1
	   and bb.CompanyCode   = aa.CompanyCode
	   and bb.BranchCode    = aa.BranchCode
	   and bb.PickingSlipNo = aa.PickingSlipNo
	   and bb.Status >= '1'
	 where 1 = 1
	   and aa.CompanyCode = @CompanyCode
	   and aa.BranchCode  = @BranchCode
	   and aa.PartNo = a.TaskPartNo
	   and aa.DocNo  = a.SupplySlipNo
	   and isnull(aa.PickingSlipNo, '') <> ''
	),0)
,S01 = isnull((
	select count(bb.PONo) from svTrnPoSubCon aa with(nowait,nolock)
	  left join svTrnPoSubConTask bb with(nowait,nolock) on 1 = 1
	   and bb.CompanyCode   = aa.CompanyCode
	   and bb.BranchCode    = aa.BranchCode
	   and bb.ProductType   = aa.ProductType
	   and bb.PONo          = aa.PONo
	 where 1 = 1
	   and aa.CompanyCode = @CompanyCode
	   and aa.BranchCode  = @BranchCode
	   and aa.ProductType = @ProductType
	   and aa.JobOrderNo  = @JobOrderNo
	   and aa.JobOrderNo <> ''
	   and aa.BasicModel  = a.BasicModel
	   and aa.JobType     = a.JobType
	   and bb.OperationNo = a.TaskPartNo
	),0)
,S02 = isnull((
	select count(bb.PONo) from svTrnPoSubCon aa with(nowait,nolock)
	  left join svTrnPoSubConTask bb with(nowait,nolock) on 1 = 1
	   and bb.CompanyCode   = aa.CompanyCode
	   and bb.BranchCode    = aa.BranchCode
	   and bb.ProductType   = aa.ProductType
	   and bb.PONo          = aa.PONo
	 where 1 = 1
	   and aa.CompanyCode = @CompanyCode
	   and aa.BranchCode  = @BranchCode
	   and aa.ProductType = @ProductType
	   and aa.JobOrderNo  = @JobOrderNo
	   and aa.JobOrderNo <> ''
	   and aa.BasicModel  = a.BasicModel
	   and aa.JobType     = a.JobType
	   and bb.OperationNo = a.TaskPartNo
	   and aa.POStatus >= '2'
	),0)
,S03 = isnull((
	select count(bb.PONo) from svTrnPoSubCon aa with(nowait,nolock)
	  left join svTrnPoSubConTask bb with(nowait,nolock) on 1 = 1
	   and bb.CompanyCode   = aa.CompanyCode
	   and bb.BranchCode    = aa.BranchCode
	   and bb.ProductType   = aa.ProductType
	   and bb.PONo          = aa.PONo
	 where 1 = 1
	   and aa.CompanyCode = @CompanyCode
	   and aa.BranchCode  = @BranchCode
	   and aa.ProductType = @ProductType
	   and aa.JobOrderNo  = @JobOrderNo
	   and aa.JobOrderNo <> ''
	   and aa.BasicModel  = a.BasicModel
	   and aa.JobType     = a.JobType
	   and bb.OperationNo = a.TaskPartNo
	   and aa.POStatus >= '3'
	),0)
,S04 = isnull((
	select count(bb.PONo) from svTrnPoSubCon aa with(nowait,nolock)
	  left join svTrnPoSubConTask bb with(nowait,nolock) on 1 = 1
	   and bb.CompanyCode   = aa.CompanyCode
	   and bb.BranchCode    = aa.BranchCode
	   and bb.ProductType   = aa.ProductType
	   and bb.PONo          = aa.PONo
	 where 1 = 1
	   and aa.CompanyCode = @CompanyCode
	   and aa.BranchCode  = @BranchCode
	   and aa.ProductType = @ProductType
	   and aa.JobOrderNo  = @JobOrderNo
	   and aa.JobOrderNo <> ''
	   and aa.BasicModel  = a.BasicModel
	   and aa.JobType     = a.JobType
	   and bb.OperationNo = a.TaskPartNo
	   and aa.POStatus >= '4'
	),0)
,S05 = isnull((
	select count(bb.PONo) from svTrnPoSubCon aa with(nowait,nolock)
	  left join svTrnPoSubConTask bb with(nowait,nolock) on 1 = 1
	   and bb.CompanyCode   = aa.CompanyCode
	   and bb.BranchCode    = aa.BranchCode
	   and bb.ProductType   = aa.ProductType
	   and bb.PONo          = aa.PONo
	 where 1 = 1
	   and aa.CompanyCode = @CompanyCode
	   and aa.BranchCode  = @BranchCode
	   and aa.ProductType = @ProductType
	   and aa.JobOrderNo  = @JobOrderNo
	   and aa.JobOrderNo <> ''
	   and aa.BasicModel  = a.BasicModel
	   and aa.JobType     = a.JobType
	   and bb.OperationNo = a.TaskPartNo
	   and aa.POStatus >= '5'
	),0)
from @t1 a
)#t1

update #t1
   set Status = (case P01 when 0 then 0 else 1 end)
			  + (case P02 when 0 then 0 else 1 end)
			  + (case P03 when 0 then 0 else 1 end)
			  + (case P04 when 0 then 0 else 1 end)
			  + (case P05 when 0 then 0 else 1 end)
			  + (case P06 when 0 then 0 else 1 end)
 where TypeOfGoods <> 'L'

update #t1
   set Status = (case S01 when 0 then 0 else 1 end)
			  + (case S02 when 0 then 0 else 1 end)
			  + (case S03 when 0 then 0 else 1 end)
			  + (case S04 when 0 then 0 else 1 end)
			  + (case S05 when 0 then 0 else 1 end)
 where TypeOfGoods = 'L' and IsSubCon = '1'

select
 row_number() over (order by TaskPartSeq) SeqNo
,TaskPartSeq
,BillType
,BillTypeDesc
,TypeOfGoods
,TypeOfGoodsDesc
,case isnull(TypeOfGoods, '') when 'L' then 'L' else '0' end ItemType
,TaskPartNo
,OprHourDemandQty
,SupplyQty
,ReturnQty
,OprRetailPrice
,OprRetailPriceTotal
,isnull(SupplySlipNo, '')SupplySlipNo
,TaskPartDesc
,Status
,StatusDesc = 
 case IsSubCon
	when 0 then
		 case TypeOfGoods 
			when 'L' then
				case Status
					when '0' then '0 - Open Task'
					when '1' then '1 - Work In Progress'
					when '2' then '2 - Finish Task'
				end
			else
				case Status
					when '1' then '1 - Entry Stock'
					when '2' then '2 - Alokasi Stock'
					when '3' then '3 - Generate PL'
					when '4' then '4 - Generate Bill'
					when '5' then '5 - Lampiran'
					when '6' then '6 - Print Lampiran'
				end
		 end	
	else
		case Status
			when '1' then '1 - Draft PO'
			when '2' then '2 - Generate PO'
			when '3' then '3 - Draft Receiving'
			when '4' then '4 - Cancel Receiving'
			when '5' then '5 - Receiving PO'
		end
 end
,QtyAvail
,(case when (SupplyQty > 0) then (SupplyQty - ReturnQty) else OprHourDemandQty end) * OprRetailPrice Price
,DiscPct
,OprRetailPriceTotal as PriceNet
,IsSubCon
,TaskStatus
,@ServiceNo ServiceNo
from #t1

drop table #t1

end
GO
-- =============================================
-- Author:		<Krida>
-- Create date: <15 Oktober 2008>
-- Description:	<Lampiran Faktur Pajak>

-- Modify By:	<Aryo>
-- MOdify Date:	<13 Januari 2009>
-- =============================================

ALTER procedure [dbo].[usprpt_SpRpTrn011A]
--declare
	@CompanyCode	VARCHAR (15),
	@BranchCode		VARCHAR (15),
	@FPJDateStart	DATETIME,
	@FPJDateEnd		DATETIME,
	@FPJNoStart		VARCHAR (25),
	@FPJNoEnd		VARCHAR (25),
	@ProfitCenter	VARCHAR (15)

--set @CompanyCode = '6115204001'
--set @BranchCode	= '6115204301'
--set @FPJDateStart = '20140801'
--set @FPJDateEnd	= '20141016'
--set @FPJNoStart	= '010.000-14.00000001'
--set @FPJNoEnd = '010.000-14.00000001'
--set @ProfitCenter = '300'

AS
BEGIN

-- parameter use address holding or not
declare @IsHoldingAddr as bit
if (select count(*) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='FPJADDR') > 0
	set @IsHoldingAddr = (select convert(numeric,LookUpValue) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='FPJADDR')
else
	set @IsHoldingAddr = 0

select * into #t1 from(
SELECT 
	c.FPJNo,
	c.FPJDate,
	c.InvoiceNo,
	c.PickingSlipNo, 
	c.FpjGovNo as fakturFPJGovNo,
	c.CustomerCode, 
	c.DueDate,
	c.TotDiscAmt,
	c.TotDppAmt, 
	c.TotPPNAmt,
	c.TotFinalSalesAmt,
	x.CustomerName + ' / ' + d.CustomerName + ' [' + c.CustomerCode + ']'as CustomerName, 
	x.Address1, 
	x.Address2, 
	x.Address3, 
	x.Address4, 
	d.PhoneNo, 
	d.FaxNo,
	CASE WHEN c.ISPKP = '1' THEN d.NPWPNo ELSE '-' END NPWPNo, 
	a.PartNo, 
	a.PartNoOriginal,
	a.QtyBill,
	a.RetailPrice,
	a.DiscPct,
	a.DiscAmt, 
	a.NetSalesAmt, 
	b.PartName,
	e.LookUpValueName  TOPC, 
	h.LookUpValueName  CITY,
	i.TaxPct, 
	RIGHT(replicate('0', 2) + convert(varchar(2), c.PrintSeq), 2) PrintSeq,	
	c.TypeOfGoods,
	f.CompanyGovName CompanyName
	,case when @IsHoldingAddr=0 then f.Address1
		else (select Address1 from gnMstCoProfile where CompanyCode=@CompanyCode
			and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
	end as AddressCo1
	,case when @IsHoldingAddr=0 then f.Address2
		else (select Address2 from gnMstCoProfile where CompanyCode=@CompanyCode
			and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
	end as AddressCo2
	,case when @IsHoldingAddr=0 then f.Address3
		else (select Address3 from gnMstCoProfile where CompanyCode=@CompanyCode
			and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
	end as AddressCo3,
	k.Remark
--	UPPER (j.SignName)  SignName, 
--	UPPER (j.TitleSign)  TitleSign
	, (SELECT LookUpValueName FROM gnMstLookUpDtl WHERE CompanyCode = a.CompanyCode AND CodeID = 'NOTE' AND LookUpValue = 'SPFP01') Note1
	, (SELECT LookUpValueName FROM gnMstLookUpDtl WHERE CompanyCode = a.CompanyCode AND CodeID = 'NOTE' AND LookUpValue = 'SPFP02') Note2
	--, (SELECT LookUpValueName FROM gnMstLookUpDtl WHERE CompanyCode = a.CompanyCode AND CodeID = 'NOTE' AND LookUpValue = 'SPFP03') Note3
	, case when isnull((select ParaValue 
				   from gnMstLookUpDtl 
				  where CompanyCode = a.CompanyCode 
					and CodeID = 'SHN_INFO' 
				    and LookUpValue = 'SPAREPART'), 1) = 1 
	   then (SELECT LookUpValueName 
			   FROM gnMstLookUpDtl 
			  WHERE CompanyCode = a.CompanyCode 
			    AND CodeID = 'NOTE' 
			    AND LookUpValue = 'SPFP03') 
	   else '' 
	   end Note3
FROM                         
(
	SELECT 
		CompanyCode,
        BranchCode, 
		FPJNo,
		PartNo,
		PartNoOriginal,
		RetailPrice,
		DiscPct,
		SUM(DiscAmt) AS DiscAmt,
		SUM(NetSalesAmt) AS NetSalesAmt,
		SUM(QtyBill) AS QtyBill
	FROM SpTrnSFPJDtl WITH (NOLOCK, NOWAIT)
	WHERE 
		CompanyCode = @CompanyCode
		AND BranchCode = @BranchCode
	GROUP BY 
		CompanyCode, BranchCode, FPJNo, PartNo, PartNoOriginal, RetailPrice, DiscPct   
) a 
	INNER JOIN SpMstItemInfo b WITH (NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
		AND a.PartNo = b.PartNo
    INNER JOIN SpTrnSFPJHdr c WITH (NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
      AND a.BranchCode = c.BranchCode
      AND a.FPJNo = c.FPJNo
    INNER JOIN GnMstCustomer d WITH (NOLOCK, NOWAIT) ON c.CompanyCode = d.CompanyCode
       AND c.CustomerCode = d.CustomerCode
	INNER JOIN SpTrnSFPJInfo x WITH (NOLOCK, NOWAIT) ON c.CompanyCode = x.CompanyCode 
	   AND c.BranchCode = x.BranchCode
	   AND c.FPJNo = x.FPJNo
	INNER JOIN GnMstLookUpDtl e WITH (NOLOCK, NOWAIT) ON c.CompanyCode = e.CompanyCode
		AND c.TOPCode = e.LookUpValue
		AND e.CodeID = 'TOPC'
	INNER JOIN GnMstCoProfile f WITH (NOLOCK, NOWAIT) ON a.CompanyCode = f.CompanyCode
		AND a.BranchCode = f.BranchCode
	LEFT JOIN GnMstLookUpDtl h WITH (NOLOCK, NOWAIT) ON f.CompanyCode = h.CompanyCode
		AND f.CItyCode = h.LookUpValue
		AND h.CodeID = 'CITY'
	INNER JOIN GnMstTax i WITH (NOLOCK, NOWAIT) ON a.CompanyCode = i.CompanyCode 
		AND i.TaxCode = 'PPN'
--	LEFT JOIN GnMstSignature j WITH (NOLOCK, NOWAIT) ON a.CompanyCode = j.CompanyCode
--		AND a.BranchCode = j.BranchCode
--		AND j.ProfitCenterCode = @ProfitCenter
--		AND j.DocumentType = CONVERT (VARCHAR (3), a.FPJNo)
	LEFT JOIN spTrnSPickingHdr k ON a.CompanyCode = k.CompanyCode
		AND a.BranchCode = k.BranchCode
		AND c.PickingSlipNo = k.PickingSlipNo
WHERE
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND c.IsPKP = 1
	AND CONVERT(VARCHAR, c.FPJSignature, 112) BETWEEN @FPJDateStart AND @FPJDateEnd
	AND ((CASE WHEN @FPJNoStart = '' THEN c.FPJGovNo END) <> ''
		OR (CASE WHEN @FPJNoStart <> '' THEN c.FPJGovNo END) BETWEEN @FPJNoStart AND @FPJNoEnd)
) #t1		
ORDER BY
	FPJNo, PartNo

--select * from #t1

select 
	case when (select count(FPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 FPJNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by FPJNo) + '-' + (select substring((select top 1 FPJNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by FPJNo desc), 8, 7)) else (select FPJNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end FPJNo, 
	case when (select count(FPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 FPJDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by FPJNo desc) else (select FPJDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end FPJDate, 
	case when (select count(FPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 InvoiceNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by FPJNo) + '-' + (select substring((select top 1 InvoiceNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by FPJNo desc), 8, 7)) else (select InvoiceNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end InvoiceNo,
	case when (select count(FPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 PickingSlipNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by FPJNo) + '-' + (select substring((select top 1 PickingSlipNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by FPJNo desc), 8, 7)) else (select PickingSlipNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end PickingSlipNo,
	fakturFPJGovNo, CustomerCode, 
	case when (select count(FPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 DueDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by FPJNo desc) else (select DueDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end DueDate, 
	case when (select count(FPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(DiscAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else sum(TotDiscAmt) end TotDiscAmt, 
	case when (select count(FPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(NetSalesAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else sum(TotDPPAmt) end TotDPPAmt, 
	case when (select count(FPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then ((select sum(NetSalesAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) * 0.1) else sum(TotPPNAmt) end TotPPNAmt,
	case when (select count(FPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then ((select sum(NetSalesAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) + ((select sum(NetSalesAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) * 0.1)) else sum(TotFinalSalesAmt) end TotFinalSalesAmt, 
	CustomerName, Address1, Address2, Address3, Address4, PhoneNo, FaxNo, NPWPNo, PartNo, PartNoOriginal, sum(QtyBill) QtyBill, sum(RetailPrice) RetailPrice, 
	sum(DiscPct) DiscPct, sum(DiscAmt) DiscAmt, sum(NetSalesAmt) NetSalesAmt, TOPC, CITY, TaxPct, RIGHT(replicate('0', 2) + convert(varchar(2), 0), 2) PrintSeq, 
	' ' TypeOfGoods, CompanyName, AddressCo1, AddressCo2, AddressCo3, 
	case when (select count(FPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then '' else (select Remark from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end Remark, 
	Note1, Note2, Note3
	from (
select distinct FPJNo, FPJDate, InvoiceNo, PickingSlipNo, fakturFPJGovNo, CustomerCode, DueDate, TotDiscAmt, TotDPPAmt, TotPPNAmt, TotFinalSalesAmt,
	CustomerName, Address1, Address2, Address3, Address4, PhoneNo, FaxNo, NPWPNo, PartNo, PartNoOriginal, sum(QtyBill) QtyBill, sum(RetailPrice) RetailPrice, 
	sum(DiscPct) DiscPct, sum(DiscAmt) DiscAmt, sum(NetSalesAmt) NetSalesAmt, TOPC, CITY, TaxPct, CompanyName, AddressCo1, AddressCo2, AddressCo3, Note1, 
	Note2, Note3
from #t1 a
group by FPJNo, FPJDate, InvoiceNo, PickingSlipNo, fakturFPJGovNo, CustomerCode, DueDate, TotDiscAmt, TotDPPAmt, TotPPNAmt, TotFinalSalesAmt,
	CustomerName, Address1, Address2, Address3, Address4, PhoneNo, FaxNo, NPWPNo, TOPC, CITY, TaxPct, CompanyName, AddressCo1, AddressCo2, AddressCo3, 
	Note1, Note2, Note3, PartNo, PartNoOriginal
) a
group by fakturFPJGovNo, CustomerCode, CustomerName, Address1, Address2, Address3, Address4, PhoneNo, FaxNo, NPWPNo,PartNo, PartNoOriginal,
	TOPC, CITY, TaxPct, CompanyName, AddressCo1, AddressCo2, AddressCo3, --Remark, 
	Note1, Note2, Note3

drop table #t1
	
END
GO
---------------------------------------------------------
-- AUTOMATIC ORDER SPAREPART, by Hasim... 24 January 2014
---------------------------------------------------------
-- uspfn_spAutomaticOrderSparepart '6006406','6006406'
--
ALTER procedure [dbo].[uspfn_spAutomaticOrderSparepart]
	@CompanyCode		varchar(15),
	@BranchCode			varchar(15)
as

BEGIN
  --declare @CompanyCode		varchar(15)
  --declare @BranchCode			varchar(15)
	declare @PartNo				varchar(20)
	declare @NewPartNo			varchar(20)
	declare @OldPart			varchar(20)
	declare @NewPart			varchar(20)
	declare @StartDate			varchar(06)
	declare @EndDate			varchar(06)
	declare @SupplierCode 		varchar(15)
	declare @SupplierCode0		varchar(15)
	declare @SupplierCode1		varchar(15)
	declare @SupplierCode2		varchar(15)
	declare @TPGO				varchar(15)
	declare @SuggorNo			varchar(15)
	declare @POSNo				varchar(15)
	declare @DocPre				varchar(15)
	declare @AOS1               varchar(50)
	declare @AOS2               varchar(50)
	declare @MessageText        varchar(50)
	declare @DocNum				integer
	declare @DocYear			integer
	declare @Counter     		integer
	declare @Switch      		integer
	declare @PeriodYear  		integer
	declare @PeriodMonth		integer
	declare @PeriodDate			date
	declare @SuggorDate			datetime
	declare @SeqNo              numeric( 3,0)
	declare @DAvgFac            numeric(07,2)
	declare @DevFac             numeric(07,2)
	declare @DiscPct			numeric(07,2)
	declare @PurchasePriceNett	numeric(18,0)
  --set @CompanyCode = '6006406'
  --set @BranchCode  = '6006406'
	set @SuggorDate  = getdate()
	set @PeriodYear  = year(getdate())
	set @PeriodMonth = month(getdate())
	set @Counter     = 0
	set @PeriodDate  = RIGHT('0000'+convert(varchar(4),@PeriodYear ),4) + '/'
                     + RIGHT('00'+convert(varchar(2),@PeriodMonth),2) + '/01'

    if isnull((select ParaValue from gnMstLookUpDtl
                where CompanyCode=@CompanyCode and CodeID='AOS' and LookUpValue='AUTO'),'0') = 0
       return

    if isnull((select ParaValue from gnMstLookUpDtl 
                where CompanyCode=@CompanyCode and CodeID='ORTP' and LookUpValue='8'),'')=''
       begin
          set @SeqNo = isnull((select max(SeqNo) from gnMstLookUpDtl where CompanyCode=@CompanyCode and CodeID='ORTP'),0) + 1
          insert into gnMstLookUpDtl
                     (CompanyCode, CodeID, LookUpValue, SeqNo, ParaValue, LookUpValueName, 
                      CreatedBy, CreatedDate, LastUpdateBy, LastUpdateDate)
               values(@CompanyCode, 'ORTP', '8', @SeqNo, '0', 'AOS (AUTOMATIC ORDER SPAREPART)',
                      'SIM',@SuggorDate,'SIM',@SuggorDate)
       end
                  
	if isnull((select top 1 1 from spTrnPSUGGORHdr
                where CompanyCode=@CompanyCode and BranchCode=@BranchCode and OrderType='8'
                  and convert(varchar,SuggorDate,111)=convert(varchar,@SuggorDate,111)),0) = 1
       return
	   
    set @DocYear     = (select isnull(DocumentYear,9988) from gnMstDocument with(nolock,nowait)
                         where CompanyCode=@CompanyCode and BranchCode=@BranchCode and DocumentType='SGR')

    if @DocYear<>YEAR(@SuggorDate) return

    set @SupplierCode0 = isnull((select ParaValue from gnMstLookupDtl
                                  where CompanyCode = @CompanyCode
	 							    and CodeID      = 'AOS'
	 							    and LookupValue = '0'),'')
    set @SupplierCode1 = isnull((select ParaValue from gnMstLookupDtl
                                  where CompanyCode = @CompanyCode
 								    and CodeID      = 'AOS'
 								    and LookupValue = '1'),'')
    set @SupplierCode2 = isnull((select ParaValue from gnMstLookupDtl
                                  where CompanyCode = @CompanyCode
 								    and CodeID      = 'AOS'
 								    and LookupValue = '2'),'')
    set @DAvgFac       = isnull((select convert(numeric(6,2),ParaValue) from gnMstLookupDtl
                                  where CompanyCode = @CompanyCode
      							    and CodeID      = 'AOS'
    								and LookupValue = 'DAVGFAC'),50.00)
    set @DevFac        = isnull((select convert(numeric(6,2),ParaValue) from gnMstLookupDtl
                                  where CompanyCode = @CompanyCode
    							    and CodeID      = 'AOS'
    								and LookupValue = 'DevFac'),0.60)
  --set @DAvgFac       = 50.00
  --set @DevFac        = 0.60

    create table #Suggor 
 	    ( [CompanyCode]		[varchar](15  ),
	      [BranchCode]    	[varchar](15  ),
	      [PartNo]        	[varchar](20  ),
	      [NewPartNo]     	[varchar](20  ),
	      [SupplierCode]  	[varchar](20  ),
	      [ProductType]   	[varchar](15  ),
	      [PartCategory]  	[varchar]( 3  ),
	      [TypeOfGoods]   	[varchar]( 5  ),
	      [MovingCode]    	[varchar](15  ),
	      [ABCClass]      	[char]   ( 1  ),
	      [OnHand]        	[numeric](12,2),
	      [OnOrder]       	[numeric](12,2),
	      [InTransit]     	[numeric](12,2),
	      [AllocationSP]  	[numeric](12,2),
	      [AllocationSR]  	[numeric](12,2),
	      [AllocationSL]  	[numeric](12,2),
	      [BackOrderSP]   	[numeric](12,2),
	      [BackOrderSR]   	[numeric](12,2),
	      [BackOrderSL]   	[numeric](12,2),
	      [ReservedSP]    	[numeric](12,2),
	      [ReservedSR]    	[numeric](12,2),
	      [ReservedSL]    	[numeric](12,2),
	      [DemandAvg]     	[numeric](15,5),
	      [OrderPoint]    	[numeric](12,0),
	      [SafetyStock]   	[numeric](12,0),
	      [AvailableQty]  	[numeric](12,2),
	      [OrderUnit]     	[numeric](12,2),
	      [PurchasePrice] 	[numeric](18,0),
	      [CostPrice]     	[numeric](18,0)
        )

    insert into #Suggor
              ( CompanyCode, BranchCode, PartNo, NewPartNo, SupplierCode, ProductType, PartCategory, 
	 		    TypeOfGoods, MovingCode, ABCClass, OnHand, OnOrder, InTransit, AllocationSP, AllocationSR, 
	 		    AllocationSL, BackOrderSP, BackOrderSR, BackOrderSL, ReservedSP, ReservedSR, ReservedSL, 
	 		    DemandAvg, OrderPoint, SafetyStock, AvailableQty, OrderUnit, PurchasePrice, CostPrice)
         select i.CompanyCode, i.BranchCode, i.PartNo, i.PartNo NewPartNo, f.SupplierCode, i.ProductType, 
		        i.PartCategory, i.TypeOfGoods, i.MovingCode, i.ABCClass, i.OnHand, i.OnOrder, i.InTransit, 
			    i.AllocationSP, i.AllocationSR, i.AllocationSL, i.BackOrderSP, i.BackOrderSR, i.BackOrderSL, 
			    i.ReservedSP, i.ReservedSR, i.ReservedSL, i.DemandAverage DemandAvg, i.OrderPointQty OrderPoint, 
			    i.SafetyStockQty SafetyStock,(i.OnHand-i.AllocationSP-i.AllocationSR-i.AllocationSL) AvailableQty, 
			    OrderUnit = case when isnull(i.OrderUnit,0.00)=0.00 then 1.00 else i.OrderUnit end, 
			    p.PurchasePrice, p.CostPrice
           from spMstItems i
                inner join spMstItemInfo f
			   	        on f.CompanyCode = i.CompanyCode
		               and f.PartNo      = i.PartNo
				       and f.Status      = 1
				       and f.SupplierCode in (@SupplierCode0, @SupplierCode1, @SupplierCode2)
	            inner join spMstItemPrice p
				        on p.CompanyCode = i.CompanyCode
				       and p.BranchCode  = i.BranchCode
		               and p.PartNo      = i.PartNo 
		  where i.CompanyCode = @CompanyCode
		    and i.BranchCode  = @BranchCode
		    and i.Status      = 1
		    and i.TypeOfGoods in ('0','1','2') -- 0:SGP, 1:SGO, 2:SGA

    create table #t1 
	    ( [CompanyCode] 	[varchar](15  ),
	      [BranchCode]  	[varchar](15  ),
	      [PartNo]      	[varchar](20  ),
	      [NewPartNo]   	[varchar](20  ),
	      [Year]        	[numeric]( 4,0),
	      [Month]       	[numeric]( 2,0),
	      [DemandQty]     	[numeric](18,2)
        )

    while @Counter < 6
      begin
         set @Counter = @Counter + 1
         if @PeriodMonth > 1
            begin
               set @PeriodYear  = @PeriodYear
               set @PeriodMonth = @PeriodMonth-1
            end
         else 
            begin
               set @PeriodYear  = @PeriodYear-1
               set @PeriodMonth = 12
            end

         insert into #t1
              select CompanyCode, BranchCode, PartNo, PartNo NewPartNo, 
                     @PeriodYear Year, @PeriodMonth Month, 
                     isnull((select DemandQty from spHstDemandItem
                              where CompanyCode = #Suggor.CompanyCode
                                and BranchCode  = #Suggor.BranchCode
                                and Year        = @PeriodYear
                                and Month       = @PeriodMonth
                                and PartNo      = #Suggor.PartNo),0.00) as DemandQty
                from #Suggor     -- spMstItems
               where CompanyCode = @CompanyCode
                 and BranchCode  = @BranchCode
      end
      
    declare ITEM   cursor for
            select CompanyCode, BranchCode, PartNo, NewPartNo from #t1
             where exists (select top 1 1 from spMstItemMod
                            where CompanyCode = #t1.CompanyCode
                              and BranchCode  = #t1.BranchCode
                              and PartNo      = #t1.PartNo
                              and NewPartNo  <> #t1.PartNo
                              and InterChangeCode in ('11','21'))
             order by PartNo
    open  ITEM
    fetch next from ITEM into @CompanyCode, @BranchCode, @PartNo, @NewPartNo

    while @@fetch_status=0
      begin
         set @OldPart  = @PartNo
         set @Switch   = 0
         while @Switch = 0
            begin
               set @NewPart = (select top 1 NewPartNo from spMstItemMod x
                                where PartNo=@OldPart and InterChangeCode in ('11','21')
                                  and not exists (select 1 from spMstItemMod
                                                   where CompanyCode=x.CompanyCode
                                                     and PartNo=x.NewPartNo
                                                     and NewPartNo=x.PartNo))
               if  @NewPart is NULL
                   begin
                      set @Switch = 1
                      set @NewPart = @OldPart
                   end
               else
                      set @OldPart = @NewPart
            end
         update #t1     set NewPartNo=@NewPart where PartNo=@PartNo
         update #Suggor set NewPartNo=@NewPart where PartNo=@PartNo
         fetch next from ITEM into @CompanyCode, @BranchCode, @PartNo, @NewPartNo
      end
    close ITEM
    deallocate ITEM

    select * into #t2
      from ( select CompanyCode, BranchCode, NewPartNo, Year, Month, sum(DemandQty) DemandQty
               from #t1 
              group by CompanyCode, BranchCode, NewPartNo, Year, Month) #t2

    select * into #t3
      from ( select CompanyCode, BranchCode, NewPartNo, 
                    sum  (isnull(DemandQty,0.0))    DmnQty, 
                   (sum  (isnull(DemandQty,0.0)))/6 DmnAvg, 
                    stdev(isnull(DemandQty,0.0))    StdDev,
                    case when sum  (isnull(DemandQty,0.0)) = 0.0
                         then 0.0
                         else round((stdev(isnull(DemandQty,0.0)) / 
                                   ((sum  (isnull(DemandQty,0.0)))/6)),2)
                    end as DevFac,
                    max  (isnull(DemandQty,0.0))    MaxQty,
                    min  (isnull(DemandQty,0.0))    MinQty
               from #t2
              group by CompanyCode, BranchCode, NewPartNo ) #t3

    select * into #t4
      from ( select #t3.CompanyCode, #t3.BranchCode, #t3.NewPartNo, #Suggor.MovingCode, 
                    #Suggor.ABCClass, #Suggor.ProductType, #Suggor.PartCategory, 
                    #Suggor.TypeOfGoods, #Suggor.SupplierCode, 
                    #Suggor.CostPrice, #Suggor.PurchasePrice,
                    DmnQty6      = (select sum(isnull(DemandQty,0.00)) from #t2
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and Year       =year (dateadd(mm,-6,@PeriodDate))
                                       and Month      =month(dateadd(mm,-6,@PeriodDate))
                                       and NewPartNo  =#t3.NewPartNo),
                    DmnQty5      = (select sum(isnull(DemandQty,0.00)) from #t2
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and Year       =year (dateadd(mm,-5,@PeriodDate))
                                       and Month      =month(dateadd(mm,-5,@PeriodDate))
                                       and NewPartNo  =#t3.NewPartNo),
                    DmnQty4      = (select sum(isnull(DemandQty,0.00)) from #t2
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and Year       =year (dateadd(mm,-4,@PeriodDate))
                                       and Month      =month(dateadd(mm,-4,@PeriodDate))
                                       and NewPartNo  =#t3.NewPartNo),
                    DmnQty3      = (select sum(isnull(DemandQty,0.00)) from #t2
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and Year       =year (dateadd(mm,-3,@PeriodDate))
                                       and Month      =month(dateadd(mm,-3,@PeriodDate))
                                       and NewPartNo  =#t3.NewPartNo),
                    DmnQty2      = (select sum(isnull(DemandQty,0.00)) from #t2
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and Year       =year (dateadd(mm,-2,@PeriodDate))
                                       and Month      =month(dateadd(mm,-2,@PeriodDate))
                                       and NewPartNo  =#t3.NewPartNo),
                    DmnQty1      = (select sum(isnull(DemandQty,0.00)) from #t2
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and Year       =year (dateadd(mm,-1,@PeriodDate))
                                       and Month      =month(dateadd(mm,-1,@PeriodDate))
                                       and NewPartNo  =#t3.NewPartNo),
                    OnHand       = (select sum(isnull(OnHand,0.00)) from #Suggor
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and NewPartNo  =#t3.NewPartNo),
                    OnOrder      = (select sum(isnull(OnOrder,0.00)) from #Suggor
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and NewPartNo  =#t3.NewPartNo),
                    InTransit    = (select sum(isnull(InTransit,0.00)) from #Suggor
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and NewPartNo  =#t3.NewPartNo),
                    AllocationSP = (select sum(isnull(AllocationSP,0.00)) from #Suggor
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and NewPartNo  =#t3.NewPartNo),                                
                    AllocationSR = (select sum(isnull(AllocationSR,0.00)) from #Suggor
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and NewPartNo  =#t3.NewPartNo),
                    AllocationSL = (select sum(isnull(AllocationSL,0.00)) from #Suggor
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and NewPartNo  =#t3.NewPartNo),
                    BackOrderSP  = (select sum(isnull(BackOrderSP,0.00)) from #Suggor
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and NewPartNo  =#t3.NewPartNo),
                    BackOrderSR  = (select sum(isnull(BackOrderSR,0.00)) from #Suggor
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and NewPartNo  =#t3.NewPartNo),
                    BackOrderSL  = (select sum(isnull(BackOrderSL,0.00)) from #Suggor
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and NewPartNo  =#t3.NewPartNo),
                    ReservedSP   = (select sum(isnull(ReservedSP,0.00)) from #Suggor
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and NewPartNo  =#t3.NewPartNo),
                    ReservedSR   = (select sum(isnull(ReservedSR,0.00)) from #Suggor
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and NewPartNo  =#t3.NewPartNo),
                    ReservedSL   = (select sum(isnull(ReservedSL,0.00)) from #Suggor
                                     where CompanyCode=#t3.CompanyCode
                                       and BranchCode =#t3.BranchCode
                                       and NewPartNo  =#t3.NewPartNo),
                    999999999999.99 AvailableQty, #Suggor.OrderUnit, 
                    DmnQty, DmnAvg, StdDev, DevFac, MaxQty, MinQty,
                    LeadTime     = (select isnull(LeadTime,0.00) from spMstOrderParam
                                     where CompanyCode  = #t3.CompanyCode
                                       and BranchCode   = #t3.BranchCode
                                       and SupplierCode = case #Suggor.TypeOfGoods
                                                               when '0' then @SupplierCode0
                                                               when '1' then @SupplierCode1
                                                               when '2' then @SupplierCode2
                                                               else '***NO-ORDER***'
                                                          end
                                       and MovingCode   = 1),
                    OrderCycle   = (select isnull(OrderCycle,0.00) from spMstOrderParam
                                     where CompanyCode  = #t3.CompanyCode
                                       and BranchCode   = #t3.BranchCode
                                       and SupplierCode = case #Suggor.TypeOfGoods
                                                               when '0' then @SupplierCode0
                                                               when '1' then @SupplierCode1
                                                               when '2' then @SupplierCode2
                                                               else '***NO-ORDER***'
                                                          end
                                       and MovingCode   = 1),
                    SafetyStock  = (select isnull(SafetyStock,0.00) from spMstOrderParam
                                     where CompanyCode  = #t3.CompanyCode
                                       and BranchCode   = #t3.BranchCode
                                       and SupplierCode = case #Suggor.TypeOfGoods
                                                               when '0' then @SupplierCode0
                                                               when '1' then @SupplierCode1
                                                               when '2' then @SupplierCode2
                                                               else '***NO-ORDER***'
                                                          end
                                       and MovingCode   = 1),
                    999999999999.99 OrderPoint, 999999999999.99 SafetyStokPoint, 
                    999999999999.99 SuggorQty, 0 Status
               from #t3, #Suggor
              where #t3.CompanyCode=#Suggor.CompanyCode
                and #t3.BranchCode =#Suggor.BranchCode
                and #t3.NewPartNo  =#Suggor.PartNo
                and #Suggor.TypeOfGoods in ('0','1','2')) #t4 -- 0:SGP, 1:SGO, 2:SGA

    update #t4
       set AvailableQty    = (OnHand+OnOrder+InTransit)
                           - (AllocationSP+AllocationSR+AllocationSL
                           +  BackOrderSP +BackOrderSR +BackOrderSL
                           +  ReservedSP  +ReservedSR  +ReservedSL),
           OrderPoint      = ceiling(DmnAvg/30 * isnull((LeadTime+OrderCycle+SafetyStock),0.00)),
           SafetyStokPoint = ceiling(DmnAvg/30 * isnull(SafetyStock,0.00)),
           Status          = 1
    --where DmnAvg>=50.0 and DevFac<=0.6
      where DmnAvg>=@DAvgFac and DevFac<=@DevFac

    update #t4 
       set SuggorQty       = case when AvailableQty>0.00 and OrderPoint>AvailableQty 
                                  then ceiling((OrderPoint-AvailableQty)/OrderUnit) * OrderUnit
                                  else 0.00 
                             end,
           Status          = case when AvailableQty>0.00 and OrderPoint>AvailableQty 
                                  then 1 
                                  else 0 
                             end
     where Status = 1 

    if isnull((select COUNT(*) from #t4 where Status=1),0) = 0
       begin
           drop table #Suggor
	  	   drop table #t1
           drop table #t2
           drop table #t3
           drop table #t4
           return
       end
    select * from #t4 where Status=1 order by TypeOfGoods, SupplierCode, NewPartNo
      
  --insert to SUGGOR table   
    set @TPGO = ''
    set @AOS1 = ''
    set @AOS2 = ''

    declare @cur_NewPartNo       varchar(20)
    declare @cur_MovingCode      varchar(15)
    declare @cur_ABCClass        varchar(01)
    declare @cur_ProductType		varchar(15)
    declare @cur_PartCategory	varchar(03)
    declare @cur_TypeOfGoods		varchar(05)
    declare @cur_SupplierCode    varchar(20)
    declare @cur_CostPrice		numeric(18,2)
    declare @cur_PurchasePrice	numeric(18,2)
    declare @cur_OnHand          numeric(12,2)
    declare @cur_OnOrder         numeric(12,2)
    declare @cur_InTransit       numeric(12,2)
    declare @cur_AllocationSP    numeric(12,2)
    declare @cur_AllocationSR    numeric(12,2)
    declare @cur_AllocationSL    numeric(12,2)
    declare @cur_BackOrderSP     numeric(12,2)
    declare @cur_BackOrderSR     numeric(12,2)
    declare @cur_BackOrderSL     numeric(12,2)
    declare @cur_ReservedSP      numeric(12,2)
    declare @cur_ReservedSR      numeric(12,2)
    declare @cur_ReservedSL      numeric(12,2)
    declare @cur_AvailableQty    numeric(12,2)
    declare @cur_DmnAvg          numeric(15,5)
    declare @cur_OrderPoint      numeric(12,0)
    declare @cur_SafetyStokPoint numeric(12,0)
    declare @cur_SuggorQty       numeric(12,0)

    declare SUGGOR cursor for
            select NewPartNo, MovingCode, ABCClass, ProductType, PartCategory, TypeOfGoods, SupplierCode, 
                   CostPrice, PurchasePrice, OnHand, OnOrder, InTransit, AllocationSP, AllocationSR, 
                   AllocationSL, BackOrderSP, BackOrderSR, BackOrderSL, ReservedSP, ReservedSR, 
                   ReservedSL, AvailableQty, DmnAvg, OrderPoint, SafetyStokPoint, SuggorQty
              from #t4 where Status=1 order by TypeOfGoods, SupplierCode, NewPartNo
    open  SUGGOR
    fetch next from SUGGOR 
               into @cur_NewPartNo, @cur_MovingCode, @cur_ABCClass, @cur_ProductType, @cur_PartCategory, 
                    @cur_TypeOfGoods, @cur_SupplierCode, @cur_CostPrice, @cur_PurchasePrice, @cur_OnHand, 
                    @cur_OnOrder, @cur_InTransit, @cur_AllocationSP, @cur_AllocationSR, @cur_AllocationSL, 
                    @cur_BackOrderSP, @cur_BackOrderSR, @cur_BackOrderSL, @cur_ReservedSP, @cur_ReservedSR, 
                    @cur_ReservedSL, @cur_AvailableQty, @cur_DmnAvg, @cur_OrderPoint, @cur_SafetyStokPoint, 
                    @cur_SuggorQty

    while @@fetch_status=0
      begin
         if @TPGO<>@cur_TypeOfGoods or @SupplierCode<>@cur_SupplierCode
            begin
                set @Counter      = 0
                set @TPGO         = @cur_TypeOfGoods
                set @SupplierCode = @cur_SupplierCode
                -- setup nomor document for SUGGOR
                   set @DocPre    = (select isnull(DocumentPrefix,'XYZ') from gnMstDocument
                                      where CompanyCode=@CompanyCode and BranchCode=@BranchCode and DocumentType='SGR')
                   set @DocNum    = (select isnull(DocumentSequence,999888) from gnMstDocument
                                      where CompanyCode=@CompanyCode and BranchCode=@BranchCode and DocumentType='SGR')
                   if  @DocNum    = 999888  return
                   set @DocNum    = @DocNum + 1
                   update gnMstDocument set DocumentSequence = @DocNum
                    where CompanyCode=@CompanyCode and BranchCode=@BranchCode and DocumentType='SGR'
                   set @SuggorNo  = @DocPre + '/' + right('00'+right(convert(varchar(4),year(@SuggorDate)),2),2)
                                            + '/' + right('000000'+(convert(varchar(6),@DocNum,6)),6)
                 --set @AOS1      = @AOS1 + case when @AOS1='' then @SuggorNo else ', ' + @SuggorNo end
                   set @AOS1      = @AOS1 + case when @AOS1='' then @SuggorNo else ', ' + right(@SuggorNo,6) end

                -- setup nomor document POS
                   set @DocPre    = (select isnull(DocumentPrefix,'XYZ') from gnMstDocument
                                      where CompanyCode=@CompanyCode and BranchCode=@BranchCode and DocumentType='POS')
                   set @DocNum    = (select isnull(DocumentSequence,999888) from gnMstDocument
                                      where CompanyCode=@CompanyCode and BranchCode=@BranchCode and DocumentType='POS')
                   if  @DocNum    = 999888  return
                   set @DocNum    = @DocNum + 1
                   update gnMstDocument set DocumentSequence = @DocNum
                    where CompanyCode=@CompanyCode and BranchCode=@BranchCode and DocumentType='POS'
                   set @POSNo     = @DocPre + '/' + right('00'+right(convert(varchar(4),year(@SuggorDate)),2),2)
                                            + '/' + right('000000'+(convert(varchar(6),@DocNum,6)),6)
                 --set @AOS2      = @AOS2 + case when @AOS2='' then @POSNo else ', ' + @POSNo end
                   set @AOS2      = @AOS2 + case when @AOS2='' then @POSNo else ', ' + right(@POSNo,6) end

                -- insert Suggor Header table
                   insert into spTrnPSUGGORHdr
                              (CompanyCode, BranchCode, SuggorNo, SuggorDate, TypeOfGoods, POSNo, 
                               POSDate, SupplierCode, ProductType, MovingCode, OrderType, Status, 
                               PrintSeq, IsVoid, CreatedBy, CreatedDate, LastUpdateBy, 
                               LastUpdateDate, isLocked, LockingBy, LockingDate)
                        values(@CompanyCode, @BranchCode, @SuggorNo, @SuggorDate, @TPGO, @POSNo, 
                               @SuggorDate, @SupplierCode, @cur_ProductType, 1, '8', 1, 0, 0,  -- OrderType = 8 - AOS
                               'AOS', @SuggorDate, 'AOS', @SuggorDate, '0', NULL, NULL)

                -- insert POS Header table
                   insert into spTrnPPOSHdr
                              (CompanyCode, BranchCode, POSNo, POSDate, SupplierCode, OrderType, IsBO, 
                               IsSubstution, isSuggorProcess, Remark, ProductType, PrintSeq, ExPickingSlipNo, 
                               ExPickingSlipDate, Status, Transportation, TypeOfGoods, isGenPORDD, isDeleted, 
                               CreatedBy, CreatedDate, LastUpdateBy, LastUpdateDate, isLocked, LockingBy, 
                               LockingDate, isDropSign, DropSignReffNo)
                        values(@CompanyCode, @BranchCode, @POSNo, @SuggorDate, @SupplierCode, '8', 1, 
                               1, 1, 'MACHINE ORDER', @cur_ProductType, 1, NULL, NULL, 2, 'AOS', @TPGO, 
                               0, 0, 'AOS', @SuggorDate, 'AOS', @SuggorDate, 0, NULL, NULL, 0, NULL)
            end

         -- insert Suggor Detail table
            set @Counter = @Counter + 1
            insert into spTrnPSUGGORDtl
                       (CompanyCode, BranchCode, SuggorNo, PartNo, SeqNo, OnHand, OnOrder, InTransit, 
                        AllocationSP, AllocationSR, AllocationSL, BackOrderSP, BackOrderSR, BackOrderSL, 
                        ReservedSP, ReservedSR, ReservedSL, DemandAvg, OrderPoint, SafetyStock, AvailableQty, 
                        SuggorQty, SuggorCorrecQty, ProductType, PartCategory, PurchasePrice, CostPrice, 
                        isExistInItems, CreatedBy, CreatedDate, LastUpdateBy, LastUpdateDate)
                 values(@CompanyCode, @BranchCode, @SuggorNo, @cur_NewPartNo, @Counter, @cur_OnHand, 
                        @cur_OnOrder, @cur_InTransit, @cur_AllocationSP, @cur_AllocationSR, @cur_AllocationSL, 
                        @cur_BackOrderSP, @cur_BackOrderSR, @cur_BackOrderSL, @cur_ReservedSP, 
                        @cur_ReservedSR, @cur_ReservedSL, @cur_DmnAvg, @cur_OrderPoint, 
                        @cur_SafetyStokPoint, @cur_AvailableQty, @cur_SuggorQty, @cur_SuggorQty,
                        @cur_ProductType, @cur_PartCategory, @cur_PurchasePrice, @cur_CostPrice, 
                        1, 'AOS', @SuggorDate, 'AOS', @SuggorDate)

         -- insert POS Detail table
            set @DiscPct = (select isnull(DiscPct,0.00) from gnMstSupplierProfitCenter 
                             where CompanyCode      = @CompanyCode
                               and BranchCode       = @BranchCode 
                               and SupplierCode     = @cur_SupplierCode 
                               and ProfitCenterCode = '300')
            set @PurchasePriceNett = floor(@cur_PurchasePrice * (100.00 - @DiscPct) / 100)
            insert into spTrnPPOSDtl
                       (CompanyCode, BranchCode, POSNo, PartNo, SeqNo, OrderQty, SuggorQty, 
                        PurchasePrice, DiscPct, PurchasePriceNett, CostPrice, TotalAmount, 
                        ABCClass, MovingCode, ProductType, PartCategory, CreatedBy, 
                        CreatedDate, LastUpdateBy, LastUpdateDate, Note)
                 values(@CompanyCode, @BranchCode, @POSNo, @cur_NewPartNo, @Counter, 
                        @cur_SuggorQty, @cur_SuggorQty, @cur_PurchasePrice, @DiscPct, 
                        @PurchasePriceNett, @cur_CostPrice, @cur_SuggorQty * @PurchasePriceNett,
                        @cur_ABCClass, @cur_MovingCode, @cur_ProductType, @cur_PartCategory, 
                        'AOS', @SuggorDate, 'AOS', @SuggorDate, 'AOS')

         -- insert Suggor Sub-detail table
            insert into spTrnPSUGGORSubDtl
                 select @CompanyCode, @BranchCode, @SuggorNo, @cur_NewPartNo, PartNo,
                        ROW_NUMBER() over (order by PartNo) as row,
                        I   = (select DemandQty from #t1
                                where CompanyCode = @CompanyCode
                                  and BranchCode  = @BranchCode
                                  and Year        = year (dateadd(mm,-6,@PeriodDate))
                                  and Month       = month(dateadd(mm,-6,@PeriodDate))
                                  and NewPartNo   = @cur_NewPartNo
                                  and PartNo      = #Suggor.PartNo),
                        II  = (select DemandQty from #t1
                                where CompanyCode = @CompanyCode
                                  and BranchCode  = @BranchCode
                                  and Year        = year (dateadd(mm,-5,@PeriodDate))
                                  and Month       = month(dateadd(mm,-5,@PeriodDate))
                                  and NewPartNo   = @cur_NewPartNo
                                  and PartNo      = #Suggor.PartNo),
                        III = (select DemandQty from #t1
                                where CompanyCode = @CompanyCode
                                  and BranchCode  = @BranchCode
                                  and Year        = year (dateadd(mm,-4,@PeriodDate))
                                  and Month       = month(dateadd(mm,-4,@PeriodDate))
                                  and NewPartNo   = @cur_NewPartNo
                                  and PartNo      = #Suggor.PartNo),
                        IV  = (select DemandQty from #t1
                                where CompanyCode = @CompanyCode
                                  and BranchCode  = @BranchCode
                                  and Year        = year (dateadd(mm,-3,@PeriodDate))
                                  and Month       = month(dateadd(mm,-3,@PeriodDate))
                                  and NewPartNo   = @cur_NewPartNo
                                  and PartNo      = #Suggor.PartNo),
                        V   = (select DemandQty from #t1
                                where CompanyCode = @CompanyCode
                                  and BranchCode  = @BranchCode
                                  and Year        = year (dateadd(mm,-2,@PeriodDate))
                                  and Month       = month(dateadd(mm,-2,@PeriodDate))
                                  and NewPartNo   = @cur_NewPartNo
                                  and PartNo      = #Suggor.PartNo),
                        VI  = (select DemandQty from #t1
                                where CompanyCode = @CompanyCode
                                  and BranchCode  = @BranchCode
                                  and Year        = year (dateadd(mm,-1,@PeriodDate))
                                  and Month       = month(dateadd(mm,-1,@PeriodDate))
                                  and NewPartNo   = @cur_NewPartNo
                                  and PartNo      = #Suggor.PartNo),
                        'AOS',@SuggorDate
                   from #Suggor
                  where CompanyCode = @CompanyCode
                    and BranchCode  = @BranchCode
                    and NewPartNo   = @cur_NewPartNo
                    
         -- insert order balance table
            insert into spTrnPOrderBalance
                       (CompanyCode, BranchCode, POSNo, SupplierCode, PartNo, SeqNo, PartNoOriginal, 
                        POSDate, OrderQty, OnOrder, InTransit, Received, Located, DiscPct, 
                        PurchasePrice, CostPrice, ABCClass, MovingCode, WRSNo, WRSDate, TypeOfGoods, 
                        CreatedBy, CreatedDate, LastUpdateBy, LastUpdateDate)
                 values(@CompanyCode, @BranchCode, @POSNo, @cur_SupplierCode, @cur_NewPartNo, @Counter, 
                        @cur_NewPartNo, @SuggorDate, @cur_SuggorQty, @cur_SuggorQty, 0.00, 0.00, 0.00, 
                        @DiscPct, @cur_PurchasePrice, @cur_CostPrice, @cur_ABCClass, @cur_MovingCode, 
                        NULL, NULL, @TPGO, 'AOS', @SuggorDate, 'AOS', @SuggorDate)

         -- update item master table
            update spMstItems 
               set OnOrder = OnOrder + @cur_SuggorQty
             where CompanyCode = @CompanyCode
               and BranchCode  = @BranchCode
               and PartNo      = @cur_NewPartNo

         fetch next from SUGGOR 
               into @cur_NewPartNo, @cur_MovingCode, @cur_ABCClass, @cur_ProductType, @cur_PartCategory, 
                    @cur_TypeOfGoods, @cur_SupplierCode, @cur_CostPrice, @cur_PurchasePrice, @cur_OnHand, 
                    @cur_OnOrder, @cur_InTransit, @cur_AllocationSP, @cur_AllocationSR, @cur_AllocationSL, 
                    @cur_BackOrderSP, @cur_BackOrderSR, @cur_BackOrderSL, @cur_ReservedSP, @cur_ReservedSR, 
                    @cur_ReservedSL, @cur_AvailableQty, @cur_DmnAvg, @cur_OrderPoint, @cur_SafetyStokPoint, 
                    @cur_SuggorQty
      end
    close SUGGOR
    deallocate SUGGOR
	 
    -- alert machine order
       set @Counter = isnull((select max(MessageID) from SysMessageBoards),0) + 1
       set @MessageText = 'AOS# ' + @AOS1 + '. ' + @AOS2
       insert into SysMessageBoards
                  (MessageID, MessageHeader, MessageText, MessageTo, MessageTarget, MessageParams, 
                   DateFrom, DateTo, CreatedBy, CreatedDate, LastUpdateBy, LastUpdateDate)
            values(@Counter, 'MACHINE ORDER', @MessageText, 'ALL', '', NULL,
                   NULL, NULL, 'AOS', @SuggorDate, 'AOS', @SuggorDate)
       select top 1 * from SysMessageBoards order by MessageID desc
    
    drop table #Suggor
    drop table #t1
    drop table #t2
    drop table #t3
    drop table #t4

END
GO
ALTER procedure [dbo].[uspfn_SvUtlUpdateFlatRate]
--declare 
	@CompanyCode varchar(15),
	@BranchCode  varchar(15),
	@ProductType varchar(15),
	@UserID      varchar(15)
as  

set nocount on

declare @Customer Decimal(18,2)
declare @AreaFact decimal(18,2)
declare @DlrspType Decimal(18,2)

set @Customer =(select top 1 LaborPrice from svMstlaborRate
						  where CompanyCode = @CompanyCode
							and BranchCode  = @BranchCode
							and ProductType = @ProductType
							and LaborCode   = 'CUSTOMER'
							and IsActive    = 1
							and EffectiveDate <= getdate()
						  order by EffectiveDate desc)
set @AreaFact = (select top 1 LaborPrice from svMstlaborRate
						  where CompanyCode = @CompanyCode
							and BranchCode  = @BranchCode
							and ProductType = @ProductType
							and LaborCode   = 'AreaFact'
							and IsActive    = 1
							and EffectiveDate <= getdate()
						  order by EffectiveDate desc)
set @DlrspType=(select top 1 LaborPrice from svMstlaborRate
						  where CompanyCode = @CompanyCode
							and BranchCode  = @BranchCode
							and ProductType = @ProductType
							and LaborCode   = 'DlrspType'
							and IsActive    = 1
							and EffectiveDate <= getdate()
						  order by EffectiveDate desc)

select * into #t1 from (
	select a.RefferenceCode BasicModel
		 , a.DescriptionEng TechnicalModelCode
	  from svMstRefferenceService a
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.RefferenceType = 'BASMODEL'
	 group by a.RefferenceCode, a.DescriptionEng
) #t1

select * into #t2 from (
select b.BasicModel
	 , convert(varchar(15), 'CLAIM') JobType
	 , a.TaskCode
	 , a.TechnicalModel
	 , a.FlatRateTime
	 , a.Description
  from svUtlFlatRateTime a with (nolock, nowait)
  left join #t1 b on b.TechnicalModelCode = a.TechnicalModel
 where 1 = 1
   and a.CompanyCode = @CompanyCode
   and a.TechnicalModel in (select TechnicalModelCode from #t1)
) #t2

select * into #t3 from (
select a.BasicModel, a.TaskCode, count(*) RecCount
  from #t2 a
 where exists (
	 select b.* 
	   from svMstTask b
	  where 1 = 1
		and b.CompanyCode = @CompanyCode
		and b.ProductType = @ProductType
		and b.BasicModel  = a.BasicModel
		and b.JobType     = a.JobType
		and b.OperationNo = a.TaskCode
	 )
 group by a.BasicModel, a.TaskCode
) #t3

declare @getdate datetime set @getdate = getdate()

select * into #t4 from (
select BasicModel    = a.BasicModel
	 , OperationNo   = a.TaskCode 
	 , Description   = a.Description
	 , ClaimHour     = a.FlatRateTime 
	 , OperationHour = a.FlatRateTime 
	 , LaborCost     = isnull((
						 select top 1 LaborPrice from svMstlaborRate
						  where CompanyCode = @CompanyCode
							and BranchCode  = @BranchCode
							and ProductType = @ProductType
							and LaborCode   = 'SUZUKI'
							and IsActive    = 1
							and EffectiveDate <= getdate()
						  order by EffectiveDate desc
						),0)
	 , LaborPrice     = isnull((
						 select top 1 @Customer * @AreaFact * @DlrspType * LaborPrice from svMstlaborRate
						  where CompanyCode = @CompanyCode
							and BranchCode  = @BranchCode
							and ProductType = @ProductType
							and LaborCode   = a.BasicModel
							and IsActive    = 1
							and EffectiveDate <= getdate()
						  order by EffectiveDate desc
						),0)
  from #t2 a, #t3 b 
 where 1 = 1
   and b.BasicModel = a.BasicModel
   and b.TaskCode   = a.TaskCode
   and b.RecCount   = 1
) #t4

-- update svMstTask
set nocount off

update svMstTask
   set Description   = (select Description   from #t4 where #t4.BasicModel  = svMstTask.BasicModel and #t4.OperationNo = svMstTask.OperationNo)
	 , ClaimHour     = (select ClaimHour     from #t4 where #t4.BasicModel  = svMstTask.BasicModel and #t4.OperationNo = svMstTask.OperationNo)
	 , OperationHour = (select OperationHour from #t4 where #t4.BasicModel  = svMstTask.BasicModel and #t4.OperationNo = svMstTask.OperationNo)
	 , LaborCost  = (select LaborCost     from #t4 where #t4.BasicModel  = svMstTask.BasicModel and #t4.OperationNo = svMstTask.OperationNo)
	 , LaborPrice    = (select LaborPrice    from #t4 where #t4.BasicModel  = svMstTask.BasicModel and #t4.OperationNo = svMstTask.OperationNo)
	 , LastUpdateBy   = @UserID
	 , LastUpdateDate = @getdate
 where exists (select BasicModel, OperationNo from #t4 where #t4.BasicModel  = svMstTask.BasicModel and #t4.OperationNo = svMstTask.OperationNo)
   and svMstTask.CompanyCode = @CompanyCode
   and svMstTask.ProductType = @ProductType
   and svMstTask.JobType     = 'CLAIM'

select * into #t5 from (
select a.BasicModel, a.TaskCode, count(*) RecCount
  from #t2 a
 where not exists (
	 select b.* 
	   from svMstTask b
	  where 1 = 1
		and b.CompanyCode = @CompanyCode
		and b.ProductType = @ProductType
		and b.BasicModel  = a.BasicModel
		and b.JobType     = a.JobType
		and b.OperationNo = a.TaskCode
	 )
 group by a.BasicModel, a.TaskCode
) #t5

-- insert into svMstTask
insert into svMstTask (CompanyCode, ProductType, BasicModel, JobType, OperationNo, Description, OperationHour, ClaimHour
	, LaborCost, LaborPrice, TechnicalModelCode, IsSubCon, IsCampaign, IsActive, CreatedBy, CreatedDate, LastupdateBy
	, LastupdateDate, IsLocked, LockingBy, LockingDate)
select CompanyCode   = @CompanyCode 
	 , ProductType   = @ProductType 
	 , BasicModel    = a.BasicModel
	 , JobType       = 'CLAIM'
	 , OperationNo   = a.TaskCode 
	 , Description   = a.Description
	 , OperationHour = a.FlatRateTime
	 , ClaimHour     = a.FlatRateTime 
	 , LaborCost     = isnull((
						 select top 1 LaborPrice from svMstlaborRate
						  where CompanyCode = @CompanyCode
							and BranchCode  = @BranchCode
							and ProductType = @ProductType
							and LaborCode   = 'SUZUKI'
							and IsActive    = 1
							and EffectiveDate <= getdate()
						  order by EffectiveDate desc
						),0)
	 , LaborPrice    = isnull((
--						 select top 1 LaborPrice from svMstlaborRate
--						  where CompanyCode = @CompanyCode
--							and BranchCode  = @BranchCode
--							and ProductType = @ProductType
--							and LaborCode   = 'SUZUKI'
--							and IsActive    = 1
--							and EffectiveDate <= getdate()
--						  order by EffectiveDate desc
						 select top 1 @Customer * @AreaFact * @DlrspType * LaborPrice from svMstlaborRate
						  where CompanyCode = @CompanyCode
							and BranchCode  = @BranchCode
							and ProductType = @ProductType
							and LaborCode   = a.BasicModel
							and IsActive    = 1
							and EffectiveDate <= getdate()
						  order by EffectiveDate desc
						),0)
	 , TechnicalModelCode = a.TechnicalModel
	 , IsSubCon       = 0
	 , IsCampaign     = 0
	 , IsActive       = 0
	 , @UserID, @getdate, @UserID, @getdate, 0, null, null
  from #t2 a, #t5 b 
 where 1 = 1
   and b.BasicModel = a.BasicModel
   and b.TaskCode   = a.TaskCode
   and b.RecCount   = 1

drop table #t1
drop table #t2
drop table #t3
drop table #t4
drop table #t5
GO
ALTER procedure [dbo].[uspfn_spCustSOPickListNewOrder]   
--DECLARE
@CompanyCode varchar(15),  
@BranchCode varchar(15),  
@ProfitCenterCode varchar(3),  
@TypeOfGoods varchar(2)  
as  
--SET @CompanyCode = '6006410'
--SET @BranchCode = '600641001'
----SET @ProfitCenterCode = '000' --
--SET @TypeOfGoods = '0'
SELECT x.CustomerCode,  
                    (  
                     SELECT c.CustomerName   
                     FROM gnMstCustomer c with(nolock, nowait)  
                     where  c.CompanyCode=x.CompanyCode  
                     AND c.CustomerCode= x.CustomerCode   
                     AND c.CustomerCode=x.CustomerCode  
                    ) AS CustomerName,  
                    (  
                     SELECT c.Address1+' '+c.Address2+' '+c.Address3+' '+c.Address4   
                     FROM gnMstCustomer c with(nolock, nowait)  
                     where  c.CompanyCode=x.CompanyCode  
                     AND c.CustomerCode= x.CustomerCode   
                     AND c.CustomerCode=x.CustomerCode  
  
                    ) as Address  
                    , z.LookUpValueName as ProfitCenter  
                    FROM   
                    (  
                     SELECT DISTINCT a.CompanyCode, a.BranchCode,  
                     b.CustomerCode   
                     FROM spTrnSOSupply a WITH(nolock, nowait) INNER JOIN   
                        spTrnSOrdHdr b ON a.CompanyCode=b.CompanyCode  
                     and a.BranchCode=b.BranchCode  
                     and a.DocNo=b.DocNo  
                        and b.TypeOfGoods=@TypeOfGoods  
                     WHERE pickingslipno = ''  
                    ) x   
                    INNER JOIN gnMstCustomerProfitCenter y WITH(nolock, nowait)  
                    ON y.CompanyCode = x.CompanyCode   
                       AND y.BranchCode = x.BranchCode  
                       AND y.CustomerCode = x.CustomerCode  
                    INNER JOIN gnMstLookUpDtl z WITH(nolock, nowait)  
                    ON z.CompanyCode= x.CompanyCode  
                       AND z.CodeID='PFCN'  
                       AND z.LookupValue=y.ProfitCenterCode  
                    WHERE x.CompanyCode=@CompanyCode  
                        AND x.BranchCode=@BranchCode  
                       AND y.ProfitCenterCode=@ProfitCenterCode
GO
ALTER procedure [dbo].[uspfn_spGetFPJLookUp]        
@CompanyCode varchar(15),        
@BranchCode  varchar(15),        
@TypeOfGoods varchar(4),        
@IsPKPOnly  varchar(2)        
as        
SELECT         
    TOP 100 a. FPJNo        
    , a.FPJDate        
    , a.PickingSlipNo        
    , a.PickingSlipDate        
    , a.InvoiceNo        
    , a.InvoiceDate        
    , (SELECT CustomerName FROM gnMstCustomer WHERE CompanyCode = a.CompanyCode AND CustomerCode = a.CustomerCode) CustomerName        
    , a.CustomerCode       
    , a.TOPCode      
    , a.TOPDays      
    , a.TotSalesQty      
    , a.TotSalesAmt      
    , a.TotDiscAmt      
    , a.TotDPPAmt      
    , a.TotPPNAmt      
    , a.TotFinalSalesAmt      
    , a.TransType      
    , a.CustomerCodeBill      
    , a.CustomerCodeShip  
    , a.Status  
    , a.FPJGovNo  
    , a.FPJSignature      
    , c.CustomerCode CustomerCodeTagih      
    , b.CustomerName CustomerNameTagih    
    , b.Address1 Address1Tagih    
    , b.Address2 Address2Tagih    
    , b.Address3 Address3Tagih      
    , b.Address4 Address4Tagih     
    , c.CustomerName       
    , c.Address1       
    , c.Address2       
    , c.Address3     
    , c.Address4     
FROM             
    spTrnSFPJHdr a        
    join SpTrnSFPJInfo b      
    on a.CompanyCode = b.CompanyCode      
    and a.BranchCode = b.BranchCode      
    and a.FPJNo = b.FPJNo      
    join gnMstCustomer c      
    on a.CompanyCode = b.CompanyCode      
    and a.CustomerCode = c.CustomerCode      
WHERE             
    a.CompanyCode = @CompanyCode        
    AND a.BranchCode = @BranchCode        
 AND ((CASE WHEN @IsPKPOnly = 1 THEN a.IsPKP END) = 1 OR (CASE WHEN @IsPKPOnly = 0 THEN a.IsPKP END) = a.IsPKP)        
 --AND ((CASE WHEN @TypeOfGoods = '%' THEN a.TypeOfGoods END) = a.TypeOfGoods OR (CASE WHEN @TypeOfGoods <> '%' THEN a.TypeOfGoods END) = '0')        
 AND ((CASE WHEN @TypeOfGoods = '%' THEN a.TypeOfGoods END) = a.TypeOfGoods OR (CASE WHEN @TypeOfGoods <> '%' THEN a.TypeOfGoods END) = @TypeOfGoods)
 ORDER BY a.FPJNo DESC
GO
ALTER procedure [dbo].[uspfn_HrGetTeamLeader]
	@CompanyCode varchar(10),
	@DeptCode varchar(10),
	@PosCode varchar(10)
as

declare @table as table(value varchar(200), text varchar(200))
declare @curpos as varchar(200)

set @curpos = isnull((
				select top 1 PosHeader
				  from GnMstPosition
				 where CompanyCode = @CompanyCode
				   and DeptCode = @DeptCode
				   and PosCode = @PosCode
				  ), '') 

while (@curpos != '' and @DeptCode != 'COM')
begin
	insert into @table
	select a.EmployeeID, a.EmployeeName + ' (' + @curpos + ')' 
	  from HrEmployee a
	 where CompanyCode = @CompanyCode
	   and (Department = @DeptCode or Department = 'COM')
	   and Position = @curpos
	   and PersonnelStatus = '1'
   
	set @curpos = isnull((
					select top 1 PosHeader
					  from GnMstPosition
					 where CompanyCode = @CompanyCode
					   and (DeptCode = @DeptCode or DeptCode = 'COM')
					   and PosCode = @curpos
					  ), '') 
end

select * from @table
GO


CREATE procedure [dbo].[uspfn_SvInsertDefaultTaskMovement]
--declare 
@CompanyCode as varchar(15),
@BranchCode as varchar(15),
@ProductType as varchar(15),
@ServiceNo as int,
@UserID as varchar(100)
as

--set @CompanyCode = '6006400001'
--set	@BranchCode = '6006400101'
--set	@ProductType = '4W'
--set	@ServiceNo = 1
--set	@UserID = 'yo'

declare @Sql as varchar(max)

set @Sql = 
'insert into '+dbo.GetDbMD(@CompanyCode,@BranchCode)+'..svSDMovement
select a.CompanyCode, a.BranchCode, b.JobOrderNo, b.JobOrderDate, a.PartNo, a.PartSeq, dbo.GetWarehouseMD(a.CompanyCode,a.BranchCode) WarehouseCode, 
a.DemandQty, a.DemandQty, a.DiscPct, a.CostPrice, a.RetailPrice, a.TypeOfGoods, dbo.GetCompanyMD(a.CompanyCode,a.BranchCode) CompanyMD, 
dbo.GetBranchMD(a.CompanyCode,a.BranchCode) BranchMD, dbo.GetWarehouseMD(a.CompanyCode,a.BranchCode) WarehouseMD, c.RetailPriceInclTax, c.RetailPrice,
c.CostPrice, ''x'', '''+@ProductType+''', ''300'', ''0'', ''0'', ''1900/01/01'', '''+@UserID+''', GETDATE(), '''+@UserID+''', GETDATE()  
from 
svTrnSrvItem a 
inner join SvTrnService b on a.CompanyCode = b.CompanyCode and a.BranchCode = b.BranchCode and a.ServiceNo = b.ServiceNo
left join '+dbo.GetDbMD(@CompanyCode,@BranchCode)+'..spMstItemPrice c ON c.CompanyCode = dbo.GetCompanyMD(a.CompanyCode,a.BranchCode) and c.BranchCode = dbo.GetBranchMD(a.CompanyCode,a.BranchCode)
and c.PartNo = a.PartNo
where a.CompanyCode = '''+@CompanyCode+''' and a.BranchCode = '''+@BranchCode+''' and a.ServiceNo = ' + convert(varchar,@ServiceNo,1)
print(@Sql)
exec(@Sql)
GO

ALTER procedure [dbo].[uspfn_SvHstMSI]
	@CompanyCode varchar(15),
	@BranchCode  varchar(15),
	@ProductType varchar(15), 
	@PeriodYear  int,
	@PeriodMonth int,
    @Posting     bit,
	@UserID      varchar(15)
as
-- uspfn_SvHstMSI '6156401','615640100','4W',2010,07,1,'HTO'

-- A. Sales Revenue
declare	@TotalLaborSalesRevenue            numeric(18,0)
declare	@LaborRevenueChargeable            numeric(18,0)
declare	@LaborRevenueNonChargeable1        numeric(18,0)
declare	@LaborRevenueNonChargeable2        numeric(18,0)
declare	@TotalPartsSalesRevenue            numeric(18,0)
declare	@PartsRevenueChargeable            numeric(18,0)
declare	@PartsRevenueNonChargeable1        numeric(18,0)
declare	@PartsRevenueNonChargeable2        numeric(18,0)
declare	@TotalMaterialSalesRevenue         numeric(18,0)
declare	@MaterialRevenueChargeable         numeric(18,0)
declare	@MaterialRevenueNonChargeable1     numeric(18,0)
declare	@MaterialRevenueNonChargeable2     numeric(18,0)
declare @TotalServiceSalesRevenue          numeric(18,0)
declare @TotalServiceSalesChargeable       numeric(18,0)
declare @TotalServiceSalesNonChargeable1   numeric(18,0)
declare @TotalServiceSalesNonChargeable2   numeric(18,0)
declare	@HoursSold                         numeric(12,2)
declare	@ServiceRevenuePerUnit             numeric(18,0)
declare	@LaborSalesTurnoverProductiveStaff numeric(18,0)
declare	@LaborSalesTurnoverServiceAdvisors numeric(18,0)
declare	@LaborSalesTurnoverStall           numeric(18,0)
-- B. No. of Unit Intake
declare	@NoWorkOrderVehicleIntake          numeric(08,0)
declare	@PassengerCar                      numeric(08,0)
declare	@CommercialVehicle                 numeric(08,0)
declare	@PDI                               numeric(08,0)
-- C. No. of Job Type
declare @TotalChargeable                   numeric(08,0)
declare @Chargeable1                       numeric(08,0)
declare @Chargeable2                       numeric(08,0)
declare @Chargeable3                       numeric(08,0)
declare @Chargeable4                       numeric(08,0)
declare @TotalNonChargeable                numeric(08,0)
declare @NonChargeable1                    numeric(08,0)
declare @NonChargeable2                    numeric(08,0)
declare @NonChargeable3                    numeric(08,0)
declare @NonChargeable4                    numeric(08,0)
declare @NonChargeable5                    numeric(08,0)
-- D. Workshop Service Strength
declare @NoWorkingStall                    numeric(03,0)
declare @TotalStaff                        numeric(06,0)
declare @NoAdminSupportStaff               numeric(06,0)
declare @NoServiceAdvisorsStaff            numeric(06,0)
declare @NoProductiveStaff                 numeric(06,0)
declare @NoForeman                         numeric(06,0)
declare @NoTechnician                      numeric(06,0)
declare @NoPDIStaff	                       numeric(06,0)
declare @TotalAvailableHours		       numeric(08,2)
declare @OvertimeNormalWorkingHour 		   numeric(08,2)
-- E. Productivity Indicators	
declare @RepairUnitProductiveStaff         numeric(08,2)
declare @RepairUnitTechnician              numeric(08,2)
declare @RepairUnitWorkingStall            numeric(08,2)
declare @NoCustomertoServiceAdvisor        numeric(08,2)
declare @NoWorkdays	                       numeric(06,0)
declare @RepairUnitProductiveDay           numeric(06,2)
declare @RepairUnitTechnicianDay           numeric(06,2) 
declare @RepairUnitWorkingStallDay         numeric(06,2)
declare @NoCustomertoServiceAdvisorDay     numeric(06,2)
declare @HoursSoldtoAvailableHours         numeric(08,2)
-- F. Service Retention & Marketing Activity  
--> akan berlaku setelah SMR selesai di develop
declare @ServiceReminder                   numeric(08,0)
declare @ServiceFollowUp                   numeric(08,0)
declare @ServiceBookings                   numeric(08,0)
declare @ServiceRemindertoNoWorkOrder      numeric(06,2)
declare @ServiceFollowUptoNoWorkOrder      numeric(06,2)
declare @ServiceBookingstoNoWorkOrder      numeric(06,2)
-- G. CSI Performance	
--> akan berlaku setelah SMR selesai di develop
declare @CSIScore	                       numeric(06,2)
declare @DirectComplaintsReceived	       numeric(08,0)
declare @IndirectComplaintsReceived	       numeric(08,0)
declare @TotalNoFollowUpSatisfied	       numeric(08,0)
declare @TotalNoFollowUpNotSatisfied       numeric(08,0)
declare @NoNotSatisfiedService             numeric(08,0)
declare @NoNotSatisfiedTechnical           numeric(08,0)
declare @FollowUpSatisfiedtoNoWorkOrder    numeric(06,2)
declare @FollowUpNotSatisfiedtoNoWorkOrder numeric(06,2)
declare @ComplaintsFollowUpNotSatisfied    numeric(06,2)


-- select data
select * into #inv 
  from (select inv.InvoiceNo, inv.JobType, job.GroupJobType,
               isnull(inv.LaborDiscPct,0) LaborDiscPct, 
               isnull(inv.PartsDiscPct,0) PartsDiscPct, 
               isnull(inv.MaterialDiscPct,0) MaterialDiscPct
          from svTrnInvoice inv, svMstJob job
         where inv.CompanyCode=@CompanyCode
           and inv.BranchCode=@BranchCode
           and inv.ProductType=@ProductType
           and year(inv.InvoiceDate)=@PeriodYear
           and month(inv.InvoiceDate)=@PeriodMonth
           and inv.CompanyCode=job.CompanyCode
           and inv.ProductType=job.ProductType
           and inv.BasicModel=job.BasicModel
           and inv.JobType=job.JobType) inv

select * into #task
  from (select inv.InvoiceNo, isnull(sum(int.OperationHour * int.OperationCost),0) Labor
          from #inv inv, svTrnInvTask int
         where int.CompanyCode=@CompanyCode
           and int.BranchCode=@BranchCode
           and int.ProductType=@ProductType
           and int.InvoiceNo=inv.InvoiceNo
         group by inv.InvoiceNo) task

select * into #item
  from (select inv.InvoiceNo, mst.ParaValue Goods, isnull(sum(ini.SupplyQty * ini.RetailPrice),0) Part
          from #inv inv, svTrnInvItem ini, gnMstLookUpDtl mst
         where ini.CompanyCode=@CompanyCode
           and ini.BranchCode=@BranchCode
           and ini.ProductType=@ProductType
           and ini.InvoiceNo=inv.InvoiceNo
           and mst.CompanyCode=ini.CompanyCode
           and mst.CodeID='GTGO'
           and mst.LookUpValue=ini.TypeOfGoods
         group by inv.InvoiceNo, mst.ParaValue) item

set @TotalLaborSalesRevenue = (select sum(isnull(floor(int.Labor * (100 - inv.LaborDiscPct) / 100),0))
                                 from #inv inv, #task int
                                where inv.InvoiceNo=int.InvoiceNo)

set @LaborRevenueChargeable = (select sum(isnull(floor(int.Labor * (100 - inv.LaborDiscPct) / 100),0))
                                 from #inv inv, #task int
                                where inv.InvoiceNo=int.InvoiceNo
                                  and substring(inv.InvoiceNo,1,3)<>'INI'
                                  and inv.GroupJobType in ('RTN','OTH'))

set @LaborRevenueNonChargeable1 = (select sum(isnull(floor(int.Labor * (100 - inv.LaborDiscPct) / 100),0))
                                     from #inv inv, #task int
                                    where inv.InvoiceNo=int.InvoiceNo
                                      and (inv.JobType='CLAIM' or substring(inv.JobType,1,3)='FSC'))

set @LaborRevenueNonChargeable2 = (select sum(isnull(floor(int.Labor * (100 - inv.LaborDiscPct) / 100),0))
                                     from #inv inv, #task int
                                    where inv.InvoiceNo=int.InvoiceNo
                                      and (inv.JobType in ('PDI','REWORK') or substring(inv.InvoiceNo,1,3)='INI'))

set @TotalPartsSalesRevenue = (select sum(isnull(floor(ini.Part * (100 - inv.PartsDiscPct) / 100),0))
                                from #inv inv, #item ini
                               where inv.InvoiceNo=ini.InvoiceNo
       and ini.Goods='SPAREPART')

set @PartsRevenueChargeable = (select sum(isnull(floor(ini.Part * (100 - inv.PartsDiscPct) / 100),0))
                                 from #inv inv, #item ini
                                where inv.InvoiceNo=ini.InvoiceNo
                                  and substring(inv.InvoiceNo,1,3)<>'INI'
                                  and inv.GroupJobType in ('RTN','OTH')
                                  and ini.Goods='SPAREPART')

set @PartsRevenueNonChargeable1 = (select sum(isnull(floor(ini.Part * (100 - inv.PartsDiscPct) / 100),0))
                                     from #inv inv, #item ini
                                    where inv.InvoiceNo=ini.InvoiceNo
                                      and (inv.JobType='CLAIM' or substring(inv.JobType,1,3)='FSC')
                                      and ini.Goods='SPAREPART')

set @PartsRevenueNonChargeable2 = (select sum(isnull(floor(ini.Part * (100 - inv.PartsDiscPct) / 100),0))
                                     from #inv inv, #item ini
                                    where inv.InvoiceNo=ini.InvoiceNo
                                      and (inv.JobType in ('PDI','REWORK') or substring(inv.InvoiceNo,1,3)='INI')
                                      and ini.Goods='SPAREPART')

set @TotalMaterialSalesRevenue = (select sum(isnull(floor(ini.Part * (100 - inv.PartsDiscPct) / 100),0))
                                    from #inv inv, #item ini
                                   where inv.InvoiceNo=ini.InvoiceNo
                                     and ini.Goods in ('MATERIAL','OLI'))

set @MaterialRevenueChargeable = (select sum(isnull(floor(ini.Part * (100 - inv.PartsDiscPct) / 100),0))
                                    from #inv inv, #item ini
                                   where inv.InvoiceNo=ini.InvoiceNo
                                     and substring(inv.InvoiceNo,1,3)<>'INI'
                                     and inv.GroupJobType in ('RTN','OTH')
                                     and ini.Goods in ('MATERIAL','OLI'))

set @MaterialRevenueNonChargeable1 = (select sum(isnull(floor(ini.Part * (100 - inv.PartsDiscPct) / 100),0))
                                        from #inv inv, #item ini
                                       where inv.InvoiceNo=ini.InvoiceNo
                                         and (inv.JobType='CLAIM' or substring(inv.JobType,1,3)='FSC')
                                         and ini.Goods in ('MATERIAL','OLI'))

set @MaterialRevenueNonChargeable2 = (select sum(isnull(floor(ini.Part * (100 - inv.PartsDiscPct) / 100),0))
                                        from #inv inv, #item ini
                                       where inv.InvoiceNo=ini.InvoiceNo
                                         and (inv.JobType in ('PDI','REWORK') or substring(inv.InvoiceNo,1,3)='INI')
                                         and ini.Goods in ('MATERIAL','OLI'))

set @TotalServiceSalesChargeable = @LaborRevenueChargeable + @PartsRevenueChargeable + @MaterialRevenueChargeable
set @TotalServiceSalesNonChargeable1 = @LaborRevenueNonChargeable1 + @PartsRevenueNonChargeable1 + @MaterialRevenueNonChargeable1
set @TotalServiceSalesNonChargeable2 = @LaborRevenueNonChargeable2 + @PartsRevenueNonChargeable2 + @MaterialRevenueNonChargeable2
set @TotalServiceSalesRevenue = @TotalServiceSalesChargeable + @TotalServiceSalesNonChargeable1 + @TotalServiceSalesNonChargeable2

set @HoursSold = (select sum(isnull(OperationHour,0)) from svTrnInvTask
                   where CompanyCode=@CompanyCode
                     and BranchCode=@BranchCode
                     and ProductType=@ProductType
                     and exists (select InvoiceNo from svTrnInvoice
                                  where svTrnInvoice.CompanyCode=@CompanyCode
                                    and svTrnInvoice.BranchCode=@BranchCode
                                    and svTrnInvoice.ProductType=@ProductType
    and svTrnInvoice.InvoiceNo=svTrnInvTask.InvoiceNo
                                    and year(svTrnInvoice.InvoiceDate)=@PeriodYear
                                    and month(svTrnInvoice.InvoiceDate)=@PeriodMonth))
 
set @PassengerCar = isnull((select count(*)
                              from (select distinct inv.ChassisCode, inv.ChassisNo, convert(varchar,spk.JobOrderDate,112) SPK
                                      from svTrnInvoice inv, svTrnService spk
                                     where inv.CompanyCode=@CompanyCode
                                       and inv.BranchCode=@BranchCode
                                       and inv.ProductType=@ProductType
                                       and year(inv.InvoiceDate)=@PeriodYear
                                       and month(inv.InvoiceDate)=@PeriodMonth
                                       and right(inv.BasicModel,3)<>'ANG'
                                       and inv.CompanyCode=spk.CompanyCode
                                       and inv.BranchCode=spk.BranchCode
                                       and inv.ProductType=spk.ProductType
                                       and inv.JobOrderNo=spk.JobOrderNo)pc),0)

set @CommercialVehicle = isnull((select count(*)
                                   from (select distinct inv.ChassisCode, inv.ChassisNo, convert(varchar,spk.JobOrderDate,112) SPK
                                           from svTrnInvoice inv, svTrnService spk
                                          where inv.CompanyCode=@CompanyCode
                                            and inv.BranchCode=@BranchCode
                                            and inv.ProductType=@ProductType
                                            and year(inv.InvoiceDate)=@PeriodYear
                                            and month(inv.InvoiceDate)=@PeriodMonth
                                            and right(inv.BasicModel,3)='ANG'
                                            and inv.CompanyCode=spk.CompanyCode
                                            and inv.BranchCode=spk.BranchCode
                                            and inv.ProductType=spk.ProductType
                                            and inv.JobOrderNo=spk.JobOrderNo)cv),0)

set @PDI = isnull((select count(*)
                     from (select distinct inv.ChassisCode, inv.ChassisNo, convert(varchar,spk.JobOrderDate,112) SPK
                             from svTrnInvoice inv, svTrnService spk
                            where inv.CompanyCode=@CompanyCode
                              and inv.BranchCode=@BranchCode
                              and inv.ProductType=@ProductType
                              and year(inv.InvoiceDate)=@PeriodYear
                              and month(inv.InvoiceDate)=@PeriodMonth
                              and inv.JobType='PDI'
                              and inv.CompanyCode=spk.CompanyCode
                              and inv.BranchCode=spk.BranchCode
                              and inv.ProductType=spk.ProductType
                              and inv.JobOrderNo=spk.JobOrderNo)pdi),0)

-- B. No. of Unit Intake
set @NoWorkOrderVehicleIntake = @PassengerCar + @CommercialVehicle
set @ServiceRevenuePerUnit = @TotalServiceSalesChargeable + @TotalServiceSalesNonChargeable1

-- C. No. of Job Type
set @Chargeable1 = isnull((select count(*)  -- kelipatan 10.000 > 30.000
                                from (select inv.InvoiceNo 
                                        from svTrnInvoice inv, svTrnInvTask int, svMstJob job
                                       where inv.CompanyCode=@CompanyCode
                                         and inv.BranchCode=@BranchCode
                                         and inv.ProductType=@ProductType
                                         and year(inv.InvoiceDate)=@PeriodYear
                                 and month(inv.InvoiceDate)=@PeriodMonth
                                         and inv.CompanyCode=job.CompanyCode
                                         and inv.ProductType=job.ProductType
                                         and inv.BasicModel=job.BasicModel
                                         and inv.JobType=job.JobType
                                         and job.GroupJobType='RTN'
                                         and inv.JobType not in ('PB10000','PB20000')
                                         and substring(inv.JobType,3,15) like '%0000%'
                                         and inv.CompanyCode=int.CompanyCode
                                         and inv.BranchCode=int.BranchCode
                                         and inv.ProductType=int.ProductType
                                         and inv.InvoiceNo=int.InvoiceNo)c1),0)

set @Chargeable2 = isnull((select count(*)
                                from (select inv.InvoiceNo 
                                        from svTrnInvoice inv, svTrnInvTask int
                                       where inv.CompanyCode=@CompanyCode
                                         and inv.BranchCode=@BranchCode
                                         and inv.ProductType=@ProductType
                                         and year(inv.InvoiceDate)=@PeriodYear
                                         and month(inv.InvoiceDate)=@PeriodMonth
                                         and inv.JobType in ('PB10000','PB20000')
                                         and inv.CompanyCode=int.CompanyCode
                                         and inv.BranchCode=int.BranchCode
                                         and inv.ProductType=int.ProductType
                                         and inv.InvoiceNo=int.InvoiceNo)c2),0)

set @Chargeable3 = isnull((select count(*)
                                from (select inv.InvoiceNo 
                                        from svTrnInvoice inv, svTrnInvTask int, svMstJob job
                                       where inv.CompanyCode=@CompanyCode
                                         and inv.BranchCode=@BranchCode
                                         and inv.ProductType=@ProductType
                                         and year(inv.InvoiceDate)=@PeriodYear
                                         and month(inv.InvoiceDate)=@PeriodMonth
                                         and inv.CompanyCode=job.CompanyCode
                                         and inv.ProductType=job.ProductType
                                         and inv.BasicModel=job.BasicModel
                                         and inv.JobType=job.JobType
                                         and job.GroupJobType='RTN'
                                         and substring(inv.JobType,3,15) like '%5000'
                                         and inv.CompanyCode=int.CompanyCode
                                         and inv.BranchCode=int.BranchCode
                                         and inv.ProductType=int.ProductType
                                         and inv.InvoiceNo=int.InvoiceNo)c3),0)

set @Chargeable4 = isnull((select count(*)
                                from (select inv.InvoiceNo 
                                        from svTrnInvoice inv, svTrnInvTask int
                                       where inv.CompanyCode=@CompanyCode
                                         and inv.BranchCode=@BranchCode
                                         and inv.ProductType=@ProductType
                                         and year(inv.InvoiceDate)=@PeriodYear
                                         and month(inv.InvoiceDate)=@PeriodMonth
                                         and inv.JobType='OTHER'
                                         and inv.CompanyCode=int.CompanyCode
                  and inv.BranchCode=int.BranchCode
  and inv.ProductType=int.ProductType
                                         and inv.InvoiceNo=int.InvoiceNo)c4),0)

set @TotalChargeable = @Chargeable1 + @Chargeable2 + @Chargeable3 + @Chargeable4

set @NonChargeable1 = isnull((select count(*)
                                from (select inv.InvoiceNo 
                                        from svTrnInvoice inv, svTrnInvTask int
                                       where inv.CompanyCode=@CompanyCode
                                         and inv.BranchCode=@BranchCode
                                         and inv.ProductType=@ProductType
                                         and year(inv.InvoiceDate)=@PeriodYear
                                         and month(inv.InvoiceDate)=@PeriodMonth
                                         and inv.JobType='CLAIM'
                                         and inv.CompanyCode=int.CompanyCode
                                         and inv.BranchCode=int.BranchCode
                                         and inv.ProductType=int.ProductType
                                         and inv.InvoiceNo=int.InvoiceNo)nc1),0)

set @NonChargeable2 = isnull((select count(*)
                                from (select inv.InvoiceNo 
                                        from svTrnInvoice inv, svTrnInvTask int
                                       where inv.CompanyCode=@CompanyCode
                                         and inv.BranchCode=@BranchCode
                                         and inv.ProductType=@ProductType
                                         and year(inv.InvoiceDate)=@PeriodYear
                                         and month(inv.InvoiceDate)=@PeriodMonth
                                         and inv.JobType='FSC01'
                                         and inv.CompanyCode=int.CompanyCode
                                         and inv.BranchCode=int.BranchCode
                                         and inv.ProductType=int.ProductType
                                         and inv.InvoiceNo=int.InvoiceNo)nc2),0)

set @NonChargeable3 = isnull((select count(*)
                                from (select inv.InvoiceNo 
                                        from svTrnInvoice inv, svTrnInvTask int
                                       where inv.CompanyCode=@CompanyCode
                                         and inv.BranchCode=@BranchCode
                                         and inv.ProductType=@ProductType
                                         and year(inv.InvoiceDate)=@PeriodYear
                                         and month(inv.InvoiceDate)=@PeriodMonth
                                         and inv.JobType='REWORK'
                                         and inv.CompanyCode=int.CompanyCode
                                         and inv.BranchCode=int.BranchCode
                                         and inv.ProductType=int.ProductType
                                         and inv.InvoiceNo=int.InvoiceNo)nc3),0)

set @NonChargeable4 = isnull((select count(*)
                                from (select inv.InvoiceNo 
                                        from svTrnInvoice inv, svTrnInvTask int
                                       where inv.CompanyCode=@CompanyCode
                                         and inv.BranchCode=@BranchCode
                                         and inv.ProductType=@ProductType
                                         and year(inv.InvoiceDate)=@PeriodYear
                                         and month(inv.InvoiceDate)=@PeriodMonth
                                         and substring(inv.InvoiceNo,1,3)='INI'
                                         and inv.CompanyCode=int.CompanyCode
                                         and inv.BranchCode=int.BranchCode
                 and inv.ProductType=int.ProductType
             and inv.InvoiceNo=int.InvoiceNo)nc4),0)

set @NonChargeable5 = isnull((select count(*)
                                from (select inv.InvoiceNo 
                                        from svTrnInvoice inv, svTrnInvTask int
                                       where inv.CompanyCode=@CompanyCode
                                         and inv.BranchCode=@BranchCode
                                         and inv.ProductType=@ProductType
                                         and year(inv.InvoiceDate)=@PeriodYear
                                         and month(inv.InvoiceDate)=@PeriodMonth
                                         and inv.JobType='PDI'
                                         and inv.CompanyCode=int.CompanyCode
                                         and inv.BranchCode=int.BranchCode
                                         and inv.ProductType=int.ProductType
                                         and inv.InvoiceNo=int.InvoiceNo)nc5),0)

set @TotalNonChargeable = @NonChargeable1 + @NonChargeable2 + @NonChargeable3 + @NonChargeable4 + @NonChargeable5

-- D. Workshop Service Strength
set @NoWorkingStall = isnull((select count(*) from svMstStall
                               where CompanyCode=@CompanyCode
                                 and ProductType=@ProductType
                                 and IsActive=1),1)

set @NoAdminSupportStaff = isnull((select count(*) from gnMstEmployee
                                    where CompanyCode=@CompanyCode
                                      and BranchCode=@BranchCode
                                      and TitleCode in ('2','4','7','10','11')
                                      and PersonnelStatus='1'),1)

set @NoServiceAdvisorsStaff = isnull((select count(*) from gnMstEmployee
                                       where CompanyCode=@CompanyCode
                                         and BranchCode=@BranchCode
                                         and TitleCode='3'
                                         and PersonnelStatus='1'),1)

set @NoForeman = isnull((select count(*) from gnMstEmployee
                          where CompanyCode=@CompanyCode
                            and BranchCode=@BranchCode
                            and TitleCode='8'
                            and PersonnelStatus='1'),1)

set @NoTechnician = isnull((select count(*) from gnMstEmployee
                             where CompanyCode=@CompanyCode
                               and BranchCode=@BranchCode
                               and TitleCode='9'
                               and PersonnelStatus='1'),1)

set @NoPDIStaff	= 0
set @NoProductiveStaff = @NoForeman + @NoTechnician
set @TotalStaff = @NoAdminSupportStaff + @NoServiceAdvisorsStaff + @NoProductiveStaff + @NoPDIStaff

set @TotalAvailableHours = isnull((select TotalWorkingDays from svMstTarget
                                    where CompanyCode=@CompanyCode
                                      and BranchCode=@BranchCode
                                      and ProductType=@ProductType
                                      and PeriodYear=@PeriodYear
                                      and PeriodMonth=@PeriodMonth),0) * 8

set @OvertimeNormalWorkingHour = 0

set @LaborSalesTurnoverProductiveStaff = @TotalLaborSalesRevenue / @NoProductiveStaff
set @LaborSalesTurnoverServiceAdvisors= @TotalLaborSalesRevenue / @NoServiceAdvisorsStaff
set @LaborSalesTurnoverStall = @TotalLaborSalesRevenue / @NoWorkingStall

-- E. Productivity Indicators	
set @RepairUnitProductiveStaff = @NoWorkOrderVehicleIntake / @NoProductiveStaff
set @RepairUnitTechnician = @NoWorkOrderVehicleIntake / @NoTechnician 
set @RepairUnitWorkingStall = @NoWorkOrderVehicleIntake / @NoWorkingStall
set @NoCustomertoServiceAdvisor = @NoWorkOrderVehicleIntake / @NoServiceAdvisorsStaff
set @NoWorkdays = isnull((select TotalWorkingDays from svMstTarget
               where CompanyCode=@CompanyCode
                       and BranchCode=@BranchCode
                        and ProductType=@ProductType
                             and PeriodYear=@PeriodYear
                             and PeriodMonth=@PeriodMonth),0)

if @NoWorkdays = 0
    begin
       set @RepairUnitProductiveDay = @RepairUnitProductiveStaff
       set @RepairUnitTechnicianDay = @RepairUnitTechnician
       set @RepairUnitWorkingStallDay = @RepairUnitWorkingStall
       set @NoCustomertoServiceAdvisorDay = @NoCustomertoServiceAdvisor
       set @RepairUnitProductiveDay = @RepairUnitProductiveStaff
       set @RepairUnitTechnicianDay = @RepairUnitTechnician
       set @RepairUnitWorkingStallDay = @RepairUnitWorkingStall
       set @NoCustomertoServiceAdvisorDay = @NoCustomertoServiceAdvisor
    end
else
    begin
       set @RepairUnitProductiveDay = @RepairUnitProductiveStaff / @NoWorkdays
       set @RepairUnitTechnicianDay = @RepairUnitTechnician / @NoWorkdays
       set @RepairUnitWorkingStallDay = @RepairUnitWorkingStall / @NoWorkdays
       set @NoCustomertoServiceAdvisorDay = @NoCustomertoServiceAdvisor / @NoWorkdays
       set @RepairUnitProductiveDay = @RepairUnitProductiveStaff / @NoWorkdays
       set @RepairUnitTechnicianDay = @RepairUnitTechnician / @NoWorkdays
       set @RepairUnitWorkingStallDay = @RepairUnitWorkingStall / @NoWorkdays
       set @NoCustomertoServiceAdvisorDay = @NoCustomertoServiceAdvisor / @NoWorkdays
    end

if @TotalAvailableHours = 0
    set @HoursSoldtoAvailableHours = @HoursSold  * 100
else
    set @HoursSoldtoAvailableHours = @HoursSold * 100 / @TotalAvailableHours

-- F. Service Retention & Marketing Activity
set @ServiceReminder = 0
set @ServiceFollowUp = 0
set @ServiceBookings = 0

if @NoWorkOrderVehicleIntake = 0
   begin
       set @ServiceRemindertoNoWorkOrder = @ServiceReminder * 100
       set @ServiceFollowUptoNoWorkOrder = @ServiceFollowUp * 100
       set @ServiceBookingstoNoWorkOrder = @ServiceBookings * 100
   end
else
   begin
       set @ServiceRemindertoNoWorkOrder = @ServiceReminder * 100 / @NoWorkOrderVehicleIntake
       set @ServiceFollowUptoNoWorkOrder = @ServiceFollowUp * 100 / @NoWorkOrderVehicleIntake
       set @ServiceBookingstoNoWorkOrder = @ServiceBookings * 100 / @NoWorkOrderVehicleIntake
   end

-- G. CSI Performance	
--> akan berlaku setelah SMR selesai di develop
set @CSIScore = 0
set @DirectComplaintsReceived = 0
set @IndirectComplaintsReceived = 0
set @TotalNoFollowUpSatisfied = 0
set @NoNotSatisfiedService = 0
set @NoNotSatisfiedTechnical = 0
set @TotalNoFollowUpNotSatisfied = @NoNotSatisfiedService + @NoNotSatisfiedTechnical

if @NoWorkOrderVehicleIntake = 0
   begin
      set @FollowUpSatisfiedtoNoWorkOrder = @TotalNoFollowUpSatisfied
      set @FollowUpNotSatisfiedtoNoWorkOrder = @TotalNoFollowUpNotSatisfied
      set @ComplaintsFollowUpNotSatisfied = (@DirectComplaintsReceived + @IndirectComplaintsReceived +
                                             @TotalNoFollowUpNotSatisfied)
   end
else
   begin
      set @FollowUpSatisfiedtoNoWorkOrder = @TotalNoFollowUpSatisfied / @NoWorkOrderVehicleIntake
      set @FollowUpNotSatisfiedtoNoWorkOrder = @TotalNoFollowUpNotSatisfied / @NoWorkOrderVehicleIntake
      set @ComplaintsFollowUpNotSatisfied = (@DirectComplaintsReceived + @IndirectComplaintsReceived +
                                             @TotalNoFollowUpNotSatisfied) / @NoWorkOrderVehicleIntake
   end


-- select data field
select @CompanyCode                       CompanyCode                    --varchar(15)
      ,@BranchCode                        BranchCode                     --varchar(15)
      ,@ProductType                       ProductType                    --varchar(15)
      ,@PeriodYear                        PeriodYear --numeric(4,0)
      ,@PeriodMonth                       PeriodMonth                    --numeric(2,0)
      ,@TotalLaborSalesRevenue            TotalLaborSalesRevenue
      ,@LaborRevenueChargeable   LaborRevenueChargeable
      ,@LaborRevenueNonChargeable1        LaborRevenueNonChargeable1
      ,@LaborRevenueNonChargeable2        LaborRevenueNonChargeable2
      ,@TotalPartsSalesRevenue            TotalPartsSalesRevenue
      ,@PartsRevenueChargeable            PartsRevenueChargeable
      ,@PartsRevenueNonChargeable1        PartsRevenueNonChargeable1
      ,@PartsRevenueNonChargeable2        PartsRevenueNonChargeable2
      ,@TotalMaterialSalesRevenue         TotalMaterialSalesRevenue
      ,@MaterialRevenueChargeable         MaterialRevenueChargeable
      ,@MaterialRevenueNonChargeable1     MaterialRevenueNonChargeable1
      ,@MaterialRevenueNonChargeable2     MaterialRevenueNonChargeable2
      ,@TotalServiceSalesRevenue          TotalServiceSalesRevenue
      ,@TotalServiceSalesChargeable       TotalServiceSalesChargeable
      ,@TotalServiceSalesNonChargeable1   TotalServiceSalesNonChargeable1
      ,@TotalServiceSalesNonChargeable2   TotalServiceSalesNonChargeable2
      ,@HoursSold                         HoursSold
      ,@ServiceRevenuePerUnit             ServiceRevenuePerUnit
      ,@LaborSalesTurnoverProductiveStaff LaborSalesTurnoverProductiveStaff
      ,@LaborSalesTurnoverServiceAdvisors LaborSalesTurnoverServiceAdvisors
      ,@LaborSalesTurnoverStall           LaborSalesTurnoverStall
      ,@NoWorkOrderVehicleIntake          NoWorkOrderVehicleIntake
      ,@PassengerCar                      PassengerCar
      ,@CommercialVehicle                 CommercialVehicle
      ,@PDI                               PDI
      ,@TotalChargeable                   TotalChargeable
      ,@Chargeable1                       Chargeable1
      ,@Chargeable2                       Chargeable2
      ,@Chargeable3                       Chargeable3
      ,@Chargeable4                       Chargeable4
      ,@TotalNonChargeable                TotalNonChargeable
      ,@NonChargeable1                    NonChargeable1
      ,@NonChargeable2                    NonChargeable2
      ,@NonChargeable3                    NonChargeable3
      ,@NonChargeable4                    NonChargeable4
      ,@NonChargeable5                    NonChargeable5
      ,@NoWorkingStall                    NoWorkingStall
      ,@TotalStaff                        TotalStaff
      ,@NoAdminSupportStaff               NoAdminSupportStaff
      ,@NoServiceAdvisorsStaff            NoServiceAdvisorsStaff
      ,@NoProductiveStaff                 NoProductiveStaff
      ,@NoForeman                         NoForeman
      ,@NoTechnician                      NoTechnician
      ,@NoPDIStaff	                      NoPDIStaff
      ,@TotalAvailableHours		          TotalAvailableHours
      ,@OvertimeNormalWorkingHour 		  OvertimeNormalWorkingHour
      ,@LaborSalesTurnoverProductiveStaff LaborSalesTurnoverProductiveStaff
      ,@LaborSalesTurnoverServiceAdvisors LaborSalesTurnoverServiceAdvisors
      ,@LaborSalesTurnoverStall           LaborSalesTurnoverStall
      ,@RepairUnitProductiveStaff         RepairUnitProductiveStaff
      ,@RepairUnitTechnician              RepairUnitTechnician
      ,@RepairUnitWorkingStall            RepairUnitWorkingStall
      ,@NoCustomertoServiceAdvisor        NoCustomertoServiceAdvisor
      ,@NoWorkdays	                      NoWorkdays
      ,@RepairUnitProductiveDay           RepairUnitProductiveDay
      ,@RepairUnitTechnicianDay           RepairUnitTechnicianDay
      ,@RepairUnitWorkingStallDay         RepairUnitWorkingStallDay
      ,@NoCustomertoServiceAdvisorDay     NoCustomertoServiceAdvisorDay
      ,@HoursSoldtoAvailableHours         
      ,@ServiceReminder                   ServiceReminder
      ,@ServiceFollowUp                   ServiceFollowUp
,@ServiceBookings                   ServiceBookings
      ,@ServiceRemindertoNoWorkOrder      ServiceRemindertoNoWorkOrder
      ,@ServiceFollowUptoNoWorkOrder      ServiceFollowUptoNoWorkOrder 
      ,@ServiceBookingstoNoWorkOrder      ServiceBookingstoNoWorkOrder
      ,@CSIScore	                      CSIScore
      ,@DirectComplaintsReceived	      DirectComplaintsReceived
      ,@IndirectComplaintsReceived	      IndirectComplaintsReceived
      ,@TotalNoFollowUpSatisfied	      TotalNoFollowUpSatisfied
      ,@TotalNoFollowUpNotSatisfied       TotalNoFollowUpNotSatisfied
      ,@NoNotSatisfiedService             NoNotSatisfiedService
      ,@NoNotSatisfiedTechnical           NoNotSatisfiedTechnical
      ,@FollowUpSatisfiedtoNoWorkOrder    FollowUpSatisfiedtoNoWorkOrder
      ,@FollowUpNotSatisfiedtoNoWorkOrder FollowUpNotSatisfiedtoNoWorkOrder
      ,@ComplaintsFollowUpNotSatisfied    ComplaintsFollowUpNotSatisfied


/*
-- Insert/Update Process
select count(*) into @Flag from svHstMSI
 where CompanyCode = @CompanyCode
   and BranchCode  = @BranchCode
   and ProductType = @ProductType
   and PeriodYear  = @PeriodYear
   and PeriodMonth = @PeriodMonth
if  @Flag = 0
    begin
         insert svHstMSI
    end
else
    if  @Posting is TRUE
        begin
             update svHstMSI
        end

select * from svHstMSI
 order by CompanyCode, BranchCode, ProductType, PeriodYear, PeriodMonth
*/

-- drop table
drop table #task
drop table #item
drop table #inv
GO
ALTER procedure [dbo].[sp_spMstSalesTargetDtl]  (  @CompanyCode varchar(10) ,@BranchCode varchar(10),@Year Varchar(4),@Month varchar(2))
as
select 
a.CompanyCode,
a.BranchCode,
 a.[Year],
a.[Month],
a.CategoryCode,
   b.LookUpValueName  CategoryName,
a.QtyTarget,
a.AmountTarget,
a.TotalJaringan
from spMstSalesTargetDtl a
inner join gnMstLookUpDtl b on 
a.CompanyCode=b.CompanyCode 
and a.CategoryCode=b.LookUpValue
WHERE  b.CodeID='CSCT' and a.CompanyCode=@CompanyCode and  a.BranchCode=@BranchCode
and a.[Year]=@Year and a.[Month]=@Month
GO
ALTER procedure [dbo].[usppvt_SvMsiP33]  
   @CompanyCode varchar(15),  
   @BranchCode  varchar(15),  
   @StartDate   datetime,  
   @EndDate     datetime  
as    
  
begin    
  
set nocount on;    
  
declare @t1 as table   
(  
 RecNo        int,  
 FieldName    varchar(100),  
 Caption      varchar(100),  
 FormatString varchar(100),  
 IsVisible    bit,  
 Width        int,  
 HAlignment   int,        -- {0:Default,1:Near,2:Center,3:Far}  
 Area         int,        -- {0:Row,1:Column,2:Filter,3:Data}  
 PivotSummaryType   int,  -- {0:Count,1:Sum,2:Min,3:Max,4:Average,5:StdDev,6:StdDevp,7:Var,8:Varp,9:Custom}  
 PivotGroupInterval int   -- {0:Default,1:Date,2:DateDay,3:DateDayOfWeek,4:DateDayOfYear,5:DateWeekOfMonth}  
        -- {6:DateWeekOfYear,7:DateMonth,8:DateQuarter,9:DateYear,10:YearAge,11:MonthAge}  
        -- {12:WeekAge,13:DayAge,14:Alphabetical,15:Numeric,16:Hour,17:Custom}  
)  
  
insert into @t1 values(01,'GroupJobType','Group JobType','',1,120,0,0,0,0)  
insert into @t1 values(02,'JobType','JobType','',1,110,0,0,0,0)  
insert into @t1 values(03,'ChassisCode','Chassis Code','',1,110,0,2,0,0)  
insert into @t1 values(04,'ChassisNo','Chassis No','',1,110,0,2,0,0)  
insert into @t1 values(05,'VinNo','VIN No','',1,160,0,2,0,0)  
insert into @t1 values(06,'Odometer','Odometer','',1,110,0,2,0,0)  
insert into @t1 values(07,'JobOrderDate','JobOrder Date','dd-MMM-yyy HH:mm',1,120,0,2,0,0)  
insert into @t1 values(08,'JobOrderDate','Jml Unit','dd-MMM-yyy HH:mm',1,120,0,3,0,0)  
insert into @t1 values(09,'JobTypeReal','Real JobType','',1,110,0,0,0,0)  
  
select * from @t1 order by RecNo  
  
select * into #t1 from (  
--select ChassisCode, ChassisNo, JobType, convert(datetime, convert(varchar, JobOrderDate, 112)) JobOrderDate  
--  from svTrnInvoice  
-- where 1 = 1  
--   and CompanyCode = @CompanyCode  
--   and BranchCode = @BranchCode  
--   and convert(varchar, InvoiceDate, 112)  
--       between convert(varchar, @StartDate, 112)   
--       and convert(varchar, @EndDate, 112)  
-- group by ChassisCode, ChassisNo, JobType, convert(varchar, JobOrderDate, 112)  

select a.ChassisCode, a.ChassisNo, (a.ChassisCode + convert(varchar, a.ChassisNo)) as VinNo
     , case b.GroupJobType 
         when 'RTN' then 
			(case 
				when b.WarrantyOdometer in (10000,30000,50000,70000,90000) then 'PB.A.1 3 5 7 9'
				when b.WarrantyOdometer in (20000,60000,100000) then 'PB.A.2 6 10'
				when b.WarrantyOdometer in (40000,80000) then 'PB.A.4 8'
				when b.WarrantyOdometer in (110000,130000,150000,170000,190000) then 'PB.B.1 3 5 7 9'
				when b.WarrantyOdometer in (120000,160000,200000) then 'PB.B.2 6 10'
				when b.WarrantyOdometer in (140000,180000) then 'PB.B.4 8'
				when b.WarrantyOdometer in (210000,230000,250000,270000,290000) then 'PB.B.1 3 5 7 9'
				when b.WarrantyOdometer in (220000,260000,300000) then 'PB.B.2 6 10'
				when b.WarrantyOdometer in (240000,280000) then 'PB.B.4 8'
				when b.WarrantyOdometer in (  5000, 15000, 25000, 35000, 45000, 55000, 65000, 75000, 85000, 95000) then 'PB.C.5000'
				when b.WarrantyOdometer in (105000,115000,125000,135000,145000,155000,165000,175000,185000,195000) then 'PB.C.5000'
				when b.WarrantyOdometer in (205000,215000,225000,235000,245000,155000,265000,275000,285000,295000) then 'PB.C.5000'
				else 'OTHERS'
				end
			)
         when 'FSC' then 
			(case b.PdiFscSeq when 0 then 'PDI' else 'FS' end)
         when 'CLM' then 'CLAIM'
         else 'OTHERS'
       end as GroupJobType
     , case b.GroupJobType 
         when 'RTN' then 'PB' + right(replicate(' ', 5) + convert(varchar, b.WarrantyOdometer), 6) 
         when 'FSC' then 
			(case b.PdiFscSeq when 0 then 'PDI' else ('FS' + right(replicate(' ', 5) + convert(varchar, b.WarrantyOdometer), 6)) end)
         when 'CLM' then 'CLAIM'
         else 'OTHERS'
       end as JobType
     , b.JobType as JobTypeReal
     , b.WarrantyOdometer
     , Odometer = (
			select top 1 Odometer
			  from svTrnInvoice
			 where CompanyCode = a.CompanyCode
			   and ChassisCode = a.ChassisCode
			   and ChassisNo = a.ChassisNo
			   and convert(varchar, JobOrderDate, 112) = convert(varchar, a.JobOrderDate, 112)
			 order by Odometer desc 
       )
     , convert(datetime, convert(varchar, a.JobOrderDate, 112)) JobOrderDate  
  from svTrnInvoice a  
  left join svMstJob b
    on b.CompanyCode = a.CompanyCode
   and b.BasicModel = a.BasicModel
   and b.JobType = a.JobType  
 where 1 = 1  
   and a.CompanyCode = @CompanyCode  
   and a.BranchCode = @BranchCode  
   and convert(varchar, InvoiceDate, 112)  
       between convert(varchar, @StartDate, 112)   
       and convert(varchar, @EndDate, 112)  
 group by a.CompanyCode, a.ChassisCode, a.ChassisNo, b.GroupJobType, b.PdiFscSeq, b.WarrantyOdometer, convert(varchar, a.JobOrderDate, 112), b.JobType  
 )#  
  
--select a.* from #t1 a
  
select a.* from #t1 a where a.JobType not in ('OTHER','CLAIM')  
 union all  
select a.* from #t1 a  
 where 1 = 1  
   and a.JobType = 'OTHER'  
   and not exists (  
 select * from #t1  
  where ChassisCode = a.ChassisCode  
    and ChassisNo = a.ChassisNo  
    and JobOrderDate = a.JobOrderDate  
    and JobType != a.JobType)  
 union all  
select a.* from #t1 a  
 where 1 = 1  
   and a.JobType = 'CLAIM'  
   and not exists (  
 select * from #t1  
  where ChassisCode = a.ChassisCode  
    and ChassisNo = a.ChassisNo  
    and JobOrderDate = a.JobOrderDate  
    and JobType ='OTHER')
  
drop table #t1  
  
end
GO
ALTER procedure [dbo].[uspfn_SvInqVehicleHistory]
	 @CompanyCode varchar(20),
	 @BranchCode  varchar(20),
	 @ProductType varchar(20),
	 @PoliceRegNo varchar(20) = '',
	 @ServiceBookNo varchar(20) = '',
	 @CustomerCode varchar(20) = '',
	 @ChassisCode  varchar(20) = '',
	 @ChassisNo    varchar(20) = '',
	 @EngineCode  varchar(20) = '',
	 @EngineNo    varchar(20) = '',
	 @BasicModel  varchar(20) = '',
	 @IsCheckDate bit,
	 @ServiceDate datetime,
	 @IsAllBranch bit

as

select convert(bit, '0') as Cetak
     , isnull(b.BranchCode, '') as BranchCode
     , a.PoliceRegNo
     , a.BasicModel
     , a.TransmissionType
     , ltrim(rtrim(a.ChassisCode)) + convert(varchar, a.ChassisNo) as Chassis
     , a.ChassisCode
     , a.ChassisNo
     , ltrim(rtrim(a.EngineCode)) + convert(varchar, a.EngineNo) as Engine
     , a.ServiceBookNo
     , a.ColourCode
     , b.CustomerCode
     , c.CustomerName
     , a.CustomerCode + ' - ' + isnull(c.CustomerName, '') Customer
     , a.FakturPolisiDate
     , a.LastServiceDate
     , a.LastServiceOdometer
     , a.DealerCode
     , d.CustomerName as DealerName
     , a.DealerCode + ' - ' + isnull(d.CustomerName, '') Dealer
     , isnull(a.RemainderDescription, '') Remarks
     --,(select Remarks from svTrnInvoice where CreatedDate = (select max(CreatedDate) from svTrnInvoice where PoliceRegNo=@PoliceRegNo)) Remarks
     , a.CustomerCode
  from svMstCustomerVehicle a with (nolock, nowait)
 inner join svTrnService b with (nolock, nowait)
    on b.CompanyCode = a.CompanyCode
   and b.ChassisCode = a.ChassisCode
   and b.ChassisNo = a.ChassisNo
  left join gnMstCustomer c with(nolock, nowait) 
    on c.CompanyCode  = a.CompanyCode
   and c.CustomerCode = a.CustomerCode
  left join gnMstCustomer d with(nolock, nowait) 
    on d.CompanyCode  = a.CompanyCode
   and d.CustomerCode = a.DealerCode
 where 1 = 1
   and a.CompanyCode = a.CompanyCode
   and b.BranchCode like (case @IsAllBranch when 1 then '%' else @BranchCode end)
   and b.ProductType = @ProductType
   and a.PoliceRegNo like ('%' + @PoliceRegNo + '%')
   and a.ServiceBookNo like ('%' + @ServiceBookNo + '%')
   and a.CustomerCode like ('%' + @CustomerCode + '%')
   and a.ChassisCode like ('%' + @ChassisCode + '%')
   and convert(varchar, a.ChassisNo) like ('%' + @ChassisNo + '%')
   and a.EngineCode like ('%' + @EngineCode + '%')
   and convert(varchar, a.EngineNo) like ('%' + @EngineNo  + '%')
   and a.BasicModel like ('%' + @BasicModel + '%')
   and convert(varchar, isnull(b.JobOrderDate, convert(datetime, '19000101')), 112) >=  (case @IsCheckDate when 1 then convert(varchar, @ServiceDate, 112) else '19000102' end)
   and b.ServiceStatus <> '6'
 Group BY b.BranchCode
     , a.PoliceRegNo
     , a.BasicModel
     , a.TransmissionType
     , a.ChassisCode
     , a.ChassisNo
     , a.ChassisCode
     , a.ChassisNo
     , a.EngineCode
     , a.EngineNo
     , a.ServiceBookNo
     , a.ColourCode
     , b.CustomerCode
     , c.CustomerName
     , a.CustomerCode
     , c.CustomerName
     , a.FakturPolisiDate
     , a.LastServiceDate
     , a.LastServiceOdometer
     , a.DealerCode
     , d.CustomerName
     , a.DealerCode
     , d.CustomerName
     , a.RemainderDescription
     , a.CustomerCode
GO
ALTER procedure [dbo].[uspfn_spGetLookupLMP4Srv]     
@CompanyCode varchar(15), @BranchCode varchar(15),    
@SalesType varchar(5), @TypeOfGoods varchar(15), @ProductType varchar(15)    
as    
SELECT * FROM     
(    
SELECT    
 PickingSlipNo,     
 PickingSlipDate,    
 BPSFNo,     
 BPSFDate,    
 (    
   SELECT TOP 1 PRODUCTTYPE FROM spTrnSBPSFDtl    
  WHERE spTrnSBPSFHdr.CompanyCode = spTrnSBPSFDtl.CompanyCode    
  AND spTrnSBPSFHdr.BranchCode = spTrnSBPSFDtl.BranchCode    
  AND spTrnSBPSFHdr.BPSFNo = spTrnSBPSFDtl.BPSFNo    
 ) AS ProductType,  
 spTrnSBPSFHdr.CustomerCode,
 spTrnSBPSFHdr.CustomerCodeShip,
 spTrnSBPSFHdr.CustomerCodeBill as CustomerCodeTagih, 
 b.CustomerName,  
 b.Address1,  
 b.Address2,  
 b.Address3,  
 b.Address4,  
 b.CustomerName CustomerNameTagih,  
 b.Address1 Address1Tagih,  
 b.Address2 Address2Tagih,  
 b.Address3 Address3Tagih,  
 b.Address4 Address4Tagih,  
 c.LookUpValueName TransType    
FROM spTrnSBPSFHdr    
join gnMstCustomer b  
ON spTrnSBPSFHdr.CompanyCode = b.CompanyCode  
AND spTrnSBPSFHdr.CustomerCode = b.CustomerCode  
join gnMstLookupDtl c on  
spTrnSBPSFHdr.CompanyCode = c.CompanyCode  
and spTrnSBPSFHdr.TransType= c.LookupValue   
AND c.CodeID = 'TTSR'  
WHERE spTrnSBPSFHdr.CompanyCode = @CompanyCode    
AND spTrnSBPSFHdr.BranchCode    = @BranchCode    
AND spTrnSBPSFHdr.SalesType     = @SalesType    
AND spTrnSBPSFHdr.TypeOfGoods   = @TypeOfGoods    
AND (spTrnSBPSFHdr.Status = '1' OR spTrnSBPSFHdr.Status = '0')    
AND (spTrnSBPSFHdr.PickingSlipNo NOT IN (SELECT PickingSlipNo FROM spTrnSLmpHdr where CompanyCode = @CompanyCode AND BranchCode = @BranchCode))    
) A    
WHERE A.ProductType = @ProductType
GO

if object_id('usprpt_GlRpConsol001') is not null
	drop procedure usprpt_GlRpConsol001
GO
CREATE  PROCEDURE [dbo].[usprpt_GlRpConsol001] 
(
	@CompanyCode VARCHAR(15),
	@BranchCode	VARCHAR(15),
	@FiscalYear NUMERIC(4),
	@PeriodeNum NUMERIC(2)
)
AS
BEGIN
	SELECT CompanyAccNo, NaturalAccConsol, ProductLine, ProductType, SUBSTRING(InterCompany, 2, 2) AS InterCompany, AccountDesc
	, DbAmount, CrAmount, QTY
	--, (CASE WHEN ISNULL(DbAmount, 0) = 0 THEN '' ELSE CONVERT(VARCHAR, CONVERT(decimal(18,0), DbAmount)) END)AS DbAmount
	--, (CASE WHEN ISNULL(CrAmount, 0) = 0 THEN '' ELSE CONVERT(VARCHAR, CONVERT(decimal(18,0), CrAmount)) END) AS CrAmount
	FROM GlTrAccBalanceConsol
	WHERE  CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND FiscalYear = @FiscalYear
	AND PeriodeNum =@PeriodeNum
END
GO
-- uspfn_OmInquiryChassisReq '6007402','600740200'
ALTER procedure [dbo].[uspfn_OmInquiryChassisReq]
	@CompanyCode as varchar(15)
	,@BranchCode as varchar(15)
	,@Penjual as varchar(15)
	,@CBU as bit
as

declare @isDirect as bit
set @isDirect=0
if exists (
	select 1
	from gnMstCoProfile
	where CompanyCode=@CompanyCode and BranchCode=@Penjual
)
set @isDirect=1

--DECLARE @CompanyCode as varchar(15)
--	,@Penjual as varchar(15)
--
--set @CompanyCode='6117201'
--set @Penjual='6117201'

select * into #t1
from (
	select distinct isnull(b.BranchCode, e.BranchCode) BranchCode, isnull(c.CustomerCode, e.CustomerCode) CustomerCode
			,z.ChassisCode,z.BPKNo,z.SONo, b.SODate, e.DONo,convert(varchar,z.chassisNo) chassisNo, z.salesModelCode
			, z.salesModelYear, isnull(z.SuzukiDONo,'') RefferenceDONo,
			isnull(z.SuzukiDODate,'19000101') RefferenceDODate, isnull(z.SuzukiSJNo,'') RefferenceSJNo, 
			isnull(z.SuzukiSJDate,'19000101') RefferenceSJDate, 
			a.EndUserName, a.EndUserAddress1, a.EndUserAddress2, a.EndUserAddress3,
			c.CustomerName, c.Address1, c.Address2, c.Address3,
			c.CityCode,(SELECT LookUpValueName FROM gnMstLookUpDtl where CodeID = 'CITY' AND ParaValue = c.CityCode) as CityName, 
			c.PhoneNo, c.HPNo, c.birthDate ,b.Salesman, (SELECT EmployeeName FROM gnMstEmployee where EmployeeID = b.Salesman) SalesmanName, b.SalesType
	from dbo.omMstVehicle z 
		left join omTrSalesSOVin a 
			on a.CompanyCode = z.CompanyCode 
			and z.SONo=a.SONo
				AND a.ChassisCode = z.ChassisCode
				AND a.ChassisNo = z.ChassisNo
		left join omTrSalesSO b
			on a.companyCode = b.companyCode 
				and a.BranchCode= b.BranchCode
				and a.SONo = b.SONo
				and b.Status = '2' 
		left join gnMstCustomer c 
			on b.CompanyCode = c.CompanyCode
				and b.CustomerCode = c.CustomerCode 
		left join OmTrSalesDODetail d 
			on d.CompanyCode = z.CompanyCode and z.DONo=d.DONo
				and d.ChassisCode = z.ChassisCode		
				and d.ChassisNo = z.ChassisNo	
		left join OmTrSalesDO e 
			on e.CompanyCode = d.CompanyCode
				and e.DONo = d.DONo
				and e.BranchCode=d.BranchCode
				and e.Status = '2'
		inner join omMstModel f
			on f.CompanyCode = z.CompanyCode
				and f.SalesModelCode = z.SalesModelCode
	where 
		z.CompanyCode = @CompanyCode
		and z.ReqOutNo = ''
		and z.status in ('3','4','5','6')
		and not exists (select 1 from omTrSalesReqdetail where ChassisCode=z.ChassisCode and ChassisNo=z.ChassisNo)
		and ((case when z.ChassisNo is not null then z.SONo end) is not null 
			or (case when z.ChassisNo is not null then z.DONo end) is not null)
		and f.IsCBU = @CBU
) #t1

--select * from #t1  //awalnya 
--where ((case when @isDirect = 1 then BranchCode end)= @Penjual
--		or (case when @isDirect <> 1 then CustomerCode end)= @Penjual )
select * from #t1 
	where ((case when @isDirect = 1 then BranchCode end)= @Penjual
		or (case when @isDirect <> 1 then BranchCode end)= @BranchCode )
drop table #t1
GO
ALTER procedure [dbo].[uspfn_GetLmpDoc] @CompanyCode varchar(15), @BranchCode varchar(15), @TypeOfGoods varchar(5), @TransType varchar(5), @CodeID varchar(6),@BeginDate datetime, @EndDate datetime  
as  
--declare @CompanyCode varchar(15)  
--declare @BranchCode varchar(15)  
--declare @TypeOfGoods varchar(15)  
--declare @TransType varchar(5)  
--declare @BeginDate Datetime  
--declare @EndDate datetime  
--set @CompanyCode = '6006406'  
--set @BranchCode = '6006401'  
--set @TypeOfGoods = '0'  
--set @TransType = '1%'  
--set @BeginDate = '2014/03/01'  
--set @EndDate = '2014/05/30'  
SELECT  
  
 spTrnSLmpHdr.CompanyCode,  
 spTrnSLmpHdr.BranchCode,  
 spTrnSLmpHdr.LmpNo  
,spTrnSLmpHdr.LmpDate  
,spTrnSLmpHdr.BPSFNo  
,spTrnSLmpHdr.BPSFDate  
,spTrnSLmpHdr.PickingSlipNo  
,spTrnSLmpHdr.PickingSlipDate  
,spTrnSLmpHdr.TypeOfGoods  
,spTrnSLmpHdr.CustomerCodeShip  
,spTrnSLmpHdr.CustomerCode  
,spTrnSLmpHdr.CustomerCodeBill  
,spTrnSLmpHdr.TotSalesQty  
,spTrnSLmpHdr.TotSalesAmt  
,spTrnSLmpHdr.TotDiscAmt  
,spTrnSLmpHdr.TotDPPAmt  
,spTrnSLmpHdr.TotPPNAmt  
,spTrnSLmpHdr.CreatedBy  
,spTrnSLmpHdr.CreatedDate  
,spTrnSLmpHdr.LastUpdateBy  
,spTrnSLmpHdr.LastUpdateDate  
,spTrnSLmpHdr.LastUpdateBy  
,spTrnSLmpHdr.LastUpdateDate  
,spTrnSLmpHdr.isPKP  
,spTrnSLmpHdr.isLocked  
,spTrnSLmpHdr.LockingBy  
,spTrnSLmpHdr.LockingDate,  
 spTrnSLmpHdr.CustomerCode,  
 spTrnSLmpHdr.CustomerCodeShip,
 spTrnSLmpHdr.CustomerCodeBill as CustomerCodeTagih,
 b.CustomerName,  
 b.Address1,  
 b.Address2,  
 b.Address3,  
 b.Address4,  
 b.CustomerName CustomerNameTagih,  
 b.Address1 Address1Tagih,  
 b.Address2 Address2Tagih,  
 b.Address3 Address3Tagih,  
 b.Address4 Address4Tagih,  
 c.LookUpValueName TransType    
  
FROM spTrnSLmpHdr  
left join gnMstCustomer b  
ON spTrnSLmpHdr.CompanyCode = b.CompanyCode  
AND spTrnSLmpHdr.CustomerCode = b.CustomerCode   
left join gnMstLookupDtl c on  
spTrnSLmpHdr.CompanyCode = c.CompanyCode  
and spTrnSLmpHdr.TransType= c.LookupValue   
AND c.CodeID = @CodeID  
WHERE spTrnSLmpHdr.CompanyCode=@CompanyCode  
  AND spTrnSLmpHdr.BranchCode=@BranchCode  
  AND spTrnSLmpHdr.TypeOfGoods = @TypeOfGoods   
  AND Convert(Varchar, spTrnSLmpHdr.LmpDate, 111) between @BeginDate and @EndDate  
  AND TransType LIKE @TransType  
ORDER BY spTrnSLmpHdr.LmpNo DESC
GO
ALTER procedure [dbo].[usppvt_SvMsiP44]
   @CompanyCode varchar(15),  
   @BranchCode  varchar(15),  
   @StartDate   datetime,  
   @EndDate     datetime  
as    
  
begin    
  
set nocount on;    
  
declare @t1 as table   
(  
 RecNo        int,  
 FieldName    varchar(100),  
 Caption      varchar(100),  
 FormatString varchar(100),  
 IsVisible    bit,  
 Width        int,  
 HAlignment   int,        -- {0:Default,1:Near,2:Center,3:Far}  
 Area         int,        -- {0:Row,1:Column,2:Filter,3:Data}  
 PivotSummaryType   int,  -- {0:Count,1:Sum,2:Min,3:Max,4:Average,5:StdDev,6:StdDevp,7:Var,8:Varp,9:Custom}  
 PivotGroupInterval int   -- {0:Default,1:Date,2:DateDay,3:DateDayOfWeek,4:DateDayOfYear,5:DateWeekOfMonth}  
        -- {6:DateWeekOfYear,7:DateMonth,8:DateQuarter,9:DateYear,10:YearAge,11:MonthAge}  
        -- {12:WeekAge,13:DayAge,14:Alphabetical,15:Numeric,16:Hour,17:Custom}  
)  
  
insert into @t1 values(00,'FscGroup','FscGroup','',1,120,0,0,0,0)  
insert into @t1 values(01,'ChassisCode','Chassis Code','',1,110,0,0,0,0)  
insert into @t1 values(02,'ChassisNo','Chassis No','',1,110,0,2,0,0)  
insert into @t1 values(03,'Odometer','Odometer','',1,120,0,2,0,0)  
insert into @t1 values(04,'InvoiceDate','Invoice Date','',1,110,0,2,0,0)  
insert into @t1 values(10,'ChassisCode','Unit','',1,110,0,3,0,0)  
  
select * from @t1 order by RecNo  
  
declare @t_unit_fsc_clm as table
(
	InvoiceDate  varchar(20),
	ChassisCode  varchar(50), 
	ChassisNo    varchar(50),
	GroupJobType varchar(50),
	JobType      varchar(50),
	Odometer     numeric(10)
)	
insert into @t_unit_fsc_clm
select distinct convert(varchar, a.InvoiceDate, 112) InvoiceDate
	 , a.ChassisCode, convert(varchar, a.ChassisNo) ChassisNo
	 , b.GroupJobType, a.JobType
	 , b.WarrantyOdometer as Odometer
  from svTrnInvoice a
 inner join svMstJob b
	on b.CompanyCode = a.CompanyCode
   and b.ProductType = a.ProductType
   and b.BasicModel = a.BasicModel
   and b.JobType = a.JobType
 where a.CompanyCode = @CompanyCode
   and a.BranchCode = @BranchCode
   and convert(varchar, InvoiceDate, 112)  
       between convert(varchar, @StartDate, 112)   
       and convert(varchar, @EndDate, 112)  
   and b.GroupJobType in ('FSC')
   and not exists (
	select 1 from svTrnInvoice
	 where 1 = 1
	   and CompanyCode = a.CompanyCode
	   and BranchCode = a.BranchCode
	   and ChassisCode = a.ChassisCode
	   and ChassisNo = a.ChassisNo
	   and convert(varchar, InvoiceDate, 112) = convert(varchar, a.InvoiceDate, 112)
	   and JobType = 'PDI'
   )

select InvoiceDate, ChassisCode, ChassisNo, GroupJobType, Odometer
     , FscGroup = GroupJobType + convert(varchar, Odometer)
  from @t_unit_fsc_clm 
  
end
GO
ALTER procedure [dbo].[uspfn_spSuppliers]  (  @CompanyCode varchar(10) ,@BranchCode varchar(10), @ProfitCenterCode char(3)) 
	   as
	            SELECT distinct
                    a.SupplierCode, a.SupplierName, (a.address1+' '+a.address2+' '+a.address3+' '+a.address4) as Alamat,
                    b.DiscPct as Diskon, (Case a.Status when 0 then 'Tidak Aktif' else 'Aktif' end) as [Status],
                    (SELECT Lookupvaluename FROM gnmstlookupdtl WHERE codeid='PFCN' 
                     AND lookupvalue = b.ProfitCentercode) as Profit
                FROM 
                    gnMstSupplier a
                JOIN gnmstSupplierProfitCenter b ON a.CompanyCode= b.CompanyCode
	                AND a.SupplierCode = b.SupplierCode
                WHERE 
                    a.CompanyCode=@CompanyCode
                    AND b.BranchCode=@BranchCode
					AND b. ProfitCenterCode=@ProfitCenterCode
                    AND b.isBlackList=0
                    AND a.status = 1
GO
-- =============================================
-- Author:		<Ineu Ekawati>
-- Create date: <30 Januari 2009>
-- Description:	<HISTORY PERAWATAN KENDARAAN>
-- =============================================

-- usprpt_SvRpTrn010 '1234501', '''B1234SER''', '2009-09-01'

ALTER procedure [dbo].[usprpt_SvRpTrn010]
	@CompanyCode varchar(20), 
	@BranchCode varchar(20),
	@ProductType varchar(5),
	@PoliceRegNo varchar(max),
	@ChassisCode varchar(max),
	@ChassisNo varchar(max),
	@BasicModel varchar(max),
	@JobOrderDate datetime
	
AS
BEGIN
	SET NOCOUNT ON;

	select @JobOrderDate as StartServiceDate, *
	into #abc
	from
	(
		select	vehcl.PoliceRegNo
				, vehcl.ChassisNo	
				, vehcl.ChassisCode
				, vehcl.EngineNo
				, vehcl.EngineCode 
				, vehcl.DealerCode + ' - ' + dealer.CustomerName Dealer
				, vehcl.CustomerCode + ' - ' + cust.CustomerName Customer
				, vehcl.isActive
				, vehcl.BasicModel
				, vehcl.TransmissionType
				, vehcl.LastServiceOdometer
				, vehcl.LastServiceDate
				, vehcl.FakturPolisiDate as FakturPajakDate
				, vehcl.ProductionYear
				, colourRef.RefferenceDesc1 Colour
--				, srv.JobOrderNo
				, inv.JobOrderNo
				, inv.JobOrderDate 
				, inv.InvoiceNo
				, inv.InvoiceDate
				, inv.Odometer
				, inv.ServiceRequestDesc
				, inv.FPJNo
				, inv.FPJDate
				, invTask.OperationNo Kode
				, mstTask.Description
				,case invMech.MechanicId when (
					select top 1 mechanic.MechanicID
					from svTrnInvMechanic mechanic
					where 
						mechanic.CompanyCode = invTask.CompanyCode
						and mechanic.BranchCode = invTask.BranchCode
						and mechanic.ProductType = invTask.ProductType
						and mechanic.InvoiceNo = invTask.InvoiceNo
						and mechanic.OperationNo = invTask.OperationNo
				) then invTask.OperationHour else 0 end Qty
				,case invMech.MechanicId when (
					select top 1 mechanic.MechanicID
					from svTrnInvMechanic mechanic
					where 
						mechanic.CompanyCode = invTask.CompanyCode
						and mechanic.BranchCode = invTask.BranchCode
						and mechanic.ProductType = invTask.ProductType
						and mechanic.InvoiceNo = invTask.InvoiceNo
						and mechanic.OperationNo = invTask.OperationNo
				) then invTask.OperationCost else 0 end Amt
--				, invTask.OperationHour Qty
--				, invTask.OperationCost Amt
				, emp.EmployeeName MechanicID
		from	svMstCustomerVehicle vehcl with(nolock, nowait)
				left join gnMstCustomer dealer with(nolock, nowait) on vehcl.CompanyCode = dealer.CompanyCode
					and vehcl.DealerCode = dealer.CustomerCode
				left join gnMstCustomer cust with(nolock, nowait) on vehcl.CompanyCode = cust.CompanyCode
					and vehcl.CustomerCode = cust.CustomerCode
				left join svTrnInvoice inv with(nolock, nowait) on vehcl.CompanyCode = inv.CompanyCode 
					and vehcl.PoliceRegNo = inv.PoliceRegNo
					and vehcl.CustomerCode = inv.CustomerCode
					and vehcl.ChassisCode = inv.ChassisCode
					and vehcl.ChassisNo = inv.ChassisNo	
				left join svTrnService srv with(nolock, nowait) on vehcl.CompanyCode = srv.CompanyCode 
					and vehcl.PoliceRegNo = srv.PoliceRegNo
					and vehcl.CustomerCode = srv.CustomerCode
					and inv.JobOrderNo = srv.JobOrderNo
				inner join svTrnInvTask invTask with(nolock, nowait) on inv.CompanyCode = invTask.CompanyCode
					and inv.BranchCode = invTask.BranchCode
					and inv.ProductType = invTask.ProductType
					and inv.InvoiceNo = invTask.InvoiceNo
				left join svTrnInvMechanic invMech with(nolock, nowait) on invTask.CompanyCode = invMech.CompanyCode
					and invTask.BranchCode = invMech.BranchCode
					and invTask.ProductType = invMech.ProductType
					and invTask.InvoiceNo = invMech.InvoiceNo
					and invTask.OperationNo = invMech.OperationNo
				left join GnMstEmployee emp with(nolock, nowait) on invMech.CompanyCode = emp.CompanyCode
					and invMech.BranchCode = emp.BranchCode
					and invMech.MechanicID = emp.EmployeeID
				left join svMstTask mstTask with(nolock, nowait) on invTask.CompanyCode = mstTask.CompanyCode
					and invTask.ProductType = mstTask.ProductType 					
					and invTask.OperationNo = mstTask.OperationNo	
					and srv.JobType = mstTask.JobType	
					and srv.BasicModel = mstTask.BasicModel	
				left join omMstRefference colourRef with(nolock, nowait) on vehcl.CompanyCode = colourRef.CompanyCode 
					and vehcl.ColourCode = colourRef.RefferenceCode
					and colourRef.RefferenceType = 'COLO'	
		where vehcl.CompanyCode = @CompanyCode 			
			and inv.JobOrderDate >= @JobOrderDate				
			and inv.BranchCode = @BranchCode
			and inv.ProductType = @ProductType	
		union all
		select	vehcl.PoliceRegNo
				, vehcl.ChassisNo	
				, vehcl.ChassisCode
				, vehcl.EngineNo
				, vehcl.EngineCode
				, vehcl.DealerCode + ' - ' + dealer.CustomerName Dealer
				, vehcl.CustomerCode + ' - ' + cust.CustomerName Customer
				, vehcl.isActive
				, vehcl.BasicModel
				, vehcl.TransmissionType
				, vehcl.LastServiceOdometer
				, vehcl.LastServiceDate
				, vehcl.FakturPolisiDate as FakturPajakDate
				, vehcl.ProductionYear
				, colourRef.RefferenceDesc1 Colour
--				, srv.JobOrderNo
				, inv.JobOrderNo
				, inv.JobOrderDate
				, inv.InvoiceNo
				, inv.InvoiceDate
				, inv.Odometer
				, inv.ServiceRequestDesc
				, inv.FPJNo
				, inv.FPJDate
				, invItem.PartNo Kode
				, itemInfo.PartName [Description]
				, isnull(invItem.SupplyQty,0) - isnull(invItem.ReturnQty,0) Qty
				, (isnull(invItem.SupplyQty,0) - isnull(invItem.ReturnQty,0)) * isnull(invItem.RetailPrice,0) Amt
				, '' MechanicID
		from	svMstCustomerVehicle vehcl with(nolock, nowait)
				left join gnMstCustomer dealer with(nolock, nowait) on vehcl.CompanyCode = dealer.CompanyCode
					and vehcl.DealerCode = dealer.CustomerCode
				left join gnMstCustomer cust with(nolock, nowait) on vehcl.CompanyCode = cust.CompanyCode
					and vehcl.CustomerCode = cust.CustomerCode
				left join svTrnInvoice inv with(nolock, nowait) on vehcl.CompanyCode = inv.CompanyCode 
					and vehcl.PoliceRegNo = inv.PoliceRegNo
					and vehcl.CustomerCode = inv.CustomerCode
					and vehcl.ChassisCode = inv.ChassisCode
					and vehcl.ChassisNo = inv.ChassisNo					
--				left join svTrnService srv with(nolock, nowait) on vehcl.CompanyCode = srv.CompanyCode 
--					and vehcl.PoliceRegNo = srv.PoliceRegNo
--					and vehcl.CustomerCode = srv.CustomerCode
--					and inv.JobOrderNo = srv.JobOrderNo
				inner join svTrnInvItem invItem with(nolock, nowait) on inv.CompanyCode = invItem.CompanyCode
					and inv.BranchCode = invItem.BranchCode 
					and inv.ProductType = invItem.ProductType 
					and inv.InvoiceNo = invItem.InvoiceNo
				left join spMstItemInfo itemInfo with(nolock, nowait) on invItem.CompanyCode = itemInfo.CompanyCode
					and invItem.PartNo = itemInfo.PartNo
				left join omMstRefference colourRef with(nolock, nowait) on vehcl.CompanyCode = colourRef.CompanyCode 
					and vehcl.ColourCode = colourRef.RefferenceCode
					and colourRef.RefferenceType = 'COLO'
		where vehcl.CompanyCode = @CompanyCode
				and inv.BranchCode = @BranchCode
				and inv.ProductType = @ProductType
				and inv.JobOrderDate >= @JobOrderDate

	) data
	declare @strSql varchar(500)
--	set @strSql = 'select * from #abc where PoliceRegNo in (' + @PoliceRegNo + ') and BasicModel in (' + @BasicModel + ')'
--	set @strSql = 'select * from #abc where PoliceRegNo in (' + @PoliceRegNo + ')'
	set @strSql = 'select * from #abc where PoliceRegNo in (' + @PoliceRegNo + ') 
			and ChassisCode in (' + @ChassisCode + ') and ChassisNo in ('+ @ChassisNo +') 
			and BasicModel in ('+ @BasicModel +')'


	--print (@strSql)

	exec(@strSql)

	drop table #abc
END
GO
ALTER procedure [dbo].[sp_spMstSalesTargetDtlSum]  (  @CompanyCode varchar(10) ,@BranchCode varchar(10),@Year Varchar(4),@Month varchar(2))
as
select 

sum(a.QtyTarget) as sumQtyTarget,
sum(a.AmountTarget) as sumAmountTarget,
sum(a.TotalJaringan) as sumTotalJaringan
from spMstSalesTargetDtl a
 WHERE a.CompanyCode=@CompanyCode and  a.BranchCode=@BranchCode
and a.[Year]=@Year and a.[Month]=@Month
GO
ALTER procedure [dbo].[uspfn_GetSpTrnSFPJHdr] 
@CompanyCode varchar(15), @BranchCode varchar(15)  
as  
--declare @CompanyCode varchar(15), @BranchCode varchar(15)  
--set @CompanyCode = '6159401'
--set @BranchCode = '615940100'

select a.FPJNo, a.FPJdate, a.FPJGovNo, a.InvoiceNo, a.PickingSlipNo, a.CustomerCode, b.CustomerName, b.Address1, b.Address2, b.Address3, b.Address4, 
a.TOPDays, a.TOPCode, a.CustomerCode + ' - ' + b.CustomerName Customer 
from spTrnSFPJHdr a  
join gnMstCustomer b  
on b.CustomerCode = a.CustomerCode  
and b.CompanyCode = a.CompanyCode  
where a.CompanyCode = @CompanyCode  
and a.BranchCode = @BranchCode 
order by FPJDate desc
GO
ALTER procedure [dbo].[usprpt_SvRpCrm003V2]
	@CompanyCode	  Varchar(15),
	@BranchCode		  Varchar(15),
	@DateParam		  Datetime,
	@OptionType		  Varchar(100), 
	@Range			  int, 
	@Interval		  int,
	@IncPDI			  bit = 1,
	@ServiceDateFrom  Varchar(15),
	@ServiceDateTo    Varchar(15),
	@ReminderDateFrom Varchar(15),
	@ReminderDateTo   Varchar(15),
	@FollowUpDateFrom Varchar(15),
	@FollowUpDateTo   Varchar(15)
AS

if (isnull(@ServiceDateFrom, '') = '' and isnull(@ServiceDateTo, '') = '' and isnull(@ReminderDateFrom, '') = '' and
    isnull(@ReminderDateTo, '') = '' and isnull(@FollowUpDateFrom, '') = '' and isnull(@FollowUpDateTo, '') = '')
	--exec usprpt_SvRpCrm003V2_Drh 
	--				@CompanyCode=@CompanyCode,@BranchCode=@BranchCode,@DateParam=@DateParam,
	--				@OptionType=@OptionType,@Range=@Range,@Interval=@Interval,@IncPDI=@IncPDI
	exec usprpt_SvRpCrm003V2_Drh_Web 
					@CompanyCode=@CompanyCode,@BranchCode=@BranchCode,@DateParam=@DateParam,
					@OptionType=@OptionType,@Range=@Range,@Interval=@Interval,@IncPDI=@IncPDI
else
	--exec usprpt_SvRpCrm003V2_DrhPer
	--				@CompanyCode=@CompanyCode,@BranchCode=@BranchCode,@OptionType=@OptionType,
	--				@ServiceDateFrom=@ServiceDateFrom,@ServiceDateTo=@ServiceDateTo,
	--				@ReminderDateFrom=@ReminderDateFrom,@ReminderDateTo=@ReminderDateTo,
	--				@FollowUpDateFrom=@FollowUpDateFrom,@FollowUpDateTo=@FollowUpDateTo
	exec usprpt_SvRpCrm003V2_DrhPer_Web
					@CompanyCode=@CompanyCode,@BranchCode=@BranchCode,@OptionType=@OptionType,
					@ServiceDateFrom=@ServiceDateFrom,@ServiceDateTo=@ServiceDateTo,
					@ReminderDateFrom=@ReminderDateFrom,@ReminderDateTo=@ReminderDateTo,
					@FollowUpDateFrom=@FollowUpDateFrom,@FollowUpDateTo=@FollowUpDateTo
GO
ALTER procedure [dbo].[usprpt_SpRpTrn010Short]
--declare
   @CompanyCode		VARCHAR(15),
   @BranchCode		VARCHAR(15),
   @FPJDateStart	DATETIME,
   @FPJDateEnd		DATETIME,
   @FPJNoStart		VARCHAR(30),
   @FPJNoEnd		VARCHAR(30),
   @ProfitCenter	VARCHAR(15),
   @SeqNo			INT

--set @CompanyCode = '6115204001'
--set @BranchCode	= '6115204301'
--set @FPJDateStart = '20140801'
--set @FPJDateEnd	= '20141016'
--set @FPJNoStart	= '010.000-14.00000001'
--set @FPJNoEnd = '010.000-14.00000015'
--set @ProfitCenter = '300'
--set @SeqNo = 3

AS   
BEGIN

-- Setting Header Faktur Pajak --
---------------------------------
declare @fCompName	varchar(max)
declare @fAdd		varchar(max)
declare @fAdd1		varchar(max)
declare @fAdd2		varchar(max)
declare @fNPWP		varchar(max)
declare @fSKP		varchar(max)
declare @fSKPDate	varchar(max)
declare @fCity		varchar(max)

declare @fStatus varchar(1)
set @fStatus = 0

declare @fInfoPKP varchar(1)
set @fInfoPKP = 1
	
if exists (select 1 from gnMstLookUpDtl where codeid='FPJFLAG')
begin
	set @fStatus = (select paravalue from gnmstlookupdtl where codeid='FPJFLAG' and lookupvalue='STATUS')
end

if exists (select * from gnMstLookUpHdr where codeid='FPJ_INFO_PKP')
begin
	set @fInfoPKP = (select LookupValue from gnmstlookupdtl where codeid='FPJ_INFO_PKP')
end

if (@fStatus = '1')
begin
	set @fCompName	= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='NAME')
	set @fAdd1		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='ADD1')
	set @fAdd2		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='ADD2')
	set @fAdd		= @fAdd1+' '+@fAdd2
	set @fNPWP		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='NPWP')
	set @fSKP		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='SKPNO')
	set @fSKPDate	= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='SKPDATE')
	set @fCity		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='CITY')		
end

-- parameter use address holding or not
declare @IsHoldingAddr as bit
if (select count(*) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='FPJADDR') > 0
	set @IsHoldingAddr = (select convert(numeric,LookUpValue) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='FPJADDR')
else
	set @IsHoldingAddr = 0

	declare @Flag bit
	set @Flag = (select ParaValue from gnMstLookUpDtl where CompanyCode = @CompanyCode and CodeID = 'FLPG' and LookUpValue = 'NJS')

select * into #t1 from(
SELECT	
	a.FPJGovNo  fakturFPJGovNo, 
	case when @fInfoPKP = 1 then 
		(case @fStatus when '1' then @fCompName else e.CompanyGovName  end)
	else '' end as compNm 
	, case when @fInfoPKP = 1 then
		(case @fStatus when '1' then @fAdd1 else 
			(case when @IsHoldingAddr=0 then e.Address1+' '+e.Address2
				else (select Address1+' '+Address2 from gnMstCoProfile where CompanyCode=@CompanyCode
				and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
			end)
		 end)
	 else '' end as Alamat1
	, case when @fInfoPKP = 1 then
		(case @fStatus when '1' then @fAdd2 else 
			(case when @IsHoldingAddr=0 then e.Address3+' '+e.Address4
				else (select Address3+' '+Address4 from gnMstCoProfile where CompanyCode=@CompanyCode
				and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
			end)
		end)
	 else '' end as Alamat2,
	case when @fInfoPKP = 1 then
		(case @fStatus when '1' then @fNPWP else e.NPWPNo end)
	else '' end as compNPWPNo,
	x.CustomerName  custName,
	ISNULL(x.Address1,'')+' '+ISNULL(x.Address2,'') Alamat3,
	ISNULL(x.Address3,'')+' '+ISNULL(x.Address4,'') Alamat4, 
	d.NPWPNo custNPWPNo,	
	a.FPJNo  fakturFPJNo, 
	a.PickingSlipNo  fakturPickSlipNo,
	a.DueDate fakturDueDate, 
	a.TotSalesQty fakturTotSalesQty, 
	a.TotSalesAmt fakturTotSalesAmt, 
	a.TotDiscAmt fakturTotDiscAmt, 
	a.TotDppAmt fakturTotDppAmt, 
	a.TotPPNAmt fakturPPNAmt, 
	a.TotFinalSalesAmt fakturTotFinalSalesAmt,
	case @fStatus when '1' then @fCity else 
		(SELECT LookUpValueName FROM gnMstLookupDtl WHERE CodeID = 'CITY' AND LookUpValue = e.CityCode) end as cityNm,
	a.FPJSignature
, isnull(@Flag, 0) Flag
FROM 
	SpTrnSFPJHdr a WITH (NOLOCK, NOWAIT)
LEFT JOIN GnMstTax c WITH (NOLOCK, NOWAIT)
	ON a.CompanyCode = c.CompanyCode AND c.TaxCode = 'PPN'
LEFT JOIN GnMstCustomer d WITH (NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
	AND a.CustomerCode = d.CustomerCode
LEFT JOIN SpTrnSFPJInfo x WITH (NOLOCK, NOWAIT) ON a.CompanyCode = x.CompanyCode
	AND a.BranchCode = x.BranchCode
	AND a.FPJNo = x.FPJNo
LEFt JOIN GnMstCoProfile e WITH (NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
	AND a.BranchCode = e.BranchCode
WHERE 
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode AND a.isPKP = 1
	AND CONVERT(VARCHAR, a.FPJSignature, 112) BETWEEN @FPJDateStart AND @FPJDateEnd
	AND ((CASE WHEN @FPJNoStart = '' THEN a.FPJGovNo END) <> ''
	OR (CASE WHEN @FPJNoStart <> '' THEN a.FPJGovNo END) BETWEEN @FPJNoStart AND @FPJNoEnd)
) #t1

select fakturFPJGovNo, compNm, Alamat1, Alamat2, compNPWPNo, custName, Alamat3, Alamat4, custNPWPNo,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 fakturFPJNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo) + '-' + (select substring((select top 1 fakturFPJNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc), 8, 7)) else (select fakturFPJNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturFPJNo, 
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 fakturPickSlipNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo) + '-' + (select substring((select top 1 fakturPickSlipNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc), 8, 7)) else (select fakturPickSlipNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturPickSlipNo, 
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 fakturDueDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc) else (select fakturDueDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturDueDate, 
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(fakturTotSalesQty) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else (select fakturTotSalesQty from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturTotSalesQty, 
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(fakturTotSalesAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else (select fakturTotSalesAmt from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturTotSalesAmt,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(fakturTotDiscAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else (select fakturTotDiscAmt from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturTotDiscAmt,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(fakturTotDppAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else (select fakturTotDppAmt from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturTotDppAmt,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then ((select sum(fakturTotDppAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) * 0.1) else (select fakturPPNAmt from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturPPNAmt,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then ((select sum(fakturTotDppAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) + ((select sum(fakturTotDppAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) * 0.1)) else (select fakturTotFinalSalesAmt from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturTotFinalSalesAmt,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 FPJSignature from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc) else (select FPJSignature from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end FPJSignature, 
	cityNm, Flag
from #t1 a
group by fakturFPJGovNo, compNm, Alamat1, Alamat2, compNPWPNo, custName, Alamat3, Alamat4, custNPWPNo, cityNm, Flag	

drop table #t1
	
END
GO
ALTER procedure [dbo].[uspfn_SysDealerGetDatabaseInfo]  
AS  
  
declare @TableName varchar(100),  
  @row_count int,  
  @col_count int,  
  @column_list VARCHAR(MAX)   
  
CREATE TABLE #temp (  
table_name sysname ,  
row_count INT,  
reserved_size VARCHAR(50),  
data_size VARCHAR(50),  
index_size VARCHAR(50),  
unused_size VARCHAR(50))  
  
CREATE TABLE #temp2 (  
table_name VARCHAR(100),  
row_count INT,  
col_count INT,  
col_list VARCHAR(MAX)  
)  
  
SET NOCOUNT ON  
INSERT #temp  
EXEC sp_msforeachtable 'sp_spaceused ''?'''  
  
declare crListTableInfo cursor for   
SELECT a.table_name,  
a.row_count,  
COUNT(*) AS col_count  
FROM #temp a  
INNER JOIN information_schema.columns b  
ON a.table_name collate database_default  
= b.table_name collate database_default  
GROUP BY a.table_name, a.row_count  
  
OPEN crListTableInfo  
FETCH NEXT FROM crListTableInfo  
INTO @TableName, @row_count, @col_count  
  
WHILE @@FETCH_STATUS = 0  
BEGIN  
   
 set @column_list = null  
  
 SELECT @column_list = COALESCE(@column_list + ', ', '') + COLUMN_NAME   
 FROM INFORMATION_SCHEMA.COLUMNS where TABLE_NAME=@TableName  
  
 insert into #temp2 values (@TableName, @row_count, @col_count,@column_list)  
  
 FETCH NEXT FROM crListTableInfo  
 INTO @TableName, @row_count, @col_count  
  
END  
  
CLOSE crListTableInfo  
DEALLOCATE crListTableInfo  
  
select * from #temp2  
  
DROP TABLE #temp  
  
DROP TABLE #temp2
GO
-- uspfn_OmInquiryChassisDO '6115202','611520200','SOA/11/000287','FU150 SCD',2011,'MH8BG41CABJ','COLO','00'
ALTER procedure [dbo].[uspfn_OmInquiryChassisDO]
	@CompanyCode varchar(15)
	,@BranchCode varchar(15)
	,@SONo varchar(15)
	,@SalesModelCode varchar(30)
	--,@SalesModelYear int
	,@SalesModelYear varchar(15)
	,@ChassisCode varchar(15)
	,@RefType varchar(15)
	,@WarehouseCode varchar(15)

as

--declare @CompanyCode varchar(15)
--,@BranchCode varchar(15)
--,@SONo varchar(15)
--,@SalesModelCode varchar(15)
--,@SalesModelYear int
--,@ChassisCode varchar(15)
--,@RefType varchar(15)
--,@WarehouseCode varchar(15)
--
--select @CompanyCode='6115202'
--,@BranchCode='611520200'
--,@SONo='SOA/11/000287' 
--,@SalesModelCode='FU150 SCD' 
--,@SalesModelYear=2011
--,@ChassisCode='MH8BG41CABJ' 
--,@RefType='COLO'
--,@WarehouseCode='00'

declare 
@val as int,
@CompanyMD as varchar(15)
,@DBMD as varchar(15)
,@QryTemp as varchar(max)


DECLARE @columnVal TABLE (columnVal int);

set @val=0

set @CompanyMD = (SELECT TOP 1 CompanyMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode) 
set @DBMD = (SELECT TOP 1 DbMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode) 

--set @val= (
set @QryTemp = 'SELECT isnull(count (a.ChassisNo),0) jml
FROM omTrSalesSOVin a 
	INNER JOIN ' + @DBMD + '.dbo.omMstVehicle b ON 
		a.ChassisCode = b.ChassisCode 
		AND a.ChassisNo = b.ChassisNo 
WHERE a.CompanyCode = ''' + @CompanyCode + '''
	AND a.BranchCode = ''' + @BranchCode + ''' 
	AND a.SONo = ''' + @SONo + '''
	AND a.SalesModelCode = ''' + @SalesModelCode + ''' 
	AND a.SalesModelYear = ''' + @SalesModelYear + '''
	AND a.ChassisCode = ''' + @ChassisCode + '''
	and b.Status in (0,3)
	AND not exists 
	( 
		SELECT 1 
		FROM omTrSalesDODetail x
			inner join omTrSalesDO y on x.CompanyCode=y.CompanyCode and x.BranchCode=y.BranchCode
				and x.DONo=y.DONo
		WHERE x.CompanyCode = a.CompanyCode 
		AND x.BranchCode = a.BranchCode 
		AND x.SalesModelCode = a.SalesModelCode 
		AND x.ChassisCode = a.ChassisCode 
		and x.ChassisNo= a.ChassisNo
		and y.Status in (0,1)
	) 
	AND a.ChassisNo != 0 ' 

INSERT INTO @columnVal EXEC (@QryTemp);

set @val= (SELECT * FROM @columnval);

if @val = 0 
begin
	set @QryTemp =
	'SELECT 
		a.ChassisCode , a.ChassisNo , a.EngineCode , a.EngineNo , 
		a.ColourCode , b.RefferenceDesc1 AS ColourName 
	FROM ' + @DBMD + '.dbo.omMstVehicle a 
		LEFT JOIN ' + @DBMD + '.dbo.omMstRefference b ON b.CompanyCode = a.CompanyCode 
			AND b.RefferenceType = ''' + @RefType + ''' 
			AND b.RefferenceCode = a.ColourCode 
	WHERE a.CompanyCode = ''' + @CompanyMD + '''  
		AND a.SalesModelCode = ''' + @SalesModelCode + ''' 
		AND a.ChassisCode = ''' + @ChassisCode + ''' 
		AND a.Status = 0 
		AND isnull (a.SONo,'''') = ''''  
		AND a.WarehouseCode = ''' + @WarehouseCode + '''
		AND exists 
		( 
			SELECT z.colourCode FROM OmTrSalesSOModelColour z 
			WHERE z.companyCode = a.CompanyCode 
			AND z.BranchCode = ''' + @BranchCode + '''
			AND z.SONo= ''' + @SONo + ''' 
			AND z.SalesModelCode = a.SalesModelCode 
			AND z.SalesModelYear = a.SalesModelYear 
			and z.ColourCode= a.ColourCode
		)'
		Exec (@QryTemp);
end
else
begin
	set @QryTemp =
	'SELECT 
		a.ChassisNo , a.EngineCode , a.EngineNo , 
		a.ColourCode , b.RefferenceDesc1 AS ColourName 
	FROM omTrSalesSOVin a 
		LEFT JOIN omMstRefference b ON b.CompanyCode = a.CompanyCode 
			AND b.RefferenceType = ''' + @RefType + ''' 
			AND b.RefferenceCode = a.ColourCode 
		INNER JOIN ' + @DBMD + '.dbo.omMstVehicle c ON 
			a.ChassisCode = c.ChassisCode 
			AND a.ChassisNo = c.ChassisNo 
	WHERE a.CompanyCode = ''' + @CompanyCode + ''' 
		AND a.BranchCode = ''' + @BranchCode + '''  
		AND a.SONo = ''' + @SONo + ''' 
		AND a.SalesModelCode = ''' + @SalesModelCode + '''
		AND a.SalesModelYear = ''' + @SalesModelYear + ''' 
		AND a.ChassisCode = ''' + @ChassisCode + ''' 
		AND c.WarehouseCode = ''' + @WarehouseCode + '''
		and c.Status in (0,3)
		AND not exists
		( 
			SELECT 1 
			FROM omTrSalesDODetail x
				inner join omTrSalesDO y on x.CompanyCode=y.CompanyCode and x.BranchCode=y.BranchCode
					and x.DONo=y.DONo
			WHERE x.CompanyCode = a.CompanyCode 
			AND x.BranchCode = a.BranchCode 
			AND x.SalesModelCode = a.SalesModelCode 
			AND x.ChassisCode = a.ChassisCode 
			and x.ChassisNo= a.ChassisNo
			and y.Status in (0,1)
		)'
		Exec (@QryTemp);
end
GO
ALTER procedure [dbo].[usprpt_SpRpTrn035]
--declare
   @CompanyCode		VARCHAR(15),
   @BranchCode		VARCHAR(15),
   @FPJDateStart	DATETIME,
   @FPJDateEnd		DATETIME,
   @FPJNoStart		VARCHAR(30),
   @FPJNoEnd		VARCHAR(30),
   @ProfitCenter	VARCHAR(15),
   @SeqNo			INT
   
AS   
BEGIN

--set @CompanyCode = '6115204001'
--set @BranchCode	= '6115204301'
--set @FPJDateStart = '20140801'
--set @FPJDateEnd	= '20141030'
--set @FPJNoStart	= '010.000-14.00000016'
--set @FPJNoEnd = '010.000-14.00000016'
--set @ProfitCenter = '300'
--set @SeqNo = 3

-- Setting Header Faktur Pajak --
---------------------------------
declare @fCompName	varchar(max)
declare @fAdd		varchar(max)
declare @fAdd1		varchar(max)
declare @fAdd2		varchar(max)
declare @fNPWP		varchar(max)
declare @fSKP		varchar(max)
declare @fSKPDate	varchar(max)
declare @fCity		varchar(max)
declare @fInv		int

declare @fStatus varchar(1)
set @fStatus = 0

declare @fInfoPKP varchar(1)
set @fInfoPKP = 1

if exists (select 1 from gnMstLookUpDtl where codeid='FPJFLAG')
begin
	set @fStatus = (select paravalue from gnmstlookupdtl where codeid='FPJFLAG' and lookupvalue='STATUS')
end

if exists (select * from gnMstLookUpHdr where codeid='FPJ_INFO_PKP')
begin
	set @fInfoPKP = (select LookupValue from gnmstlookupdtl where codeid='FPJ_INFO_PKP')
end

if (@fStatus = '1')
begin
	set @fCompName	= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='NAME')
	set @fAdd1		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='ADD1')
	set @fAdd2		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='ADD2')
	set @fAdd		= @fAdd1+' '+@fAdd2
	set @fNPWP		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='NPWP')
	set @fSKP		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='SKPNO')
	set @fSKPDate	= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='SKPDATE')
	set @fCity		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='CITY')		
end
set @fInv		= (select isnull(ParaValue,'1') from gnmstlookupdtl where codeid='FPJFLAG' and lookupvalue='SPARE')		

-- parameter use address holding or not
declare @IsHoldingAddr as bit
if (select count(*) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='FPJADDR') > 0
	set @IsHoldingAddr = (select convert(numeric,LookUpValue) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='FPJADDR')
else
	set @IsHoldingAddr = 0

declare @PaymentInfo as bit
if (select count(*) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='PINF') > 0
	set @PaymentInfo = (select convert(numeric,ParaValue) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='PINF' AND LookUpValue='STAT')
else
	set @PaymentInfo = 1

select * into #t1
from (
	SELECT	
		a.TPTrans, 
		case when @fInfoPKP = 1 then
			(case @fStatus when '1' then @fCompName else e.CompanyGovName end)
		else '' end as compNm, 
		case @fStatus when '1' then @fSKP else e.SKPNo end as compSKPNo, 		
		case when @fInfoPKP = 1 then
			(case @fStatus when '1' then @fSKPDate else e.SKPDate end)
		else '' end as compSKPDate,
		case when @fInfoPKP = 1 then
			(case @fStatus when '1' then @fAdd1 else 
				(case when @IsHoldingAddr=0 then ISNULL(e.Address1, '') + ' ' + ISNULL(e.Address2, '') + ' ' + ISNULL(e.Address3, '')
					else (select ISNULL(Address1, '') + ' ' + ISNULL(Address2, '') + ' ' + ISNULL(Address3, '') from gnMstCoProfile where CompanyCode=@CompanyCode
					and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
				end)end)
		else '' end AS compAddr1,
		case when @fInfoPKP = 1 then
			(case @fStatus when '1' then @fAdd2 else 
				(case when @IsHoldingAddr=0 then ISNULL(e.Address2, '')
					else (select ISNULL(e.Address2, '') from gnMstCoProfile where CompanyCode=@CompanyCode
					and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
				end)end)
		else '' end AS compAddr2
		,case @fStatus when '1' then '' else 
			(case when @IsHoldingAddr=0 then ISNULL(e.Address3, '')
				else (select ISNULL(e.Address3, '') from gnMstCoProfile where CompanyCode=@CompanyCode
				and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
			end)
		 end AS compAddr3
		,case @fStatus when '1' then '' else 
			(case when @IsHoldingAddr=0 then ISNULL(e.Address4, '')
				else (select ISNULL(e.Address4, '') from gnMstCoProfile where CompanyCode=@CompanyCode
				and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
			end)
		 end AS compAddr4,
		case @fStatus when '1' then '' else e.PhoneNo end as compPhoneNo, 
		case @fStatus when '1' then '' else e.FaxNo  end as compFaxNo, 
		case when @fInfoPKP = 1 then
			(case @fStatus when '1' then @fNPWP else e.NPWPNo  end)
		else '' end as compNPWPNo, 
		a.FPJNo  fakturFPJNo, 
		a.FPJDate  fakturFPJDate, 
		a.InvoiceNo  fakturInvNo,
		a.InvoiceDate  fakturInvDate, 
		a.FPJGovNo  fakturFPJGovNo, 
		a.PickingSlipNo  fakturPickSlipNo,
		/* RETURN MORE THAN 1 VALUE NEED MORE CHECK, TEMPORARY USING TOP 1 */ 
		--New--
		(SELECT TOP 1 g.OrderNo+', '+CONVERT(VARCHAR(20),g.OrderDate,105)
			FROM spTrnSORDHdr g
				LEFT JOIN spTrnSFPJDtl h ON g.CompanyCode = h.CompanyCode AND g.BranchCode = h.BranchCode AND g.DocNo = h.DocNo
			WHERE h.CompanyCode = a.CompanyCode AND h.CompanyCode = a.CompanyCode AND h.FPJNo = a.FPJNo
			GROUP BY g.OrderNo, g.OrderDate
		 )as OrderFeld,
		--End new 
		a.CustomerCode  fakturCustCode,
		x.CustomerName  custName, 
		d.SKPNo  custSKPNo, 
		d.SKPDate custSKPDate, 
		x.Address1 custAddr1, 
		x.Address2 custAddr2, 
		x.Address3 custAddr3, 
		x.Address4 custAddr4, 
		d.PhoneNo custPhoneNo, 
		d.FaxNo custFaxNo, 
		d.NPWPNo custNPWPNo, 
		a.DueDate fakturDueDate, 
		a.TotSalesQty fakturTotSaleQty, 
		a.TotSalesAmt fakturTotSalesAmt, 
		a.TotDiscAmt fakturTotDiscAmt, 
		a.TotDppAmt fakturTotDppAmt, 
		a.TotPPNAmt fakturPPNAmt, 
		a.TotFinalSalesAmt fakturTotFinalSalesAmt, 
		a.FPJSignature, 
		c.TaxPct  taxPercent, 
		case @fStatus when '1' then @fCity else 
		(SELECT LookUpValueName FROM gnMstLookupDtl WHERE CodeID = 'CITY' AND LookUpValue = e.CityCode) end as cityNm, 
		UPPER (f.SignName) SignName, 
		UPPER (f.TitleSign) TitleSign,
		g.PartNo,
		h.PartName,
		g.QtyBill,
		g.SalesAmt,
		g.DiscAmt,
		(
			SELECT SUM(QtyBill) FROM spTrnSFPJDtl WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND FPJNo = a.FPJNo
		) AS TotQtyBill,
		(
		SELECT COUNT (PartNo) FROM spTrnSFPJDtl WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND FPJNo = a.FPJNo
		) AS JumlahPart
		,case when @fInfoPKP = 1 then
			(case @fStatus when '1' then @fAdd1 else 
			(case when @IsHoldingAddr=0 then e.Address1+' '+e.Address2
				else (select Address1+' '+Address2 from gnMstCoProfile where CompanyCode=@CompanyCode
				and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
			end)end)
		 else '' end as Alamat1
		,case when @fInfoPKP = 1 then
			(case @fStatus when '1' then @fAdd2 else 
			(case when @IsHoldingAddr=0 then e.Address3+' '+e.Address4
				else (select Address3+' '+Address4 from gnMstCoProfile where CompanyCode=@CompanyCode
				and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
			end)end)
		 else '' end as Alamat2,
		ISNULL(x.Address1,'')+' '+ISNULL(x.Address2,'') Alamat3,
		ISNULL(x.Address3,'')+' '+ISNULL(x.Address4,'') Alamat4,
		g.PartNo+' - '+h.PartName Item
		,CASE 
			WHEN @PaymentInfo=1 THEN 'DILUNASI DENGAN ' + (select LookUpValueName from gnMstLookUpDtl where CompanyCode=a.CompanyCode and CodeID='PYBY' and LookUpValue= i.PaymentCode)
			ELSE '' 
		end PaymentInfo,
		 ISNULL((SELECT TOP 1 ParaValue FROM GnMstLookUpDtl WHERE CompanyCode = @CompanyCode AND CodeID = 'FPIF'),'0') FlagDetails
		,(select count(PartNo) from spTrnSFPJDtl where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and FPJNo=a.FPJNo) MaxRow
	FROM 
		SpTrnSFPJHdr a WITH (NOLOCK, NOWAIT)
	LEFT JOIN GnMstTax c WITH (NOLOCK, NOWAIT)
		ON a.CompanyCode = c.CompanyCode AND c.TaxCode = 'PPN'
	LEFT JOIN GnMstCustomer d WITH (NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
		AND a.CustomerCode = d.CustomerCode
	LEFT JOIN SpTrnSFPJInfo x WITH (NOLOCK, NOWAIT) ON a.CompanyCode = x.CompanyCode
		AND a.BranchCode = x.BranchCode
		AND a.FPJNo = x.FPJNo
	LEFt JOIN GnMstCoProfile e WITH (NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
		AND a.BranchCode = e.BranchCode
	LEFT JOIN GnMstSignature f WITH (NOLOCK, NOWAIT) ON a.CompanyCode = f.CompanyCode
		AND a.BranchCode = f.BranchCode
		AND f.ProfitCenterCode = @ProfitCenter
		AND f.DocumentType = CONVERT (VARCHAR (3), a.FPJNo)
		AND f.SeqNo = @SeqNo
	LEFT JOIN spTrnSFPJDtl g WITH (NOLOCK, NOWAIT) ON g.CompanyCode = a.CompanyCode
		AND g.BranchCode = a.BranchCode
		AND g.FPJNo = a.FPJNo
	INNER JOIN spMstItemInfo h WITH (NOLOCK, NOWAIT) ON h.CompanyCode = a.CompanyCode
		AND h.PartNo = g.PartNo
	LEFT JOIN gnMstCustomerProfitCenter i on a.CompanyCode=i.CompanyCode and a.BranchCode=i.BranchCode
		AND a.CustomerCode=i.CustomerCode and i.ProfitCenterCode='300'
	WHERE 
		a.CompanyCode = @CompanyCode
		AND a.BranchCode = @BranchCode AND a.isPKP = 1
		AND CONVERT(VARCHAR, a.FPJSignature, 112) BETWEEN @FPJDateStart AND @FPJDateEnd
		AND ((CASE WHEN @FPJNoStart = '' THEN a.FPJGovNo END) <> ''
		OR (CASE WHEN @FPJNoStart <> '' THEN a.FPJGovNo END) BETWEEN @FPJNoStart AND @FPJNoEnd)
) #t1

select * into #t2 from(
select TPTrans, compNm, compSKPNo, compSKPDate, compAddr1, compAddr2, compAddr3, compAddr4, compPhoneNo, compFaxNo, compNPWPNo,
	case when (a.countFaktur) > 1 then (select top 1 fakturFPJNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo) + '-' + (select substring((select top 1 fakturFPJNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc), 8, 7)) else (select top 1 fakturFPJNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturFPJNo, 
	case when (a.countFaktur) > 1 then (select top 1 fakturFPJDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc) else (select top 1 fakturFPJDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturFPJDate,
	case when (a.countFaktur) > 1 then (select top 1 fakturInvNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturInvNo) + '-' + (select substring((select top 1 fakturInvNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturInvNo desc), 8, 7)) else (select top 1 fakturInvNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturInvNo, 
	case when (a.countFaktur) > 1 then (select top 1 fakturInvDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturInvNo desc) else (select top 1 fakturInvDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturInvDate,
	fakturFPJGovNo,  
	case when (a.countFaktur) > 1 then (select top 1 fakturPickSlipNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo) + '-' + (select substring((select top 1 fakturPickSlipNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc), 8, 7)) else (select top 1 fakturPickSlipNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturPickSlipNo,
	case when (a.countFaktur) > 1 then ' ' else (select top 1 OrderFeld from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end OrderFeld,
	fakturCustCode, custName, custSKPNo, custSKPDate, custAddr1, custAddr2, custAddr3, custAddr4, custPhoneNo, custFaxNo, custNPWPNo, 
	case when (a.countFaktur) > 1 then (select top 1 fakturDueDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc) else (select top 1 fakturDueDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturDueDate,
	
	case when (a.countFaktur) > 1 then (select sum(QtyBill) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else sum(fakturTotSaleQty) end fakturTotSaleQty, 
	case when (a.countFaktur) > 1 then (select sum(SalesAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else sum(fakturTotSalesAmt) end fakturTotSalesAmt, 
	case when (a.countFaktur) > 1 then (select sum(DiscAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else sum(fakturTotDiscAmt) end fakturTotDiscAmt,
	case when (a.countFaktur) > 1 then (select (sum(SalesAmt) - sum(DiscAmt)) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else sum(fakturTotDPPAmt) end fakturTotDppAmt, 
	case when (a.countFaktur) > 1 then ((select (sum(SalesAmt) - sum(DiscAmt)) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) * 0.1) else sum(fakturPPNAmt) end fakturPPNAmt, 
	case when (a.countFaktur) > 1 then ((select (sum(SalesAmt) - sum(DiscAmt)) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) + ((select (sum(SalesAmt) - sum(DiscAmt)) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) * 0.1)) else sum(fakturTotFinalSalesAmt) end fakturTotFinalSalesAmt, 

	case when (a.countFaktur) > 1 then (select top 1 FPJSignature from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc) else (select top 1 FPJSignature from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end FPJSignature,
	TaxPercent, cityNm, SignName, TitleSign, PartNo, PartName, sum(QtyBill) QtyBill, sum(SalesAmt) SalesAmt, 
	case when (a.countFaktur) > 1 then (select sum(QtyBill) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else sum(TotQtyBill) end TotQtyBill, 
	sum(JumlahPart) JumlahPart, Alamat1, Alamat2, Alamat3, Alamat4, Item, PaymentInfo, FlagDetails, sum(MaxRow) MaxRow, a.countFaktur
from
(
select distinct TPTrans, compNm, compSKPNo, compSKPDate, compAddr1, compAddr2, compAddr3, compAddr4, compPhoneNo, compFaxNo, compNPWPNo, fakturFPJNo,
	fakturFPJDate, fakturInvNo, fakturInvDate, #t1.fakturFPJGovNo, fakturPickSlipNo, OrderFeld, fakturCustCode, custName, custSKPNo, custSKPDate, custAddr1, 
	custAddr2, custAddr3, custAddr4, custPhoneNo, custFaxNo, custNPWPNo, fakturDueDate, fakturTotSaleQty, fakturTotSalesAmt, fakturTotDiscAmt, fakturTotDPPAmt,
	fakturPPNAmt, fakturTotFinalSalesAmt, FPJSignature, TaxPercent, cityNm, SignName, TitleSign, PartNo, PartName, sum(QtyBill) QtyBill, sum(SalesAmt) SalesAmt,
	sum(DiscAmt) DiscAmt, TotQtyBill, JumlahPart, Alamat1, Alamat2, Alamat3, Alamat4, Item, PaymentInfo, FlagDetails, b.countFaktur, sum(MaxRow) MaxRow
from #t1 
left join (select fakturFPJGovNo, count(fakturFPJNo) countFaktur
		from(select distinct fakturFPJGovNo, fakturFPJNo from #t1) a
		group by fakturFPJGovNo) b on #t1.fakturFPJGovNo = b.fakturFPJGovNo
group by TPTrans, compNm, compSKPNo, compSKPDate, compAddr1, compAddr2, compAddr3, compAddr4, compPhoneNo, compFaxNo, compNPWPNo, fakturFPJNo,
	fakturFPJDate, fakturInvNo, fakturInvDate, #t1.fakturFPJGovNo, fakturPickSlipNo, OrderFeld, fakturCustCode, custName, custSKPNo, custSKPDate, custAddr1, 
	custAddr2, custAddr3, custAddr4, custPhoneNo, custFaxNo, custNPWPNo, fakturDueDate, fakturTotSaleQty, fakturTotSalesAmt, fakturTotDiscAmt, fakturTotDPPAmt,
	fakturPPNAmt, fakturTotFinalSalesAmt, FPJSignature, TaxPercent, cityNm, SignName, TitleSign, PartNo, PartName, Alamat1, Alamat2, Alamat3, Alamat4, Item, 
	PaymentInfo, FlagDetails, b.countFaktur, JumlahPart, TotQtyBill
) a
group by fakturFPJGovNo, TPTrans, compNm, compSKPNo, compSKPDate, compAddr1, compAddr2, compAddr3, compAddr4, compPhoneNo, compFaxNo, compNPWPNo, 
	fakturCustCode, custName, custSKPNo, custSKPDate, custAddr1, custAddr2, custAddr3, custAddr4, custPhoneNo, custFaxNo, custNPWPNo, TaxPercent, cityNm, 
	SignName, TitleSign, PartNo, PartName, Alamat1, Alamat2, Alamat3, Alamat4, PaymentInfo, FlagDetails, item, a.countFaktur
) #t2

	
select TPTrans, compNm, compSKPNo, compSKPDate, compAddr1, compAddr2, compAddr3, compAddr4, compPhoneNo, compFaxNo, compNPWPNo, fakturFPJNo, fakturFPJDate
	, fakturInvDate, fakturFPJGovNo, fakturPickSlipNo, OrderFeld, fakturCustCode, custName, custSKPNo, custSKPDate, custAddr1, custAddr2, custAddr3
	, custAddr4, custPhoneNo, custFaxNo, custNPWPNo, fakturDueDate, fakturTotSaleQty
	, fakturTotSalesAmt, fakturTotDiscAmt, fakturTotDppAmt, fakturPPNAmt
	, fakturTotFinalSalesAmt, FPJSignature, TaxPercent, cityNm, SignName, TitleSign
	, PartNo, PartName, QtyBill, SalesAmt, TotQtyBill
	, case when (a.countFaktur) > 1 then (select count(Item) from #t2 where fakturFPJGovNo = a.fakturFPJGovNo) else JumlahPart end JumlahPart
	, Alamat1, Alamat2, Alamat3, Alamat4, Item, PaymentInfo, FlagDetails
	, case when (a.countFaktur) > 1 then (select count(Item) from #t2 where fakturFPJGovNo = a.fakturFPJGovNo) else MaxRow end MaxRow
	, case when (case when (a.countFaktur) > 1 then (select count(Item) from #t2 where fakturFPJGovNo = a.fakturFPJGovNo) else MaxRow end) % 17 = 1 then 16 else 17 end as PageBreak
	, isnull(@fInv,1) ShowInvoice
from #t2 a

	drop table #t1, #t2
END
GO
--uspfn_SvTrnServiceSaveTask '6006410', '600641001', '4W', 4, 'C', 'PAKET GOM', 0.43, '1', 200000, 0, 'yo'

ALTER procedure [dbo].[uspfn_SvTrnServiceSaveTask]
	@CompanyCode varchar(15),
	@BranchCode varchar(15),
	@ProductType varchar(15),
	@ServiceNo bigint,
	@BillType varchar(15),
    @OperationNo varchar(50),
    @OperationHour numeric(5,2),
    @UserPrice bit = 0,
    @TaskPrice numeric(18,0) = 0,
    @DiscPct numeric(5,2) = 0,
	@UserID varchar(15)
as      

declare @errmsg varchar(max)

begin try
	-- select data svTrnService
	select * into #srv from (
	  select a.* from svTrnService a
		where 1 = 1
		  and a.CompanyCode = @CompanyCode
		  and a.BranchCode  = @BranchCode
		  and a.ProductType = @ProductType
		  and a.ServiceNo   = @ServiceNo
	)#srv

	-- check jika count svTrnSrvTask ada, maka diupdate
	if(select count(*) from svTrnSrvTask
        where 1 = 1
          and CompanyCode = @CompanyCode
          and BranchCode  = @BranchCode
          and ProductType = @ProductType
          and ServiceNo   = @ServiceNo
          and OperationNo = @OperationNo) = 1
	begin
	    print 'update svTrnSrvTask'
		select 'update svTrnSrvTask'
		-- update svTrnSrvTask
		update svTrnSrvTask set
			   OperationHour  = @OperationHour
			  ,OperationCost  =
					case @UserPrice
					 when 0 then
							isnull((
						   (select LaborPrice from svMstTaskPrice
							 where CompanyCode = @CompanyCode
							   and BranchCode  = @BranchCode
							   and ProductType = (select ProductType from #srv)
							   and BasicModel  = (select BasicModel from #srv)
							   and JobType     = (select JobType from #srv)
							   and OperationNo = @OperationNo)
							),
						   (select LaborPrice from svMstTask
							 where CompanyCode = @CompanyCode
							   and ProductType = (select ProductType from #srv)
							   and BasicModel  = (select BasicModel from #srv)
							   and JobType     = (select JobType from #srv)
							   and OperationNo = @OperationNo)
							)
					 else @TaskPrice
					end	
			  ,BillType       = @BillType
			  ,LastupdateBy   = (select LastupdateBy from #srv)
			  ,LastupdateDate = (select LastupdateDate from #srv)
			  ,DiscPct        = @DiscPct 
		 where 1 = 1
	       and CompanyCode = @CompanyCode
		   and BranchCode  = @BranchCode
		   and ProductType = (select ProductType from #srv)
		   and ServiceNo   = (select ServiceNo from #srv)
		   and OperationNo = @OperationNo
	end
	else
	begin
		-- select svTrnSrvTask
		-----------------------------------------------
		 print 'insert svTrnSrvTask'
		 select top 1
			 a.CompanyCode
			,a.ProductType
			,a.BasicModel
			,a.JobType
			,a.OperationNo
			,case b.JobType when 'CLAIM' then isnull(c.ClaimHour, a.ClaimHour) else isnull(c.OperationHour, a.OperationHour) end as OperationHour
			,case b.JobType
			   when 'CLAIM' then a.LaborCost
				else (case @UserPrice when 0 then isnull(c.LaborPrice, a.LaborPrice) else @TaskPrice end)
			   end as LaborPrice
			,a.IsSubCon
			,isnull(c.LaborCost, a.LaborCost) LaborCost
			,isnull(c.ClaimHour, a.ClaimHour) ClaimHour
			,a.IsCampaign
			,a.LastUpdateBy
			,a.LastUpdateDate
		  from svMstTask a
		 inner join #srv b
			on b.CompanyCode = a.CompanyCode
		   and b.ProductType = a.ProductType
		   and b.BasicModel  = a.BasicModel
		  left join svMstTaskPrice c
			on c.CompanyCode = a.CompanyCode
		   and c.BranchCode  = b.BranchCode
		   and c.ProductType = a.ProductType
		   and c.BasicModel  = a.BasicModel
		   and c.JobType     = a.JobType
		   and c.OperationNo = a.OperationNo
		 where 1 = 1
		   and a.OperationNo = @OperationNo
		   and a.JobType in (b.JobType,'CLAIM','OTHER')
		   
		select * into #task from(
		select top 1
			 a.CompanyCode
			,a.ProductType
			,a.BasicModel
			,a.JobType
			,a.OperationNo
			,case b.JobType when 'CLAIM' then isnull(c.ClaimHour, a.ClaimHour) else isnull(c.OperationHour, a.OperationHour) end as OperationHour
			,case b.JobType
			   when 'CLAIM' then a.LaborCost
				else (case @UserPrice when 0 then isnull(c.LaborPrice, a.LaborPrice) else @TaskPrice end)
			   end as LaborPrice
			,a.IsSubCon
			,isnull(c.LaborCost, a.LaborCost) LaborCost
			,isnull(c.ClaimHour, a.ClaimHour) ClaimHour
			,a.IsCampaign
			,a.LastUpdateBy
			,a.LastUpdateDate
		  from svMstTask a
		 inner join #srv b
			on b.CompanyCode = a.CompanyCode
		   and b.ProductType = a.ProductType
		   and b.BasicModel  = a.BasicModel
		  left join svMstTaskPrice c
			on c.CompanyCode = a.CompanyCode
		   and c.BranchCode  = b.BranchCode
		   and c.ProductType = a.ProductType
		   and c.BasicModel  = a.BasicModel
		   and c.JobType     = a.JobType
		   and c.OperationNo = a.OperationNo
		 where 1 = 1
		   and a.OperationNo = @OperationNo
		   and a.JobType in (b.JobType,'CLAIM','OTHER')
		)#task

		if (select count(*) from #task) <> 1 return

		-- insert svMstJob
		select * into #job from(
		select a.* from svMstJob a, #task b
		 where 1 = 1
		   and a.CompanyCode = b.CompanyCode
		   and a.ProductType = b.ProductType
		   and a.BasicModel  = b.BasicModel
		   and a.JobType     = b.JobType
		)#job

		-- prepare data svTrnSrvTask yg akan di Insert
		if (left(@OperationNo,3) = 'FSC' or left(@OperationNo,3) = 'PDI')
		begin
			insert into svTrnSrvTask (CompanyCode, BranchCode, ProductType, ServiceNo, OperationNo, OperationHour, OperationCost, IsSubCon, SubConPrice, PONo, ClaimHour, TypeOfGoods, BillType, SharingTask, TaskStatus, StartService, FinishService, CreatedBy, CreatedDate, LastupdateBy, LastupdateDate, DiscPct)
			select
				 @CompanyCode CompanyCode
				,@BranchCode BranchCode
				,@ProductType ProductType
				,@ServiceNo ServiceNo
				,a.OperationNo
				,(case @OperationHour when 0 then a.OperationHour else @OperationHour end) OperationHour
				,OperationCost = isnull((select top 1 a.RegularLaborAmount
								   from svMstPdiFscRate a, #srv b, #task c, #job d 
								  where 1 = 1
									and a.CompanyCode = b.CompanyCode
									and a.ProductType = b.ProductType
									and a.BasicModel  = b.BasicModel
									and a.IsCampaign  = c.IsCampaign
									and a.TransmissionType = a.TransmissionType
									and a.PdiFscSeq = d.PdiFscSeq
									and a.EffectiveDate <= getdate()
									and a.IsActive = 1
								 order by a.EffectiveDate desc),0)
				,a.IsSubCon
				,a.LaborCost SubConPrice
				,'' PONo
				,a.ClaimHour
				,'L' TypeOfGoods
				,'F' BillType
				,'0' SharingTask
				,'0' TaskStatus
				,null StartService
				,null FinishService
				,b.LastupdateBy CreatedBy
				,b.LastupdateDate CreatedDate
				,b.LastupdateBy
				,b.LastupdateDate
				,@DiscPct
			from #task a, #srv b
		end
		else
		begin
			insert into svTrnSrvTask (CompanyCode, BranchCode, ProductType, ServiceNo, OperationNo, OperationHour, OperationCost, IsSubCon, SubConPrice, PONo, ClaimHour, TypeOfGoods, BillType, SharingTask, TaskStatus, StartService, FinishService, CreatedBy, CreatedDate, LastupdateBy, LastupdateDate, DiscPct)
			select
				 @CompanyCode CompanyCode
				,@BranchCode BranchCode
				,@ProductType ProductType
				,@ServiceNo ServiceNo
				,a.OperationNo
				,(case @OperationHour when 0 then a.OperationHour else @OperationHour end) OperationHour
			    ,a.LaborPrice as OperationCost
				,a.IsSubCon
				,a.LaborCost SubConPrice
				,'' PONo
				,a.ClaimHour
				,'L' TypeOfGoods
				,@BillType BillType
				,'0' SharingTask
				,'0' TaskStatus
				,null StartService
				,null FinishService
				,b.LastupdateBy CreatedBy
				,b.LastupdateDate CreatedDate
				,b.LastupdateBy
				,b.LastupdateDate
				,@DiscPct
			from #task a, #srv b
		end

		-----------------------------------------------
		-- insert default svTrnSrvItem
		-----------------------------------------------
		select * into #part from(
		select a.* from svMstTaskPart a, #task b
		 where 1 = 1
		   and a.CompanyCode = b.CompanyCode
		   and a.ProductType = b.ProductType
		   and a.BasicModel  = b.BasicModel
		   and a.JobType     = b.JobType
		   and a.OperationNo = b.OperationNo
		)#part

		insert into svTrnSrvItem (CompanyCode, BranchCode, ProductType, ServiceNo, PartNo, PartSeq, DemandQty, SupplyQty, ReturnQty, CostPrice, RetailPrice, TypeOfGoods, BillType, SupplySlipNo, SupplySlipDate, SSReturnNo, SSReturnDate, CreatedBy, CreatedDate, LastupdateBy, LastupdateDate, DiscPct)
		select 
			 @CompanyCode CompanyCode
			,@BranchCode BranchCode
			,@ProductType ProductType
			,@ServiceNo ServiceNo
			,a.PartNo
			,(row_number() over (order by a.PartNo)) PartSeq
			,a.Quantity DemandQty
			,'0' SupplyQty
			,'0' ReturnQty
			,c.CostPrice
			,case rtrim(a.BillType) when 'F' then a.RetailPrice else c.RetailPrice end RetailPrice
			,d.TypeOfGoods
			,a.BillType
			,null SupplySlipNo
			,null SupplySlipDate
			,null SSReturnNo
			,null SSReturnDate
			,b.LastupdateBy CreatedBy
			,b.LastupdateDate CreatedDate
			,b.LastupdateBy
			,b.LastupdateDate
			,@DiscPct
		  from #part a
		  left join #task b
			on b.CompanyCode = a.CompanyCode
		   and b.ProductType = a.ProductType
		   and b.BasicModel  = a.BasicModel
		   and b.JobType     = a.JobType
		   and b.OperationNo = a.OperationNo
		  left join spMstItemPrice c
			on c.CompanyCode = a.CompanyCode
		   and c.BranchCode  = @BranchCode
		   and c.PartNo      = a.PartNo
		  left join spMstItems d
			on d.CompanyCode = a.CompanyCode
		   and d.BranchCode  = @BranchCode
		   and d.PartNo      = a.PartNo
		 where 1 = 1
		   and b.CompanyCode = a.CompanyCode
		   and b.ProductType = a.ProductType
		   and b.BasicModel  = a.BasicModel
		   and b.JobType     = a.JobType
		   and b.OperationNo = a.OperationNo
		   and not exists (
				select 1 from svTrnSrvItem k, svTrnService l
				 where 1 = 1
				   and k.CompanyCode = l.CompanyCode
				   and k.BranchCode  = l.BranchCode
				   and k.ProductType = l.ProductType
				   and k.ServiceNo   = l.ServiceNo
				   and k.ServiceNo   = @ServiceNo
				   and k.PartNo      = a.PartNo
				)

		drop table #task
		drop table #part
		drop table #job
		end
	drop table #srv
end try
begin catch
	set @errmsg = error_message()
	raiserror (@errmsg,16,1);
end catch
GO
ALTER procedure [dbo].[uspfn_createDefaultUserCS01]  
AS  
BEGIN  
delete SysRoleModule where RoleId = 'CS'  
insert into SysRoleModule (RoleId, ModuleID) values ('CS', 'cs')  
  
delete SysRoleMenu where RoleId = 'CS'  
insert into SysRoleMenu (RoleId, MenuId) values ('CS', 'csdashboard')  
insert into SysRoleMenu (RoleId, MenuId) values ('CS', 'cstrans')  
insert into SysRoleMenu (RoleId, MenuId) values ('CS', 'csinquiry')  
insert into SysRoleMenu (RoleId, MenuId) values ('CS', 'csdssum')  
insert into SysRoleMenu (RoleId, MenuId) values ('CS', 'cstdcall')  
insert into SysRoleMenu (RoleId, MenuId) values ('CS', 'cscustbd')  
insert into SysRoleMenu (RoleId, MenuId) values ('CS', 'csbpkbin')  
insert into SysRoleMenu (RoleId, MenuId) values ('CS', 'csstnkext')  
insert into SysRoleMenu (RoleId, MenuId) values ('CS', 'csinqtdaycall')  
insert into SysRoleMenu (RoleId, MenuId) values ('CS', 'csinqcustbday')  
insert into SysRoleMenu (RoleId, MenuId) values ('CS', 'csinqbpkb')  
insert into SysRoleMenu (RoleId, MenuId) values ('CS', 'csinqstnkext')  
END
GO
-- [usprpt_SvRpTrn008] '6006406','6006406','010.000-11.00029503','010.000-11.00029503',2
ALTER procedure [dbo].[usprpt_SvRpTrn008SBAM]
 @CompanyCode varchar(20),       
 @BranchCode varchar(20),      
 @FpjGovNoFrom varchar(20),
 @FpjGovNoTo varchar(20),
 @FpjType int,
 @Potongan bit,
 @StartDate varchar(20),
 @EndDate varchar(20)

as

-- Setting Header Faktur Pajak --
---------------------------------
declare @fCompName	varchar(max)
declare @fAdd		varchar(max)
declare @fAdd1		varchar(max)
declare @fAdd2		varchar(max)
declare @fNPWP		varchar(max)
declare @fSKP		varchar(max)
declare @fSKPDate	varchar(max)
declare @fCity		varchar(max)

declare @fStatus varchar(1)
set @fStatus = 0

if exists (select 1 from gnMstLookUpDtl where codeid='FPJFLAG')
begin
	set @fStatus = (select paravalue from gnmstlookupdtl where codeid='FPJFLAG' and lookupvalue='STATUS')
end

if (@fStatus = '1')
begin
	set @fCompName	= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='NAME')
	set @fAdd1		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='ADD1')
	set @fAdd2		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='ADD2')
	set @fAdd		= @fAdd1+' '+@fAdd2
	set @fNPWP		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='NPWP')
	set @fSKP		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='SKPNO')
	set @fSKPDate	= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='SKPDATE')
	set @fCity		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='CITY')		
end

-- parameter use address holding or not
declare @IsHoldingAddr as bit
if (select count(*) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='FPJADDR') > 0
	set @IsHoldingAddr = (select convert(numeric,LookUpValue) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='FPJADDR')
else
	set @IsHoldingAddr = 0

declare @ReportParam as varchar(2)
declare @IsCentral as bit
declare @IsRecalPPN as bit

--add by seandy
declare @StatusEnd  as int
declare @CountDtl as int

declare @FlagAsterix as bit
set @FlagAsterix = (select ParaValue from GnMstLookUpDtl where CodeID = 'XFAK' and LookUpValue = 'SHOW_SV')

-- check seberapa banyak FPJGovNo yang akan di display
create table #t_fpj(
	rownum int,
	FPjGovNo varchar(20)
)

-- 0= Without  newline, 1= With newline at detail
set @ReportParam='0'
if (select count(LookupValue) from gnMstLookUpDtl where CodeID='RPSV') > 0
	set @ReportParam= (select LookUpValue from gnMstLookUpDtl where CodeID='RPSV')


-- 0= Without BranchCode, 1= With BranchCode
set @IsCentral=0
if ((select count(LookupValue) from gnMstLookUpDtl where CodeID='FPGB') > 0 and (@FpjType = '3' or @FpjType = '8')
	and (select IsBranch from gnMstOrganizationDtl where CompanyCode=@CompanyCode and BranchCode= @BranchCode)=0)
begin
	if (select LookUpValue from gnMstLookUpDtl where CodeID='FPGB') = '1'
		set @IsCentral= 1
	else
		set @IsCentral= 0
end

-- 0= Not Recalculate PPN, 1= Recalculate PPN (For FPJ Gabungan)
set @IsRecalPPN=0
if (select count(ParaValue) from gnMstLookUpDtl where CodeID='CPPN' and LookUpValue='STATUS') > 0
	set @IsRecalPPN= (select convert(bit,ParaValue) from gnMstLookUpDtl where CodeID='CPPN' and LookUpValue='STATUS')

-- get FPJGovNo from transaction
if(len(@FpjGovNoFrom) > 8 and len(@FpjGovNoTo) > 8)
	if (@FpjType = '3' or @FpjType = '8')
		insert into #t_fpj
		select (row_number() over (order by FpjGovNo)) as rownum, FpjGovNo from svTrnFakturPajak
		 where right(FpjGovNo,len(FPJGovNo) - 8) between @FpjGovNoFrom and @FpjGovNoTo
		   and convert(varchar,FpjDate,112) between @StartDate and @EndDate
		   and CompanyCode = @CompanyCode
		   and BranchCode = @BranchCode
		  and IsPKP = 1 and FPJGovNo <> ''
		   and NoOfInvoice > 1		
	else
		insert into #t_fpj
		select (row_number() over (order by FpjGovNo)) as rownum, FpjGovNo from svTrnFakturPajak
		 where right(FpjGovNo,len(FPJGovNo) - 8) between @FpjGovNoFrom and @FpjGovNoTo
		   and convert(varchar,FpjDate,112) between @StartDate and @EndDate
		   and CompanyCode = @CompanyCode
		   and BranchCode = @BranchCode
		   and IsPKP = 1 and FPJGovNo <> ''
		   and NoOfInvoice = 1		
else
	if (@FpjType = '3' or @FpjType = '8')
		insert into #t_fpj
		select (row_number() over (order by FpjGovNo)) as rownum, FpjGovNo from svTrnFakturPajak
		 where convert(varchar, FpjDate, 112) between @StartDate and @EndDate
		   and CompanyCode = @CompanyCode
		   and BranchCode = @BranchCode
		   and IsPKP = 1 and FPJGovNo <> ''
		   and NoOfInvoice > 1		
	else
		insert into #t_fpj
		select (row_number() over (order by FpjGovNo)) as rownum, FpjGovNo from svTrnFakturPajak
		 where convert(varchar, FpjDate, 112) between @StartDate and @EndDate
		   and CompanyCode = @CompanyCode
		   and BranchCode = @BranchCode
		   and IsPKP = 1 and FPJGovNo <> ''
		   and NoOfInvoice = 1
declare @n int 
set @n = 0

-- start looping
declare @FpjGovNo varchar(20)
while (@n < (select max(rownum) from #t_fpj))
begin
	set @n = @n + 1;
	set @FpjGovNo = (select FpjGovNo from #t_fpj where rownum = @n)

	-- get FPJGovNo
	select * into #fpj from (
	select CompanyCode, BranchCode, FPjGovNo, FpjNo, FpjDate, SignedDate, DueDate
	  from svTrnFakturPajak
	 where 1 = 1
	   and CompanyCode = @CompanyCode
	   and BranchCode = @BranchCode
	   and FpjGovNo = @FpjGovNo
	) #fpj

	-- get invoice data from transaction
	select * into #inv from (
	select CompanyCode
		  ,BranchCode
		  ,InvoiceNo
		  ,JobOrderNo
		  ,CustomerCodeBill
		  ,PoliceRegNo
		  ,isnull(LaborGrossAmt,0) LaborGrossAmt
		  ,isnull(PartsGrossAmt,0) PartsGrossAmt
		  ,isnull(MaterialGrossAmt,0) MaterialGrossAmt
		  ,isnull(LaborDiscAmt,0) LaborDiscAmt
		  ,isnull(PartsDiscAmt,0) PartsDiscAmt
		  ,isnull(MaterialDiscAmt,0) MaterialDiscAmt
		  ,isnull(TotalDppAmt,0) TotalDppAmt
		  ,isnull(TotalPphAmt,0) TotalPphAmt
		  ,isnull(TotalPpnAmt,0) TotalPpnAmt
		  ,isnull(TotalSrvAmt,0) TotalSrvAmt
      from svTrnInvoice a
	 where 1 = 1
	   and CompanyCode = @CompanyCode
	   and ((case when @IsCentral = 1 then BranchCode end) <> ''
			or (case when @IsCentral = 0 then BranchCode end) = @BranchCode)
	   --and BranchCode = @BranchCode
	   and isLocked=@IsCentral
	   and FpjNo in (select FpjNo from #fpj) --b.FpjNo
	) #inv

	-- get Data SPK
	select * into #srv from (
	select CompanyCode, BranchCode, ProductType, JobOrderNo, BasicModel, JobType from svTrnService
	 where 1 = 1
	   and CompanyCode = @CompanyCode
	   and ((case when @IsCentral = 1 then BranchCode end) <> ''
			or (case when @IsCentral = 0 then BranchCode end) = @BranchCode)
	   and BranchCode+''+JobOrderNo in (select BranchCode+''+JobOrderNo from #inv)
	) #srv

	create table #dtl(DetailDesc varchar(300))
	create table #temp(FPJGovNo varchar(35), CodeID varchar(3),intCount int)

	select * into #tsk from (
	select
		 row_number() over (order by a.OperationNo) RecNo
		,a.*, (a.OperationHour * a.OperationCost) as OperationAmt
		,b.JobOrderNo, @FpjGovNo FpjGovNo,b.LaborDiscAmt,b.PartsDiscAmt,b.MaterialDiscAmt
	  from svTrnInvTask a, #inv b
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode = b.BranchCode
	   and a.InvoiceNo = b.InvoiceNo
	   and a.InvoiceNo = b.InvoiceNo
	   and a.IsSubCon= (case when a.InvoiceNo like 'INW%' then isnull(a.IsSubCon, 0) else 0 end)
	)#tsk

	select * into #itm from (
	select
		 row_number() over (order by a.PartNo) RecNo
		,a.PartNo
		,(a.SupplyQty - a.ReturnQty) SupplyQty
		,a.RetailPrice
		,(a.RetailPrice * (a.SupplyQty - a.ReturnQty)) RetailAmt
	  from svTrnInvItem a, #inv b
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode = b.BranchCode
	   and a.InvoiceNo = b.InvoiceNo
	)#itm

	select * into #oth from (
	select
		 row_number() over (order by a.OperationNo) RecNo
		,a.*, (a.OperationHour * a.OperationCost) as OperationAmt
		,b.JobOrderNo, @FpjGovNo FpjGovNo
	  from svTrnInvTask a, #inv b
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode = b.BranchCode
	   and a.InvoiceNo = b.InvoiceNo
	   and a.InvoiceNo = b.InvoiceNo
	   and isnull(a.IsSubCon, 0) = 1
	)#oth

----------------------------------------------------------------------------	
	--Type of Goods SPAREPART
	select * into #tpSp from (
	select LookUpValue from gnMstLookUpDtl where companyCode = @CompanyCode
		and CodeId = 'GTGO' and ParaValue = 'SPAREPART' )#tpSp

	--Type of Goods OLI
	select * into #tpOli from (
	select LookUpValue from gnMstLookUpDtl where companyCode = @CompanyCode
		and CodeId = 'GTGO' and ParaValue = 'OLI' )#tpOli

	--Type of Goods MATERIAL
	select * into #tpMt from (
	select LookUpValue from gnMstLookUpDtl where companyCode = @CompanyCode
		and CodeId = 'GTGO' and ParaValue = 'MATERIAL' )#tpMt

	--Type of Goods RINCI MATERIAL
	select * into #tpRMt from (
	select LookUpValue from gnMstLookUpDtl where companyCode = @CompanyCode
		and CodeId = 'GTGO' and ParaValue in ('MATERIAL','OLI') )#tpRMt

-----------------------------------------------------------------------------

	select * into #itmSP from (
	select
		 row_number() over (order by a.PartNo) RecNo
		,a.PartNo
		,(a.SupplyQty - a.ReturnQty) SupplyQty
		,a.RetailPrice
		,(a.RetailPrice * (a.SupplyQty - a.ReturnQty)) RetailAmt
		,a.TypeOfGoods
	  from svTrnInvItem a, #inv b
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode = b.BranchCode
	   and a.InvoiceNo = b.InvoiceNo
	   and a.TypeOfGoods in (select * from #tpSp)
	)#itmSP

	select * into #itmOli from (
	select
		 row_number() over (order by a.PartNo) RecNo
		,a.PartNo
		,(a.SupplyQty - a.ReturnQty) SupplyQty
		,a.RetailPrice
		,(a.RetailPrice * (a.SupplyQty - a.ReturnQty)) RetailAmt
		,a.TypeOfGoods
	  from svTrnInvItem a, #inv b
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode = b.BranchCode
	   and a.InvoiceNo = b.InvoiceNo
	   and a.TypeOfGoods in(select * from #tpOli)
	)#itmOli

	select * into #itmMtrl from (
	select
		 row_number() over (order by a.PartNo) RecNo
		,a.PartNo
		,(a.SupplyQty - a.ReturnQty) SupplyQty
		,a.RetailPrice
		,(a.RetailPrice * (a.SupplyQty - a.ReturnQty)) RetailAmt
		,a.TypeOfGoods
	  from svTrnInvItem a, #inv b
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode = b.BranchCode
	   and a.InvoiceNo = b.InvoiceNo
	   and a.TypeOfGoods in (select * from #tpMt)
	)#itmMtrl

	select * into #itmRMtrl from (
	select
		 row_number() over (order by a.PartNo) RecNo
		,a.PartNo
		,(a.SupplyQty - a.ReturnQty) SupplyQty
		,a.RetailPrice
		,(a.RetailPrice * (a.SupplyQty - a.ReturnQty)) RetailAmt
		,a.TypeOfGoods
	  from svTrnInvItem a, #inv b
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode = b.BranchCode
	   and a.InvoiceNo = b.InvoiceNo
	   and a.TypeOfGoods in (select * from #tpRMt)
	)#itmRMtrl

	declare @TaskAmt money
	declare @ItemAmt money
	declare @MaterialAmt money
	declare @SalesAmt int
	declare @DiscAmt money

	-- select condition for 'Standard'
	if (@FpjType = '1')
	begin
		-- Insert Jasa Perbaikan
		if ((select count(*) from #tsk) > 0)
		begin
			set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				if (@ReportParam = '1')
					insert into #dtl values (' ')
			insert into #dtl
			select left(('    JASA PERBAIKAN'
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
				),18)

			insert into #dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.OperationNo
				+ ' - '
				+ isnull(c.Description, '')
				),80)
			  from #tsk a
		  left join #srv b
			on b.JobOrderNo = a.jobOrderNo
		  left join svMstTask c
			on c.CompanyCode = b.CompanyCode
		   and c.ProductType = b.ProductType
		   and c.BasicModel = b.BasicModel
		   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
		   and c.OperationNo = a.OperationNo

			if(@Potongan = 1)
			begin
			insert into #dtl
			select left(('                                        '
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate('-',20)
				+ '-'
				),18)

			set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
			set @DiscAmt = isnull((select top 1 LaborDiscAmt from #tsk),0)
			insert into #dtl
			select left(('                                        Potongan Jasa'
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
				),18)

			insert into #dtl
			select left(('                                        '
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate('-',20)
				+ '-'
				),18)

			insert into #dtl
			select left(('                                        '
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
				),18)
			end

			if (select count(*) from #itm) > 0
			begin
				insert into #dtl values ('')
			end

--			insert into #dtl values ('')
			
			-- add by Seandy 20-9-2011
			-- Untuk menentukan jenis coretan pada keterangan(ada atau tidaknya)
			insert into #Temp 
				select @FpjGovNo, 'SRV', COUNT(*) intCount from #tsk a
			  left join #srv b
				on b.JobOrderNo = a.jobOrderNo
			  left join svMstTask c
				on c.CompanyCode = b.CompanyCode
			   and c.ProductType = b.ProductType
			   and c.BasicModel = b.BasicModel
			   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
			   and c.OperationNo = a.OperationNo
 		end

		-- Insert Pemakaian Sparepart
		if ((select count(*) from #itm) > 0)
		begin
			insert into #dtl values ('    PEMAKAIAN SPAREPART/MATERIAL')
			insert into #dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),58)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),35)
			  from #itm a
			  left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
			   and b.PartNo = a.PartNo

			if(@Potongan = 1)
			begin
			insert into #dtl
			select left(('                                        '
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate('-',20)
				+ '-'
				),18)

			set @ItemAmt = isnull((select sum(RetailAmt) from #itm),0)
			set @DiscAmt = isnull((select top 1 PartsDiscAmt from #tsk),0)
			insert into #dtl
			select left(('                                        Potongan Part'
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
				),18)

			insert into #dtl
			select left(('                                        '
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate('-',20)
				+ '-'
				),18)

			insert into #dtl
			select left(('                                        '
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
				),18)
			end

			if (select count(*) from #oth) > 0
			begin
				insert into #dtl values ('')
			end
--			insert into #dtl values ('')

			-- add by Seandy 20-9-2011
			-- Untuk menentukan jenis coretan pada keterangan(ada atau tidaknya)
			insert into #Temp
				select @FpjGovNo,'OIL',COUNT(*) intCount from #itm a
			  left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
			   and b.PartNo = a.PartNo
		end

		-- Insert Jasa SubCon (Lain - lain)
		if ((select count(*) from #oth) > 0)
		begin
			set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #oth),0)
			if (@ReportParam = '1')
				insert into #dtl values (' ')
			insert into #dtl
			select left(('    LAIN - LAIN'
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
				),18)

			insert into #dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.OperationNo
				+ ' - '
				+ isnull(c.Description, '')
				),80)
			  from #oth a
		  left join #srv b
			on b.JobOrderNo = a.jobOrderNo
		  left join svMstTask c
			on c.CompanyCode = b.CompanyCode
		   and c.ProductType = b.ProductType
		   and c.BasicModel = b.BasicModel
		   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
		   and c.OperationNo = a.OperationNo

			if(@Potongan = 1)
			begin
				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #oth),0)
				set @DiscAmt = isnull((select top 1 MaterialDiscAmt from #tsk),0)
				insert into #dtl
				select left(('                                  Potongan Lain-Lain'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end


			-- add by Seandy 20-9-2011
			-- Untuk menentukan jenis coretan pada keterangan(ada atau tidaknya)
			insert into #Temp
				select @FpjGovNo,'DLL',COUNT(*) intCount from #oth a
				  left join #srv b
					on b.JobOrderNo = a.jobOrderNo
				  left join svMstTask c
					on c.CompanyCode = b.CompanyCode
				   and c.ProductType = b.ProductType
				   and c.BasicModel = b.BasicModel
				   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
				   and c.OperationNo = a.OperationNo
		end
	end

	-- select condition for 'Rinci'
	if (@FpjType = '2')
	begin
		-- Insert Jasa Perbaikan
		if ((select count(*) from #tsk) > 0)
		begin
			if (@ReportParam = '1')
				insert into #dtl values (' ')
			insert into #dtl values ('    JASA PERBAIKAN')
			insert into #dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.OperationNo
				+ ' - '
				+ isnull(c.Description, '')
				+ replicate(' ',100)
				),58)
				+ right((
				  replicate(' ',10)
				--+ convert(varchar, a.OperationHour, 1)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(convert(varchar, cast(a.OperationAmt as money), 1), len(convert(varchar, cast(a.OperationAmt as money), 1)) - 3)
				),35)
			  from #tsk a
		  left join #srv b
			on b.JobOrderNo = a.jobOrderNo
		  left join svMstTask c
			on c.CompanyCode = b.CompanyCode
		   and c.ProductType = b.ProductType
		   and c.BasicModel = b.BasicModel
		   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
		   and c.OperationNo = a.OperationNo

			if(@Potongan = 1)
			begin
				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				if ((select count(*) from #tsk) > 1)
				begin
				insert into #dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end

				set @DiscAmt = isnull((select top 1 LaborDiscAmt from #tsk),0)
				insert into #dtl
				select left(('                                        Potongan Jasa'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into #dtl
				select left(('                            '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #tsk) > 1)
				begin
				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				insert into #dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end
			end
			
			if (select count(*) from #itm) > 0
			begin
				insert into #dtl values ('')
			end

			-- add by Seandy 20-9-2011
			-- Untuk menentukan jenis coretan pada keterangan(ada atau tidaknya)
			insert into #Temp 
				select @FpjGovNo, 'SRV', COUNT(*) intCount from #tsk a
			  left join #srv b
				on b.JobOrderNo = a.jobOrderNo
			  left join svMstTask c
				on c.CompanyCode = b.CompanyCode
			   and c.ProductType = b.ProductType
			   and c.BasicModel = b.BasicModel
			   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
			   and c.OperationNo = a.OperationNo
		end

		-- Insert Sparepart / Material
		if ((select count(*) from #itm) > 0)
		begin
			insert into #dtl values ('    PEMAKAIAN SPAREPART/MATERIAL')
			insert into #dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),58)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),35)
			  from #itm a
			  left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
			   and b.PartNo = a.PartNo

			if(@Potongan = 1)
			begin
				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @ItemAmt = isnull((select sum(RetailAmt) from #itm),0)
				if ((select count(*) from #itm) > 1)
				begin
				insert into #dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
					),18)
				end

				set @DiscAmt = isnull((select top 1 PartsDiscAmt from #tsk),0)
				insert into #dtl
				select left(('                                        Potongan Part'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)


				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #itm) > 1)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itm),0)
					insert into #dtl
					select left(('                                            Sub Total'
						+ replicate(' ', 100)
						), 85)
						+ right((
						+ replicate(' ',20)
						+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
						),18)
				end
			end

			if (select count(*) from #oth) > 0
			begin
				insert into #dtl values ('')
			end

			-- add by Seandy 20-9-2011
			-- Untuk menentukan jenis coretan pada keterangan(ada atau tidaknya)
			insert into #Temp
				select @FpjGovNo,'OIL',COUNT(*) intCount from #itm a
			  left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
			   and b.PartNo = a.PartNo
		end

		-- Insert Jasa SubCon (Lain - Lain)
		if ((select count(*) from #oth) > 0)
		begin
			if (@ReportParam = '1') insert into #dtl values (' ')
			insert into #dtl values ('    LAIN - LAIN')
			insert into #dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.OperationNo
				+ ' - '
				+ isnull(c.Description, '')
				+ replicate(' ',100)
				),58)
				+ right((
				  replicate(' ',10)
				--+ convert(varchar, a.OperationHour, 1)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(convert(varchar, cast(a.OperationAmt as money), 1), len(convert(varchar, cast(a.OperationAmt as money), 1)) - 3)
				),35)
			  from #oth a
		  left join #srv b
			on b.JobOrderNo = a.jobOrderNo
		  left join svMstTask c
			on c.CompanyCode = b.CompanyCode
		   and c.ProductType = b.ProductType
		   and c.BasicModel = b.BasicModel
		   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
		   and c.OperationNo = a.OperationNo

			if(@Potongan = 1)
			begin
				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #oth),0)
				if ((select count(*) from #oth) > 1)
				begin
				insert into #dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end

				set @DiscAmt = isnull((select top 1 MaterialDiscAmt from #tsk),0)
				insert into #dtl
				select left(('                                  Potongan Lain-Lain'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #oth) > 1)
				begin
				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #oth),0)
				insert into #dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end
			end

			-- add by Seandy 20-9-2011
			-- Untuk menentukan jenis coretan pada keterangan(ada atau tidaknya)
			insert into #Temp
				select @FpjGovNo,'DLL',COUNT(*) intCount from #oth a
				  left join #srv b
					on b.JobOrderNo = a.jobOrderNo
				  left join svMstTask c
					on c.CompanyCode = b.CompanyCode
				   and c.ProductType = b.ProductType
				   and c.BasicModel = b.BasicModel
				   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
				   and c.OperationNo = a.OperationNo
		end

	end

	-- select condition for 'Gabungan'
	if (@FpjType = '3')
	begin
--		set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
--		set @ItemAmt = isnull((select sum(RetailAmt) from #itm),0)
		set @SalesAmt = isnull((select SUM(c.LaborGrossAmt + c.PartsGrossAmt + c.MaterialGrossAmt) SalesAmt from #inv c),0)

		if (@ReportParam = '1')
				insert into #dtl values (' ')
		insert into #dtl
		select left(('1   Untuk No Invoice ' + (select top 1 InvoiceNo from #inv order by InvoiceNo) + ' s/d ' + (select top 1 InvoiceNo from #inv order by InvoiceNo desc) 
			+ replicate(' ', 100)
			),83)
			+ right((
			+ replicate(' ',20)
--			+ left(convert(varchar, @TaskAmt + @ItemAmt, 1),len(convert(varchar, @TaskAmt + @ItemAmt, 1)) - 3)
			+ left(convert(varchar, cast(@SalesAmt as money), 1),len(convert(varchar, cast(@SalesAmt as money), 1)) - 3)
			),20)
		insert into #dtl
		select '    (No. ' + (select top 1 JobOrderNo from #inv order by JobOrderNo) + ' s/d ' + (select top 1 JobOrderNo from #inv order by JobOrderNo desc) + ')'
		select * into #inv_temp from (select * from #inv) #inv_temp
		delete #inv where InvoiceNo <> (select top 1 InvoiceNo from #inv order by JobOrderNo)
		update #inv set LaborGrossAmt = (select sum(LaborGrossAmt) from #inv_temp)
		update #inv set PartsGrossAmt = (select sum(PartsGrossAmt) from #inv_temp)
		update #inv set MaterialGrossAmt = (select sum(MaterialGrossAmt) from #inv_temp)
		update #inv set LaborDiscAmt = (select sum(LaborDiscAmt) from #inv_temp)
		update #inv set PartsDiscAmt = (select sum(PartsDiscAmt) from #inv_temp)
		update #inv set MaterialDiscAmt = (select sum(MaterialDiscAmt) from #inv_temp)
		update #inv set TotalDppAmt = (select sum(TotalDppAmt) from #inv_temp)
		update #inv set TotalPphAmt = (select sum(TotalPphAmt) from #inv_temp)
		update #inv set TotalPpnAmt = (select sum(TotalPpnAmt) from #inv_temp)
		update #inv set TotalSrvAmt = TotalDppAmt + TotalPpnAmt
		alter table #inv alter column JobOrderNo varchar(50)
		update #inv set JobOrderNo = (select top 1 JobOrderNo from #inv_temp order by JobOrderNo) + '-' + right((select top 1 JobOrderNo from #inv_temp order by JobOrderNo desc),6)
		alter table #inv alter column InvoiceNo varchar(50)
		update #inv set InvoiceNo = (select top 1 InvoiceNo from #inv_temp order by InvoiceNo) + '-' + right((select top 1 InvoiceNo from #inv_temp order by InvoiceNo desc),6)
		drop table #inv_temp
	end

	-- select condition for 'Perincian on Lampiran'
	if (@FpjType = '4')
	begin
		set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
		set @ItemAmt = isnull((select sum(RetailAmt) from #itm),0)
		insert into #dtl
		select left(('1   Perincian dapat dilihat pada Faktur Penjualan'
			+ replicate(' ', 100)
			), 83)
			+ right((
			+ replicate(' ',20)
			+ left(convert(varchar, @TaskAmt + @ItemAmt, 1),len(convert(varchar, @TaskAmt + @ItemAmt, 1)) - 3)
			),20)
		insert into #dtl
		select '    dengan Nomor ' + a.InvoiceNo from #inv a
	end

	-- Laporan 'Standard Body Repair'
	if (@FpjType = '5')
	begin
		if ((select count(*) from #tsk) > 0)
		begin
			set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
			if (@ReportParam = '1')
				insert into #dtl values (' ')
			insert into #dtl
			select left(('    JASA PERBAIKAN'
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
				),18)

			insert into #dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.OperationNo
				+ ' - '
				+ c.Description
				),80)
			  from #tsk a
		  left join #srv b
			on b.JobOrderNo = a.jobOrderNo
		  left join svMstTask c
			on c.CompanyCode = b.CompanyCode
		   and c.ProductType = b.ProductType
		   and c.BasicModel = b.BasicModel
		   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
		   and c.OperationNo = a.OperationNo

			if(@Potongan = 1)
			begin
				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				set @DiscAmt = isnull((select top 1 LaborDiscAmt from #tsk),0)
				insert into #dtl
				select left(('                                        Potongan Jasa'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end

			if (select count(*) from #itmSP) > 0
			begin
				insert into #dtl values ('')
			end

--			insert into #dtl values ('')
		end

	if ((select count(*) from #itmSP) > 0)
	begin
		insert into #dtl values ('    PEMAKAIAN SPAREPART')
		insert into #dtl
		select left((
			  right((replicate(' ',2)
			+ convert(varchar,a.RecNo)
			),2)
			+ '  '
			+ a.PartNo
			+ ' - '
			+ b.PartName
			+ replicate(' ',100)
			),58)
			+ right((
			  replicate(' ',50)
			+ convert(varchar,a.SupplyQty)
			),10)
			+ right((
			  replicate(' ',50)
			+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
			),35)
		  from  #itmSP a
		  left join spMstItemInfo b
			on b.CompanyCode = @CompanyCode
		   and b.PartNo = a.PartNo
	end

			if(@Potongan = 1)
			begin
				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @ItemAmt = isnull((select sum(RetailAmt) from #itm),0)
				set @DiscAmt = isnull((select top 1 PartsDiscAmt from #tsk),0)
				insert into #dtl
				select left(('                                        Potongan Part'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end

		if (select count(*) from #itmMtrl) > 0
		begin
			insert into #dtl values ('')
		end

--			insert into #dtl values ('')

	if ((select count(*) from #itmMtrl) > 0)
	begin
			insert into #dtl values ('    PEMAKAIAN MATERIAL / OLI')
			set @MaterialAmt = (select sum(RetailAmt) from #itmMtrl)
			insert into #dtl
			select left((' 1  MATERIAL'
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, @MaterialAmt, 1),len(convert(varchar, @MaterialAmt, 1)) - 3)
				),18)
	end

		if ((select count(*) from #itmOli) > 0)
		begin
			if ((select count(*) from #itmMtrl) = 0)
			begin
				insert into #dtl values ('')
				insert into #dtl values ('    PEMAKAIAN MATERIAL / OLI')
			end
			insert into #dtl
			select case when (select count(*) from #itmMtrl) > 0 then
				left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo + 1)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),58)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),35)
				else
				left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),58)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),35)
				end
			from #itmOli a
				left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
				and b.PartNo = a.PartNo

			if(@Potongan = 1)
			begin
				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				if ((select count(*) from #ItmMtrl) = 0)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmOli),0)
				end
				else
				begin	
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmMtrl),0) + isnull((select sum(RetailAmt) from #itmOli),0) 
				end

				set @DiscAmt = isnull((select top 1 MaterialDiscAmt from #tsk),0)
				insert into #dtl
				select left(('                                  Potongan Lain-Lain'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
		end
	end

	-- select condition for 'RinciBodyRepair'
	if (@FpjType = '6')
	begin
		if ((select count(*) from #tsk) > 0)
		begin
			if (@ReportParam = '1')
				insert into #dtl values (' ')
			insert into #dtl values ('    JASA PERBAIKAN')
			insert into #dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.OperationNo
				+ ' - '
				+ c.Description
				+ replicate(' ',100)
				),58)
				+ right((
				  replicate(' ',10)
				--+ convert(varchar, a.OperationHour, 1)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(convert(varchar, cast(a.OperationAmt as money), 1), len(convert(varchar, cast(a.OperationAmt as money), 1)) - 3)
				),35)
			  from #tsk a
		  left join #srv b
			on b.JobOrderNo = a.jobOrderNo
		  left join svMstTask c
			on c.CompanyCode = b.CompanyCode
		   and c.ProductType = b.ProductType
		   and c.BasicModel = b.BasicModel
		   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
		   and c.OperationNo = a.OperationNo

			if(@Potongan = 1)
			begin
				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				if ((select count(*) from #tsk) > 1)
				begin
				insert into #dtl
				select left(('                   Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end

				set @DiscAmt = isnull((select top 1 LaborDiscAmt from #tsk),0)
				insert into #dtl
				select left(('                                        Potongan Jasa'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #tsk) > 1)
				begin
				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				insert into #dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end
			end

		if (select count(*) from #itm) > 0
		begin
			insert into #dtl values ('')
		end

--			insert into #dtl values ('')
		end

		if ((select count(*) from #itm) > 0)
		begin
			insert into #dtl values ('    PEMAKAIAN SPAREPART')
			insert into #dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),58)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),35)
			  from #itmSP a
			  left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
			   and b.PartNo = a.PartNo
			if(@Potongan = 1)
			begin
				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @ItemAmt = isnull((select sum(RetailAmt) from #itmSP),0)
				if ((select count(*) from #itm) > 1)
				begin
				insert into #dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
					),18)
				end

				set @DiscAmt = isnull((select top 1 PartsDiscAmt from #tsk),0)
				insert into #dtl
				select left(('                                        Potongan Part'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)


				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #itm) > 1)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmSP),0)
					insert into #dtl
					select left(('                                            Sub Total'
						+ replicate(' ', 100)
						), 85)
						+ right((
						+ replicate(' ',20)
						+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
						),18)
				end
			end
		end

		if (select count(*) from #itmRMtrl) > 0
		begin
			insert into #dtl values ('')
		end

--	insert into #dtl values ('')

	if ((select count(*) from #itmRMtrl) > 0)
	begin
		insert into #dtl values ('    PEMAKAIAN MATERIAL / OLI')
		insert into #dtl
		select left((
			  right((replicate(' ',2)
			+ convert(varchar,a.RecNo)
			),2)
			+ '  '
			+ a.PartNo
			+ ' - '
			+ b.PartName
			+ replicate(' ',100)
			),58)
			+ right((
			  replicate(' ',50)
			+ convert(varchar,a.SupplyQty)
			),10)
			+ right((
			  replicate(' ',50)
			+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
			),35)
		  from #itmRMtrl a
		  left join spMstItemInfo b
			on b.CompanyCode = @CompanyCode
		   and b.PartNo = a.PartNo
	
			if(@Potongan = 1)
			begin
				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				if ((select count(*) from #ItmMtrl) = 0)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmOli),0)
				end
				else
				begin	
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmMtrl),0) + isnull((select sum(RetailAmt) from #itmOli),0) 
				end

					if ((select count(*) from #itmRMtrl) > 1)
					begin
						insert into #dtl
						select left(('                                            Sub Total'
							+ replicate(' ', 100)
							), 85)
							+ right((
							+ replicate(' ',20)
							+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
							),18)

					end
				end

				set @DiscAmt = isnull((select top 1 MaterialDiscAmt from #tsk),0)
				insert into #dtl
				select left(('                                  Potongan Lain-Lain'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #ItmMtrl) = 0)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmOli),0)
				end
				else
				begin	
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmMtrl),0) + isnull((select sum(RetailAmt) from #itmOli),0) 
				end

					if ((select count(*) from #itmRMtrl) > 1)
					begin
						insert into #dtl
						select left(('                                            Sub Total'
							+ replicate(' ', 100)
							), 85)
							+ right((
							+ replicate(' ',20)
							+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
							),18)

					end
			end

	End

	-- select condition for 'Khusus Body Repair'
	if (@FpjType = '7')
	begin
		if ((select count(*) from #tsk) > 0)
		begin
			if (@ReportParam = '1')
				insert into #dtl values (' ')
			insert into #dtl values ('    JASA PERBAIKAN')
			insert into #dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.OperationNo
				+ ' - '
				+ c.Description
				+ replicate(' ',100)
				),58)
				+ right((
				  replicate(' ',10)
				--+ convert(varchar, a.OperationHour, 1)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(convert(varchar, cast(a.OperationAmt as money), 1), len(convert(varchar, cast(a.OperationAmt as money), 1)) - 3)
				),35)
			  from #tsk a
		  left join #srv b
			on b.JobOrderNo = a.jobOrderNo
		  left join svMstTask c
			on c.CompanyCode = b.CompanyCode
		   and c.ProductType = b.ProductType
		   and c.BasicModel = b.BasicModel
		   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
		   and c.OperationNo = a.OperationNo


			if(@Potongan = 1)
			begin
				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				if ((select count(*) from #tsk) > 1)
				begin
				insert into #dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end

				set @DiscAmt = isnull((select top 1 LaborDiscAmt from #tsk),0)
				insert into #dtl
				select left(('                                        Potongan Jasa'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #tsk) > 1)
				begin
				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				insert into #dtl
				select left(('       Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end
			end

		if (select count(*) from #itm) > 0
		begin
			insert into #dtl values ('')
		end

--			insert into #dtl values ('')
		end

		if ((select count(*) from #itm) > 0)
		begin
			insert into #dtl values ('    PEMAKAIAN SPAREPART')
			insert into #dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),58)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),35)
			  from #itmSP a
			  left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
			   and b.PartNo = a.PartNo

			if(@Potongan = 1)
			begin
				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @ItemAmt = isnull((select sum(RetailAmt) from #itmSP),0)
				if ((select count(*) from #itm) > 1)
				begin
				insert into #dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
					),18)
				end

				set @DiscAmt = isnull((select top 1 PartsDiscAmt from #tsk),0)
				insert into #dtl
				select left(('                                        Potongan Part'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)


				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #itm) > 1)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmSP),0)
					insert into #dtl
					select left(('                                            Sub Total'
						+ replicate(' ', 100)
						), 85)
						+ right((
						+ replicate(' ',20)
						+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
						),18)
				end
			end

		end
		if (select count(*) from #ItmMtrl) > 0
		begin
			insert into #dtl values ('')
		end
--	insert into #dtl values ('')

	if ((select count(*) from #ItmMtrl) > 0)
	begin
			insert into #dtl values ('    PEMAKAIAN MATERIAL / OLI')
			set @MaterialAmt = (select sum(RetailAmt) from #ItmMtrl)
			Print(@MaterialAmt)
			if (@ReportParam = '1')
			begin
				insert into #dtl values (' ')
			end
			insert into #dtl
			select left((' 1  MATERIAL'
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, @MaterialAmt, 1),len(convert(varchar, @MaterialAmt, 1)) - 3)
				),18)
	end

		if ((select count(*) from #itmOli) > 0)
		begin
			if ((select count(*) from #ItmMtrl) = 0)
			begin
				insert into #dtl values (' ')
				insert into #dtl values ('    PEMAKAIAN MATERIAL / OLI')
			end
			insert into #dtl
			select case when (select count(*) from #ItmMtrl) > 0 then
				left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo + 1)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),58)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),35)
				else
				left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),58)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),35)
				end
			from #itmOli a
				left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
				and b.PartNo = a.PartNo

			if(@Potongan = 1)
			begin
				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				if ((select count(*) from #ItmMtrl) = 0)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmOli),0)
				end
				else
				begin	
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmMtrl),0) + isnull((select sum(RetailAmt) from #itmOli),0) 
				end
				if ((select count(*) from #itmRMtrl) > 1)
				begin
					insert into #dtl
					select left(('                                            Sub Total'
						+ replicate(' ', 100)
						), 85)
						+ right((
						+ replicate(' ',20)
						+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
						),18)
				end

				set @DiscAmt = isnull((select top 1 MaterialDiscAmt from #tsk),0)
				insert into #dtl
				select left(('                                  Potongan Lain-Lain'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into #dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #ItmMtrl) = 0)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmOli),0)
				end
				else
				begin	
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmMtrl),0) + isnull((select sum(RetailAmt) from #itmOli),0) 
				end
				if ((select count(*) from #itmRMtrl) > 1)
				begin
					insert into #dtl
					select left(('                                            Sub Total'
						+ replicate(' ', 100)
						), 85)
						+ right((
						+ replicate(' ',20)
						+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
						),18)
				end
			end
		end
	End

	-- select condition for 'Gabungan'
	if (@FpjType = '8')
	begin
		set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
		set @ItemAmt = isnull((select sum(RetailAmt) from #itm),0)
		set @SalesAmt = isnull((select SUM(c.LaborGrossAmt + c.PartsGrossAmt + c.MaterialGrossAmt) SalesAmt from #inv c),0)

		if (@ReportParam = '1')
				insert into #dtl values (' ')
		insert into #dtl
		select left(('1   Untuk No Invoice ' + (select top 1 InvoiceNo from #inv order by InvoiceNo) + ' s/d ' + (select top 1 InvoiceNo from #inv order by InvoiceNo desc) 
			+ replicate(' ', 100)
			),83)

		insert into #dtl
		select '    (No. ' + (select top 1 JobOrderNo from #inv order by JobOrderNo) + ' s/d ' + (select top 1 JobOrderNo from #inv order by JobOrderNo desc) + ')'

		insert into #dtl values (' ')

		if(@TaskAmt <> 0)
		begin
				insert into #dtl
				select left(('         JASA' 
					+ replicate(' ', 100)
					),83)
					+ right((
					+ replicate(' ',20)
		--			+ left(convert(varchar, @TaskAmt + @ItemAmt, 1),len(convert(varchar, @TaskAmt + @ItemAmt, 1)) - 3)
					+ left(convert(varchar, cast(@TaskAmt as money), 1),len(convert(varchar, cast(@TaskAmt as money), 1)) - 3)
					),20)
		end
		
		if(@ItemAmt <> 0)
		begin
			insert into #dtl
			select left(('         MATERIAL DAN SPARE PART' 
				+ replicate(' ', 100)
				),83)
				+ right((
				+ replicate(' ',20)
	--			+ left(convert(varchar, @TaskAmt + @ItemAmt, 1),len(convert(varchar, @TaskAmt + @ItemAmt, 1)) - 3)
				+ left(convert(varchar, cast(@ItemAmt as money), 1),len(convert(varchar, cast(@ItemAmt as money), 1)) - 3)
				),20)
		end
		select * into #inv_tempD from (select * from #inv) #inv_tempD
		delete #inv where InvoiceNo <> (select top 1 InvoiceNo from #inv order by JobOrderNo)
		update #inv set LaborGrossAmt = (select sum(LaborGrossAmt) from #inv_tempD)
		update #inv set PartsGrossAmt = (select sum(PartsGrossAmt) from #inv_tempD)
		update #inv set MaterialGrossAmt = (select sum(MaterialGrossAmt) from #inv_tempD)
		update #inv set LaborDiscAmt = (select sum(LaborDiscAmt) from #inv_tempD)
		update #inv set PartsDiscAmt = (select sum(PartsDiscAmt) from #inv_tempD)
		update #inv set MaterialDiscAmt = (select sum(MaterialDiscAmt) from #inv_tempD)
		update #inv set TotalDppAmt = (select sum(TotalDppAmt) from #inv_tempD)
		update #inv set TotalPphAmt = (select sum(TotalPphAmt) from #inv_tempD)
		update #inv set TotalPpnAmt = (select sum(TotalPpnAmt) from #inv_tempD)
		update #inv set TotalSrvAmt = TotalDppAmt + TotalPpnAmt
		alter table #inv alter column JobOrderNo varchar(50)
		update #inv set JobOrderNo = (select top 1 JobOrderNo from #inv_tempD order by JobOrderNo) + '-' + right((select top 1 JobOrderNo from #inv_tempD order by JobOrderNo desc),6)
		alter table #inv alter column InvoiceNo varchar(50)
		update #inv set InvoiceNo = (select top 1 InvoiceNo from #inv_tempD order by InvoiceNo) + '-' + right((select top 1 InvoiceNo from #inv_tempD order by InvoiceNo desc),6)
		drop table #inv_tempD
	end

	-- This is sucks!!! insert to declare to decide last line every FPJGovNo
	set @CountDtl = (select COUNT(*) from #dtl)

	if(@FPJType <> '3' AND @FPJType <> '4' AND @FPJType <> '8')
	begin	
		if @CountDtl <> (case when @CountDtl = 19 then 17 else 18 end)
		begin
			insert into #dtl values (' ')
			set @StatusEnd = 1
		end
		else
		begin
			set @StatusEnd = 0
		end
	end

	-- select data to display result on Report
	select * into #result from (
	select 
		 b.FpjGovNo
		,b.CompanyCode
		,case @fStatus when '1' then @fCompName else f.CompanyGovName end as CompanyName
		,case @fStatus when '1' then @fAdd else
			(case when @IsHoldingAddr=0 then isnull(f.Address1, '') + ' '  + isnull(f.Address2, '') + ' ' + isnull(f.Address3, '') + ' ' + isnull(f.Address4, '')
				else (select isnull(Address1, '') + ' '  + isnull(Address2, '') + ' ' + isnull(Address3, '') + ' ' + isnull(Address4, '') from gnMstCoProfile where CompanyCode=@CompanyCode
				and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
			end)
		 end as CompanyAddress
		,case @fStatus when '1' then @fNPWP else f.NPWPNo end as NPWPNo
		,case @fStatus when '1' then @fSKP else f.SkpNo end as SkpNo
		,case @fStatus when '1' then @fSKPDate else f.SkpDate end as SkpDate
		,b.FpjDate
		,case when (@FpjType = '3' OR @FPJType = '8') then '' else isnull(c.PoliceRegNo,'') end PoliceRegNo  
		,c.CustomerCodeBill CustCodeBill
		,g.CustomerGovName CustNameBill
		,g.Address1 CustAddr1Bill
		,g.Address2 CustAddr2Bill
		,g.Address3 CustAddr3Bill
		,g.NPWPNo CustNpwpBill
		,g.SkpNo CustSkpBill
		,a.DetailDesc
		,c.LaborGrossAmt + c.PartsGrossAmt + c.MaterialGrossAmt SalesAmt  
		,c.LaborDiscAmt + c.PartsDiscAmt + c.MaterialDiscAmt DiscAmt  
		,0 as DPAmt
		,c.TotalDppAmt DPPAmt  
		,case when (@IsRecalPPN=1) and substring(c.InvoiceNo,1,3) in ('INF','INW') then floor(c.TotalDppAmt*10/100)
			else isnull(c.TotalPphAmt, 0) + isnull(c.TotalPpnAmt, 0) 
		end PPNAmt  
		,'NIHIL' as DppBm  
		,'NIHIL' as PpnBm  
		,c.InvoiceNo
		,case @fStatus when '1' then @fCity else h.LookupValueName end as CityName
		,b.SignedDate
		,c.JobOrderNo
--		,c.TotalSrvAmt TotalAmt  
		,case when (@IsRecalPPN=1) and substring(c.InvoiceNo,1,3) in ('INF','INW') then floor(c.TotalDppAmt*10/100)+ c.TotalDppAmt
			else c.TotalSrvAmt
		end TotalAmt
		,b.DueDate    
		,'              ##########' as Asteric1
		,'       ######################' as Asteric2
		,isnull((select distinct intCount from #temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'SRV'),0)TotService
		,isnull((select distinct intCount from #temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'OIL'),0) TotOil
		,isnull((select distinct intCount from #temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'DLL'),0) TotDLL
		,case when @FlagAsterix = 0 or @FlagAsterix is null
			then '                        ################################'  
			else 
				case when isnull((select distinct intCount from #temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'SRV'),0) = 0 AND isnull((select distinct intCount from #temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'OIL'),0) <> 0 
				then '###########                            ####################'
				else
					case when isnull((select distinct intCount from #temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'SRV'),0) <> 0 AND isnull((select distinct intCount from #temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'OIL'),0) <> 0
					then
						'                                                 ####################'
					else
						case when isnull((select distinct intCount from #temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'SRV'),0) <> 0 AND isnull((select distinct intCount from #temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'OIL'),0) = 0
						then	'                        ################################'
						else
							'###########                            ####################'
						end
					end
				end
			end
			as Asteric3
		,'STANDARD' ReportType
		, 7 as xLocation
		, 247 as yLocation
		, isnull(@CountDtl + @StatusEnd,0) TotService2
	  from #dtl a, #fpj b
	  left join #inv c
		on c.CompanyCode = b.CompanyCode
	   and ((case when @IsCentral = 1 then c.BranchCode end) <> ''
			or (case when @IsCentral = 0 then c.BranchCode end) = @BranchCode)
	  left join gnMstCoProfile f
		on f.CompanyCode = b.CompanyCode
	   and f.BranchCode = b.BranchCode
	  left join gnMstCustomer g
		on g.CompanyCode = c.CompanyCode
	   and g.CustomerCode = c.CustomerCodeBill
	  left join gnMstLookupDtl h
		on h.CompanyCode = b.CompanyCode
	   and h.LookupValue  = f.CityCode
	   and h.CodeId  = 'CITY'
	)#result

	if (@n = 1) 	
	begin
		select * into #results from (select * from #result)x
		delete #results
	end
	if (@n > 0) 
		insert into #results select * from #result

	drop table #result
	drop table #fpj
	drop table #inv
	drop table #srv
	drop table #tsk
	drop table #itm
	drop table #oth
	drop table #itmSP
	drop table #itmMtrl
	drop table #itmRMtrl
	drop table #itmOli
	drop table #dtl
	drop table #tpSp
	drop table #tpOli
	drop table #tpMt
	drop table #tpRMt
	drop table #temp
end

if (@n > 0)
begin
	if (@FpjType = '3' OR @FPJType = '8')	
	begin
		select distinct DetailDesc DD, *
		  , left(DetailDesc, 4) Detail1
		  , substring(DetailDesc, 4, 50) + right(left((DetailDesc + replicate(' ',75)), 75), 10) Detail2
		  , right(left((DetailDesc + replicate(' ',103)), 103), 15) Detail3
		  , case when (select count(FpjGovNo) from #results where FpjGovNo=a.FPJGovNo) = 19 then 17 else 18 end PageBreak   
		  , isnull((
				select top 1 isnull(ParaValue, 1) 
				  from gnMstLookupDtl
				 where CompanyCode = @CompanyCode
				   and CodeID = 'FPIF'
				   and LookUpValue = 'STATUS'
				), 1) IsShowSummary
		  , (PPNAmt + DPPAmt) TotPPNBm
		from #results a
		order by FPJGovNo asc, DetailDesc desc
	end
	else
	begin
		select DetailDesc DD, *
		  , left(DetailDesc, 4) Detail1
		  , substring(DetailDesc, 4, 50) + right(left((DetailDesc + replicate(' ',75)), 75), 10) Detail2
		  , right(left((DetailDesc + replicate(' ',103)), 103), 15) Detail3
		  , case when (select count(FpjGovNo) from #results where FpjGovNo=a.FPJGovNo) = 19 then 17 else 18 end PageBreak   
		  , isnull((
				select top 1 isnull(ParaValue, 1) 
				  from gnMstLookupDtl
				 where CompanyCode = @CompanyCode
				   and CodeID = 'FPIF'
				   and LookUpValue = 'STATUS'
				), 1) IsShowSummary
		  , (PPNAmt + DPPAmt) TotPPNBm
		from #results a
		order by FPJGovNo
	end
		
	drop table #results
end

drop table #t_fpj
-- [usprpt_SvRpTrn008] '6354401','635440100','010.000-11.00011297','010.000-11.00011297',3
GO
ALTER procedure [dbo].[usprpt_SvRpTrn008]
 @CompanyCode varchar(20),       
 @BranchCode varchar(20),      
 @FpjGovNoFrom varchar(20),
 @FpjGovNoTo varchar(20),
 @FpjType int,
 @Potongan bit,
 @StartDate varchar(20),
 @EndDate varchar(20)

as

--declare @CompanyCode varchar(20)       
--declare	@BranchCode varchar(20)      
--declare @FpjGovNoFrom varchar(20)
--declare @FpjGovNoTo varchar(20)
--declare @FpjType int
--declare @Potongan bit
--declare @StartDate varchar(20)
--declare @EndDate varchar(20)

--set @CompanyCode = '6051401'
--set	@BranchCode = '6051401'
--set @FpjGovNoFrom = '14.31835161'
--set @FpjGovNoTo= '14.31835161'
--set @FpjType = 1
--set @Potongan = 0
--set @StartDate = '20140108'
--set @EndDate = '20140108'  

-- Setting Header Faktur Pajak --
---------------------------------
declare @fCompName	varchar(max)
declare @fAdd		varchar(max)
declare @fAdd1		varchar(max)
declare @fAdd2		varchar(max)
declare @fNPWP		varchar(max)
declare @fSKP		varchar(max)
declare @fSKPDate	varchar(max)
declare @fCity		varchar(max)

declare @fStatus varchar(1)
set @fStatus = 0

declare @fInfoPKP varchar(1)
set @fInfoPKP = 1

if exists (select 1 from gnMstLookUpDtl where codeid='FPJFLAG')
begin
	set @fStatus = (select paravalue from gnmstlookupdtl where codeid='FPJFLAG' and lookupvalue='STATUS')
end

if exists (select * from gnMstLookUpHdr where codeid='FPJ_INFO_PKP')
	begin
		set @fInfoPKP = (select LookupValue from gnmstlookupdtl where codeid='FPJ_INFO_PKP')
	end
	
if (@fStatus = '1')
begin
	set @fCompName	= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='NAME')
	set @fAdd1		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='ADD1')
	set @fAdd2		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='ADD2')
	set @fAdd		= @fAdd1+' '+@fAdd2
	set @fNPWP		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='NPWP')
	set @fSKP		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='SKPNO')
	set @fSKPDate	= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='SKPDATE')
	set @fCity		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='CITY')		
end

declare @IsHoldingAddr as bit
if (select count(*) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='FPJADDR') > 0
	set @IsHoldingAddr = (select convert(numeric,LookUpValue) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='FPJADDR')
else
	set @IsHoldingAddr = 0

declare @ReportParam as varchar(2)
declare @IsCentral as bit
declare @IsRecalPPN as bit

declare @StatusEnd  as int
declare @CountDtl as int

declare @FlagAsterix as bit
set @FlagAsterix = isnull((select ParaValue from GnMstLookUpDtl where CompanyCode = @CompanyCode and CodeID = 'XFAK' and LookUpValue = 'SHOW_SV'), 0)

declare @ShowFpjDisc as bit
set @ShowFpjDisc = isnull((select ParaValue from GnMstLookUpDtl where CompanyCode = @CompanyCode and CodeID = 'SRV_FLAG' and LookUpValue = 'SHOW_FPJDISC'), 0)

-- check seberapa banyak FPJGovNo yang akan di display
create table #t_fpj(
	rownum int,
	FPjGovNo varchar(20)
)

-- 0= Without  newline, 1= With newline at detail
set @ReportParam='0'
if (select count(LookupValue) from gnMstLookUpDtl where CodeID='RPSV') > 0
	set @ReportParam= (select LookUpValue from gnMstLookUpDtl where CodeID='RPSV')


-- 0= Without BranchCode, 1= With BranchCode
set @IsCentral=0
if ((select count(LookupValue) from gnMstLookUpDtl where CodeID='FPGB') > 0 and (@FpjType = '3' or @FpjType = '8')
	and (select IsBranch from gnMstOrganizationDtl where CompanyCode=@CompanyCode and BranchCode= @BranchCode)=0)
begin
	if (select LookUpValue from gnMstLookUpDtl where CodeID='FPGB') = '1'
		set @IsCentral= 1
	else
		set @IsCentral= 0
end

-- 0= Not Recalculate PPN, 1= Recalculate PPN (For FPJ Gabungan)
set @IsRecalPPN=0
if (select count(ParaValue) from gnMstLookUpDtl where CodeID='CPPN' and LookUpValue='STATUS') > 0
	set @IsRecalPPN= (select convert(bit,ParaValue) from gnMstLookUpDtl where CodeID='CPPN' and LookUpValue='STATUS')

-- get FPJGovNo from transaction
if(len(@FpjGovNoFrom) > 8 and len(@FpjGovNoTo) > 8)
	if (@FpjType = '3' or @FpjType = '8')
		insert into #t_fpj
		select (row_number() over (order by FpjGovNo)) as rownum, FpjGovNo from svTrnFakturPajak
		 where right(FpjGovNo,len(FPJGovNo) - 8) between @FpjGovNoFrom and @FpjGovNoTo
		   and convert(varchar,FpjDate,112) between @StartDate and @EndDate
		   and CompanyCode = @CompanyCode
		   and BranchCode = @BranchCode
		   and IsPKP = 1 and FPJGovNo <> ''
		   and NoOfInvoice > 1		
	else
		insert into #t_fpj
		select (row_number() over (order by FpjGovNo)) as rownum, FpjGovNo from svTrnFakturPajak
		 where right(FpjGovNo,len(FPJGovNo) - 8) between @FpjGovNoFrom and @FpjGovNoTo
		   and convert(varchar,FpjDate,112) between @StartDate and @EndDate
		   and CompanyCode = @CompanyCode
		   and BranchCode = @BranchCode
		   and IsPKP = 1 and FPJGovNo <> ''
		   and NoOfInvoice = 1		
else
	if (@FpjType = '3' or @FpjType = '8')
		insert into #t_fpj
		select (row_number() over (order by FpjGovNo)) as rownum, FpjGovNo from svTrnFakturPajak
		 where convert(varchar, FpjDate, 112) between @StartDate and @StartDate
		   and CompanyCode = @CompanyCode
		   and BranchCode = @BranchCode
		   and IsPKP = 1 and FPJGovNo <> ''
		   and NoOfInvoice > 1		
	else
		insert into #t_fpj
		select (row_number() over (order by FpjGovNo)) as rownum, FpjGovNo from svTrnFakturPajak
		 where convert(varchar, FpjDate, 112) between @StartDate and @StartDate
		   and CompanyCode = @CompanyCode
		   and BranchCode = @BranchCode
		   and IsPKP = 1 and FPJGovNo <> ''
		   and NoOfInvoice = 1
declare @n int 
set @n = 0

-- start looping
declare @FpjGovNo varchar(20)
while (@n < (select max(rownum) from #t_fpj))
begin
	set @n = @n + 1;
	set @FpjGovNo = (select FpjGovNo from #t_fpj where rownum = @n)

	-- get FPJGovNo
	select * into #fpj from (
	select CompanyCode, BranchCode, FPjGovNo, FpjNo, FpjDate, SignedDate, DueDate, NoOfInvoice
	  from svTrnFakturPajak
	 where 1 = 1
	   and CompanyCode = @CompanyCode
	   and BranchCode = @BranchCode
	   and FpjGovNo = @FpjGovNo
	) #fpj

	-- get invoice data from transaction	
	select * into #inv from (
	select CompanyCode
		  ,BranchCode
		  ,InvoiceNo
		  ,JobOrderNo
		  ,CustomerCodeBill
		  ,case when (@FpjType = '3' OR @FPJType = '8') then '' else PoliceRegNo end PoliceRegNo 
		  ,isnull(LaborGrossAmt,0) LaborGrossAmt
		  ,isnull(PartsGrossAmt,0) PartsGrossAmt
		  ,isnull(MaterialGrossAmt,0) MaterialGrossAmt
		  ,isnull(LaborDiscAmt,0) LaborDiscAmt
		  ,isnull(PartsDiscAmt,0) PartsDiscAmt
		  ,isnull(MaterialDiscAmt,0) MaterialDiscAmt
		  ,isnull(TotalDppAmt,0) TotalDppAmt
		  ,isnull(TotalPphAmt,0) TotalPphAmt
		  ,isnull(TotalPpnAmt,0) TotalPpnAmt
		  ,isnull(TotalSrvAmt,0) TotalSrvAmt
      from svTrnInvoice a
	 where 1 = 1
	   and CompanyCode = @CompanyCode
	   and ((case when @IsCentral = 1 then BranchCode end) <> ''
			or (case when @IsCentral = 0 then BranchCode end) = @BranchCode)
	   --and BranchCode = @BranchCode
	   and isLocked=(case when (select top 1 NoOfInvoice from #fpj) > 1 then @IsCentral else isLocked end)
	   and FpjNo in (select FpjNo from #fpj) --b.FpjNo
	) #inv	
	
	-- get Data SPK
	select * into #srv from (
	select CompanyCode, BranchCode, ProductType, JobOrderNo, BasicModel, JobType from svTrnService
	 where 1 = 1
	   and CompanyCode = @CompanyCode
	   and ((case when @IsCentral = 1 then BranchCode end) <> ''
			or (case when @IsCentral = 0 then BranchCode end) = @BranchCode)
	   and BranchCode+''+JobOrderNo in (select BranchCode+''+JobOrderNo from #inv)
	) #srv

	declare @dtl as table(DetailDesc varchar(300))
	declare @temp as table(FPJGovNo varchar(35), CodeID varchar(3),intCount int)

	select * into #tsk from (
	select
		 row_number() over (order by a.OperationNo) RecNo
		,a.*, (a.OperationHour * a.OperationCost) as OperationAmt
		,b.JobOrderNo, @FpjGovNo FpjGovNo,b.LaborDiscAmt,b.PartsDiscAmt,b.MaterialDiscAmt
	  from svTrnInvTask a, #inv b
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode = b.BranchCode
	   and a.InvoiceNo = b.InvoiceNo
	   and a.InvoiceNo = b.InvoiceNo
	   and a.IsSubCon= (case when a.InvoiceNo like 'INW%' then isnull(a.IsSubCon, 0) else 0 end)
	)#tsk

	select * into #itm from (
	select row_number() over (order by a.PartNo) RecNo
	     , a.PartNo, (a.SupplyQty - a.ReturnQty) as SupplyQty
	     , a.RetailPrice, (a.RetailPrice * (a.SupplyQty - a.ReturnQty)) RetailAmt
	     , a.DiscPct, a.TypeOfGoods
	  from svTrnInvItem a, #inv b
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode = b.BranchCode
	   and a.InvoiceNo = b.InvoiceNo
	)#itm

	select * into #oth from (
	select
		 row_number() over (order by a.OperationNo) RecNo
		,a.*, (a.OperationHour * a.OperationCost) as OperationAmt
		,b.JobOrderNo, @FpjGovNo FpjGovNo
	  from svTrnInvTask a, #inv b
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode = b.BranchCode
	   and a.InvoiceNo = b.InvoiceNo
	   and a.InvoiceNo = b.InvoiceNo
	   and isnull(a.IsSubCon, 0) = 1
	)#oth

----------------------------------------------------------------------------	
	--Type of Goods SPAREPART
	select * into #tpSp from (
	select LookUpValue from gnMstLookUpDtl where companyCode = @CompanyCode
		and CodeId = 'GTGO' and ParaValue = 'SPAREPART' )#tpSp

	--Type of Goods OLI
	select * into #tpOli from (
	select LookUpValue from gnMstLookUpDtl where companyCode = @CompanyCode
		and CodeId = 'GTGO' and ParaValue = 'OLI' )#tpOli

	--Type of Goods MATERIAL
	select * into #tpMt from (
	select LookUpValue from gnMstLookUpDtl where companyCode = @CompanyCode
		and CodeId = 'GTGO' and ParaValue = 'MATERIAL' )#tpMt

	--Type of Goods RINCI MATERIAL
	select * into #tpRMt from (
	select LookUpValue from gnMstLookUpDtl where companyCode = @CompanyCode
		and CodeId = 'GTGO' and ParaValue in ('MATERIAL','OLI') )#tpRMt
-----------------------------------------------------------------------------

	select * into #itmSP from (
	select
		 row_number() over (order by a.PartNo) RecNo
		,a.PartNo
		,(a.SupplyQty - a.ReturnQty) SupplyQty
		,a.RetailPrice
		,(a.RetailPrice * (a.SupplyQty - a.ReturnQty)) RetailAmt
		,a.TypeOfGoods
	  from svTrnInvItem a, #inv b
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode = b.BranchCode
	   and a.InvoiceNo = b.InvoiceNo
	   and a.TypeOfGoods in (select * from #tpSp)
	)#itmSP

	select * into #itmOli from (
	select
		 row_number() over (order by a.PartNo) RecNo
		,a.PartNo
		,(a.SupplyQty - a.ReturnQty) SupplyQty
		,a.RetailPrice
		,(a.RetailPrice * (a.SupplyQty - a.ReturnQty)) RetailAmt
		,a.TypeOfGoods
	  from svTrnInvItem a, #inv b
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode = b.BranchCode
	   and a.InvoiceNo = b.InvoiceNo
	   and a.TypeOfGoods in(select * from #tpOli)
	)#itmOli

	select * into #itmMtrl from (
	select
		 row_number() over (order by a.PartNo) RecNo
		,a.PartNo
		,(a.SupplyQty - a.ReturnQty) SupplyQty
		,a.RetailPrice
		,(a.RetailPrice * (a.SupplyQty - a.ReturnQty)) RetailAmt
		,a.TypeOfGoods
	  from svTrnInvItem a, #inv b
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode = b.BranchCode
	   and a.InvoiceNo = b.InvoiceNo
	   and a.TypeOfGoods in (select * from #tpMt)
	)#itmMtrl

	select * into #itmRMtrl from (
	select
		 row_number() over (order by a.PartNo) RecNo
		,a.PartNo
		,(a.SupplyQty - a.ReturnQty) SupplyQty
		,a.RetailPrice
		,(a.RetailPrice * (a.SupplyQty - a.ReturnQty)) RetailAmt
		,a.TypeOfGoods
	  from svTrnInvItem a, #inv b
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode = b.BranchCode
	   and a.InvoiceNo = b.InvoiceNo
	   and a.TypeOfGoods in (select * from #tpRMt)
	)#itmRMtrl

	declare @TaskAmt money
	declare @ItemAmt money
	declare @MaterialAmt money
	declare @SubletAmt money
	declare @SalesAmt int
	declare @DiscAmt money

	-- select condition for 'Standard'
	if (@FpjType = '1')
	begin
		-- Insert Jasa Perbaikan
		if ((select count(*) from #tsk) > 0)
		begin
			set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				if (@ReportParam = '1')
					insert into @dtl values (' ')
			insert into @dtl
			select left(('    JASA PERBAIKAN'
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
				),18)

			insert into @dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.OperationNo
				+ ' - '
				+ isnull(c.Description, '')
				),80)
			  from #tsk a
		  left join #srv b
			on b.JobOrderNo = a.jobOrderNo
		  left join svMstTask c
			on c.CompanyCode = b.CompanyCode
		   and c.ProductType = b.ProductType
		   and c.BasicModel = b.BasicModel
		   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
		   and c.OperationNo = a.OperationNo

			if(@Potongan = 1)
			begin
			insert into @dtl
			select left(('                                        '
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate('-',20)
				+ '-'
				),18)

			set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
			set @DiscAmt = (select sum (OperationHour * OperationCost* DiscPct * 0.01) from #tsk)
			insert into @dtl
			select left(('                                        Potongan Jasa'
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
				),18)

			insert into @dtl
			select left(('                                        '
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate('-',20)
				+ '-'
				),18)

			insert into @dtl
			select left(('                                        '
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
				),18)
			end

			if (select count(*) from #itm) > 0
			begin
				insert into @dtl values ('')
			end

			-- add by Seandy 20-9-2011
			-- Untuk menentukan jenis coretan pada keterangan(ada atau tidaknya)
			insert into @temp 
				select @FpjGovNo, 'SRV', COUNT(*) intCount from #tsk a
			  left join #srv b
				on b.JobOrderNo = a.jobOrderNo
			  left join svMstTask c
				on c.CompanyCode = b.CompanyCode
			   and c.ProductType = b.ProductType
			   and c.BasicModel = b.BasicModel
			   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
			   and c.OperationNo = a.OperationNo
 		end

		-- Insert Pemakaian Sparepart
		if ((select count(*) from #itm) > 0)
		begin
			insert into @dtl values ('    PEMAKAIAN SPAREPART/MATERIAL')
			insert into @dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),65)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),28)
			  from #itm a
			  left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
			   and b.PartNo = a.PartNo

			if(@Potongan = 1)
			begin
			insert into @dtl
			select left(('                                        '
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate('-',20)
				+ '-'
				),18)

			set @ItemAmt = isnull((select sum(RetailAmt) from #itm),0)
			set @DiscAmt = isnull((select top 1 (PartsDiscAmt + MaterialDiscAmt) from #tsk),0)
			insert into @dtl
			select left(('                                        Potongan Part'
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
				),18)

			insert into @dtl
			select left(('                                        '
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate('-',20)
				+ '-'
				),18)

			insert into @dtl
			select left(('                                        '
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
				),18)
			end

			if (select count(*) from #oth) > 0
			begin
				insert into @dtl values ('')
			end

			-- add by Seandy 20-9-2011
			-- Untuk menentukan jenis coretan pada keterangan(ada atau tidaknya)
			insert into @temp
				select @FpjGovNo,'OIL',COUNT(*) intCount from #itm a
			  left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
			   and b.PartNo = a.PartNo
		end

		-- Insert Jasa SubCon (Lain - lain)
		if ((select count(*) from #oth) > 0)
		begin
			set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #oth),0)
			if (@ReportParam = '1')
				insert into @dtl values (' ')
			insert into @dtl
			select left(('    LAIN - LAIN'
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
				),18)

			insert into @dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.OperationNo
				+ ' - '
				+ isnull(c.Description, '')
				),80)
			  from #oth a
		  left join #srv b
			on b.JobOrderNo = a.jobOrderNo
		  left join svMstTask c
			on c.CompanyCode = b.CompanyCode
		   and c.ProductType = b.ProductType
		   and c.BasicModel = b.BasicModel
		   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
		   and c.OperationNo = a.OperationNo

			if(@Potongan = 1)
			begin
				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #oth),0)
				set @DiscAmt = (select sum (OperationHour * OperationCost* DiscPct * 0.01) from #oth)
				insert into @dtl
				select left(('                                  Potongan Lain-Lain'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end

			-- add by Seandy 20-9-2011
			-- Untuk menentukan jenis coretan pada keterangan(ada atau tidaknya)
			insert into @temp
				select @FpjGovNo,'DLL',COUNT(*) intCount from #oth a
				  left join #srv b
					on b.JobOrderNo = a.jobOrderNo
				  left join svMstTask c
					on c.CompanyCode = b.CompanyCode
				   and c.ProductType = b.ProductType
				   and c.BasicModel = b.BasicModel
				   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
				   and c.OperationNo = a.OperationNo
		end
	end

	-- select condition for 'Rinci'
	if (@FpjType = '2')
	begin
		-- Insert Jasa Perbaikan
		if ((select count(*) from #tsk) > 0)
		begin
			if (@ReportParam = '1')
				insert into @dtl values (' ')
			insert into @dtl values ('    JASA PERBAIKAN')
			insert into @dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.OperationNo
				+ ' - '
				+ isnull(c.Description, '')
				+ replicate(' ',100)
				),75)
				
				+ case when (isnull(a.DiscPct, 0) = 0 or @ShowFpjDisc = 0) then replicate(' ', 10)
                      else right(replicate(' ', 10) + '(' + convert(varchar, cast(a.DiscPct as money), 1) + '%)', 10)
                      end 				
				
				+ right((replicate(' ',18)
				+ left(convert(varchar, cast(a.OperationAmt as money), 1), len(convert(varchar, cast(a.OperationAmt as money), 1)) - 3)
				),18)
			  from #tsk a
		  left join #srv b
			on b.JobOrderNo = a.jobOrderNo
		  left join svMstTask c
			on c.CompanyCode = b.CompanyCode
		   and c.ProductType = b.ProductType
		   and c.BasicModel = b.BasicModel
		   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
		   and c.OperationNo = a.OperationNo

			if(@Potongan = 1)
			begin
				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				if ((select count(*) from #tsk) > 1)
				begin
				insert into @dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end

				set @DiscAmt = (select sum (OperationHour * OperationCost* DiscPct * 0.01) from #tsk)
				insert into @dtl
				select left(('                                        Potongan Jasa'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into @dtl
				select left(('                          '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #tsk) > 1)
				begin
				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				insert into @dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end
			end
			
			if (select count(*) from #itm) > 0
			begin
				insert into @dtl values ('')
			end

			-- add by Seandy 20-9-2011
			-- Untuk menentukan jenis coretan pada keterangan(ada atau tidaknya)
			insert into @temp 
				select @FpjGovNo, 'SRV', COUNT(*) intCount from #tsk a
			  left join #srv b
				on b.JobOrderNo = a.jobOrderNo
			  left join svMstTask c
				on c.CompanyCode = b.CompanyCode
			   and c.ProductType = b.ProductType
			  and c.BasicModel = b.BasicModel
			   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
			   and c.OperationNo = a.OperationNo
		end

		-- Insert Jasa SubCon (Lain - Lain)
		if ((select count(*) from #oth) > 0)
		begin
			if (@ReportParam = '1') insert into @dtl values (' ')
			insert into @dtl values ('    LAIN - LAIN')
			insert into @dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.OperationNo
				+ ' - '
				+ isnull(c.Description, '')
				+ replicate(' ',100)
				),75)
				+ case when (isnull(a.DiscPct, 0) = 0 or @ShowFpjDisc = 0) then replicate(' ', 10)
                       else right(replicate(' ', 10) + '(' + convert(varchar, cast(a.DiscPct as money), 1) + '%)', 10)
                       end 				
				+ right((replicate(' ',18)
				+ left(convert(varchar, cast(a.OperationAmt as money), 1), len(convert(varchar, cast(a.OperationAmt as money), 1)) - 3)
				),18)
			  from #oth a
		  left join #srv b
			on b.JobOrderNo = a.jobOrderNo
		  left join svMstTask c
			on c.CompanyCode = b.CompanyCode
		   and c.ProductType = b.ProductType
		   and c.BasicModel = b.BasicModel
		   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
		   and c.OperationNo = a.OperationNo

			if(@Potongan = 1)
			begin
				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #oth),0)
				if ((select count(*) from #oth) > 1)
				begin
				insert into @dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end

				set @DiscAmt = isnull((select sum(OperationHour * OperationCost * DiscPct * 0.01) from #oth),0)
				insert into @dtl
				select left(('                                  Potongan Lain-Lain'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #oth) > 1)
				begin
				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #oth),0)
				insert into @dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end
			end

			-- add by Seandy 20-9-2011
			-- Untuk menentukan jenis coretan pada keterangan(ada atau tidaknya)
			insert into @temp
				select @FpjGovNo,'DLL',COUNT(*) intCount from #oth a
				  left join #srv b
					on b.JobOrderNo = a.jobOrderNo
				  left join svMstTask c
					on c.CompanyCode = b.CompanyCode
				   and c.ProductType = b.ProductType
				   and c.BasicModel = b.BasicModel
				   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
				   and c.OperationNo = a.OperationNo
		end

		-- Insert Sparepart / Material
		if ((select count(*) from #itm) > 0)
		begin
			insert into @dtl values ('    PEMAKAIAN SPAREPART/MATERIAL')
			insert into @dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),65)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ case when (isnull(a.DiscPct, 0) = 0 or @ShowFpjDisc = 0) then replicate(' ', 10)
                       else right(replicate(' ', 10) + '(' + convert(varchar, cast(a.DiscPct as money), 1) + '%)', 10)
                       end 				
				+ right((
				  replicate(' ',18)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),18)
			  from #itm a
			  left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
			   and b.PartNo = a.PartNo

			if(@Potongan = 1)
			begin
				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @ItemAmt = isnull((select sum(RetailAmt) from #itm),0)
				if ((select count(*) from #itm) > 1)
				begin
				insert into @dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
					),18)
				end

				set @DiscAmt = isnull((select top 1 (PartsDiscAmt + MaterialDiscAmt) from #tsk),0)
				insert into @dtl
				select left(('                                        Potongan Part'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #itm) > 1)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itm),0)
					insert into @dtl
					select left(('                                            Sub Total'
						+ replicate(' ', 100)
						), 85)
						+ right((
						+ replicate(' ',20)
						+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
						),18)
				end
			end

			if (select count(*) from #oth) > 0
			begin
				insert into @dtl values ('')
			end

			-- add by Seandy 20-9-2011
			-- Untuk menentukan jenis coretan pada keterangan(ada atau tidaknya)
			insert into @temp
				select @FpjGovNo,'OIL',COUNT(*) intCount from #itm a
			  left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
			   and b.PartNo = a.PartNo
		end

	end

	-- select condition for 'Gabungan'
	if (@FpjType = '3')
	begin
		set @SalesAmt = isnull((select SUM(c.LaborGrossAmt + c.PartsGrossAmt + c.MaterialGrossAmt) SalesAmt from #inv c),0)

		if (@ReportParam = '1')
				insert into @dtl values (' ')
		insert into @dtl
		select left(('1   Untuk No Invoice ' + (select top 1 InvoiceNo from #inv order by InvoiceNo) + ' s/d ' + (select top 1 InvoiceNo from #inv order by InvoiceNo desc) 
			+ replicate(' ', 100)
			),83)
			+ right((
			+ replicate(' ',20)
			+ left(convert(varchar, cast(@SalesAmt as money), 1),len(convert(varchar, cast(@SalesAmt as money), 1)) - 3)
			),20)
		insert into @dtl
		select '    (No. ' + (select top 1 JobOrderNo from #inv order by JobOrderNo) + ' s/d ' + (select top 1 JobOrderNo from #inv order by JobOrderNo desc) + ')'
		select * into #inv_temp from (select * from #inv) #inv_temp
		delete #inv where InvoiceNo <> (select top 1 InvoiceNo from #inv order by JobOrderNo)
		update #inv set LaborGrossAmt = (select sum(LaborGrossAmt) from #inv_temp)
		update #inv set PartsGrossAmt = (select sum(PartsGrossAmt) from #inv_temp)
		update #inv set MaterialGrossAmt = (select sum(MaterialGrossAmt) from #inv_temp)
		update #inv set LaborDiscAmt = (select sum(LaborDiscAmt) from #inv_temp)
		update #inv set PartsDiscAmt = (select sum(PartsDiscAmt) from #inv_temp)
		update #inv set MaterialDiscAmt = (select sum(MaterialDiscAmt) from #inv_temp)
		update #inv set TotalDppAmt = (select sum(TotalDppAmt) from #inv_temp)
		update #inv set TotalPphAmt = (select sum(TotalPphAmt) from #inv_temp)
		update #inv set TotalPpnAmt = (select sum(TotalPpnAmt) from #inv_temp)
		update #inv set TotalSrvAmt = TotalDppAmt + TotalPpnAmt
		alter table #inv alter column JobOrderNo varchar(50)
		update #inv set JobOrderNo = (select top 1 JobOrderNo from #inv_temp order by JobOrderNo) + '-' + right((select top 1 JobOrderNo from #inv_temp order by JobOrderNo desc),6)
		alter table #inv alter column InvoiceNo varchar(50)
		update #inv set InvoiceNo = (select top 1 InvoiceNo from #inv_temp order by InvoiceNo) + '-' + right((select top 1 InvoiceNo from #inv_temp order by InvoiceNo desc),6)
		drop table #inv_temp				
	end

	-- select condition for 'Perincian on Lampiran'
	if (@FpjType = '4')
	begin
		set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
		set @ItemAmt = isnull((select sum(RetailAmt) from #itm),0)
		insert into @dtl
		select left(('1   Perincian dapat dilihat pada Faktur Penjualan'
			+ replicate(' ', 100)
			), 83)
			+ right((
			+ replicate(' ',20)
			+ left(convert(varchar, @TaskAmt + @ItemAmt, 1),len(convert(varchar, @TaskAmt + @ItemAmt, 1)) - 3)
			),20)
		insert into @dtl
		select '    dengan Nomor ' + a.InvoiceNo from #inv a
	end

	-- Laporan 'Standard Body Repair'
	if (@FpjType = '5')
	begin
		if ((select count(*) from #tsk) > 0)
		begin
			set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
			if (@ReportParam = '1')
				insert into @dtl values (' ')
			insert into @dtl
			select left(('    JASA PERBAIKAN'
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
				),18)

			insert into @dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.OperationNo
				+ ' - '
				+ c.Description
				),80)
			  from #tsk a
		  left join #srv b
			on b.JobOrderNo = a.jobOrderNo
		  left join svMstTask c
			on c.CompanyCode = b.CompanyCode
		   and c.ProductType = b.ProductType
		   and c.BasicModel = b.BasicModel
		   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
		   and c.OperationNo = a.OperationNo

			if(@Potongan = 1)
			begin
				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				set @DiscAmt = (select sum (OperationHour * OperationCost* DiscPct * 0.01) from #tsk)
				insert into @dtl
				select left(('                                        Potongan Jasa'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end

			if (select count(*) from #itmSP) > 0
			begin
				insert into @dtl values ('')
			end
		end

	if ((select count(*) from #itmSP) > 0)
	begin
		insert into @dtl values ('    PEMAKAIAN SPAREPART')
		insert into @dtl
		select left((
			  right((replicate(' ',2)
			+ convert(varchar,a.RecNo)
			),2)
			+ '  '
			+ a.PartNo
			+ ' - '
			+ b.PartName
			+ replicate(' ',100)
			),65)
			+ right((
			  replicate(' ',50)
			+ convert(varchar,a.SupplyQty)
			),10)
			+ right((
			  replicate(' ',50)
			+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
			),28)
		  from  #itmSP a
		  left join spMstItemInfo b
			on b.CompanyCode = @CompanyCode
		   and b.PartNo = a.PartNo
	end

			if(@Potongan = 1)
			begin
				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @ItemAmt = isnull((select sum(RetailAmt) from #itm),0)
				set @DiscAmt = isnull((select top 1 (PartsDiscAmt + MaterialDiscAmt) from #tsk),0)
				insert into @dtl
				select left(('                                        Potongan Part'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end

		if (select count(*) from #itmMtrl) > 0
		begin
			insert into @dtl values ('')
		end

	if ((select count(*) from #itmMtrl) > 0)
	begin
			insert into @dtl values ('    PEMAKAIAN MATERIAL / OLI')
			set @MaterialAmt = (select sum(RetailAmt) from #itmMtrl)
			insert into @dtl
			select left((' 1  MATERIAL'
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, @MaterialAmt, 1),len(convert(varchar, @MaterialAmt, 1)) - 3)
				),18)
	end

		if ((select count(*) from #itmOli) > 0)
		begin
			if ((select count(*) from #itmMtrl) = 0)
			begin
				insert into @dtl values ('')
				insert into @dtl values ('    PEMAKAIAN MATERIAL / OLI')
			end
			insert into @dtl
			select case when (select count(*) from #itmMtrl) > 0 then
				left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo + 1)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),65)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),28)
				else
				left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),65)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),28)
				end
			from #itmOli a
				left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
				and b.PartNo = a.PartNo

			if(@Potongan = 1)
			begin
				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				if ((select count(*) from #ItmMtrl) = 0)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmOli),0)
				end
				else
				begin	
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmMtrl),0) + isnull((select sum(RetailAmt) from #itmOli),0) 
				end

				set @DiscAmt = (select sum (OperationHour * OperationCost* DiscPct * 0.01) from #oth)
				insert into @dtl
				select left(('                                  Potongan Lain-Lain'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
		end
	end

	-- select condition for 'RinciBodyRepair'
	if (@FpjType = '6')
	begin
		if ((select count(*) from #tsk) > 0)
		begin
			if (@ReportParam = '1')
				insert into @dtl values (' ')
			insert into @dtl values ('    JASA PERBAIKAN')
			insert into @dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.OperationNo
				+ ' - '
				+ c.Description
				+ replicate(' ',100)
				),65)
				+ right((
				  replicate(' ',10)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(convert(varchar, cast(a.OperationAmt as money), 1), len(convert(varchar, cast(a.OperationAmt as money), 1)) - 3)
				),28)
			  from #tsk a
		  left join #srv b
			on b.JobOrderNo = a.jobOrderNo
		  left join svMstTask c
			on c.CompanyCode = b.CompanyCode
		   and c.ProductType = b.ProductType
		   and c.BasicModel = b.BasicModel
		   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
		   and c.OperationNo = a.OperationNo

			if(@Potongan = 1)
			begin
				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				if ((select count(*) from #tsk) > 1)
				begin
				insert into @dtl
				select left(('                 Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end

				set @DiscAmt = (select sum (OperationHour * OperationCost* DiscPct * 0.01) from #tsk)
				insert into @dtl
				select left(('                                        Potongan Jasa'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #tsk) > 1)
				begin
				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				insert into @dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end
			end

		if (select count(*) from #itm) > 0
		begin
			insert into @dtl values ('')
		end

		end

		if ((select count(*) from #itm) > 0)
		begin
			insert into @dtl values ('    PEMAKAIAN SPAREPART')
			insert into @dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),65)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),28)
			  from #itmSP a
			  left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
			   and b.PartNo = a.PartNo
			if(@Potongan = 1)
			begin
				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @ItemAmt = isnull((select sum(RetailAmt) from #itmSP),0)
				if ((select count(*) from #itm) > 1)
				begin
				insert into @dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
					),18)
				end

				set @DiscAmt = isnull((select top 1 (PartsDiscAmt + MaterialDiscAmt) from #tsk),0)
				insert into @dtl
				select left(('                                        Potongan Part'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)


				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #itm) > 1)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmSP),0)
					insert into @dtl
					select left(('                                            Sub Total'
						+ replicate(' ', 100)
						), 85)
						+ right((
						+ replicate(' ',20)
						+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
						),18)
				end
			end
		end

		if (select count(*) from #itmRMtrl) > 0
		begin
			insert into @dtl values ('')
		end

	if ((select count(*) from #itmRMtrl) > 0)
	begin
		insert into @dtl values ('    PEMAKAIAN MATERIAL / OLI')
		insert into @dtl
		select left((
			  right((replicate(' ',2)
			+ convert(varchar,a.RecNo)
			),2)
			+ '  '
			+ a.PartNo
			+ ' - '
			+ b.PartName
			+ replicate(' ',100)
			),65)
			+ right((
			  replicate(' ',50)
			+ convert(varchar,a.SupplyQty)
			),10)
			+ right((
			  replicate(' ',50)
			+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
			),28)
		  from #itmRMtrl a
		  left join spMstItemInfo b
			on b.CompanyCode = @CompanyCode
		   and b.PartNo = a.PartNo
	
			if(@Potongan = 1)
			begin
				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				if ((select count(*) from #ItmMtrl) = 0)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmOli),0)
				end
				else
				begin	
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmMtrl),0) + isnull((select sum(RetailAmt) from #itmOli),0) 
				end

					if ((select count(*) from #itmRMtrl) > 1)
					begin
						insert into @dtl
						select left(('                                            Sub Total'
							+ replicate(' ', 100)
							), 85)
							+ right((
							+ replicate(' ',20)
							+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
							),18)

					end
				end

				set @DiscAmt = (select sum (OperationHour * OperationCost* DiscPct * 0.01) from #oth)
				insert into @dtl
				select left(('                                  Potongan Lain-Lain'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #ItmMtrl) = 0)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmOli),0)
				end
				else
				begin	
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmMtrl),0) + isnull((select sum(RetailAmt) from #itmOli),0) 
				end

					if ((select count(*) from #itmRMtrl) > 1)
					begin
						insert into @dtl
						select left(('                                            Sub Total'
							+ replicate(' ', 100)
							), 85)
							+ right((
							+ replicate(' ',20)
							+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
							),18)

					end
			end

	End

	-- select condition for 'Khusus Body Repair'
	if (@FpjType = '7')
	begin
		if ((select count(*) from #tsk) > 0)
		begin
			if (@ReportParam = '1')
				insert into @dtl values (' ')
			insert into @dtl values ('    JASA PERBAIKAN')
			insert into @dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.OperationNo
				+ ' - '
				+ c.Description
				+ replicate(' ',100)
				),65)
				+ right((
				  replicate(' ',10)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(convert(varchar, cast(a.OperationAmt as money), 1), len(convert(varchar, cast(a.OperationAmt as money), 1)) - 3)
				),28)
			  from #tsk a
		  left join #srv b
			on b.JobOrderNo = a.jobOrderNo
		  left join svMstTask c
			on c.CompanyCode = b.CompanyCode
		   and c.ProductType = b.ProductType
		   and c.BasicModel = b.BasicModel
		   and (c.JobType = b.JobType or c.JobType = 'CLAIM' or c.JobType = 'OTHER')
		   and c.OperationNo = a.OperationNo

			if(@Potongan = 1)
			begin
				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				if ((select count(*) from #tsk) > 1)
				begin
				insert into @dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end

				set @DiscAmt = (select sum (OperationHour * OperationCost* DiscPct * 0.01) from #tsk)
				insert into @dtl
				select left(('                                        Potongan Jasa'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@TaskAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #tsk) > 1)
				begin
				set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk),0)
				insert into @dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @TaskAmt, 1),len(convert(varchar, @TaskAmt, 1)) - 3)
					),18)
				end
			end

			if (select count(*) from #itm) > 0
			begin
				insert into @dtl values ('')
			end

		end

		if ((select count(*) from #itm) > 0)
		begin
			insert into @dtl values ('    PEMAKAIAN SPAREPART')
			insert into @dtl
			select left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),65)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),28)
			  from #itmSP a
			  left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
			   and b.PartNo = a.PartNo

			if(@Potongan = 1)
			begin
				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				set @ItemAmt = isnull((select sum(RetailAmt) from #itmSP),0)
				if ((select count(*) from #itm) > 1)
				begin
				insert into @dtl
				select left(('                                            Sub Total'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
					),18)
				end

				set @DiscAmt = isnull((select top 1 (PartsDiscAmt + MaterialDiscAmt) from #tsk),0)
				insert into @dtl
				select left(('                                        Potongan Part'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)


				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #itm) > 1)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmSP),0)
					insert into @dtl
					select left(('                                            Sub Total'
						+ replicate(' ', 100)
						), 85)
						+ right((
						+ replicate(' ',20)
						+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
						),18)
				end
			end

		end
		if (select count(*) from #ItmMtrl) > 0
		begin
			insert into @dtl values ('')
		end

	if ((select count(*) from #ItmMtrl) > 0)
		begin
			insert into @dtl values ('    PEMAKAIAN MATERIAL / OLI')
			set @MaterialAmt = (select sum(RetailAmt) from #ItmMtrl)
			Print(@MaterialAmt)
			if (@ReportParam = '1')
			begin
				insert into @dtl values (' ')
			end
			insert into @dtl
			select left((' 1  MATERIAL'
				+ replicate(' ', 100)
				), 85)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, @MaterialAmt, 1),len(convert(varchar, @MaterialAmt, 1)) - 3)
				),18)
		end

		if ((select count(*) from #itmOli) > 0)
		begin
			if ((select count(*) from #ItmMtrl) = 0)
			begin
				insert into @dtl values (' ')
				insert into @dtl values ('    PEMAKAIAN MATERIAL / OLI')
			end
			insert into @dtl
			select case when (select count(*) from #ItmMtrl) > 0 then
				left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo + 1)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),65)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),28)
				else
				left((
				  right((replicate(' ',2)
				+ convert(varchar,a.RecNo)
				),2)
				+ '  '
				+ a.PartNo
				+ ' - '
				+ b.PartName
				+ replicate(' ',100)
				),65)
				+ right((
				  replicate(' ',50)
				+ convert(varchar,a.SupplyQty)
				),10)
				+ right((
				  replicate(' ',50)
				+ left(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar),len(cast(convert(varchar,cast(a.RetailAmt as money),1) as varchar))-3)
				),28)
				end
			from #itmOli a
				left join spMstItemInfo b
				on b.CompanyCode = @CompanyCode
				and b.PartNo = a.PartNo

			if(@Potongan = 1)
			begin
				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				if ((select count(*) from #ItmMtrl) = 0)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmOli),0)
				end
				else
				begin	
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmMtrl),0) + isnull((select sum(RetailAmt) from #itmOli),0) 
				end
				if ((select count(*) from #itmRMtrl) > 1)
				begin
					insert into @dtl
					select left(('                                            Sub Total'
						+ replicate(' ', 100)
						), 85)
						+ right((
						+ replicate(' ',20)
						+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
						),18)
				end

				set @DiscAmt = (select sum (OperationHour * OperationCost* DiscPct * 0.01) from #oth)
				insert into @dtl
				select left(('                                  Potongan Lain-Lain'
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, @DiscAmt, 1),len(convert(varchar, @DiscAmt, 1)) - 3)
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate('-',20)
					+ '-'
					),18)

				insert into @dtl
				select left(('                                        '
					+ replicate(' ', 100)
					), 85)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1),len(convert(varchar, isnull(@ItemAmt,0) - isnull(@DiscAmt,0), 1)) - 3)
					),18)
			end
			else
			begin
				if ((select count(*) from #ItmMtrl) = 0)
				begin
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmOli),0)
				end
				else
				begin	
					set @ItemAmt = isnull((select sum(RetailAmt) from #itmMtrl),0) + isnull((select sum(RetailAmt) from #itmOli),0) 
				end
				if ((select count(*) from #itmRMtrl) > 1)
				begin
					insert into @dtl
					select left(('                                            Sub Total'
						+ replicate(' ', 100)
						), 85)
						+ right((
						+ replicate(' ',20)
						+ left(convert(varchar, @ItemAmt, 1),len(convert(varchar, @ItemAmt, 1)) - 3)
						),18)
				end
			end
		end
	End

	-- select condition for 'Gabungan'
	if (@FpjType = '8')
	begin
		set @TaskAmt = isnull((select sum(OperationHour * OperationCost) from #tsk where IsSubCon != 1),0)
		set @ItemAmt = isnull((select sum(RetailAmt) from #itm where TypeOfGoods in ('0', '1', '2')),0)
		set @SalesAmt = isnull((select sum(c.LaborGrossAmt + c.PartsGrossAmt + c.MaterialGrossAmt) SalesAmt from #inv c),0)
		set @SubletAmt = isnull((select sum(OperationHour * OperationCost) from #tsk where IsSubCon = 1),0) + 
		                 isnull((select sum(RetailAmt) from #itm where TypeOfGoods not in ('0', '1', '2')),0)
		

		if (@ReportParam = '1')
		--insert into @dtl values ('1 ')
		insert into @dtl
		select left(('2    Untuk No Invoice ' + (select top 1 InvoiceNo from #inv order by InvoiceNo) + ' s/d ' + (select top 1 InvoiceNo from #inv order by InvoiceNo desc) 
			+ replicate(' ', 100)
			),83)
		
		insert into @dtl
		select '3    (No. ' + (select top 1 JobOrderNo from #inv order by JobOrderNo) + ' s/d ' + (select top 1 JobOrderNo from #inv order by JobOrderNo desc) + ')'
		
		insert into @dtl values ('4 ')
		
		if(@ItemAmt <> 0)
		begin
			insert into @dtl
			select left(('5          SPARE PART DAN MATERIAL (SGP & SGO)' 
				+ replicate(' ', 100)
				),83)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, cast(@ItemAmt as money), 1),len(convert(varchar, cast(@ItemAmt as money), 1)) - 3)
				),20)
		end
		
		if(@TaskAmt <> 0)
		begin
				insert into @dtl
				select left(('6          JASA' 
					+ replicate(' ', 100)
					),83)
					+ right((
					+ replicate(' ',20)
					+ left(convert(varchar, cast(@TaskAmt as money), 1),len(convert(varchar, cast(@TaskAmt as money), 1)) - 3)
					),20)
		end
		
		if(@SubletAmt <> 0)
		begin
			insert into @dtl
			select left(('7          SUBLET' 
				+ replicate(' ', 100)
				),83)
				+ right((
				+ replicate(' ',20)
				+ left(convert(varchar, cast(@SubletAmt as money), 1),len(convert(varchar, cast(@SubletAmt as money), 1)) - 3)
				),20)
		end
		
		select * into #inv_tempD from (select * from #inv) #inv_tempD
		delete #inv where InvoiceNo <> (select top 1 InvoiceNo from #inv order by JobOrderNo)
		update #inv set LaborGrossAmt = (select sum(LaborGrossAmt) from #inv_tempD)
		update #inv set PartsGrossAmt = (select sum(PartsGrossAmt) from #inv_tempD)
		update #inv set MaterialGrossAmt = (select sum(MaterialGrossAmt) from #inv_tempD)
		update #inv set LaborDiscAmt = (select sum(LaborDiscAmt) from #inv_tempD)
		update #inv set PartsDiscAmt = (select sum(PartsDiscAmt) from #inv_tempD)
		update #inv set MaterialDiscAmt = (select sum(MaterialDiscAmt) from #inv_tempD)
		update #inv set TotalDppAmt = (select sum(TotalDppAmt) from #inv_tempD)
		update #inv set TotalPphAmt = (select sum(TotalPphAmt) from #inv_tempD)
		update #inv set TotalPpnAmt = (select sum(TotalPpnAmt) from #inv_tempD)
		update #inv set TotalSrvAmt = TotalDppAmt + TotalPpnAmt
		alter table #inv alter column JobOrderNo varchar(50)
		update #inv set JobOrderNo = (select top 1 JobOrderNo from #inv_tempD order by JobOrderNo) + '-' + right((select top 1 JobOrderNo from #inv_tempD order by JobOrderNo desc),6)
		alter table #inv alter column InvoiceNo varchar(50)
		update #inv set InvoiceNo = (select top 1 InvoiceNo from #inv_tempD order by InvoiceNo) + '-' + right((select top 1 InvoiceNo from #inv_tempD order by InvoiceNo desc),6)
		drop table #inv_tempD		
	end

	-- insert to declare to decide last line every FPJGovNo
	set @CountDtl = (select COUNT(*) from @dtl)

	if(@FPJType <> '3' AND @FPJType <> '4' AND @FPJType <> '8')
	begin	
		if @CountDtl <> (case when @CountDtl = 19 then 17 else 18 end)
		begin
			insert into @dtl values (' ')
			set @StatusEnd = 1
		end
		else
		begin
			set @StatusEnd = 0
		end
	end

	-- select data to display result on Report
	select * into #result from (
	select 
		 b.FpjGovNo
		,b.CompanyCode
		,case when @fInfoPKP = 1 then
			(case @fStatus when '1' then @fCompName else f.CompanyGovName end)
		 else '' end as CompanyName
		,case when @fInfoPKP = 1 then
			(case @fStatus when '1' then @fAdd else 
				(case when @IsHoldingAddr=0 then isnull(f.Address1, '') + ' '  + isnull(f.Address2, '') + ' ' + isnull(f.Address3, '') + ' ' + isnull(f.Address4, '')
					else (select isnull(Address1, '') + ' '  + isnull(Address2, '') + ' ' + isnull(Address3, '') + ' ' + isnull(Address4, '') from gnMstCoProfile where CompanyCode=@CompanyCode
					and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
				end)end)
		  else '' end as CompanyAddress
		,case when @fInfoPKP = 1 then
			(case @fStatus when '1' then @fNPWP else f.NPWPNo end)
		 else '' end as NPWPNo
		,case @fStatus when '1' then @fSKP else f.SkpNo end as SkpNo
		,case @fStatus when '1' then @fSKPDate else f.SkpDate end as SkpDate
		,b.FpjDate
		,case when (@FpjType = '3' OR @FPJType = '8') then '' else isnull(c.PoliceRegNo,'') end PoliceRegNo  
		,c.CustomerCodeBill CustCodeBill
		,g.CustomerGovName CustNameBill
		,g.Address1 CustAddr1Bill
		,g.Address2 CustAddr2Bill
		,g.Address3 CustAddr3Bill
		,g.NPWPNo CustNpwpBill
		,g.SkpNo CustSkpBill
		,a.DetailDesc
		,c.LaborGrossAmt + c.PartsGrossAmt + c.MaterialGrossAmt SalesAmt  
		,c.LaborDiscAmt + c.PartsDiscAmt + c.MaterialDiscAmt DiscAmt  
		,0 as DPAmt
		,c.TotalDppAmt DPPAmt  
		,case when (@IsRecalPPN=1) and substring(c.InvoiceNo,1,3) in ('INF','INW') then floor(c.TotalDppAmt*10/100)
			else isnull(c.TotalPphAmt, 0) + isnull(c.TotalPpnAmt, 0) 
		end PPNAmt  
		,'NIHIL' as DppBm  
		,'NIHIL' as PpnBm  
		, c.InvoiceNo
		,case @fStatus when '1' then @fCity else h.LookupValueName end as CityName
		,b.SignedDate
		,c.JobOrderNo
		,case when (@IsRecalPPN=1) and substring(c.InvoiceNo,1,3) in ('INF','INW') then floor(c.TotalDppAmt*10/100)+ c.TotalDppAmt
			else c.TotalSrvAmt
		end TotalAmt
		,b.DueDate    
		,'              ##########' as Asteric1
		,'            ######################' as Asteric2
		,isnull((select distinct intCount from @temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'SRV'),0)TotService
		,isnull((select distinct intCount from @temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'OIL'),0) TotOil
		,isnull((select distinct intCount from @temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'DLL'),0) TotDLL
		,case when @FlagAsterix = 0 or @FlagAsterix is null
			then '                        ################################'  
			else 
				case when isnull((select distinct intCount from @temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'SRV'),0) = 0 AND isnull((select distinct intCount from @temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'OIL'),0) <> 0 
				then '###########                            ####################'
				else
					case when isnull((select distinct intCount from @temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'SRV'),0) <> 0 AND isnull((select distinct intCount from @temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'OIL'),0) <> 0
					then
						'                                                 ####################'
					else
						case when isnull((select distinct intCount from @temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'SRV'),0) <> 0 AND isnull((select distinct intCount from @temp z where z.FPJGovNo = b.FpjGovNo and z.CodeID = 'OIL'),0) = 0
						then	'                        ################################'
						else
							'###########                            ####################'
						end
					end
				end
			end
			as Asteric3
		,'STANDARD' ReportType
		, 7 as xLocation
		, 247 as yLocation
		, isnull(@CountDtl + @StatusEnd,0) TotService2
	  from @dtl a, #fpj b
	  left join #inv c
		on c.CompanyCode = b.CompanyCode
	   and ((case when @IsCentral = 1 then c.BranchCode end) <> ''
			or (case when @IsCentral = 0 then c.BranchCode end) = @BranchCode)
	  left join gnMstCoProfile f
		on f.CompanyCode = b.CompanyCode
	   and f.BranchCode = b.BranchCode
	  left join gnMstCustomer g
		on g.CompanyCode = c.CompanyCode
	   and g.CustomerCode = c.CustomerCodeBill
	  left join gnMstLookupDtl h
		on h.CompanyCode = b.CompanyCode
	   and h.LookupValue  = f.CityCode
	   and h.CodeId  = 'CITY'
	)#result					
	   
	if (@n = 1) 	
	begin		
		select * into #results from (select * from #result)x
		delete #results
	end
	if (@n > 0) 
		insert into #results select * from #result

	drop table #result
	drop table #fpj
	drop table #inv
	drop table #srv
	drop table #tsk
	drop table #itm
	drop table #oth
	drop table #itmSP
	drop table #itmMtrl
	drop table #itmRMtrl
	drop table #itmOli
	drop table #tpSp
	drop table #tpOli
	drop table #tpMt
	drop table #tpRMt
	delete @dtl
	delete @temp
end

if (@n > 0)
begin
	if (@FpjType = '3')	
	begin
		select distinct DetailDesc DD, *
		  , left(DetailDesc, 4) Detail1
		  , substring(DetailDesc, 4, 50) + right(left((DetailDesc + replicate(' ',75)), 75), 10) Detail2
		  , right(left((DetailDesc + replicate(' ',103)), 103), 15) Detail3
		  , case when (select count(FpjGovNo) from #results where FpjGovNo=a.FPJGovNo) = 19 then 17 else 18 end PageBreak   
		  , isnull((
				select top 1 isnull(ParaValue, 1) 
				  from gnMstLookupDtl
				 where CompanyCode = @CompanyCode
				   and CodeID = 'FPIF'
				   and LookUpValue = 'STATUS'
				), 1) IsShowSummary
		  , (PPNAmt + DPPAmt) TotPPNBm
		from #results a
		order by FPJGovNo asc, DetailDesc desc
	end
	else if (@FPJType = '8')	
	begin
		select distinct DetailDesc DD
		  , FpjGovNo
		  , CompanyCode
		  , CompanyName
		  , CompanyAddress
		  , NPWPNo
		  , SkpNo
		  , SkpDate
		  , FpjDate
		  , PoliceRegNo
		  , CustCodeBill
		  , CustNameBill
		  , CustAddr1Bill
		  , CustAddr2Bill
		  , CustAddr3Bill
		  , CustNpwpBill
		  , CustSkpBill
		  , right(rtrim(DetailDesc), len(rtrim(DetailDesc)) - 1) DetailDesc
		  , SalesAmt
		  , DiscAmt
		  , DPAmt
		  , DPPAmt
		  , PPNAmt
		  , DppBm
		  , PpnBm
		  , InvoiceNo
		  , CityName
		  , SignedDate
		  , JobOrderNo
		  , TotalAmt
		  , convert(varchar, DueDate, 105) DueDate
		  , Asteric1
		  , Asteric2
		  , TotService
		  , TotOil
		  , TotDLL
		  , Asteric3
		  , ReportType
		  , xLocation
		  , yLocation
		  , TotService2
		  , left(DetailDesc, 4) Detail1
		  , substring(DetailDesc, 4, 50) + right(left((DetailDesc + replicate(' ',75)), 75), 10) Detail2
		  , right(left((DetailDesc + replicate(' ',103)), 103), 15) Detail3
		  , case when (select count(FpjGovNo) from #results where FpjGovNo=a.FPJGovNo) = 19 then 17 else 18 end PageBreak   
		  , isnull((
				select top 1 isnull(ParaValue, 1) 
				  from gnMstLookupDtl
				 where CompanyCode = @CompanyCode
				   and CodeID = 'FPIF'
				   and LookUpValue = 'STATUS'
				), 1) IsShowSummary
		  , (PPNAmt + DPPAmt) TotPPNBm
		from #results a
		order by FPJGovNo asc, a.DetailDesc		
	end
	else
	begin
		select DetailDesc DD, *
		  , left(DetailDesc, 4) Detail1
		  , substring(DetailDesc, 4, 50) + right(left((DetailDesc + replicate(' ',75)), 75), 10) Detail2
		  , right(left((DetailDesc + replicate(' ',85)), 85), 8)
		  + right(left((DetailDesc + replicate(' ',103)), 103), 15) Detail3
		  , case when (select count(FpjGovNo) from #results where FpjGovNo=a.FPJGovNo) = 19 then 17 else 18 end PageBreak   
		  , isnull((
				select top 1 isnull(ParaValue, 1) 
				  from gnMstLookupDtl
				 where CompanyCode = @CompanyCode
				   and CodeID = 'FPIF'
				   and LookUpValue = 'STATUS'
				), 1) IsShowSummary
		  , (PPNAmt + DPPAmt) TotPPNBm
		from #results a
		order by FPJGovNo
	end
		
	drop table #results
end

drop table #t_fpj
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<MASTER FAKTUR PAJAK DETAIL>
-- [usprpt_SpRpTrn035Pre] '6006406','6006406','20110901','20111130','010.000-11.00038687','010.000-11.00038687','300','1'
-- =============================================

ALTER procedure [dbo].[usprpt_SpRpTrn035Pre]
--declare
   @CompanyCode		VARCHAR(15),
   @BranchCode		VARCHAR(15),
   @FPJDateStart DATETIME,
   @FPJDateEnd DATETIME,
   @FPJNoStart		VARCHAR(30),
   @FPJNoEnd		VARCHAR(30),
   @ProfitCenter	VARCHAR(15),
   @SeqNo INT

--set @CompanyCode = '6115204001'
--set @BranchCode	= '6115204301'
--set @FPJDateStart = '20140801'
--set @FPJDateEnd	= '20141016'
--set @FPJNoStart	= '010.000-14.00000001'
--set @FPJNoEnd = '010.000-14.00000001'
--set @ProfitCenter = '300'
--set @SeqNo = 3

AS   
BEGIN

-- Setting Header Faktur Pajak --
---------------------------------
declare @fCompName	varchar(max)
declare @fAdd		varchar(max)
declare @fAdd1		varchar(max)
declare @fAdd2		varchar(max)
declare @fNPWP		varchar(max)
declare @fSKP		varchar(max)
declare @fSKPDate	varchar(max)
declare @fCity		varchar(max)
declare @fInv		int

declare @fStatus varchar(1)
set @fStatus = 0

declare @fInfoPKP varchar(1)
set @fInfoPKP = 1

if exists (select 1 from gnMstLookUpDtl where codeid='FPJFLAG')
begin
	set @fStatus = (select paravalue from gnmstlookupdtl where codeid='FPJFLAG' and lookupvalue='STATUS')
end

if exists (select * from gnMstLookUpHdr where codeid='FPJ_INFO_PKP')
begin
	set @fInfoPKP = (select LookupValue from gnmstlookupdtl where codeid='FPJ_INFO_PKP')
end

if (@fStatus = '1')
begin
	set @fCompName	= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='NAME')
	set @fAdd1		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='ADD1')
	set @fAdd2		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='ADD2')
	set @fAdd		= @fAdd1+' '+@fAdd2
	set @fNPWP		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='NPWP')
	set @fSKP		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='SKPNO')
	set @fSKPDate	= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='SKPDATE')
	set @fCity		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='CITY')		
end
set @fInv		= (select isnull(ParaValue,'1') from gnmstlookupdtl where codeid='FPJFLAG' and lookupvalue='SPARE')		

-- parameter use address holding or not
declare @IsHoldingAddr as bit
if (select count(*) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='FPJADDR') > 0
	set @IsHoldingAddr = (select convert(numeric,LookUpValue) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='FPJADDR')
else
	set @IsHoldingAddr = 0

declare @PaymentInfo as bit
if (select count(*) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='PINF') > 0
	set @PaymentInfo = (select convert(numeric,ParaValue) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='PINF' AND LookUpValue='STAT')
else
	set @PaymentInfo = 1

	declare @Flag bit
	set @Flag = (select ParaValue from gnMstLookUpDtl where CompanyCode = @CompanyCode and CodeID = 'FLPG' and LookUpValue = 'NJS')

select * into #t1 from(
SELECT Distinct
	a.TPTrans, 
	case when @fInfoPKP = 1 then 
		(case @fStatus when '1' then @fCompName else e.CompanyGovName  end)
	else '' end as compNm, 
	case @fStatus when '1' then @fSKP else e.SKPNo end as compSKPNo, 
	case @fStatus when '1' then @fSKPDate else e.SKPDate end as compSKPDate,
	case when @fInfoPKP = 1 then 
		(case @fStatus when '1' then @fAdd1 else 
			(case when @IsHoldingAddr=0 then ISNULL(e.Address1, '') + ' ' + ISNULL(e.Address2, '') + ' ' + ISNULL(e.Address3, '')
				else (select ISNULL(Address1, '') + ' ' + ISNULL(Address2, '') + ' ' + ISNULL(Address3, '') from gnMstCoProfile where CompanyCode=@CompanyCode
				and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
			end)
		end)
	 else '' end AS compAddr1
	,case @fStatus when '1' then @fAdd2 else 
		(case when @IsHoldingAddr=0 then ISNULL(e.Address2, '')
			else (select ISNULL(e.Address2, '') from gnMstCoProfile where CompanyCode=@CompanyCode
			and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
		end)
	 end AS compAddr2
	,case @fStatus when '1' then '' else 
		(case when @IsHoldingAddr=0 then ISNULL(e.Address3, '')
			else (select ISNULL(e.Address3, '') from gnMstCoProfile where CompanyCode=@CompanyCode
			and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
		end)
	 end AS compAddr3
	,case @fStatus when '1' then '' else 
		(case when @IsHoldingAddr=0 then ISNULL(e.Address4, '')
			else (select ISNULL(e.Address4, '') from gnMstCoProfile where CompanyCode=@CompanyCode
			and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
		end)
	 end AS compAddr4,
	case @fStatus when '1' then '' else e.PhoneNo end as compPhoneNo, 
	case @fStatus when '1' then '' else e.FaxNo  end as compFaxNo, 
	case when @fInfoPKP = 1 then 
		(case @fStatus when '1' then @fNPWP else e.NPWPNo  end)
	else '' end as compNPWPNo, 
	a.FPJNo  fakturFPJNo, 
	a.FPJDate  fakturFPJDate, 
	a.InvoiceNo  fakturInvNo,
	a.InvoiceDate  fakturInvDate, 
	a.FPJGovNo  fakturFPJGovNo, 
	a.PickingSlipNo  fakturPickSlipNo,
	/* RETURN MORE THAN 1 VALUE NEED MORE CHECK, TEMPORARY USING TOP 1 */ 
	--New--
	(SELECT TOP 1 g.OrderNo+', '+CONVERT(VARCHAR(20),g.OrderDate,105)
		FROM spTrnSORDHdr g
			LEFT JOIN spTrnSFPJDtl h ON g.CompanyCode = h.CompanyCode AND g.BranchCode = h.BranchCode AND g.DocNo = h.DocNo
		WHERE h.CompanyCode = a.CompanyCode AND h.CompanyCode = a.CompanyCode AND h.FPJNo = a.FPJNo
		GROUP BY g.OrderNo, g.OrderDate
	 )as OrderFeld,
	--End new 
	a.CustomerCode  fakturCustCode,
	x.CustomerName  custName, 
	d.SKPNo  custSKPNo, 
	d.SKPDate custSKPDate, 
	x.Address1 custAddr1, 
	x.Address2 custAddr2, 
	x.Address3 custAddr3, 
	x.Address4 custAddr4, 
	d.PhoneNo custPhoneNo, 
	d.FaxNo custFaxNo, 
	d.NPWPNo custNPWPNo, 
	a.DueDate fakturDueDate, 
	a.TotSalesQty fakturTotSaleQty, 
	a.TotSalesAmt fakturTotSalesAmt, 
	a.TotDiscAmt fakturTotDiscAmt, 
	a.TotDppAmt fakturTotDppAmt, 
	a.TotPPNAmt fakturPPNAmt, 
	a.TotFinalSalesAmt fakturTotFinalSalesAmt, 
	a.FPJSignature, 
	c.TaxPct  taxPercent, 
	case @fStatus when '1' then @fCity else 
	(SELECT LookUpValueName FROM gnMstLookupDtl WHERE CodeID = 'CITY' AND LookUpValue = e.CityCode) end as cityNm, 
	UPPER (f.SignName) SignName, 
	UPPER (f.TitleSign) TitleSign,
--	g.PartNo,
--	h.PartName,
--	g.QtyBill,
--	g.SalesAmt,
	(
		SELECT SUM(QtyBill) FROM spTrnSFPJDtl WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND FPJNo = a.FPJNo
	) AS TotQtyBill,
	(
	SELECT COUNT (PartNo) FROM spTrnSFPJDtl WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND FPJNo = a.FPJNo
	) AS JumlahPart
	,case @fStatus when '1' then @fAdd1 else 
		(case when @IsHoldingAddr=0 then e.Address1+' '+e.Address2
			else (select Address1+' '+Address2 from gnMstCoProfile where CompanyCode=@CompanyCode
			and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
		end)
	 end as Alamat1
	,case @fStatus when '1' then @fAdd2 else 
		(case when @IsHoldingAddr=0 then e.Address3+' '+e.Address4
			else (select Address3+' '+Address4 from gnMstCoProfile where CompanyCode=@CompanyCode
			and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
		end)
	 end as Alamat2,
	ISNULL(x.Address1,'')+' '+ISNULL(x.Address2,'') Alamat3,
	ISNULL(x.Address3,'')+' '+ISNULL(x.Address4,'') Alamat4,
--	g.PartNo+' - '+h.PartName Item,
	(SELECT COUNT (FPJNo) FROM spTrnSFPJDtl WHERE CompanyCode = g.CompanyCode AND BranchCode = g.BranchCode AND FPJNo = a.FPJNo) MaxRow
	,CASE 
		WHEN @PaymentInfo=1 THEN 'DILUNASI DENGAN ' + (select LookUpValueName from gnMstLookUpDtl where CompanyCode=a.CompanyCode and CodeID='PYBY' and LookUpValue= i.PaymentCode)
		ELSE '' 
	end PaymentInfo,
	 ISNULL((SELECT TOP 1 ParaValue FROM GnMstLookUpDtl WHERE CompanyCode = @CompanyCode AND CodeID = 'FPIF'),'0') FlagDetails	
	,16 PageBreak
, isnull(@Flag, 0) Flag
, isnull(@fInv,1) ShowInvoice
FROM 
	SpTrnSFPJHdr a WITH (NOLOCK, NOWAIT)
LEFT JOIN GnMstTax c WITH (NOLOCK, NOWAIT)
	ON a.CompanyCode = c.CompanyCode AND c.TaxCode = 'PPN'
LEFT JOIN GnMstCustomer d WITH (NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
	AND a.CustomerCode = d.CustomerCode
LEFT JOIN SpTrnSFPJInfo x WITH (NOLOCK, NOWAIT) ON a.CompanyCode = x.CompanyCode
	AND a.BranchCode = x.BranchCode
	AND a.FPJNo = x.FPJNo
LEFt JOIN GnMstCoProfile e WITH (NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
	AND a.BranchCode = e.BranchCode
LEFT JOIN GnMstSignature f WITH (NOLOCK, NOWAIT) ON a.CompanyCode = f.CompanyCode
	AND a.BranchCode = f.BranchCode
	AND f.ProfitCenterCode = @ProfitCenter
	AND f.DocumentType = CONVERT (VARCHAR (3), a.FPJNo)
	AND f.SeqNo = @SeqNo
LEFT JOIN spTrnSFPJDtl g WITH (NOLOCK, NOWAIT) ON g.CompanyCode = a.CompanyCode
	AND g.BranchCode = a.BranchCode
	AND g.FPJNo = a.FPJNo
INNER JOIN spMstItemInfo h WITH (NOLOCK, NOWAIT) ON h.CompanyCode = a.CompanyCode
	AND h.PartNo = g.PartNo
LEFT JOIN gnMstCustomerProfitCenter i on a.CompanyCode=i.CompanyCode and a.BranchCode=i.BranchCode
	AND a.CustomerCode=i.CustomerCode and i.ProfitCenterCode='300'
WHERE 
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode AND a.isPKP = 1
	AND CONVERT(VARCHAR, a.FPJSignature, 112) BETWEEN @FPJDateStart AND @FPJDateEnd
	AND ((CASE WHEN @FPJNoStart = '' THEN a.FPJGovNo END) <> ''
	OR (CASE WHEN @FPJNoStart <> '' THEN a.FPJGovNo END) BETWEEN @FPJNoStart AND @FPJNoEnd)
	) #t1

select TPTrans, compNm, compSKPNo, compSKPDate, compAddr1, compAddr2, compAddr3, compAddr4, compPhoneNo, compFaxNo, compNPWPNo,  
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 fakturFPJNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo) + '-' + (select substring((select top 1 fakturFPJNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc), 8, 7)) else (select fakturFPJNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturFPJNo, 
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 fakturFPJDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc) else (select fakturFPJDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturFPJDate,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 fakturInvNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturInvNo) + '-' + (select substring((select top 1 fakturInvNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturInvNo desc), 8, 7)) else (select fakturInvNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturInvNo, 
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 fakturInvDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturInvNo desc) else (select fakturInvDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturInvDate, fakturFPJGovNo,  
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 fakturPickSlipNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo) + '-' + (select substring((select top 1 fakturPickSlipNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc), 8, 7)) else (select fakturPickSlipNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturPickSlipNo, 	
	fakturCustCode, custName, custSKPNo, custSKPDate, custAddr1, custAddr2, custAddr3, custAddr4, custPhoneNo, custFaxNo, custNPWPNo,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 fakturDueDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc) else (select fakturDueDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturDueDate, 
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(fakturTotSaleQty) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else (select fakturTotSaleQty from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturTotSaleQty, 
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(fakturTotSalesAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else (select fakturTotSalesAmt from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturTotSalesAmt,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(fakturTotDiscAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else (select fakturTotDiscAmt from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturTotDiscAmt,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(fakturTotDppAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else (select fakturTotDppAmt from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturTotDppAmt,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then ((select sum(fakturTotDppAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) * 0.1) else (select fakturPPNAmt from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturPPNAmt,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(fakturTotDppAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) + ((select sum(fakturTotDppAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) * 0.1) else (select fakturTotFinalSalesAmt from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturTotFinalSalesAmt,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 FPJSignature from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc) else (select FPJSignature from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end FPJSignature, 
	taxPercent, cityNm, SignName, TitleSign, 
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(TotQtyBill) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else (select TotQtyBill from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end TotQtyBill,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(JumlahPart) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else (select JumlahPart from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end JumlahPart,
	Alamat1, Alamat2, Alamat3, Alamat4, 
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 OrderFeld from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc) else (select OrderFeld from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end OrderFeld,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(MaxRow) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else (select MaxRow from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end MaxRow,
	PaymentInfo, FlagDetails, PageBreak, Flag, ShowInvoice
from #t1 a
group by TPTrans, compNm, compSKPNo, compSKPDate, compAddr1, compAddr2, compAddr3, compAddr4, compPhoneNo, compFaxNo, compNPWPNo, fakturFPJGovNo, 
	fakturCustCode, custName, custSKPNo, custSKPDate, custAddr1, custAddr2, custAddr3, custAddr4, custPhoneNo, custFaxNo, custNPWPNo, taxPercent, FlagDetails,
	cityNm, SignName, TitleSign, Flag, ShowInvoice, Alamat1, Alamat2, Alamat3, Alamat4, PaymentInfo, PageBreak, FlagDetails

drop table #t1		
END
GO
---=========== alter uspfn_sp_partinquiry dynamic query MD/SD ===============

ALTER procedure [dbo].[uspfn_sp_partinquiry]
@CompanyCode varchar(15), @BranchCode varchar(15), @TypeOfGoods varchar(2), @ProductType varchar(2)
AS
begin

--declare @CompanyCode varchar(15), @BranchCode varchar(15), @TypeOfGoods varchar(2), @ProductType varchar(2)
--set @CompanyCode = '6159401000'
--set @BranchCode = '6159401001'
--set @TypeOfGoods = '0'
--set @ProductType = '4W'

DECLARE @Query varchar(max);
SET @Query = 'SELECT 
		 Items.PartNo,ItemInfo.PartName,ItemLoc.WarehouseCode
		,ItemLoc.LocationCode
		,(ItemLoc.OnHand - (ItemLoc.AllocationSP + ItemLoc.AllocationSR + ItemLoc.AllocationSL + ItemLoc.ReservedSP + ItemLoc.ReservedSR + ItemLoc.ReservedSL)) AS QtyAvail
		,Items.OnOrder,ItemPrice.RetailPriceInclTax
		,CASE ItemInfo.IsGenuinePart WHEN 1 THEN ''Ya'' ELSE ''Tidak'' END AS IsGenuinePart
		,ItemInfo.SupplierCode,ItemPrice.RetailPrice
		,Items.ProductType,Items.PartCategory
		,(SELECT LookupValueName 
			FROM gnMstLookupDtl 
		   WHERE CodeID = ''PRCT'' AND 
				 LookUpValue = Items.PartCategory AND 
				 CompanyCode = ''' + @CompanyCode + ''') AS CategoryName
		,CASE Items.Status WHEN 1 THEN ''Aktif'' ELSE ''Tidak'' END AS IsActive
		,ItemInfo.OrderUnit
		,Supplier.SupplierName
		,(SELECT LookupValueName 
			FROM gnMstLookupDtl 
		  WHERE CodeID = ''TPGO'' AND 
				LookUpValue = Items.TypeOfGoods AND 
				CompanyCode =  ''' + @CompanyCode + ''') AS TypeOfGoods
		FROM ' + dbo.GetDbMD(@CompanyCode, @BranchCode) + '..SpMstItems Items
		INNER JOIN ' + dbo.GetDbMD(@CompanyCode, @BranchCode) + '..SpMstItemInfo ItemInfo   ON Items.CompanyCode  = ItemInfo.CompanyCode                          
								 AND Items.PartNo = ItemInfo.PartNo
		INNER JOIN ' + dbo.GetDbMD(@CompanyCode, @BranchCode) + '..SpMstItemLoc ItemLoc ON Items.CompanyCode  = ItemLoc.CompanyCode
			AND Items.BranchCode = ItemLoc.BranchCode	
			AND Items.PartNo = ItemLoc.PartNo
		INNER JOIN ' + dbo.GetDbMD(@CompanyCode, @BranchCode) + '..SpMstItemPrice ItemPrice ON Items.CompanyCode  = ItemPrice.CompanyCode
			AND Items.BranchCode = ItemPrice.BranchCode	
			AND Items.PartNo = ItemPrice.PartNo		 
		LEFT JOIN GnMstSupplier Supplier ON Supplier.CompanyCode  = Items.CompanyCode 
								 AND Supplier.SupplierCode = ItemInfo.SupplierCode
		WHERE Items.CompanyCode =  ''' + dbo.GetCompanyMD(@CompanyCode, @BranchCode) + '''
		AND Items.BranchCode  = ''' + dbo.GetBranchMD(@CompanyCode, @BranchCode) + '''    
		  AND Items.TypeOfGoods =''' +  @TypeOfGoods + '''
		  AND Items.ProductType = ''' + @ProductType + ''' 
		  AND ItemLoc.WarehouseCode = ''00''';

		print(@Query)
		exec (@Query);
END
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<MASTER FAKTUR PAJAK>
-- =============================================

ALTER procedure [dbo].[usprpt_SpRpTrn010]
--declare	
	@CompanyCode		VARCHAR(15),
	@BranchCode			VARCHAR(15),
	@FPJDateStart		DATETIME,
	@FPJDateEnd			DATETIME,
	@FPJNoStart			VARCHAR(30),
	@FPJNoEnd			VARCHAR(30),
	@ProfitCenter		VARCHAR(15),
	@SeqNo				INT
	
--set @CompanyCode = '6115204001'
--set @BranchCode	= '6115204301'
--set @FPJDateStart = '20140801'
--set @FPJDateEnd	= '20141016'
--set @FPJNoStart	= '010.000-14.00000001'
--set @FPJNoEnd = '010.000-14.00000001'
--set @ProfitCenter = '300'
--set @SeqNo = 3

	--exec usprpt_SpRpTrn010 '6115204001','6115204301','20140901','20141022','010.000-14.00000001','010.000-14.00000001','300',3
AS
BEGIN
   
	-- Setting Header Faktur Pajak --
	---------------------------------
	declare @fCompName	varchar(max)
	declare @fAdd		varchar(max)
	declare @fAdd1		varchar(max)
	declare @fAdd2		varchar(max)
	declare @fNPWP		varchar(max)
	declare @fSKP		varchar(max)
	declare @fSKPDate	varchar(max)
	declare @fCity		varchar(max)
	declare @fInv		int

	declare @fStatus varchar(1)
	set @fStatus = 0
	
	declare @fInfoPKP varchar(1)
	set @fInfoPKP = 1

	if exists (select 1 from gnMstLookUpDtl where codeid='FPJFLAG')
	begin
		set @fStatus = (select paravalue from gnmstlookupdtl where codeid='FPJFLAG' and lookupvalue='STATUS')
	end

	if exists (select * from gnMstLookUpHdr where codeid='FPJ_INFO_PKP')
	begin
		set @fInfoPKP = (select LookupValue from gnmstlookupdtl where codeid='FPJ_INFO_PKP')
	end

	if (@fStatus = '1')
	begin
		set @fCompName	= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='NAME')
		set @fAdd1		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='ADD1')
		set @fAdd2		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='ADD2')
		set @fAdd		= @fAdd1+' '+@fAdd2
		set @fNPWP		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='NPWP')
		set @fSKP		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='SKPNO')
		set @fSKPDate	= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='SKPDATE')
		set @fCity		= (select isnull(lookupvaluename,'') from gnmstlookupdtl where codeid='FPJINFO' and lookupvalue='CITY')		
	end
	set @fInv		= (select isnull(ParaValue,'1') from gnmstlookupdtl where codeid='FPJFLAG' and lookupvalue='SPARE')		

	-- parameter use address holding or not
	declare @IsHoldingAddr as bit
	if (select count(*) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='FPJADDR') > 0
		set @IsHoldingAddr = (select convert(numeric,LookUpValue) from gnMstLookUpDtl where CompanyCode= @CompanyCode and CodeID='FPJADDR')
	else
		set @IsHoldingAddr = 0
	declare @Flag bit
	set @Flag = (select ParaValue from gnMstLookUpDtl where CompanyCode = @CompanyCode and CodeID = 'FLPG' and LookUpValue = 'NJS')

	select * into #t1 from(
	SELECT a.TPTrans
		, case when @fInfoPKP = 1 then
			(case @fStatus when '1' then @fCompName else e.CompanyGovName end)
		  else '' end as compNm
		, case @fStatus when '1' then @fSKP else e.SKPNo end as compSKPNo
		, case @fStatus when '1' then @fSKPDate else e.SKPDate end as compSKPDate
		, case when @fInfoPKP = 1 then
			(case @fStatus when '1' then @fAdd1 else 
				(case when @IsHoldingAddr=0 then isnull(e.Address1,'') +' '+isnull(e.Address2,'')+' '+ isnull(e.Address3,'')
					else (select isnull(Address1,'') +' '+isnull(Address2,'')+' '+ isnull(Address3,'') from gnMstCoProfile where CompanyCode=@CompanyCode
					and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
				end)end)
		  else '' end AS compAddr1
		, case @fStatus when '1' then @fAdd2 else 
			(case when @IsHoldingAddr=0 then isnull(e.Address2,'')
				else (select isnull(Address2,'') from gnMstCoProfile where CompanyCode=@CompanyCode
				and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
			end)
		 end AS compAddr2
		, case @fStatus when '1' then '' else 
			(case when @IsHoldingAddr=0 then isnull(e.Address3,'')
				else (select isnull(Address3,'') from gnMstCoProfile where CompanyCode=@CompanyCode
				and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
			end)
		 end AS compAddr3
		, case @fStatus when '1' then '' else 
			(case when @IsHoldingAddr=0 then isnull(e.Address4,'')
				else (select isnull(Address4,'') from gnMstCoProfile where CompanyCode=@CompanyCode
				and BranchCode=(select BranchCode from gnMstOrganizationDtl where CompanyCode=@CompanyCode and IsBranch=0))
			end)
		 end AS compAddr4
		, case @fStatus when '1' then '' else e.PhoneNo end as compPhoneNo
		, case @fStatus when '1' then '' else e.FaxNo end as compFaxNo
		, case when @fInfoPKP = 1 then
			(case @fStatus when '1' then @fNPWP else e.NPWPNo end)
		  else '' end as compNPWPNo
		, a.FPJNo  fakturFPJNo
		, a.FPJDate  fakturFPJDate
		, a.InvoiceNo  fakturInvNo
		, a.InvoiceDate  fakturInvDate
		, a.FPJGovNo  fakturFPJGovNo
		, a.PickingSlipNo  fakturPickSlipNo
		, a.CustomerCode  fakturCustCode
		, x.CustomerName  custName
		, d.SKPNo  custSKPNo
		, d.SKPDate  custSKPDate
		, isnull(x.Address1,'')  custAddr1
		, isnull(x.Address2,'')  custAddr2
		, isnull(x.Address3,'')  custAddr3
		, isnull(x.Address4,'')  custAddr4
		, d.PhoneNo  custPhoneNo
		, d.FaxNo  custFaxNo
		, d.NPWPNo  custNPWPNo
		, a.DueDate  fakturDueDate
		, a.TotSalesQty  fakturTotSaleQty
		, a.TotSalesAmt  fakturTotSalesAmt
		, a.TotDiscAmt  fakturTotDiscAmt
		, a.TotDppAmt  fakturTotDppAmt
		, a.TotPPNAmt  fakturPPNAmt
		, a.TotFinalSalesAmt  fakturTotFinalSalesAmt
		, a.FPJSignature
		, c.TaxPct  taxPercent
		, ISNULL((SELECT TOP 1 ParaValue FROM GnMstLookUpDtl WHERE CompanyCode = @CompanyCode AND CodeID = 'FPIF'),'0') FlagDetails
		, case @fStatus when '1' then @fCity else 
			(SELECT LookUpValueName FROM gnMstLookupDtl WHERE CodeID = 'CITY' AND LookUpValue = e.CityCode) end as cityNm
		, UPPER (f.SignName)  SignName
		, UPPER (f.TitleSign)  TitleSign
		, a.InvoiceNo 
		, isnull(@Flag, 0) Flag
		, isnull(@fInv,1) ShowInvoice
    FROM SpTrnSFPJHdr a WITH (NOLOCK, NOWAIT)
	LEFT JOIN GnMstTax c WITH (NOLOCK, NOWAIT)ON a.CompanyCode = c.CompanyCode AND c.TaxCode = 'PPN'
	LEFT JOIN GnMstCustomer d WITH (NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
		AND a.CustomerCode = d.CustomerCode
	LEFT JOIN SpTrnSFPJInfo x WITH (NOLOCK, NOWAIT) ON a.CompanyCode = x.CompanyCode
		AND a.BranchCode = x.BranchCode
		AND a.FPJNo = x.FPJNo
	LEFt JOIN GnMstCoProfile e WITH (NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
		AND a.BranchCode = e.BranchCode
	LEFT JOIN GnMstSignature f WITH (NOLOCK, NOWAIT) ON a.CompanyCode = f.CompanyCode
		AND a.BranchCode = f.BranchCode
		AND f.ProfitCenterCode = @ProfitCenter
		AND f.DocumentType = CONVERT (VARCHAR (3), a.FPJNo)
		AND f.SeqNo = @SeqNo
    WHERE a.CompanyCode = @CompanyCode
		AND a.BranchCode = @BranchCode 
		AND a.isPKP = 1
		AND CONVERT(VARCHAR, a.FPJSignature, 112) BETWEEN @FPJDateStart AND @FPJDateEnd
		AND ((CASE WHEN @FPJNoStart = '' THEN a.FPJGovNo END) <> ''
			OR (CASE WHEN @FPJNoStart <> '' THEN a.FPJGovNo END) BETWEEN @FPJNoStart AND @FPJNoEnd)
			) #t1
				
select TPTrans, compNm, compSKPNo, compSKPDate, compAddr1, compAddr2, compAddr3, compAddr4, compPhoneNo, compFaxNo, compNPWPNo,  
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 fakturFPJNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo) + '-' + (select substring((select top 1 fakturFPJNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc), 8, 7)) else (select fakturFPJNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturFPJNo, 
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 fakturFPJDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc) else (select fakturFPJDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturFPJDate,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 fakturInvNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturInvNo) + '-' + (select substring((select top 1 fakturInvNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturInvNo desc), 8, 7)) else (select fakturInvNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturInvNo, 
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 fakturInvDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturInvNo desc) else (select fakturInvDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturInvDate, fakturFPJGovNo,  
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 fakturPickSlipNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo) + '-' + (select substring((select top 1 fakturPickSlipNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc), 8, 7)) else (select fakturPickSlipNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturPickSlipNo, 
	fakturCustCode, custName, custSKPNo, custSKPDate, custAddr1, custAddr2, custAddr3, custAddr4, custPhoneNo, custFaxNo, custNPWPNo,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 fakturDueDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc) else (select fakturDueDate from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturDueDate, 
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(fakturTotSaleQty) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else (select fakturTotSaleQty from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturTotSaleQty, 
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(fakturTotSalesAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else (select fakturTotSalesAmt from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturTotSalesAmt,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(fakturTotDiscAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else (select fakturTotDiscAmt from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturTotDiscAmt,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(fakturTotDppAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) else (select fakturTotDppAmt from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturTotDppAmt,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then ((select sum(fakturTotDppAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) * 0.1) else (select fakturPPNAmt from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturPPNAmt,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select sum(fakturTotDppAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) + ((select sum(fakturTotDppAmt) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) * 0.1) else (select fakturTotFinalSalesAmt from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end fakturTotFinalSalesAmt,
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 FPJSignature from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJNo desc) else (select FPJSignature from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end FPJSignature, 
	taxPercent, FlagDetails, cityNm, SignName, TitleSign, 
	case when (select count(fakturFPJNo) from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) > 1 then (select top 1 InvoiceNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJGovNo) + ' s/d ' + (select top 1 InvoiceNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo order by fakturFPJGovNo desc) else (select InvoiceNo from #t1 where fakturFPJGovNo = a.fakturFPJGovNo) end InvoiceNo, 
	Flag, ShowInvoice
from #t1 a
group by TPTrans, compNm, compSKPNo, compSKPDate, compAddr1, compAddr2, compAddr3, compAddr4, compPhoneNo, compFaxNo, compNPWPNo, fakturFPJGovNo, 
	fakturCustCode, custName, custSKPNo, custSKPDate, custAddr1, custAddr2, custAddr3, custAddr4, custPhoneNo, custFaxNo, custNPWPNo, taxPercent, FlagDetails,
	cityNm, SignName, TitleSign, Flag, ShowInvoice			
	
drop table #t1	
END
GO


CREATE view [dbo].[RptReservedBrowse]  as    

SELECT c.CompanyCode, c.BranchCode, c.ReservedNo, c.ReservedDate, c.ReferenceNo, 
c.ReferenceDate, c.TypeOfGoods
FROM spTrnIReservedHdr c WITH (NOLOCK, NOWAIT)
WHERE c.Status <> '3'
GO

CREATE view [dbo].[SvRegCampaign]
as 
SELECT a.CompanyCode,	
b.PoliceRegNo
, a.ChassisCode
, a.ChassisNo
, b.EngineCode
, b.EngineNo
, d.CustomerCode
, d.CustomerName
, a.CampaignFlag
, c.LookupValueName, a.StartDate, a.EndDate, b.ServiceBookNo
, rtrim(rtrim(d.Address1) + ' ' + rtrim(d.Address2) + ' ' + rtrim(d.Address3) + ' ' + rtrim(d.Address4)) as Address
, d.CityCode, d.IbuKota as CityName
FROM svMstFscCampaign a
LEFT JOIN svMstCustomerVehicle b 
ON a.CompanyCode = b.CompanyCode
AND a.ChassisCode = b.ChassisCode	
AND a.ChassisNo = b.ChassisNo
LEFT JOIN gnMstLookupDtl c 
ON c.CodeID = 'FSC_Campaign'
AND c.ParaValue = a.CampaignFlag	
LEFT JOIN gnMstCustomer d
ON d.CompanyCode = a.CompanyCode
AND d.CustomerCode = b.CustomerCode
GO
CREATE view [dbo].[SvRegPackageView]

as 

SELECT gnMstCustomer.CompanyCode
    ,PoliceRegNo
    , ChassisCode + ' - ' + CONVERT(VARCHAR, ChassisNo, 50) Chassis
  --  , ChassisCode
    --, ChassisNo
   -- , svMstPackageContract.PackageCode
    , svMstPackageContract.PackageCode + ' - ' + PackageName Package
    , svMstPackageContract.CustomerCode + ' - ' + gnMstCustomer.CustomerName Customer
    , BeginDate as StartDate
    , EndDate as FinishDate
    , VirtualAccount as AccountNo
FROM 
    svMstPackageContract
LEFT JOIN svMstPackage ON 
    svMstPackageContract.CompanyCode = svMstPackage.CompanyCode
    AND svMstPackageContract.PackageCode = svMstPackage.PackageCode    
LEFT JOIN gnMstCustomer ON
    svMstPackageContract.CompanyCode = gnMstCustomer.CompanyCode
    AND svMstPackageContract.CustomerCode = gnMstCustomer.CustomerCode
GO
CREATE VIEW [dbo].[SvReturnServiceView]
AS
SELECT a.CompanyCode, a.BranchCode, a.ProductType, 
     a.InvoiceNo, CASE a.InvoiceDate WHEN ('19000101') 
     THEN NULL 
     ELSE a.InvoiceDate END AS InvoiceDate, f.ReturnNo, 
     e.DescriptionEng AS InvoiceStatus, a.FPJNo, 
     CASE a.FPJDate WHEN ('19000101') THEN NULL 
     ELSE a.FPJDate END AS FPJDate, a.JobOrderNo, 
     CASE a.JobOrderDate WHEN ('19000101') THEN NULL 
     ELSE a.JobOrderDate END AS JobOrderDate, 
     a.JobType, a.ChassisCode, a.ChassisNo, 
     a.EngineCode, a.EngineNo, a.PoliceRegNo, 
     a.BasicModel, a.CustomerCode, a.CustomerCodeBill, 
     a.Remarks, 
     a.CustomerCode + ' - ' + b.CustomerName AS Customer,
      a.CustomerCodeBill + ' - ' + c.CustomerName AS CustomerBill,
      d.ServiceBookNo, a.Odometer, d.TransmissionType, 
     d.ColourCode
FROM dbo.svTrnInvoice AS a LEFT OUTER JOIN
     dbo.gnMstCustomer AS b ON 
     b.CompanyCode = a.CompanyCode AND 
     b.CustomerCode = a.CustomerCode LEFT OUTER JOIN
     dbo.gnMstCustomer AS c ON 
     c.CompanyCode = a.CompanyCode AND 
     c.CustomerCode = a.CustomerCodeBill LEFT OUTER JOIN
     dbo.svMstCustomerVehicle AS d ON 
     a.CompanyCode = d.CompanyCode AND 
     a.ChassisCode = d.ChassisCode AND 
     a.ChassisNo = d.ChassisNo AND 
     a.EngineCode = d.EngineCode AND 
     a.EngineNo = d.EngineNo AND 
     a.BasicModel = d.BasicModel LEFT OUTER JOIN
     dbo.svMstRefferenceService AS e ON 
     a.CompanyCode = e.CompanyCode AND 
     a.ProductType = e.ProductType AND 
     e.RefferenceType = 'INVSTATS' AND 
     a.InvoiceStatus = e.RefferenceCode LEFT OUTER JOIN
     dbo.SvTrnReturn AS f ON 
     a.CompanyCode = f.CompanyCode AND 
     a.BranchCode = f.BranchCode AND 
     a.ProductType = f.ProductType AND 
     a.InvoiceNo = f.InvoiceNo
WHERE (a.InvoiceStatus IN ('0', '1', '2', '4'))
GO
CREATE view [dbo].[SvPaymentPackage]

as 

SELECT a.CompanyCode, BranchCode, ProfitCenterCode, a.CustomerCode, a.CustomerCode as BillTo, a.CustomerName,
       a.Address1+' '+a.Address2+' '+a.Address3+' '+a.Address4 as Address,
       c.LookUpValueName as ProfitCenter
  FROM gnMstCustomer a with(nolock, nowait)
    INNER JOIN gnMstCustomerProfitCenter b with(nolock, nowait) ON 
        b.CustomerCode= b.CustomerCode AND b.CustomerCode=a.CustomerCode
    INNER JOIN gnMstLookUpDtl c ON c.CompanyCode= a.CompanyCode
 WHERE  --a.CompanyCode='6006406'
    --AND b.BranchCode='6006401'
    --AND b.ProfitCenterCode= '200'
    b.isBlackList=0
    AND a.status = 1
    AND c.LookupValue= b.ProfitCenterCode
    AND c.CodeID= 'PFCN'
   --order BY CustomerName ASC
GO
CREATE view [dbo].[SvPekerjaanView]

as 

SELECT a.CompanyCode, a.ProductType,
    BasicModel,
    JobType,
    b.Description AS JobDescription,	
    GroupJobType,
    c.Description AS GroupJobDescription,
    WarrantyOdometer, 
    WarrantyTimePeriod,
    CASE WarrantyTimeDim WHEN 'D' THEN 'Hari' ELSE CASE WarrantyTimeDim WHEN 'M' THEN 'Bulan' ELSE 'Tahun' END END AS WarrantyTimeDimStr,
    WarrantyTimeDim,
    CASE IsPdiFsc WHEN 1 THEN 'Ya' ELSE 'Tidak' END AS IsPdiFscStr,
    IsPdiFsc,
    PdiFscSeq= CAST(PdiFscSeq As Varchar(10)),
    CASE a.IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status, a.IsActive as IsActiveP
FROM
    svMstJob a,
    svMstRefferenceService b,
    svMstRefferenceService c
WHERE
    a.CompanyCode = b.CompanyCode
	AND a.ProductType = b.ProductType
    AND a.JobType = b.RefferenceCode
	AND b.RefferenceType = 'JOBSTYPE'
	AND a.CompanyCode = c.CompanyCode
	AND a.ProductType = c.ProductType
    AND a.GroupJobType = c.RefferenceCode    
    AND c.RefferenceType = 'GRPJOBTY'
GO
CREATE VIEW [dbo].[SvRefferenceServiceView]
AS
SELECT        TOP (100) PERCENT CompanyCode, ProductType, RefferenceType, RefferenceCode, Description, DescriptionEng, IsActive
FROM            dbo.svMstRefferenceService
WHERE        (IsActive = 1)
GO
CREATE view [dbo].[SvTargetView]

as 


select	CompanyCode
,ProductType, BranchCode
, cast(PeriodYear as varchar) + ' / ' + replicate('0', (2 - LEN(CAST(PeriodMonth as varchar)))) + cast(PeriodMonth as varchar) as Period	
, PeriodYear
, PeriodMonth
, ProductivityMechanic
, TotalWorkingDays
, TotalMechanic
, TotalStall
, TotalLift
, HourlyLaborRate
, ProductivityStall
, TotalUnitService
, OverheadCost
, ServiceAmount 
, SMRTarget
, DasDailyTarget
, DasMonthTarget
from	svMstTarget
--where	CompanyCode = '6006406'
--AND BranchCode = '6006401'
--AND ProductType = '4W' 
--order by PeriodYear desc, PeriodMonth desc
GO
CREATE view [dbo].[SvTarifJasaView]

as 


select
	a.CompanyCode,
	a.BranchCode,
	a.ProductType,
     a.LaborCode
    ,a.Description
    ,a.LaborPrice
    ,a.EffectiveDate
    ,case IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status
    , a.IsActive
from svMstLaborRate a
GO
CREATE VIEW [dbo].[SvTaskNoView]
AS
SELECT        CompanyCode, ProductType, BasicModel, JobType, OperationNo, Description, ClaimHour, OperationHour, LaborCost, LaborPrice
FROM            dbo.svMstTask
WHERE        (1 = 1) AND (JobType = 'CLAIM') OR
                         (JobType = 'OTHER')
GO
CREATE view [dbo].[SvRincianBrowser]

as 


select CompanyCode, ProductType, BasicModel, JobType,
 OperationNo
,Description
,TechnicalModelCode
,case IsSubCon when 1 then 'Ya' else 'Tidak' end as IsSubConStr
,case IsCampaign when 1 then 'Ya' else 'Tidak' end as IsCampaignStr
,case IsActive when 1 then 'Aktif' else 'Tidak Aktif' end as Status
,IsActive as IsActiveR
,IsCampaign
,IsSubCon
,OperationHour
,ClaimHour
,BillType
,LaborCost
,LaborPrice
from svMstTask
GO
CREATE view [dbo].[SvRincianPart]

as 

select a.CompanyCode, a.ProductType, BranchCode, a.BasicModel, a.OperationNo, a.JobType
	 ,a.PartNo
	,b.PartName
	,a.Quantity
    ,isnull((case d.GroupJobType when 'FSC' then a.RetailPrice else e.RetailPrice end),0) as RetailPrice
    ,d.GroupJobType
    ,a.BillType as BillTypePart
    ,case a.BillType when 'F' then 'Free' when 'C' then 'Customer' else '' end BillTypeDesc
    ,d.PdiFscSeq
from svMstTaskPart a
left join spMstItemInfo b 
	on  b.CompanyCode = a.CompanyCode
	and b.ProductType = a.ProductType
	and b.PartNo = a.PartNo
left join svMstTask c
	on  c.CompanyCode = a.CompanyCode
	and c.ProductType = a.ProductType
	and c.BasicModel = a.BasicModel
	and c.JobType = a.JobType
	and c.OperationNo = a.OperationNo
left join svMstJob d
	on  d.CompanyCode = a.CompanyCode
	and d.ProductType = a.ProductType
	and d.BasicModel = a.BasicModel
	and d.JobType = a.JobType
left join spMstItemPrice e
	on  e.CompanyCode = a.CompanyCode
	and e.PartNo = a.PartNo
GO
CREATE view [dbo].[SvRincinJob]

as 


select CompanyCode, ProductType, BasicModel, JobType,
 OperationNo
,Description
,TechnicalModelCode
,IsActive as IsActiveR
,IsCampaign
,IsSubCon
,OperationHour
,ClaimHour
,BillType
,LaborCost
,LaborPrice
from svMstTask
GO
CREATE view [dbo].[SvJTView]

as 


select CompanyCode, ProductType, BasicModel, OperationNo
,Description
,TechnicalModelCode
,case IsSubCon when 1 then 'Ya' else 'Tidak' end as IsSubCon
,case IsCampaign when 1 then 'Ya' else 'Tidak' end as IsCampaign
,case IsActive when 1 then 'Aktif' else 'Tidak Aktif' end as Status
,OperationHour
,ClaimHour
from svMstTask
GO
CREATE VIEW [dbo].[SvKendaraanPel]
AS
select DISTINCT a.CompanyCode, BranchCode,
 a.PoliceRegNo
,a.CustomerCode
,b.CustomerName
,  rtrim(rtrim(a.CustomerCode) + ' - ' + rtrim(b.CustomerName)) as CustomerDesc
,  rtrim(rtrim(b.Address1) + ' ' + rtrim(b.Address2) + ' ' + rtrim(b.Address3) + ' ' + rtrim(b.Address4)) as CustomerAddr
, b.PhoneNo
, b.Address1, b.Address2, b.Address3 + ' ' + b.Address4 Address3
,a.DealerCode
,c.CustomerName DealerName
, (a.CustomerCode + ' - ' + c.CustomerName) as DealerDesc
,a.ChassisCode
,  cast(a.ChassisNo as varchar) ChassisNo
,a.EngineCode
,  cast(a.EngineNo as varchar) EngineNo
,a.ServiceBookNo
,a.ClubCode
,a.ColourCode
,case a.FakturPolisiDate when ('19000101') then getdate() else a.FakturPolisiDate end FakturPolisiDate
,a.ClubNo
,case a.ClubDateStart when ('19000101') then getdate() else a.ClubDateStart end ClubDateStart
,case a.ClubDateFinish when ('19000101') then getdate() else a.ClubDateFinish end ClubDateFinish
,case a.ClubSince when ('19000101') then getdate() else a.ClubSince end ClubSince
, (case a.IsClubStatus when 1 then 'Aktif' else 'Tidak Aktif' end) as IsClubStatusDesc
,a.IsClubStatus
, (case a.IsContractStatus when 1 then 'Aktif' else 'Tidak Aktif' end) as IsContractStatusDesc
,a.IsActive
, (case a.IsActive when 1 then 'Aktif' else 'Tidak Aktif' end) as IsActiveDesc
,a.BasicModel
,a.TransmissionType
,case a.LastServiceDate when ('19000101') then null else a.LastServiceDate end LastServiceDate
,a.LastJobType
,ProductionYear
,a.ContractNo
,a.ContactName, ContactAddress, ContactPhone
,b.CityCode
,f.LookUpValueName CityName, e.ProfitCenterCode
,g.RefferenceDesc1 ColourDesc ,g.RefferenceDesc1 ColourName
,h.DescriptionEng TechnicalModelCode
from svMstCustomerVehicle a
inner join gnMstCustomer b on b.CompanyCode = a.CompanyCode 
	and b.CustomerCode = a.CustomerCode
left join gnMstCustomer c on c.CompanyCode = a.CompanyCode 
	and c.CustomerCode = a.DealerCode
left join svMstJob d on 
	d.CompanyCode = a.CompanyCode and
	d.BasicModel = a.BasicModel 	
LEFT join gnMstCustomerProfitCenter e on 
    e.CompanyCode = a.CompanyCode and
    e.CustomerCode = a.CustomerCode
left join gnMstLookupDtl f on 
    f.CompanyCode = a.CompanyCode and
    f.CodeID = 'CITY' and
    f.LookUpValue = b.CityCode
left join omMstRefference g on 
	a.CompanyCode = c.CompanyCode and
	g.RefferenceType = 'COLO' and
	g.RefferenceCode = a.ColourCode
LEFT JOIN svMstrefferenceService h ON
	a.CompanyCode = h.CompanyCode and
	a.BasicModel = h.RefferenceCode and
	h.RefferenceType = 'BASMODEL'

    --WHERE a.IsActive = 1
GO
CREATE view [dbo].[SvKontrakServiceView]

as 

SELECT a.*, gnMstCustomer.CustomerName AS CustomerName 
, case a.IsActive when 1 then 'Aktif' Else 'Tidak Aktif' end Status
FROM svMstContract a
INNER JOIN gnMstCustomer ON gnMstCustomer.CompanyCode = a.CompanyCode AND
gnMstCustomer.CustomerCode = a.CustomerCode
GO
CREATE FUNCTION [dbo].[GetBranchMD] (@CompanyCode VARCHAR(15),@BranchCode VARCHAR(15)) 
RETURNS VARCHAR (20)
AS 
BEGIN
	DECLARE @BranchMD AS VARCHAR(15)
	SET @BranchMD = (SELECT BranchMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)

	RETURN @BranchMD
END
GO
CREATE FUNCTION [dbo].[GetCompanyMD] (@CompanyCode VARCHAR(15),@BranchCode VARCHAR(15)) 
RETURNS VARCHAR (20)
AS 
BEGIN
	DECLARE @CompanyMD AS VARCHAR(15)
	SET @CompanyMD = (SELECT CompanyMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)

	RETURN @CompanyMD
END
GO
CREATE view [dbo].[SvJobView]

as 

SELECT CompanyCode, ProductType, RefferenceType, RefferenceCode as JobType, Description as JobDescription,
DescriptionEng, CASE IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status
FROM      svMstRefferenceService with (Nolock, Nowait)
WHERE    RefferenceType = 'JOBSTYPE'
GO
CREATE view [dbo].[SvNomorAccView]

as 

SELECT CompanyCode, BranchCode, AccountNo, Description as AccDescription
FROM gnMstAccount with(nolock,nowait)
GO
CREATE VIEW [dbo].[SvNoPolisi]
AS
select DISTINCT
 a.CompanyCode, BranchCode,
--CASE a.PoliceRegNo WHEN null THEN '-' ELSE a.PoliceRegNo END as PoliceRegNo
a.PoliceRegNo
,a.CustomerCode
,b.CustomerName
,  rtrim(rtrim(a.CustomerCode) + ' - ' + rtrim(b.CustomerName)) as CustomerDesc
,  rtrim(rtrim(b.Address1) + ' ' + rtrim(b.Address2) + ' ' + rtrim(b.Address3) + ' ' + rtrim(b.Address4)) as CustomerAddr
, b.Address1, b.Address2, b.Address3 + ' ' + b.Address4 Address3
,a.DealerCode
,c.CustomerName DealerName
, (a.CustomerCode + ' - ' + c.CustomerName) as DealerDesc
,a.ChassisCode
,  cast(a.ChassisNo as varchar) ChassisNoStr
,a.EngineCode
,  cast(a.EngineNo as varchar) EngineNo
,a.ServiceBookNo
,a.ClubCode
,a.ColourCode
,case a.FakturPolisiDate when ('19000101') then null else a.FakturPolisiDate end FakturPolisiDate
,a.ClubNo
--,a.ClubDateStart, a.ClubDateFinish, a.ClubSince
,case a.ClubDateStart when ('19000101') then getdate() else a.ClubDateStart end ClubDateStart
,case a.ClubDateFinish when ('19000101') then getdate() else a.ClubDateFinish end ClubDateFinish
,case a.ClubSince when ('19000101') then getdate() else a.ClubSince end ClubSince
, (case a.IsClubStatus when 1 then 'Aktif' else 'Tidak Aktif' end) as IsClubStatusDesc
,a.IsClubStatus
, (case a.IsContractStatus when 1 then 'Aktif' else 'Tidak Aktif' end) as IsContractStatusDesc
,a.IsActive as IsActiveP
, (case a.IsActive when 1 then 'Aktif' else 'Tidak Aktif' end) as IsActiveDesc
,a.BasicModel
,a.TransmissionType
,case a.LastServiceDate when ('19000101') then null else a.LastServiceDate end LastServiceDate
,a.LastJobType
,a.ChassisNo
,a.ContractNo
,a.ContactName
,b.CityCode
,f.LookUpValueName CityName
from svMstCustomerVehicle a
left join gnMstCustomer b on b.CompanyCode = a.CompanyCode 
	and b.CustomerCode = a.CustomerCode
left join gnMstCustomer c on c.CompanyCode = a.CompanyCode 
	and c.CustomerCode = a.DealerCode
left join svMstJob d on 
	d.CompanyCode = a.CompanyCode and
	d.BasicModel = a.BasicModel 	
inner join gnMstCustomerProfitCenter e on 
    e.CompanyCode = a.CompanyCode and
    e.CustomerCode = a.CustomerCode
left join gnMstLookupDtl f on 
    f.CompanyCode = a.CompanyCode and
    f.CodeID = 'CITY' and
    f.LookUpValue = b.CityCode
 WHERE a.IsActive = '1'
and a.PoliceRegNo != ''
and a.PoliceRegNo != '-'
GO
CREATE view [dbo].[SvOperationView]

as 

/*SELECT
CompanyCode, ProductType, RefferenceType, RefferenceCode as ComplainCode, Description as Ket, DescriptionEng,
CASE IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status
FROM      
svMstRefferenceService
WHERE RefferenceType = 'COMPLNCD'
*/
select CompanyCode, ProductType,OperationNo
,Description as Keterangan
,case IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status
from  svMstTask
where IsActive = 1
GO
CREATE view [dbo].[SvKSGView]

as 


SELECT a.CompanyCode, a.ProductType,
a.BasicModel,
a.IsCampaign,a.TransmissionType, a.PdiFscSeq,
a.EffectiveDate,
Case a.IsCampaign WHEN 1 THEN 'Campaign' ELSE 'Reguler' END AS IsCampaignType,
b.LookupValueName as TransType,
a.RegularLaborAmount,	
a.RegularMaterialAmount, a.RegularTotalAmount,
--((a.LaborRate * a.RegularLaborAmount)+ a.RegularMaterialAmount) AS RegularTotalAmount,
a.Description,
CASE a.isActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status,
a.IsActive,a.LaborRate
FROM
svMstPdiFscRate a
LEFT JOIN GnMstLookupDtl b ON a.companyCode = b.CompanyCode and
a.TransmissionType =  b.LookUpValue and b.CodeId = 'TRTY'
GO
CREATE view [dbo].[SvLaborCode]

as 

/*
select distinct CompanyCode , BasicModel from omMstModel
union
select distinct CompanyCode , RefferenceCode from svMstRefferenceService
where RefferenceType = 'BASMODEL'*/
select distinct CompanyCode, BasicModel from omMstModel
union
select distinct CompanyCode,LaborCode from svMstLaborRate
union
select distinct CompanyCode, RefferenceCode from svMstRefferenceService
where RefferenceType = 'BASMODEL'
GO
CREATE view [dbo].[SvMstDealerView]

as 

SELECT CompanyCode, CustomerCode as DealerCode, CustomerName as DealerName, Address1, Address2, Address3, Address4, 
Address1 + ' ' + Address2 + ' ' + Address3 + ' ' + Address4 AS Address,
CASE Status WHEN 1 THEN 'Aktif' ELSE 'TIdak Aktif' END AS Status
FROM gnMstCustomer with(nolock, nowait)
--WHERE  CompanyCode = '6006406'
GO
CREATE VIEW [dbo].[omMstModelPerlengkapanView]
AS
SELECT        a.CompanyCode, a.BranchCode, a.PerlengkapanCode, b.PerlengkapanName, a.Quantity, a.Remark, a.Status
FROM            dbo.omMstModelPerlengkapan AS a LEFT OUTER JOIN
                         dbo.omMstPerlengkapan AS b ON a.PerlengkapanCode = b.PerlengkapanCode AND a.CompanyCode = b.CompanyCode AND a.BranchCode = b.BranchCode
GO
CREATE VIEW [dbo].[SvTrnPOSubConView]
AS
SELECT a.CompanyCode, a.BranchCode, a.ProductType, 
     a.PONo, a.PODate, a.JobOrderNo, a.JobOrderDate, 
     a.SupplierCode, b.SupplierName, a.PODisc, 
     a.ServiceAmt, c.RefferenceCode, a.POStatus, 
     c.Description
FROM dbo.svTrnPoSubCon AS a LEFT OUTER JOIN
     dbo.gnMstSupplier AS b ON 
     b.CompanyCode = a.CompanyCode AND 
     b.SupplierCode = a.SupplierCode LEFT OUTER JOIN
     dbo.svMstRefferenceService AS c ON 
     c.CompanyCode = a.CompanyCode AND 
     c.ProductType = a.ProductType AND 
     c.RefferenceCode = a.POStatus AND 
     c.RefferenceType = 'PORRSTAT'
GO
CREATE VIEW [dbo].[OmSelectReffNoView]
AS 
	select a.*,b.DONo,b.DODate,b.SKPNo,c.PONo,c.PODate,c.RefferenceNo,c.RefferenceDate
		,c.SupplierCode,c.BillTo,c.ShipTo,c.Remark
		,(select z.SupplierName from GnMstSupplier z where a.DealerCode = z.SupplierCode) as DealerName
	from OmUtlSDORDHdr a
		inner join omUtlSDORDDtl1 b on a.CompanyCode=b.CompanyCode and a.BranchCode=b.BranchCode
			and a.BatchNo=b.BatchNo
		inner join omTrPurchasePO c on a.CompanyCode=c.CompanyCode and a.BranchCode=c.BranchCode
			and c.RefferenceNo = b.SKPNo
	where 1=1 
		--and a.CompanyCode = convert(varchar,@CompanyCode)
		--and a.BranchCode = convert(varchar,@BranchCode)
	--	and a.RcvDealerCode = convert(varchar,@CompanyCode)
		and c.Status = '2'
		and b.Status = '0'
		and not exists (
			select 1 from omTrPurchaseBPU d 
			where d.CompanyCode = a.CompanyCode and d.BranchCode = a.BranchCode 
				and d.RefferenceDONo=b.DONo
				and d.Status <> '3'
		)
GO
CREATE VIEW [dbo].[SvTrnPdiFscView]
AS
SELECT DISTINCT 
     a.CompanyCode, a.BranchCode, a.ProductType, 
     a.GenerateNo, a.GenerateDate, 
     ISNULL(a.FromInvoiceNo, '') AS FromInvoiceNo, 
     ISNULL(a.ToInvoiceNo, '') AS ToInvoiceNo, 
     CASE isnull(a.FromInvoiceNo, '') 
     WHEN '' THEN '' ELSE (rtrim(a.FromInvoiceNo) 
     + ' s/d ' + rtrim(a.ToInvoiceNo)) END AS Invoice, 
     a.FPJNo, CASE a.FPJDate WHEN ('19000101') 
     THEN NULL ELSE a.FPJDate END AS FPJDate, 
     a.FPJGovNo, a.SourceData, 
     b.Description AS SourceDataDesc, a.TotalNoOfItem, 
     a.TotalAmt, a.SenderDealerName, a.RefferenceNo, 
     CASE a.RefferenceDate WHEN ('19000101') 
     THEN NULL 
     ELSE a.RefferenceDate END AS RefferenceDate, 
     a.PostingFlag, c.Description AS PostingFlagDesc, 
     a.SenderDealerCode, d.CustomerName
FROM dbo.svTrnPdiFsc AS a WITH (nolock, nowait) 
     LEFT OUTER JOIN
     dbo.svMstRefferenceService AS b WITH (nolock, 
     nowait) ON b.CompanyCode = a.CompanyCode AND 
     b.ProductType = a.ProductType AND 
     b.RefferenceCode = a.SourceData AND 
     b.RefferenceType = 'SORCDATA' LEFT OUTER JOIN
     dbo.svMstRefferenceService AS c WITH (nolock, 
     nowait) ON c.CompanyCode = a.CompanyCode AND 
     c.ProductType = a.ProductType AND 
     c.RefferenceCode = a.PostingFlag AND 
     c.RefferenceType = 'POSTFLAG' LEFT OUTER JOIN
     dbo.gnMstCustomer AS d ON 
     d.CompanyCode = a.CompanyCode AND 
     d.CustomerCode = a.SenderDealerCode
GO
CREATE VIEW [dbo].[omMstModelColourView]
AS
SELECT        a.CompanyCode, a.SalesModelCode, a.ColourCode, b.RefferenceDesc1, a.Remark, a.Status
FROM            dbo.omMstModelColour AS a INNER JOIN
                         dbo.omMstRefference AS b ON a.ColourCode = b.RefferenceCode
GO
CREATE VIEW [dbo].[SvTrnPOSubConRcvView]
AS
SELECT DISTINCT 
     TOP (100) PERCENT a.CompanyCode, a.BranchCode, 
     a.ProductType, a.PONo, a.PODate, a.JobOrderNo, 
     a.JobOrderDate, a.SupplierCode, b.SupplierName, 
     a.PODisc, a.ServiceAmt, a.POStatus, c.Description, 
     a.RecNo, a.RecDate, a.FPJNo, a.FPJDate, 
     a.FPJGovNo
FROM dbo.svTrnPoSubCon AS a LEFT OUTER JOIN
     dbo.gnMstSupplier AS b ON 
     b.CompanyCode = a.CompanyCode AND 
     b.SupplierCode = a.SupplierCode LEFT OUTER JOIN
     dbo.svMstRefferenceService AS c ON 
     c.CompanyCode = a.CompanyCode AND 
     c.ProductType = a.ProductType AND 
     c.RefferenceCode = a.POStatus AND 
     c.RefferenceType = 'PORRSTAT'
GO
CREATE VIEW [dbo].[SvTrnServiceMechanicByJobOrderNoView]
AS
SELECT DISTINCT 
     dbo.svTrnService.CompanyCode, 
     dbo.svTrnService.BranchCode, 
     dbo.svTrnService.ProductType, 
     dbo.svTrnService.ServiceNo, 
     dbo.svTrnService.ServiceType, 
     dbo.svTrnService.ForemanID, 
     dbo.svTrnService.EstimationNo, 
     dbo.svTrnService.EstimationDate, 
     dbo.svTrnService.BookingNo, 
     dbo.svTrnService.BookingDate, 
     dbo.svTrnService.JobOrderNo, 
     dbo.svTrnService.JobOrderDate, 
     dbo.svTrnService.InvoiceNo, 
     dbo.svTrnService.PoliceRegNo, 
     dbo.svTrnService.ServiceBookNo, 
     dbo.svTrnService.BasicModel, 
     dbo.svTrnService.TransmissionType, 
     dbo.svTrnService.ChassisCode, 
     dbo.svTrnService.ChassisNo, 
     dbo.svTrnService.EngineCode, 
     dbo.svTrnService.EngineNo, 
     dbo.svTrnService.ChassisCode + ' ' + CAST(dbo.svTrnService.ChassisNo
      AS varchar) AS KodeRangka, 
     dbo.svTrnService.EngineCode + ' ' + CAST(dbo.svTrnService.EngineNo
      AS varchar) AS KodeMesin, 
     dbo.svTrnService.ColorCode, 
     dbo.svTrnService.CustomerCode + ' - ' + dbo.gnMstCustomer.CustomerName
      AS Customer, 
     dbo.svTrnService.CustomerCodeBill + ' - ' + custBill.CustomerName
      AS CustomerBill, dbo.svTrnService.CustomerCode, 
     dbo.svTrnService.CustomerCodeBill, 
     dbo.svTrnService.Odometer, 
     dbo.svTrnService.JobType, 
     reffService.RefferenceCode AS ServiceStatus, 
     reffService.Description AS ServiceStatusDesc, 
     reffService.LockingBy, 
     dbo.svTrnService.InsurancePayFlag, 
     dbo.svTrnService.InsuranceOwnRisk, 
     dbo.svTrnService.InsuranceNo, 
     dbo.svTrnService.InsuranceJobOrderNo, 
     dbo.svTrnService.LaborDiscPct, 
     dbo.svTrnService.PartDiscPct, 
     dbo.svTrnService.MaterialDiscPct, 
     dbo.svTrnService.PPNPct, 
     dbo.svTrnService.ServiceRequestDesc, 
     dbo.svTrnService.ConfirmChangingPart, 
     dbo.svTrnService.EstimateFinishDate, 
     dbo.svTrnService.LaborDppAmt, 
     dbo.svTrnService.PartsDppAmt, 
     dbo.svTrnService.MaterialDppAmt, 
     dbo.svTrnService.TotalDPPAmount, 
     dbo.svTrnService.TotalPpnAmount, 
     dbo.svTrnService.TotalPphAmount, 
     dbo.svTrnService.TotalSrvAmount, 
     employee.EmployeeName AS ForemanName, 
     custBill.Address1 + '' + custBill.Address2 + '' + custBill.Address3
      + '' + custBill.Address4 AS AddressBill, 
     custBill.NPWPNo, custBill.PhoneNo, custBill.FaxNo, 
     custBill.HPNo
FROM dbo.svTrnService WITH (NOLOCK, NOWAIT) 
     LEFT OUTER JOIN
     dbo.gnMstCustomer ON 
     dbo.gnMstCustomer.CompanyCode = dbo.svTrnService.CompanyCode
      AND 
     dbo.gnMstCustomer.CustomerCode = dbo.svTrnService.CustomerCode
      LEFT OUTER JOIN
     dbo.gnMstCustomer AS custBill ON 
     custBill.CompanyCode = dbo.svTrnService.CompanyCode
      AND 
     custBill.CustomerCode = dbo.svTrnService.CustomerCodeBill
      LEFT OUTER JOIN
     dbo.gnMstEmployee AS employee ON 
     employee.CompanyCode = dbo.svTrnService.CompanyCode
      AND 
     employee.BranchCode = dbo.svTrnService.BranchCode AND
      employee.EmployeeID = dbo.svTrnService.ForemanID LEFT
      OUTER JOIN
     dbo.svTrnSrvItem AS srvItem ON 
     srvItem.CompanyCode = dbo.svTrnService.CompanyCode
      AND 
     srvItem.BranchCode = dbo.svTrnService.BranchCode AND
      srvItem.ProductType = dbo.svTrnService.ProductType AND
      srvItem.ServiceNo = dbo.svTrnService.ServiceNo LEFT
      OUTER JOIN
     dbo.svTrnSrvTask AS srvTask ON 
     srvTask.CompanyCode = dbo.svTrnService.CompanyCode
      AND 
     srvTask.BranchCode = dbo.svTrnService.BranchCode AND
      srvTask.ProductType = dbo.svTrnService.ProductType AND
      srvTask.ServiceNo = dbo.svTrnService.ServiceNo LEFT
      OUTER JOIN
     dbo.svMstRefferenceService AS reffService ON 
     reffService.CompanyCode = dbo.svTrnService.CompanyCode
      AND 
     reffService.ProductType = dbo.svTrnService.ProductType
      AND 
     reffService.RefferenceCode = dbo.svTrnService.ServiceStatus
      AND 
     reffService.RefferenceType = 'SERVSTAS' LEFT OUTER JOIN
     dbo.svTrnInvoice AS invoice ON 
     invoice.CompanyCode = dbo.svTrnService.CompanyCode
      AND 
     invoice.BranchCode = dbo.svTrnService.BranchCode AND
      invoice.ProductType = dbo.svTrnService.ProductType AND
      invoice.JobOrderNo = dbo.svTrnService.JobOrderNo LEFT
      OUTER JOIN
     dbo.svTrnSrvVOR AS VOR ON 
     VOR.CompanyCode = dbo.svTrnService.CompanyCode AND
      VOR.BranchCode = dbo.svTrnService.BranchCode AND 
     VOR.ServiceNo = dbo.svTrnService.ServiceNo
WHERE (1 = 1)
GO
CREATE VIEW [dbo].[OmSelectReffSJFalseView]
AS
	SELECT a.CompanyCode, a.BranchCode, a.BatchNo, b.DONo, b.DODate, b.SJNo, b.SJDate, b.SKPNo, a.DealerCode, 
		(select SupplierName from gnMstSupplier where supplierCode = c.supplierCode) as DealerName,
		c.PONo, c.ShipTo, c.supplierCode
	FROM OmUtlSSJALHdr a
		inner join OmUtlSSJALDtl1 b on a.CompanyCode=b.CompanyCode and a.BranchCode=b.BranchCode
			and a.BatchNo=b.BatchNo
		inner join omTrPurchasePO c on a.CompanyCode=c.CompanyCode and a.BranchCode=c.BranchCode
			and c.RefferenceNo = b.SKPNo
	WHERE 1=1
		-- and a.CompanyCode= convert(varchar,@CompanyCode)
		-- and a.BranchCode= convert(varchar,@BranchCode)
		-- and a.RcvDealerCode = convert(varchar,@CompanyCode)
		and c.status = '2'
		and b.Status = '0'

	-- Atas Perintah Pa Andreas dan Bu Tetti
	-- POD : Seandy A.K.
	-- Tgl : 9/3/2013
	-- and b.IsBlokir = 'N'

	and not exists (
		select 1 from omTrPurchaseBPU 
		where 1=1
			and CompanyCode = a.CompanyCode and BranchCode = a.BranchCode
			and RefferenceDONo= b.DONO
			and RefferenceSJNo= b.SJNO
			and Status <> '3'
	)
GO


CREATE VIEW [dbo].[SvTrnSenderDealerView]
AS
SELECT a.CompanyCode, b.BranchCode, a.CustomerCode, 
     a.CustomerName, a.CustomerAbbrName, 
     a.Address1 + ' ' + a.Address2 + ' ' + a.Address3 + ' ' + a.Address4
      AS Address, a.Address1, a.Address2, a.Address3, 
     a.Address4, a.CityCode, 
     d.LookUpValueName AS CityCodeDesc, a.PhoneNo, 
     a.HPNo, a.FaxNo, b.ProfitCenterCode, 
     e.LookUpValueName AS ProfitCenter, 
     CASE Status WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END
      AS Status
FROM dbo.gnMstCustomer AS a WITH (nolock, nowait) 
     INNER JOIN
     dbo.gnMstCustomerProfitCenter AS b WITH (nolock, 
     nowait) ON b.CustomerCode = a.CustomerCode AND 
     b.CompanyCode = a.CompanyCode LEFT OUTER JOIN
     dbo.gnMstCustomerClass AS c WITH (nolock, nowait) 
     ON c.ProfitCenterCode = b.ProfitCenterCode AND 
     c.CustomerClass = b.CustomerClass AND 
     c.CompanyCode = b.CompanyCode AND 
     c.BranchCode = b.BranchCode LEFT OUTER JOIN
     dbo.gnMstLookUpDtl AS d WITH (nolock, nowait) ON 
     d.CompanyCode = a.CompanyCode AND 
     d.CodeID = 'CITY' AND 
     d.LookUpValue = a.CityCode LEFT OUTER JOIN
     dbo.gnMstLookUpDtl AS e WITH (nolock, nowait) ON 
     e.CompanyCode = a.CompanyCode AND 
     e.CodeID = 'PFCN' AND 
     e.LookUpValue = b.ProfitCenterCode
WHERE (b.isBlackList = 0)
GO
create view [dbo].[CsLkuTDayCallView]
as
select a.CompanyCode
     , b.BranchCode
     , a.CustomerCode
     , Address = rtrim(a.Address1) + ' ' + rtrim(a.Address2) + ' ' + rtrim(a.Address3) + ' ' + rtrim(a.Address4)
	 , PhoneNo = a.PhoneNo
     , (d.ChassisCode + convert(varchar, d.ChassisNo)) as Chassis
	 , (d.EngineCode + convert(varchar, d.EngineNo)) as Engine
	 , b.SONo
     , c.DONo
	 , g.BpkNo
     , d.SalesModelCode as CarType
     , d.ColourCode as Color
	 , b.Salesman as SalesmanCode
	 , f.EmployeeName as SalesmanName
     , PoliceRegNo = e.PoliceRegNo
     , c.DODate as DeliveryDate
	 , d.SalesModelCode
	 , d.SalesModelYear
	 , d.ColourCode
	 , g.BPKDate
	 , b.IsLeasing
	 , b.LeasingCo
	 , h.CustomerName as LeasingName
	 , b.Installment
  from GnMstCustomer a
 inner join omTrSalesSO b
    on b.CompanyCode = a.CompanyCode
   and b.CustomerCode = a.CustomerCode
  left join omTrSalesDO c
    on c.CompanyCode = b.CompanyCode
   and c.CustomerCode = b.CustomerCode
   and c.SONo = b.SONo
  left join omTrSalesDODetail d
    on d.CompanyCode = c.CompanyCode
   and d.BranchCode = c.BranchCode
   and d.DONo = c.DONo
  left join svMstCustomerVehicle e
    on e.CompanyCode = d.CompanyCode
   and e.ChassisCode = d.ChassisCode
   and e.ChassisNo = d.ChassisNo
  left join HrEmployee f
    on f.CompanyCode = b.CompanyCode
   and f.EmployeeID = b.Salesman
  left join OmTrSalesBpk g
    on g.CompanyCode = c.CompanyCode
   and g.BranchCode = c.BranchCode
   and g.DONo = c.DONo
   and g.SONo = c.SONo
  left join gnMstCustomer h
    on h.CompanyCode = b.CompanyCode
   and h.CustomerCode = b.LeasingCo
 where 1 = 1
   and d.ChassisCode is not null
   and d.EngineCode is not null
   and b.SODate is not null
   and c.DODate is not null
   and g.BpkNo is not null
   and isnull(d.StatusBPK, 3) != '3'
   and isnull(g.Status, 3) != '3'
   and year(c.DODate) = year(getdate())
GO
CREATE VIEW [dbo].[OmSelectReffSJBookingView]
AS 
	SELECT a.CompanyCode, a.BranchCode, a.BatchNo, b.DONo, b.DODate, b.SJNo, b.SJDate, b.SKPNo, a.DealerCode, 
		(select SupplierName from gnMstSupplier where supplierCode = c.supplierCode) as DealerName,
		c.PONo, c.ShipTo, c.SupplierCode
	FROM OmUtlSSJALHdr a
		inner join OmUtlSSJALDtl1 b on a.CompanyCode=b.CompanyCode and a.BranchCode=b.BranchCode
			and a.BatchNo=b.BatchNo
		inner join omTrPurchasePO c on a.CompanyCode=c.CompanyCode and a.BranchCode=c.BranchCode
			and c.RefferenceNo = b.SKPNo
	WHERE 1=1
		--and a.CompanyCode= convert(varchar,@CompanyCode)
		--and a.BranchCode= convert(varchar,@BranchCode)
		--and a.RcvDealerCode = convert(varchar,@CompanyCode)
		and c.status = '2'
		and b.Status = '0'
		and b.IsBlokir = 'Y'
		and not exists (
			select 1 from omTrPurchaseBPU 
			where 1=1
				and CompanyCode = a.CompanyCode and BranchCode = a.BranchCode
				and RefferenceDONo= b.DONO
				and RefferenceSJNo= b.SJNO
				and Status <> '3'
		)
GO
CREATE VIEW [dbo].[SvTaxInvoiceStdView]
AS
SELECT DISTINCT TOP (100) PERCENT trnFakturPajak.CompanyCode, trnFakturPajak.BranchCode, trnFakturPajak.FPJNo, trnFakturPajak.FPJDate,
                             (SELECT        TOP (1) InvoiceNo
                               FROM            dbo.svTrnInvoice
                               WHERE        (CompanyCode = trnFakturPajak.CompanyCode) AND (BranchCode = trnFakturPajak.BranchCode) AND (FPJNo = trnFakturPajak.FPJNo)
                               ORDER BY InvoiceNo) + ' s/d ' +
                             (SELECT        TOP (1) InvoiceNo
                               FROM            dbo.svTrnInvoice AS svTrnInvoice_3
                               WHERE        (CompanyCode = trnFakturPajak.CompanyCode) AND (BranchCode = trnFakturPajak.BranchCode) AND (FPJNo = trnFakturPajak.FPJNo)
                               ORDER BY InvoiceNo DESC) AS InvoiceNo, trnFakturPajak.CustomerCode + ' - ' + cust.CustomerName AS Customer, 
                         trnFakturPajak.CustomerCodeBill + ' - ' + custBill.CustomerName AS CustomerBill, trnFakturPajak.CustomerCode,
                             (SELECT        TOP (1) InvoiceNo
                               FROM            dbo.svTrnInvoice AS svTrnInvoice_2
                               WHERE        (CompanyCode = trnFakturPajak.CompanyCode) AND (BranchCode = trnFakturPajak.BranchCode) AND (FPJNo = trnFakturPajak.FPJNo)
                               ORDER BY InvoiceNo) AS InvoiceStart,
                             (SELECT        TOP (1) InvoiceNo
                               FROM            dbo.svTrnInvoice AS svTrnInvoice_1
                               WHERE        (CompanyCode = trnFakturPajak.CompanyCode) AND (BranchCode = trnFakturPajak.BranchCode) AND (FPJNo = trnFakturPajak.FPJNo)
                               ORDER BY InvoiceNo DESC) AS InvoiceEnd
FROM            dbo.svTrnFakturPajak AS trnFakturPajak LEFT OUTER JOIN
                         dbo.svTrnInvoice AS trnInvoice ON trnInvoice.CompanyCode = trnFakturPajak.CompanyCode AND trnInvoice.BranchCode = trnFakturPajak.BranchCode AND 
                         trnInvoice.FPJNo = trnFakturPajak.FPJNo INNER JOIN
                         dbo.gnMstCustomer AS cust WITH (nolock, nowait) ON trnFakturPajak.CompanyCode = cust.CompanyCode AND 
                         trnFakturPajak.CustomerCode = cust.CustomerCode INNER JOIN
                         dbo.gnMstCustomer AS custBill WITH (nolock, nowait) ON trnFakturPajak.CompanyCode = cust.CompanyCode AND 
                         trnFakturPajak.CustomerCodeBill = custBill.CustomerCode
WHERE        (trnFakturPajak.FPJNo LIKE 'FPS%') AND (trnFakturPajak.FPJGovNo = '') AND (trnInvoice.InvoiceNo LIKE 'INW%' OR
                         trnInvoice.InvoiceNo LIKE 'INF%') OR
                         (trnFakturPajak.FPJNo LIKE 'FPS%') AND (trnFakturPajak.FPJGovNo = '') AND (trnFakturPajak.NoOfInvoice > 1)
GO
CREATE view [dbo].[SvTrnCatCode]

as 


select CompanyCode, ProductType, RefferenceCode
, Description
, DescriptionEng
, IsActive
, CASE IsActive WHEN '1' THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status
from	svMstRefferenceService with(nolock, nowait)
where	RefferenceType = 'CLAIMCAT'
/*and CompanyCode = '6006406'
and ProductType = '4W'
order by RefferenceCode
*/
GO
CREATE VIEW [dbo].[SvTrnClaimView]
AS
SELECT        a.CompanyCode, a.BranchCode, a.ProductType, a.GenerateNo, a.GenerateDate, a.FromInvoiceNo, a.ToInvoiceNo, CASE isnull(a.FromInvoiceNo, '') 
                         WHEN '' THEN '' ELSE (rtrim(a.FromInvoiceNo) + ' s/d ' + rtrim(a.ToInvoiceNo)) END AS Invoice, a.FPJNo, CASE a.FPJDate WHEN ('19000101') THEN NULL 
                         ELSE a.FPJDate END AS FPJDate, a.FPJGovNo, a.SourceData, b.Description AS SourceDataDesc, a.TotalNoOfItem, a.TotalClaimAmt, a.SenderDealerName, 
                         a.RefferenceNo, CASE a.RefferenceDate WHEN ('19000101') THEN NULL ELSE a.RefferenceDate END AS RefferenceDate, a.PostingFlag, 
                         c.Description AS PostingFlagDesc, a.SenderDealerCode, d.CustomerName, ISNULL(a.IsSparepartClaim, 0) AS IsSparepartClaim
FROM            dbo.svTrnClaim AS a WITH (nolock, nowait) LEFT OUTER JOIN
                         dbo.svMstRefferenceService AS b WITH (nolock, nowait) ON b.CompanyCode = a.CompanyCode AND b.ProductType = a.ProductType AND 
                         b.RefferenceCode = a.SourceData AND b.RefferenceType = 'SORCDATA' LEFT OUTER JOIN
                         dbo.svMstRefferenceService AS c WITH (nolock, nowait) ON c.CompanyCode = a.CompanyCode AND c.ProductType = a.ProductType AND 
                         c.RefferenceCode = a.PostingFlag AND c.RefferenceType = 'POSTFLAG' LEFT OUTER JOIN
                         dbo.gnMstCustomer AS d ON d.CompanyCode = a.CompanyCode AND d.CustomerCode = a.SenderDealerCode
WHERE        (1 = 1)
GO
CREATE VIEW [dbo].[SvTaskTypeView]
AS
SELECT DISTINCT 
                         a.CompanyCode, a.ProductType, a.BasicModel, a.JobType AS TaskType, b.Description AS Description1, ISNULL(b.Description, c.Description) AS Description2, 
                         CASE a.IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS IsActive
FROM            dbo.svMstJob AS a LEFT OUTER JOIN
                         dbo.svMstRefferenceService AS b ON b.CompanyCode = a.CompanyCode AND b.ProductType = a.ProductType AND b.RefferenceCode = a.JobType AND 
                         b.RefferenceType = 'JOBSTYPE' RIGHT OUTER JOIN
                         dbo.svMstTask AS c ON c.CompanyCode = a.CompanyCode AND c.ProductType = a.ProductType AND c.BasicModel = a.BasicModel AND c.JobType = a.JobType AND 
                         c.IsActive = 1
WHERE        (1 = 1) AND (a.IsActive = 1)
GO
CREATE VIEW [dbo].[VW_TREEMENUS]
AS
select moduleid MenuId, ModuleCaption MenuCaption,NULL MenuHeader,ModuleIndex MenuIndex,0 MenuLevel,'' MenuUrl from sysmodule
UNION
select MenuId, MenuCaption, MenuHeader,MenuIndex, MenuLevel, MenuUrl from sysmenudms
GO
CREATE VIEW [dbo].[SvTaxInvoiceLookUpView]
AS
SELECT        inv.CompanyCode, inv.BranchCode, inv.ProductType, inv.InvoiceNo, inv.InvoiceDate, inv.JobOrderNo, inv.JobOrderDate, inv.PoliceRegNo, inv.JobType, 
                         inv.CustomerCode + ' - ' + cust.CustomerName AS Customer, inv.CustomerCodeBill + ' - ' + custBill.CustomerName AS CustomerBill, inv.CustomerCode
FROM            dbo.svTrnInvoice AS inv WITH (nolock, nowait) INNER JOIN
                         dbo.gnMstCustomer AS cust WITH (nolock, nowait) ON inv.CompanyCode = cust.CompanyCode AND inv.CustomerCode = cust.CustomerCode INNER JOIN
                         dbo.gnMstCustomer AS custBill WITH (nolock, nowait) ON inv.CompanyCode = cust.CompanyCode AND inv.CustomerCodeBill = custBill.CustomerCode
WHERE        (inv.InvoiceStatus = 0) AND (inv.FPJNo = '') AND (inv.InvoiceNo LIKE 'INW%' OR
                         inv.InvoiceNo LIKE 'INF%')
GO
CREATE VIEW [dbo].[GnMstSupplierView]
AS
SELECT a.CompanyCode, a.SupplierCode, b.BranchCode, 
     b.ProfitCenterCode, a.SupplierName, 
     ISNULL(a.Address1 + ' ' + a.Address2 + ' ' + a.Address3 +
      ' ' + a.Address4, '') AS Alamat, ISNULL(a.Address1, '') 
     AS Address1, ISNULL(a.Address2, '') AS Address2, 
     ISNULL(a.Address3, '') AS Address3, 
     ISNULL(a.Address4, '') AS Address4, 
     (CASE WHEN (a.PhoneNo <> '' AND a.HPNo <> '') 
     THEN a.PhoneNo + ' / ' + a.HPNo WHEN (a.PhoneNo <> ''
      AND a.HPNo = '') 
     THEN a.PhoneNo WHEN (a.PhoneNo = '' AND 
     a.HPNo <> '') THEN a.HPNo ELSE '' END) AS Phone, 
     b.DiscPct, 
     (CASE a.Status WHEN 0 THEN 'Tidak Aktif' ELSE 'Aktif' END)
      AS Status,
         (SELECT LookUpValueName
       FROM dbo.gnMstLookUpDtl AS d
       WHERE (CodeID = 'PFCN') AND 
             (LookUpValue = b.ProfitCenterCode)) 
     AS ProfitCenterName,
         (SELECT ParaValue
       FROM dbo.gnMstLookUpDtl AS e
       WHERE (CodeID = 'TOPC') AND 
             (LookUpValue = b.TOPCode)) AS TOPDays, 
     a.CityCode, ISNULL
         ((SELECT LookUpValueName
        FROM dbo.gnMstLookUpDtl AS f
        WHERE (CodeID = 'CITY') AND 
             (LookUpValue = a.CityCode)), '') 
     AS CityName
FROM dbo.gnMstSupplier AS a INNER JOIN
     dbo.gnMstSupplierProfitCenter AS b ON 
     a.CompanyCode = b.CompanyCode AND 
     a.SupplierCode = b.SupplierCode
GO
CREATE view [dbo].[SvTrnOpNo]

as 

select a.CompanyCode, a.BranchCode, a.ServiceNo, a.OperationNo, a.OperationHour, c.Description
  from svTrnSrvTask a
  left join svTrnService b 
    on b.CompanyCode = a.CompanyCode
   and b.BranchCode = a.BranchCode
   and b.ProductType = a.ProductType
   and b.ServiceNo = a.ServiceNo
  left join svMstTask c 
    on c.CompanyCode = a.CompanyCode
   and c.ProductType = a.ProductType
   and c.BasicModel = b.BasicModel
   and c.JobType = b.JobType
   and c.OperationNo = a.OperationNo
 where 1 = 1
   /*and a.CompanyCode = '6006406'
   and a.BranchCode = '6006401'
   and a.ServiceNo = '29061'*/
   and a.BillType = 'W'
GO
CREATE VIEW [dbo].[KaroseriBrowseView]
AS
SELECT        a.CompanyCode, a.BranchCode, a.SupplierCode, a.SalesModelCode, a.SalesModelCodeNew, a.DPPMaterial, a.DPPFee, a.DPPOthers, a.PPn, a.Total, a.Remark, 
                         a.Status, a.CreatedBy, a.CreatedDate, a.LastUpdateBy, a.LastUpdateDate, a.isLocked, a.LockingBy, a.LockingDate, b.SupplierName, c.SalesModelDesc, 
                         d.SalesModelDesc AS SalesModelDescNew
FROM            dbo.omMstKaroseri AS a INNER JOIN
                         dbo.gnMstSupplier AS b ON a.SupplierCode = b.SupplierCode INNER JOIN
                         dbo.omMstModel AS c ON a.SalesModelCode = c.SalesModelCode INNER JOIN
                         dbo.omMstModel AS d ON a.SalesModelCodeNew = d.SalesModelCode
GO
CREATE view [dbo].[SvTrnComCode]

as 


select CompanyCode, ProductType, RefferenceCode as ComCode
, Description
, DescriptionEng
, IsActive, CASE IsActive WHEN '1' THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status
from	svMstRefferenceService with(nolock, nowait)
where	RefferenceType = 'COMPLNCD'
/*and CompanyCode = '6006406'
and ProductType = '4W'
order by RefferenceCode
*/
GO
CREATE view [dbo].[SvTrnDefCode]

as 

select CompanyCode, ProductType, RefferenceCode as DefCod
, Description
, DescriptionEng
, IsActive, CASE IsActive WHEN '1' THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status
from	svMstRefferenceService with(nolock, nowait)
where	RefferenceType = 'DEFECTCD'
/*and CompanyCode = '6006406'
and ProductType = '4W'
order by RefferenceCode
*/
GO
CREATE VIEW [dbo].[SvTrnMaintainSPKView]
AS
SELECT DISTINCT 
                         dbo.svTrnService.CompanyCode, dbo.svTrnService.BranchCode, dbo.svTrnService.ServiceNo, dbo.svTrnService.JobOrderNo, dbo.svTrnService.JobOrderDate, 
                         dbo.svTrnService.PoliceRegNo, dbo.svTrnService.ServiceBookNo, dbo.svTrnService.BasicModel, dbo.svTrnService.TransmissionType, 
                         dbo.svTrnService.ChassisCode, dbo.svTrnService.ChassisNo, dbo.svTrnService.EngineCode, dbo.svTrnService.EngineNo, dbo.svTrnService.ColorCode, 
                         dbo.svTrnService.CustomerCode, dbo.gnMstCustomer.CustomerName, dbo.svTrnService.CustomerCodeBill, custBill.CustomerName AS CustomerNameBill, 
                         dbo.svTrnService.Odometer, dbo.svTrnService.JobType, dbo.svTrnService.ServiceStatus, reffService.Description AS ServiceName, dbo.svTrnService.ForemanID, 
                         employee.EmployeeName AS ForemanName
FROM            dbo.svTrnService WITH (NOLOCK, NOWAIT) LEFT OUTER JOIN
                         dbo.gnMstCustomer ON dbo.gnMstCustomer.CompanyCode = dbo.svTrnService.CompanyCode AND 
                         dbo.gnMstCustomer.CustomerCode = dbo.svTrnService.CustomerCode LEFT OUTER JOIN
                         dbo.gnMstCustomer AS custBill ON custBill.CompanyCode = dbo.svTrnService.CompanyCode AND 
                         custBill.CustomerCode = dbo.svTrnService.CustomerCodeBill LEFT OUTER JOIN
                         dbo.gnMstEmployee AS employee ON employee.CompanyCode = dbo.svTrnService.CompanyCode AND employee.BranchCode = dbo.svTrnService.BranchCode AND 
                         employee.EmployeeID = dbo.svTrnService.ForemanID LEFT OUTER JOIN
                         dbo.svTrnSrvItem AS srvItem ON srvItem.CompanyCode = dbo.svTrnService.CompanyCode AND srvItem.BranchCode = dbo.svTrnService.BranchCode AND 
                         srvItem.ProductType = dbo.svTrnService.ProductType AND srvItem.ServiceNo = dbo.svTrnService.ServiceNo LEFT OUTER JOIN
                         dbo.svTrnSrvTask AS srvTask ON srvTask.CompanyCode = dbo.svTrnService.CompanyCode AND srvTask.BranchCode = dbo.svTrnService.BranchCode AND 
                         srvTask.ProductType = dbo.svTrnService.ProductType AND srvTask.ServiceNo = dbo.svTrnService.ServiceNo LEFT OUTER JOIN
                         dbo.svMstRefferenceService AS reffService ON reffService.CompanyCode = dbo.svTrnService.CompanyCode AND 
                         reffService.ProductType = dbo.svTrnService.ProductType AND reffService.RefferenceCode = dbo.svTrnService.ServiceStatus AND 
                         reffService.RefferenceType = 'SERVSTAS' LEFT OUTER JOIN
                         dbo.svTrnInvoice AS invoice ON invoice.CompanyCode = dbo.svTrnService.CompanyCode AND invoice.BranchCode = dbo.svTrnService.BranchCode AND 
                         invoice.ProductType = dbo.svTrnService.ProductType AND invoice.JobOrderNo = dbo.svTrnService.JobOrderNo LEFT OUTER JOIN
                         dbo.svTrnSrvVOR AS VOR ON VOR.CompanyCode = dbo.svTrnService.CompanyCode AND VOR.BranchCode = dbo.svTrnService.BranchCode AND 
                         VOR.ServiceNo = dbo.svTrnService.ServiceNo
WHERE        (dbo.svTrnService.ServiceType = 2) AND (dbo.svTrnService.ServiceStatus IN ('0', '1', '2', '3', '4', '5'))
GO
CREATE view [dbo].[SvBasicKsgView]

as 


Select a.CompanyCode, a.ProductType,a.RefferenceCode AS BasicModel, a.DescriptionEng AS TechnicalModelCode,
a.Description AS ModelDescription, CASE a.IsActive WHEN '1' THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status 
from svMstrefferenceService a
WHERE a.RefferenceType = 'BASMODEL'
GO
CREATE view [dbo].[SpEdpSupplier]  as  
  
SELECT a.CompanyCode, BranchCode, 
a.SupplierCode, a.SupplierName, (a.address1+' '+a.address2+' '+a.address3+' '+a.address4) as Alamat,
b.DiscPct as Diskon, (Case a.Status when 0 then 'Tidak Aktif' else 'Aktif' end) as StatusStr, a.Status, ProfitCenterCode,
(SELECT Lookupvaluename FROM gnmstlookupdtl WHERE codeid='PFCN' 
AND lookupvalue = b.ProfitCentercode) as ProfitCenterCodeStr, isBlackList
FROM 
gnMstSupplier a
JOIN gnmstSupplierProfitCenter b ON a.CompanyCode= b.CompanyCode
AND a.SupplierCode = b.SupplierCode
GO
CREATE view [dbo].[SvBasicCopy]

as 

Select CompanyCode, ProductType, a.RefferenceCode AS BasicModel, 
 a.DescriptionEng AS TechnicalModelCode, 
a.Description AS ModelDescription
, CASE a.IsActive WHEN '1' THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status 
from svMstrefferenceService a
WHERE a.RefferenceType = 'BASMODEL'
GO
CREATE view [dbo].[SpEdpPartNo_Others]  as    
SELECT 
    TOP 500 a.CompanyCode, a.BranchCode, SupplierCode, a.ProductType, TypeOfGoods, ItemInfo.PartNo,
    ItemInfo.PartName,
    c.OnHand - (c.AllocationSP + c.AllocationSR + c.AllocationSL + c.ReservedSP + c.ReservedSR + c.ReservedSL) AS Available,
	a.MovingCode
FROM 
    SpMstItems a
    INNER JOIN SpMstItemInfo ItemInfo ON ItemInfo.PartNo = a.PartNo 
        AND ItemInfo.CompanyCode = a.CompanyCode
    INNER JOIN SpMstItemLoc c ON a.CompanyCode = c.CompanyCode
        AND a.BranchCode = c.BranchCode
        AND a.PartNo = c.PartNo
    INNER JOIN SpMstItemPrice d ON a.CompanyCode = d.CompanyCode 
		AND a.BranchCode = d.BranchCode
		AND a.PArtNo = d.PartNo
WHERE a.Status = '1'
    AND c.WarehouseCode = '00'
GO
CREATE view [dbo].[SvBasicModelPekerjaan]

as 

Select a.CompanyCode, ProductType, a.RefferenceCode AS BasicModel, a.DescriptionEng AS TechnicalModelCode,
a.Description AS ModelDescription, 
CASE a.IsActive WHEN '1' THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status from svMstrefferenceService a
WHERE a.RefferenceType = 'BASMODEL'
GO
CREATE view [dbo].[SpEdpPartNo_Pembelian]  as    
SELECT c.CompanyCode, c.BranchCode, c.PartNo, c.PartName, c.PurchasePrice,  c.DiscPct, SUM(c.OnOrder) AS MaxReceived,
CASE WHEN c.ReceivedQty IS NULL  THEN SUM(c.OnOrder) ELSE SUM(c.OnOrder-c.ReceivedQty) END AS ReminQty
 , c.POSNo, c.BinningNo
FROM
(
    SELECT DISTINCT a.CompanyCode, a.BranchCode, a.POSNo,d.ReceivedQty, d.BinningNo,
     a.PartNo
    ,b.PartName 
    ,ISNULL((SELECT x.PurchasePrice FROM SpMstItemPrice x where x.CompanyCode = a.CompanyCode AND
     x.BranchCode = a.BranchCode AND x.PartNo = a.PartNo),0) AS PurchasePrice
    ,a.OnOrder
    ,a.DiscPct
    FROM spTrnPOrderBalance a, spMstItemInfo b, spTrnPBinnDtl d
    WHERE b.CompanyCode = a.CompanyCode
    and b.PartNo = a.PartNo
    AND d.CompanyCode = a.CompanyCode
    and d.BranchCode = a.BranchCode
    and d.DocNo = a.POSNo
    AND d.PartNo = a.PartNo
    --LEFT JOIN spMstItemInfo b
    --   ON b.CompanyCode = a.CompanyCode
    --  AND b.PartNo      = a.PartNo
    --  LEFT JOIN spTrnPBinnDtl d
    --  ON d.CompanyCode = a.CompanyCode
    --  and d.BranchCode = a.BranchCode
    --  AND d.DocNo = a.POSNo
    --  AND d.PartNo = a.PartNo
      --LEFT JOIN spTrnPPOSDtl e
      --on e.CompanyCode = d.CompanyCode
      --AND e.BranchCode = d.BranchCode
      --AND e.POSNo = d.DocNo
    --and a.CompanyCode = '6006410'
    --  AND a.BranchCode  = '600641001'
    --  AND a.PosNo       = 'POS/14/000121'
    --  AND d.BinningNo = 'BNL/14/000182'
   -- GROUP BY a.PartNo
) c
GROUP BY c.CompanyCode, c.BranchCode,c.PartNo ,c.PartName, c.PurchasePrice, c.DiscPct, c.POSNo, c.ReceivedQty, c.OnOrder, c.BinningNo
HAVING sum(c.OnOrder) > 0
GO
CREATE view [dbo].[SpWRSNo]  as    
 SELECT * FROM (
SELECT a.CompanyCode, a.BranchCode,
	a.WRSNo, a.TypeOfGoods
	, WRSDate
	, COUNT(b.PartNo) CountPartNo
	, ISNULL(Claim.CountClaim, 0) CountClaim
FROM 
	spTrnPRcvHdr a WITH(NOLOCK, NOWAIT)
	INNER JOIN spTrnPRcvDtl b WITH(NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
		AND a.BranchCode = b.BranchCode
		AND a.WRSNo = b.WRSNo
	LEFT JOIN (SELECT dtl.CompanyCode, dtl.BranchCode, hdr.WRSNo, ISNULL(COUNT(dtl.PartNo), 0) CountClaim FROM spTrnPClaimDtl dtl
				INNER JOIN spTrnPClaimHdr hdr ON dtl.CompanyCode = hdr.CompanyCode
				AND dtl.BranchCode = hdr.BranchCode
				AND dtl.ClaimNo = hdr.ClaimNo
                AND hdr.status <> '3'
				GROUP BY dtl.CompanyCode, dtl.BranchCode, hdr.WRSNo
	) Claim ON a.CompanyCode = Claim.CompanyCode
		AND a.BranchCode = Claim.BranchCode
		AND a.WRSNo = Claim.WRSNo
WHERE 
	--a.CompanyCode = '6006406'
	--AND a.BranchCode = '6006401'
	(a.Status = '2' OR a.Status = '4')
	--AND a.TypeOfGoods = '0' 
GROUP BY 
	a.WRSNo, WRSDate, CountClaim,a.TypeOfGoods, a.CompanyCode, a.BranchCode
) a
GROUP BY 
	a.WrsNo, a.WrsDate, a.CountPartNo, a.CountClaim,a.TypeOfGoods, a.CompanyCode, a.BranchCode
HAVING 
	a.CountPartNo > a.CountClaim
GO
CREATE view [dbo].[SpGridEntryWRS]  as    

SELECT A.CompanyCode, A.BranchCode, A.DocNo, A.PartNo, A.PurchasePrice, A.WRSNo,
A.DiscPct,  A.ReceivedQty, A.BoxNo, (select PartName from spMstItemInfo C
where C.CompanyCode=A.CompanyCode and C.PartNo=A.PartNo) as NmPart 
  FROM spTrnPRcvDtl A
 INNER JOIN spTrnPRcvHdr B ON 
 B.CompanyCode = A.CompanyCode
 AND B.BranchCode = A.BranchCode 
 AND B.WRSNo = A.WRSNo
GO
CREATE view [dbo].[SpWRSHpp]  as 

SELECT a.CompanyCode, a.BranchCode,
WRSNo,WRSDate, b.ReferenceNo, b.DNSupplierNo, c.SupplierName, a.TypeOfGoods  
FROM 
spTrnPRcvHdr a
LEFT JOIN SpTrnPBinnHdr b ON b.CompanyCode = a.CompanyCode AND b.BranchCode = a.BranchCode
AND b.BinningNo = a.BinningNo 
LEFT JOIN gnMstSupplier c ON c.CompanyCode = a.CompanyCode AND c.SupplierCode = b.SupplierCode
WHERE --a.CompanyCode = '6006406'
--AND a.BranchCode = '6006401'
a.Status = '2'
--AND a.TypeOfGoods ='0'
AND a.ReceivingType in (1,2)
AND a.TransType = 4
--ORDER BY a.CreatedDate DESC
GO
CREATE view [dbo].[SpEntryCS]  as    
  SELECT DISTINCT CompanyCode, BranchCode, a.ClaimNo, ClaimDate, a.TypeOfGoods, a.Status
  FROM spTrnPClaimHdr a
 WHERE a.Status IN ('0', '1')
GO
CREATE VIEW [dbo].[SvBasicCodeView]
AS
SELECT        a.CompanyCode, a.ProductType, a.BasicModel, SUBSTRING(a.OperationNo, 1, 6) AS BasicCode, SUBSTRING(a.OperationNo, 7, LEN(a.OperationNo)) AS VarCom, 
                         a.OperationNo, a.OperationHour, a.LaborPrice, a.Description, CASE a.IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS IsActive, a.JobType
FROM            dbo.svMstTask AS a INNER JOIN
                         dbo.svMstJob AS b ON a.CompanyCode = b.CompanyCode AND a.ProductType = b.ProductType AND a.BasicModel = b.BasicModel AND 
                         a.JobType = b.JobType
WHERE        (1 = 1) AND (a.IsActive = 1) AND (b.IsActive = 1) AND (b.GroupJobType = 'CLM')
GO
CREATE view [dbo].[spgnMstAccountView]
 as
SELECT top 100 AccountNo, [Description], CompanyCode,
  BranchCode
  FROM gnMstAccount
GO
CREATE VIEW [dbo].[SvBasicModelView]
AS
SELECT        TOP (100) PERCENT CompanyCode, ProductType, RefferenceType, RefferenceCode, Description, DescriptionEng, 
                         CASE IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS IsActive
FROM            dbo.svMstRefferenceService WITH (Nolock, Nowait)
WHERE        (RefferenceType = 'BASMODEL')
GO
create view [dbo].[LookUpSO]
as
               SELECT a.CompanyCode, a.BranchCode,
                a.SONo, a.SODate, a.SalesType, a.CustomerCode, a.TOPCode, a.Installment, a.FinalPaymentDate,
                a.TOPDays, a.BillTo, a.ShipTo, a.ProspectNo, a.SKPKNo, a.Salesman, a.WareHouseCode, a.isLeasing, 
                a.LeasingCo, a.GroupPriceCode, a.Insurance, a.PaymentType, a.PrePaymentAmt, a.PrePaymentBy, 
                a.CommissionBy, a.CommissionAmt, a.PONo, a.ContractNo, a.Remark, a.Status,
                a.SalesCoordinator, a.SalesHead, a.BranchManager, a.RefferenceNo,
                CASE convert(varchar, a.RefferenceDate, 111) when convert(varchar, '1900/01/01') 
                then '' else convert(varchar, a.RefferenceDate, 111) end as RefferenceDates, 
                CASE convert(varchar, a.RefferenceDate, 111) when convert(varchar, '1900/01/01') 
                then 'undefined' else convert(varchar, a.RefferenceDate, 111) end as RefferenceDate, 
                CASE convert(varchar, a.RequestDate, 111) when convert(varchar, '1900/01/01') 
                then 'undefined' else convert(varchar, a.RequestDate, 111) end as RequestDate,
                CASE convert(varchar, a.PrePaymentDate, 111) when convert(varchar, '1900/01/01') 
                then 'undefined' else convert(varchar, a.PrePaymentDate, 111) end as PrePaymentDate,
                e.Address1 + ' ' + e.Address2 + ' ' + e.Address3 + ' ' + e.Address4 as Address,
                case when year(a.RefferenceDate) <> 1900 then convert(bit,1) else convert(bit,0) end isC1,
                case when a.SKPKNo <> '' then convert(bit,1) else convert(bit,0) end isC2,
                case when year(a.PrePaymentDate) <> 1900 then convert(bit,1) else convert(bit,0) end isC3,
                case when year(a.RequestDate) <> 1900 then convert(bit,1) else convert(bit,0) end isC4,
				(SELECT b.CustomerName
                        FROM gnMstCustomer b
                        WHERE a.CompanyCode = b.CompanyCode
						AND a.CustomerCode = b.CustomerCode)  
						AS CustomerName,
				(SELECT c.EmployeeName
                        FROM gnMstEmployee c
                        WHERE a.CompanyCode = c.CompanyCode AND a.BranchCode = c.BranchCode
					    AND a.Salesman = c.EmployeeID) as SalesmanName,
				(SELECT b.CustomerName
                        FROM gnMstCustomer b
                        WHERE a.CompanyCode = b.CompanyCode
						AND a.Shipto = b.CustomerCode)  
						AS ShipName,
                (SELECT b.CustomerName
                        FROM gnMstCustomer b
                        WHERE a.CompanyCode = b.CompanyCode
						AND a.LeasingCo = b.CustomerCode)  
						AS LeasingCoName,
				(SELECT c.EmployeeName
                        FROM gnMstEmployee c
                        WHERE a.CompanyCode = c.CompanyCode AND a.BranchCode = c.BranchCode
					    AND a.PrePaymentby = c.EmployeeID) as PrePaymentName,
				(SELECT d.RefferenceDesc1
                        FROM omMstRefference d
                        WHERE a.CompanyCode = d.CompanyCode
						AND d.RefferenceType = 'GRPR' 
                        AND d.RefferenceCode = a.GroupPriceCode) AS GroupPriceName,
				(SELECT b.CustomerName
                        FROM gnMstCustomer b
                        WHERE a.CompanyCode = b.CompanyCode
						AND a.CustomerCode = b.CustomerCode)  
						AS BillName,
				(SELECT b.lookupvaluename
                        FROM gnMstLookUpDtl b
                        WHERE a.WareHouseCode = b.LookUpValue
						AND a.WareHouseCode = b.LookUpValue and CodeID ='MPWH')  
						AS WareHouseName,
                (a.CustomerCode
                    + ' || '
                    + (SELECT b.CustomerName
                        FROM gnMstCustomer b
                        WHERE a.CompanyCode = b.CompanyCode
						AND a.CustomerCode = b.CustomerCode))  
						AS Customer, 
                (a.Salesman
                    + ' || '
                    + (SELECT c.EmployeeName
                        FROM gnMstEmployee c
                        WHERE a.CompanyCode = c.CompanyCode AND a.BranchCode = c.BranchCode
					    AND a.Salesman = c.EmployeeID))  AS Sales, 
                (a.GroupPriceCode
                    + ' || '
                    + (SELECT d.RefferenceDesc1
                        FROM omMstRefference d
                        WHERE a.CompanyCode = d.CompanyCode
						AND d.RefferenceType = 'GRPR' 
                        AND d.RefferenceCode = a.GroupPriceCode))  AS GroupPrice, 
                CASE a.Status when 0 then 'OPEN'
                                when 1 then 'PRINTED'
                                when 2 then 'APPROVED'
                                when 3 then 'DELETED'
                                when 4 then 'REJECTED'
                                when 9 then 'FINISHED' END as Stat
                , CASE ISNULL(a.SalesType, 0) WHEN 0 THEN 'Wholesales' ELSE 'Direct' END AS TypeSales
                ,(select distinct x.TipeKendaraan
                    from pmKDP x
	                    left join gnMstEmployee b on x.CompanyCode=b.CompanyCode and x.BranchCode=b.BranchCode
		                    and x.EmployeeID=b.EmployeeID
	                    left join omTrSalesSO c on c.CompanyCode = x.CompanyCode 
		                    and c.BranchCode = x.BranchCode
		                    and c.ProspectNo = x.InquiryNumber
	                    left join omTrSalesInvoice d on d.CompanyCode = x.CompanyCode
		                    and d.BranchCode = x.BranchCode
		                    and d.SONo = c.SONo
	                    left join omTrSalesReturn e on e.CompanyCode = x.CompanyCode
		                    and e.BranchCode = x.BranchCode
		                    and e.InvoiceNo = d.InvoiceNo
                    where x.InquiryNumber=a.ProspectNo) as VehicleType
                FROM omTrSalesSO a
                INNER JOIN gnMstCustomer e
                ON a.CompanyCode = e.CompanyCode AND a.CustomerCode = e.CustomerCode
GO
create view [dbo].[sp_tempmodel]
as
            SELECT a.SupplierCode,b.SupplierName,
                        a.MovingCode,
						c.MovingCodeName,
                   a.LeadTime, 
                   a.OrderCycle, 
                  a.SafetyStock,
				    a.CompanyCode,
					a.BranchCode
            FROM spMstOrderParam a
			inner join gnMstSupplier b on  b.CompanyCode=a.CompanyCode AND
                      b.SupplierCode=a.SupplierCode
					  inner join SpMstMovingCode c on                      
					   c.CompanyCode=a.CompanyCode AND
                      c.MovingCode=a.MovingCode
GO
create view [dbo].[spCategoryCodeview] 
		 as
		 
		    select 
                a.LookupValue 'CategoryCode', a.LookupValueName 'CategoryName', a.CompanyCode
            from 
                gnMstLookupdtl a
				            where 
                          
                a.CodeID='CSCT'
GO
CREATE view [dbo].[RptWRSBrowse]  as
    
SELECT CompanyCode, BranchCode, WRSNo, WRSDate, BinningNo, BinningDate,
TypeOfGoods, TransType
FROM SpTrnPRcvHdr
GO
CREATE VIEW [dbo].[vw_SvTrnInvoiceView]
AS

SELECT 
	Invoice.CompanyCode, Invoice.BranchCode, Invoice.ProductType, Invoice.InvoiceNo
	,isnull(Invoice.InvoiceDate,'19000101') InvoiceDate
	,Invoice.InvoiceStatus, Invoice.FPJNo, FPJ.FPJGovNo
	,isnull(Invoice.FPJDate,'19000101') FPJDate
	,Invoice.JobOrderNo
	,isnull(Invoice.JobOrderDate,'19000101') JobOrderDate
	,Invoice.JobType, Invoice.ChassisCode, Invoice.ChassisNo, Invoice.EngineCode
	,Invoice.EngineNo, Invoice.PoliceRegNo, Invoice.BasicModel, Invoice.CustomerCode, Invoice.CustomerCodeBill
	,Invoice.Remarks, (Invoice.CustomerCode + ' - ' + Cust.CustomerName) as Customer
	,(Invoice.CustomerCodeBill + ' - ' + CustBill.CustomerName) as CustomerBill
	, Invoice.Odometer, Invoice.LaborDiscPct, Invoice.PartsDiscPct, Invoice.MaterialDiscPct
	, Invoice.LaborDppAmt, Invoice.PartsDppAmt, Invoice.MaterialDppAmt
	, Invoice.TotalDppAmt, Invoice.TotalPpnAmt, Invoice.TotalSrvAmt
	
	, vehicle.ServiceBookNo
	
	, isnull(CustBill.CustomerName, '') CustomerName, isnull(CustBill.Address1, '') Address1, isnull(CustBill.Address2, '') Address2
	, isnull(CustBill.Address3, '') Address3, isnull(CustBill.Address4, '') Address4, isnull(CustBill.PhoneNo, '') PhoneNo
	, isnull(CustBill.HPNo, '') HPNo, isnull(CustBill.NPWPNo, '') NPWPNo, isnull(CustBill.NPWPDate,'19000101') NPWPDate, isnull(CustBill.SKPNo, '') SKPNo
	, isnull(CustBill.SKPDate,'19000101') SKPDate, isnull(CustBill.CityCode, '') CityCode, isnull(CityCode.LookUpValueName, '') CityDesc
	
	, isnull(CustProfCenter.TOPCode, '') TOPCode
	, isnull(TOPCode.LookUpValueName, '') TOPDesc
	
	, isnull(case AR.StatusFlag when '0' then 'Unposted' 
						 when '3' then 'Posted'
						 else 'Unknown' end, 'Unknown') StatusAR, isnull(AR.DebetAmt, 0) DebetAmt, isnull(AR.CreditAmt, 0) CreditAmt
    , isnull(AR.BlockAmt, 0) BlockAmt, isnull(AR.ReceiveAmt, 0) ReceiveAmt		
FROM svTrnInvoice Invoice
LEFT JOIN gnMstCustomer Cust
    ON Cust.CompanyCode = Invoice.CompanyCode AND Cust.CustomerCode = Invoice.CustomerCode
LEFT JOIN gnMstCustomer CustBill
    ON CustBill.CompanyCode = Invoice.CompanyCode AND CustBill.CustomerCode = Invoice.CustomerCodeBill
LEFT JOIN svMstcustomerVehicle vehicle 
	ON Invoice.CompanyCode = vehicle.CompanyCode and Invoice.ChassisCode = vehicle.ChassisCode and 
	Invoice.ChassisNo = vehicle.ChassisNo and Invoice.EngineCode = vehicle.EngineCode and 
	Invoice.EngineNo = vehicle.EngineNo and Invoice.BasicModel = vehicle.BasicModel	
LEFT JOIN svTrnFakturPajak FPJ 
	ON FPJ.CompanyCode = Invoice.CompanyCode
	AND FPJ.BranchCode = Invoice.BranchCode
	AND FPJ.FPJNo = Invoice.FPJNo
LEFT JOIN gnMstCustomerProfitCenter CustProfCenter
	ON CustProfCenter.CompanyCode = Invoice.CompanyCode
	AND CustProfCenter.BranchCode = Invoice.BranchCode
	AND CustProfCenter.CustomerCode = Invoice.CustomerCodeBill
	AND ProfitCenterCode = '200'
LEFT JOIN gnMstLookupDtl TOPCode
	ON TOPCode.CompanyCode = Invoice.CompanyCode
	AND TOPCode.CodeID = 'TOPC'
	AND TOPCode.LookupValue = CustProfCenter.TOPCode
LEFT JOIN gnMstLookupDtl CityCode
	ON CityCode.CompanyCode = Invoice.CompanyCode
	AND CityCode.CodeID = 'CITY'
	AND CityCode.LookupValue = CustBill.CityCode
LEFT JOIN ARInterface AR 
	ON AR.CompanyCode = Invoice.CompanyCode
	AND AR.BranchCode = Invoice.BranchCode
	AND AR.DocNo = Invoice.InvoiceNo
GO
create view [dbo].[sp_spMstSalesTargetDtlview]
as

SELECT  [CompanyCode]
      ,[BranchCode]
      ,[Year]
      ,[Month]
      ,[CategoryCode]
	   ,(select  LookUpValueName from gnMstLookUpDtl where CompanyCode=spMstSalesTargetDtl.CompanyCode and CodeID='CSCT') as [CategoryName]
      
	,[QtyTarget]
      ,[AmountTarget]
       ,[TotalJaringan]
  FROM  spMstSalesTargetDtl
GO
CREATE view [dbo].[SpEdpPartNo]  as    
SELECT a.CompanyCode, a.BranchCode, 
 a.PartNo
,b.PartName
,c.CostPrice
,a.QtyBill,
CustomerCode, a.BPSFNo
FROM spTrnSBPSFDtl a
INNER JOIN spMstItemInfo b
   ON b.CompanyCode = a.CompanyCode
  AND b.PartNo      = a.PartNo
INNER JOIN spMstItemPrice c
   ON c.CompanyCode = a.CompanyCode
  AND c.BranchCode  = a.BranchCode
  AND c.PartNo      = a.PartNo
INNER JOIN spTrnSBPSFHdr d
   ON d.CompanyCode = a.CompanyCode
  AND d.BranchCode  = a.BranchCode
  AND d.BPSFNo      = a.BPSFNo
/*WHERE a.CompanyCode=@CompanyCode
  AND a.BranchCode=@BranchCode
  AND d.CustomerCode=@CustomerCode
  AND a.BPSFNo = @BPSFNo*/
GROUP BY a.PartNo, b.PartName, c.CostPrice, a.QtyBill, a.CompanyCode, a.BranchCode, CustomerCode, a.BPSFNo
GO
CREATE view [dbo].[SvBillTypeView]  
as   
  select distinct
 a.CompanyCode, a.BillType,a.Description,a.CustomerCode,b.CustomerName
,(b.Address1 + ' ' + b.Address2 + ' ' + b.Address3 + ' ' + b.Address4) as CustomerAddress
,case IsActive when 1 then 'Aktif' else 'Tidak Aktif' end as StatusDesc, IsActive
from svMstBillingType a 
left join gnMstCustomer b
  on b.CompanyCode = a.CompanyCode
 and b.CustomerCode = a.CustomerCode
GO
CREATE view [dbo].[SpEdpPartNo_Internal]  as    
SELECT 
    TOP 500 a.CompanyCode, a.BranchCode, a.ProductType, TypeOfGoods, ItemInfo.PartNo,
    ItemInfo.PartName,
    c.OnHand - (c.AllocationSP + c.AllocationSR + c.AllocationSL + c.ReservedSP + c.ReservedSR + c.ReservedSL) AS Available,
	a.MovingCode
FROM 
    SpMstItems a
    INNER JOIN SpMstItemInfo ItemInfo ON ItemInfo.PartNo = a.PartNo 
        AND ItemInfo.CompanyCode = a.CompanyCode
    INNER JOIN SpMstItemLoc c ON a.CompanyCode = c.CompanyCode
        AND a.BranchCode = c.BranchCode
        AND a.PartNo = c.PartNo
    INNER JOIN SpMstItemPrice d ON a.CompanyCode = d.CompanyCode 
		AND a.BranchCode = d.BranchCode
		AND a.PArtNo = d.PartNo
WHERE a.Status = '1'  AND WarehouseCode = '00'
/*    a.CompanyCode = @CompanyCode
    AND a.BranchCode  = @BranchCode 
    AND a.ProductType  = @ProductType
    AND a.TypeOfGoods = @TypeOfGoods
    AND a.Status = @Status
    AND c.WarehouseCode = @WarehouseCode*/
GO
CREATE view [dbo].[SpClosePeriodPending]  as    

 SELECT DocumentNo, FiscalYear, FiscalMonth
, CASE Status 
    WHEN '0' THEN 'OPEN, BELUM PRINT DAN CLOSED'
    WHEN '1' THEN 'SUDAH PRINT, BELUM CLOSED'
    WHEN '2' THEN CASE LEFT(DocumentNo, 3) 
					WHEN 'WRL' THEN 'CLOSE, TETAPI BELUM DIBUATKAN HPP'
					WHEN 'WRN' THEN 'CLOSE, TETAPI BELUM DIBUATKAN HPP'
					WHEN 'BNL' THEN 'CLOSE, TETAPI BELUM DIBUATKAN WRS'
					WHEN 'SOC' THEN 'CLOSE, TETAPI BELUM DIBUATKAN PICKING LIST'					
				  END
    END AS Status
, ProfitCenter
, TableName 
, (
    SELECT LookupValueName
    FROM gnMstLookUpDtl
    WHERE LookupValue = a.TypeOfGoods
        AND CodeID = 'TPGO'
  ) AS TipePart
FROM gnErrorRaiseDtl a
GO
CREATE view [dbo].[SpEdpDetail]  as  
  
SELECT row_number () OVER (ORDER BY a.CreatedDate) AS NoUrut, a.CompanyCode, a.BranchCode, a.BinningNo,
 a.DocNo,a.PartNo, a.PurchasePrice, a.DiscPct, 
a.ReceivedQty, a.BoxNo, (select PartName from spMstItemInfo c WITH(NOLOCK, NOWAIT)
WHERE c.CompanyCode=a.CompanyCode and c.PartNo=a.PartNo) as NmPart
FROM spTrnPBinnDtl a WITH(NOLOCK, NOWAIT)
INNER JOIN spTrnPBinnHdr b WITH(NOLOCK, NOWAIT) ON b.BinningNo = a.BinningNo 
AND b.CompanyCode = a.CompanyCode
AND b.BranchCode = a.BranchCode
GO
CREATE view [dbo].[SpEdpDnNo]  as    

SELECT DISTINCT a.CompanyCode, BranchCode,
a.DeliveryNo 
,a.SupplierCode
,ISNULL(b.SupplierName,'') as SupplierName 
FROM spUtlPINVDDTL a
LEFT JOIN GnMstSupplier b ON a.CompanyCode=b.CompanyCode 
AND a.SupplierCode=b.SupplierCode
WHERE a.Status in ('0','1')
GO
CREATE view [dbo].[SpGridPartNo]  as 
   
SELECT CompanyCode, BranchCode, ClaimNo, PartNo, PartNoWrong, ClaimType, DocNo, DocDate, SeqNo,OvertageQty, ReceivedQty, 
ShortageQty, DemageQty, WrongQty, TotClaimQty,PurchasePrice,CostPrice, ReasonCode, 
CASE ReasonCode WHEN 'CORR' THEN 'KOREKSI STOK' ELSE CASE ReasonCode WHEN 'DMG' THEN 'RUSAK STOK' 
ELSE 'DIHANCURKAN' END END as ReasonCodeStr, Status, ABCClass, MovingCode, ProductType, PartCategory
from spTrnPClaimDtl
GO
create view [dbo].[spMstMovingCodeView]
as
SELECT MovingCode, MovingCodeName,
Formula = Cast(Param1 as varchar(10)) + Sign1 + Variable + Sign2 + Cast(Param2 as varchar(10)),
Param1, Sign1, Variable, Param2, Sign2,CompanyCode
FROM spMstMovingCode
GO
create view [dbo].[spMstOrderParamView] 
 as   
		    SELECT a.SupplierCode,b.SupplierName,
                        a.MovingCode,
						c.MovingCodeName,
                   a.LeadTime, 
                   a.OrderCycle, 
                  a.SafetyStock,
				    a.CompanyCode,
					a.BranchCode
            FROM spMstOrderParam a
			inner join gnMstSupplier b on  b.CompanyCode=a.CompanyCode AND
                      b.SupplierCode=a.SupplierCode
					  inner join SpMstMovingCode c on                      
					   c.CompanyCode=a.CompanyCode AND
                      c.MovingCode=a.MovingCode
GO
CREATE view [dbo].[spMstPurchCampaignView]
as
SELECT 
spMstPurchCampaign.PartNo, 
spMstItemInfo.PartName, 
spMstPurchCampaign.DiscPct, 
spMstPurchCampaign.BegDate,
spMstPurchCampaign.EndDate,
spMstPurchCampaign.SupplierCode, 
gnMstSupplier.SupplierName,
 spMstPurchCampaign.CompanyCode,
  spMstPurchCampaign.BranchCode
  FROM spMstPurchCampaign
  LEFT JOIN spMstItemInfo ON spMstItemInfo.PartNo = spMstPurchCampaign.PartNo AND	
        spMstItemInfo.CompanyCode = spMstPurchCampaign.CompanyCode
  LEFT JOIN gnMstSupplier ON gnMstSupplier.SupplierCode = spMstPurchCampaign.SupplierCode AND
        gnMstSupplier.CompanyCode = spMstPurchCampaign.CompanyCode
  INNER JOIN spMstItems ON spMstItems.CompanyCode=spMstPurchCampaign.CompanyCode AND 
	      spMstItems.BranchCode=spMstPurchCampaign.BranchCode AND 
				spMstItems.PartNo=spMstPurchCampaign.PartNo
GO
CREATE VIEW [dbo].[SpMstItemLocItemLookupView]
AS
SELECT 
	ItemInfo.PartNo,
	Items.ABCClass,
	ItemLoc.OnHand - itemLoc.ReservedSP - itemLoc.ReservedSR - itemLoc.ReservedSL - itemLoc.AllocationSP - itemLoc.AllocationSL - itemLoc.AllocationSR AS AvailQty,
	Items.OnOrder,
	Items.ReservedSP,
	Items.ReservedSR,
	Items.ReservedSL,
	Items.MovingCode,
	ItemInfo.SupplierCode,
	ItemInfo.PartName,
	ItemPrice.RetailPrice,
	ItemPrice.RetailPriceInclTax,
	ItemPrice.PurchasePrice
	,Items.CompanyCode
	,Items.BranchCode   
	,Items.ProductType
	,Items.TypeOfGoods
FROM SpMstItems Items
INNER JOIN SpMstItemInfo ItemInfo ON Items.CompanyCode  = ItemInfo.CompanyCode                          
                         AND Items.PartNo = ItemInfo.PartNo
INNER JOIN spMstItemPrice ItemPrice ON Items.CompanyCode = ItemPrice.CompanyCode
                        AND Items.BranchCode = ItemPrice.BranchCode AND Items.PartNo = ItemPrice.PartNo
INNER JOIN spMstItemLoc ItemLoc ON Items.CompanyCode = ItemLoc.CompanyCode AND Items.BranchCode = ItemLoc.BranchCode
                        AND Items.PartNo = ItemLoc.PartNo
WHERE Items.Status > 0
  AND ItemLoc.WarehouseCode = '00'
GO
CREATE VIEW [dbo].[SpMstItemLocView]
AS
SELECT 
	 ItemLoc.PartNo
	,ItemInfo.PartName
	,ItemInfo.SupplierCode
	,ItemLoc.WarehouseCode
	,ItemLoc.LocationCode
	,Items.PartCategory
	,Items.CompanyCode
	,Items.BranchCode   
	,Items.ProductType
	,Items.TypeOfGoods
FROM spMstItemLoc ItemLoc
INNER JOIN spMstItems Items 
    ON ItemLoc.CompanyCode=Items.CompanyCode
    AND ItemLoc.BranchCode=Items.BranchCode
    AND ItemLoc.PartNo=Items.PartNo
INNER JOIN spMstItemInfo ItemInfo 
    ON ItemLoc.CompanyCode=ItemInfo.CompanyCode
    AND ItemLoc.PartNo=ItemInfo.PartNo
WHERE
	ItemLoc.WarehouseCode NOT LIKE 'X%'
GO
create view [dbo].[ITSBrowse]
as
select distinct a.CompanyCode,a.BranchCode,convert(varchar,a.InquiryNumber) InquiryNo,a.InquiryDate,b.EmployeeName,a.NamaProspek,a.TipeKendaraan,
	a.EmployeeID, a.LastProgress
from pmKDP a
	left join gnMstEmployee b on a.CompanyCode=b.CompanyCode and a.BranchCode=b.BranchCode
		and a.EmployeeID=b.EmployeeID
	left join omTrSalesSO c on c.CompanyCode = a.CompanyCode 
		and c.BranchCode = a.BranchCode
		and c.ProspectNo = a.InquiryNumber
	left join omTrSalesInvoice d on d.CompanyCode = a.CompanyCode
		and d.BranchCode = a.BranchCode
		and d.SONo = c.SONo
	left join omTrSalesReturn e on e.CompanyCode = a.CompanyCode
		and e.BranchCode = a.BranchCode
		and e.InvoiceNo = d.InvoiceNo
where --a.CompanyCode= @CompanyCode
	--and a.BranchCode= @BranchCode
	--and 
	a.LastProgress in ('SPK', 'DO', 'DELIVERY')
	and (e.ReturnNo is not null or c.Status =3) and not exists (select * from omTrSalesSO c where c.CompanyCode = a.CompanyCode and c.BranchCode = a.BranchCode and c.ProspectNo = a.InquiryNumber and c.Status = 2)	 
union
select distinct a.CompanyCode,a.BranchCode,convert(varchar,a.InquiryNumber) InquiryNo,a.InquiryDate,b.EmployeeName,a.NamaProspek,a.TipeKendaraan,
	a.EmployeeID, a.LastProgress
from pmKDP a
	left join gnMstEmployee b on a.CompanyCode=b.CompanyCode and a.BranchCode=b.BranchCode
		and a.EmployeeID=b.EmployeeID
	left join omTrSalesSO c on c.CompanyCode = a.CompanyCode 
		and c.BranchCode = a.BranchCode
		and c.ProspectNo = a.InquiryNumber
		and c.Status = 2
	left join omTrSalesInvoice d on d.CompanyCode = a.CompanyCode
		and d.BranchCode = a.BranchCode
		and d.SONo = c.SONo
	left join omTrSalesReturn e on e.CompanyCode = a.CompanyCode
		and e.BranchCode = a.BranchCode
		and e.InvoiceNo = d.InvoiceNo
	left join omTrSalesSOVin f on f.CompanyCode = c.CompanyCode	--Penambahan
		and f.BranchCode = c.BranchCode	--Penambahan
		and f.SONo = c.SONo	--Penambahan
	left join omMstVehicle g on g.CompanyCode = f.CompanyCode --Penambahan
		and g.ChassisNo = f.ChassisNo	--Penambahan
where 
--a.CompanyCode= @CompanyCode
	--and a.BranchCode= @BranchCode
	--and 
	a.LastProgress in ('SPK', 'DO', 'DELIVERY')
	and (e.ReturnNo is not null or c.Status =3) 
--	and exists (select * from omTrSalesReturn c where c.CompanyCode = a.CompanyCode and c.BranchCode = a.BranchCode and c.InvoiceNo = d.InvoiceNo and c.Status = 2)		
	and exists (select * from omTrSalesReturn c where c.CompanyCode = a.CompanyCode and c.BranchCode = a.BranchCode and c.InvoiceNo = d.InvoiceNo and c.Status in (2,5))	--Perubahan	
	and g.InvoiceNo = '' --Penambahan

union
select distinct a.CompanyCode,a.BranchCode,convert(varchar,a.InquiryNumber) InquiryNo,a.InquiryDate,b.EmployeeName,a.NamaProspek,a.TipeKendaraan,
	a.EmployeeID, a.LastProgress
from pmKDP a
	left join gnMstEmployee b on a.CompanyCode=b.CompanyCode and a.BranchCode=b.BranchCode
		and a.EmployeeID=b.EmployeeID
	left join omTrSalesSO c on c.CompanyCode = a.CompanyCode 
		and c.BranchCode = a.BranchCode
		and c.ProspectNo = a.InquiryNumber
		and c.Status = 2
	left join omTrSalesInvoice d on d.CompanyCode = a.CompanyCode
		and d.BranchCode = a.BranchCode
		and d.SONo = c.SONo
	left join omTrSalesReturn e on e.CompanyCode = a.CompanyCode
		and e.BranchCode = a.BranchCode
		and e.InvoiceNo = d.InvoiceNo
	left join omTrSalesSOVin f on f.CompanyCode = c.CompanyCode	--Penambahan
		and f.BranchCode = c.BranchCode	--Penambahan
		and f.SONo = c.SONo	--Penambahan
	left join omMstVehicle g on g.CompanyCode = f.CompanyCode --Penambahan
		and g.ChassisNo = f.ChassisNo	--Penambahan
where 
	--a.CompanyCode= @CompanyCode
	--and a.BranchCode= @BranchCode
	--and 
	a.LastProgress in ('SPK', 'DO', 'DELIVERY')
	and (e.ReturnNo is not null or c.Status =3) 
--	and exists (select * from omTrSalesReturn c where c.CompanyCode = a.CompanyCode and c.BranchCode = a.BranchCode and c.InvoiceNo = d.InvoiceNo and c.Status = 2)	
	and exists (select * from omTrSalesReturn c where c.CompanyCode = a.CompanyCode and c.BranchCode = a.BranchCode and c.InvoiceNo = d.InvoiceNo and c.Status in (2,5))	--Perubahan		
	and (select count(*) from omTrSalesSO c where c.CompanyCode = a.CompanyCode and c.BranchCode = a.BranchCode and c.ProspectNo = a.InquiryNumber and c.Status = 2) = 1
	and g.InvoiceNo = ''	--Penambahan

union
select a.CompanyCode,a.BranchCode,convert(varchar,a.InquiryNumber) InquiryNo,a.InquiryDate,b.EmployeeName,a.NamaProspek,a.TipeKendaraan,
	a.EmployeeID, a.LastProgress
from pmKDP a
	left join gnMstEmployee b on a.CompanyCode=b.CompanyCode and a.BranchCode=b.BranchCode
		and a.EmployeeID=b.EmployeeID
	left join omTrSalesSO c on c.CompanyCode = a.CompanyCode 
		and c.BranchCode = a.BranchCode
		and c.ProspectNo = a.InquiryNumber
	left join omTrSalesInvoice d on d.CompanyCode = a.CompanyCode
		and d.BranchCode = a.BranchCode
		and d.SONo = c.SONo
	left join omTrSalesReturn e on e.CompanyCode = a.CompanyCode
		and e.BranchCode = a.BranchCode
		and e.InvoiceNo = d.InvoiceNo
where --a.CompanyCode= @CompanyCode
	--and a.BranchCode= @BranchCode
	--and 
	a.LastProgress = 'SPK'
	and c.ProspectNo is null
GO
create view [dbo].[sppartnameWarehousename]
as
SELECT  distinct      a.PartNo, a.PartName, b.WarehouseCode, c.LookUpValueName [Warehousename]
FROM            spMstItemInfo AS a INNER JOIN
                         spMstItemLoc AS b ON a.CompanyCode = b.CompanyCode AND a.PartNo = b.PartNo INNER JOIN
                         gnMstLookUpDtl AS c ON a.CompanyCode = c.CompanyCode 
						 AND b.WarehouseCode = c.LookUpValue
						 where c.CodeID='WRCD'
GO
CREATE view [dbo].[SpPartNoView]  as    
 SELECT a.CompanyCode, BranchCode, a.PartNo, x.PartName, a.DocNo, WRSNo, ReceivedQty, a.PurchasePrice FROM spTrnPRcvDtl a
INNER JOIN spMstItemInfo x with(nolock, nowait) on a.CompanyCode = x.CompanyCode AND a.PartNo = x.PartNo
WHERE NOT EXISTS
(
SELECT 1 FROM spTrnPClaimDtl b
INNER JOIN spTrnPClaimHdr c ON b.CompanyCode = c.CompanyCode AND b.BranchCode = c.BranchCode AND b.ClaimNo = c.ClaimNo
WHERE a.CompanyCode = b.CompanyCode 
AND a.BranchCode = b.BranchCode
AND c.WRSNo = a.WRSNO
AND a.Partno = b.PartNo
AND a.DocNo = b.DocNo
)
--AND a.CompanyCode = '6006406'
--AND a.BranchCode = '6006401'
--AND a.WRSNO = 'WRN/13/000780'
GO
CREATE view [dbo].[SpPartOrderView]  as    
SELECT DISTINCT a.CompanyCode, BranchCode,
a.PartNo, 
b.PartName,
a.DocNo, ClaimNo
FROM spTrnPCLaimDtl a
LEFT JOIN spMstItemInfo b ON b.CompanyCode = a.CompanyCode 
    AND b.PartNo = a.PartNo
--WHERE -- a.CompanyCode = '6006406'
    --AND a.BranchCode = '6006401'
    --AND ClaimNo = 'CLM/12/000001'
--ORDER BY a.PartNo
GO
CREATE view [dbo].[spMstSalesCampaignView]
as
SELECT 
spMstSalesCampaign.PartNo, 
spMstItemInfo.PartName, 
spMstSalesCampaign.DiscPct, 
spMstSalesCampaign.BegDate,
spMstSalesCampaign.EndDate,
spMstSalesCampaign.SupplierCode, 
gnMstSupplier.SupplierName,
 spMstSalesCampaign.CompanyCode,
  spMstSalesCampaign.BranchCode
  FROM spMstSalesCampaign
  LEFT JOIN spMstItemInfo ON spMstItemInfo.PartNo = spMstSalesCampaign.PartNo AND spMstItemInfo.CompanyCode = spMstSalesCampaign.CompanyCode
  LEFT JOIN gnMstSupplier ON gnMstSupplier.SupplierCode = spMstItemInfo.SupplierCode AND gnMstSupplier.CompanyCode = spMstItemInfo.CompanyCode
  INNER JOIN spMstItems ON spMstItems.CompanyCode=spMstSalesCampaign.CompanyCode AND spMstItems.BranchCode=spMstSalesCampaign.BranchCode 
        AND spMstItems.PartNo=spMstSalesCampaign.PartNo
GO
CREATE VIEW [dbo].[SpMstSalesTargetDtlView]
AS
select 
	a.CompanyCode,
	a.BranchCode,
	a.[Year],
	a.[Month],
	a.CategoryCode,
	(select LookUpValueName from gnMstLookUpDtl where CodeID='CSCT' and CompanyCode= a.CompanyCode and LookUpValue = a.CategoryCode) CategoryName,
	a.QtyTarget,
	a.AmountTarget,
	a.TotalJaringan
from spMstSalesTargetDtl a
GO
create view [dbo].[spMstSalesTargetview]
as
SELECT  cast (Year as varchar(4)) Year, 
                                cast (Month as varchar(2)) Month, QtyTarget, AmountTarget, TotalJaringan,CompanyCode,BranchCode 
                                FROM spMstSalesTarget
GO
CREATE view [dbo].[SpMstItemConversionview] 
as
select   a.CompanyCode,a.PartNo, b.PartName, FromQty, ToQty 
from SpMstItemConversion a
left join spMstItemInfo b on
    a.CompanyCode = b.CompanyCode
    and a.ProductType = b.ProductType
    and a.PartNo = b.PartNo
GO
CREATE view [dbo].[SpLoadDetail_TranStock]  as  
  
SELECT a.CompanyCode, a.BranchCode, a.LampiranNo, a.DealerCode, row_number () OVER (ORDER BY a.CreatedDate) AS NoUrut
, a.OrderNo as DocNo
, a.PartNo
, a.PurchasePrice
, 0.00 as DiscPct
, a.QtyShipped ReceivedQty
, '' as BoxNo
, ISNULL(b.PartName, '') as NmPart
FROM spUtlStockTrfDtl a
LEFT JOIN SpMstItemInfo b ON b.CompanyCode=a.CompanyCode
    AND b.PartNo=a.PartNo
--WHERE a.CompanyCode = @CompanyCode
--  AND a.BranchCode = @BranchCode
--  AND a.DealerCode = @DealerCode
--  AND a.LampiranNo = @LampiranNo
GO
CREATE view [dbo].[SpSelectByNoBinning]  as    
SELECT a.CompanyCode, a.BranchCode, a.BinningNo,
row_number () OVER (ORDER BY a.CreatedDate) AS NoUrut,
a.DocNo,a.PartNo, a.PurchasePrice, a.DiscPct, 
a.ReceivedQty, a.BoxNo, (select PartName from spMstItemInfo c WITH(NOLOCK, NOWAIT)
WHERE c.CompanyCode=a.CompanyCode and c.PartNo=a.PartNo) as NmPart
 FROM spTrnPBinnDtl a WITH(NOLOCK, NOWAIT)
 INNER JOIN spTrnPBinnHdr b WITH(NOLOCK, NOWAIT) ON b.BinningNo = a.BinningNo 
    AND b.CompanyCode = a.CompanyCode
    AND b.BranchCode = a.BranchCode
 /*WHERE a.CompanyCode = @CompanyCode
   AND a.BranchCode = @BranchCode
   AND a.BinningNo =  @BinningNo
*/
GO
CREATE view [dbo].[SpLoadEntryHPP]  as    

SELECT a.*, c.DNSupplierNo,
    d.SupplierName,b.BinningNo, b.BinningDate, b.SupplierCode, 
	(
		select LookUpValueName
		from gnMstLookUpDtl
		where CompanyCode=a.CompanyCode and CodeID='STAT' and LookUpValue=a.Status
	) StatusStr
FROM 
    SpTrnPHPP a WITH(NoLock,NoWait)
LEFT JOIN SpTrnPRcvHdr b ON b.CompanyCode = a.CompanyCOde AND b.BranchCode = a.BranchCode
    AND b.WRSNo = a. WRSNo
LEFT JOIN SpTrnPBinnHdr c ON c.CompanyCode = a.CompanyCode AND c.BranchCode = a.BranchCode
    AND c.BinningNo = b.BinningNo 
LEFT JOIN gnMstSupplier d ON d.CompanyCode = a.CompanyCode AND d.SupplierCode = c.SupplierCode
GO
CREATE view [dbo].[SpVendorClaimView]  as 
   
SELECT CompanyCode, BranchCode ,ClaimReceivedNo
    ,ClaimNo    
    ,ClaimReceivedDate, ClaimDate,
    TypeOfGoods, Status   
  FROM spTrnPRcvClaimHdr 
 WHERE --CompanyCode = '6006406'
   --AND BranchCode = '6006401'
   --AND TypeOfGoods = '0'
   (Status = '0' OR Status = '1')
 --ORDER BY ClaimReceivedNo DESC
GO
CREATE view [dbo].[SpItemPriceView]
as
SELECT TOP 1500
 ItemInfo.PartNo
,ItemInfo.PartName
,ItemPrice.PurchasePrice
,ItemInfo.SupplierCode
,ItemPrice.RetailPriceInclTax
,CASE ItemInfo.IsGenuinePart WHEN 1 THEN 'Ya' ELSE 'Tidak' END AS IsGenuinePart
,Items.ProductType
,Items.PartCategory
,u.LookupValueName 
 as CategoryName
 ,ItemPrice.CostPrice
 ,ItemPrice.RetailPrice
 ,ItemPrice.LastPurchaseUpdate
 ,ItemPrice.LastRetailPriceUpdate
,ItemPrice.OldCostPrice
,ItemPrice.OldPurchasePrice
,ItemPrice.OldRetailPrice
 ,Items.CompanyCode 
 ,Items.BranchCode
FROM spMstItemPrice ItemPrice 
INNER JOIN spMstItems Items 
    ON ItemPrice.CompanyCode=Items.CompanyCode 
    AND ItemPrice.BranchCode=Items.BranchCode
    AND ItemPrice.PartNo=Items.PartNo
right JOIN spMstItemInfo ItemInfo 
    ON ItemPrice.CompanyCode = ItemInfo.CompanyCode 
    AND ItemPrice.PartNo = ItemInfo.PartNo
	inner join  gnMstLookUpDtl u on (Items.PartCategory =u.ParaValue)
WHERE  u.CodeID='PRCT'
GO
CREATE view [dbo].[SpSelectByNoWRS]  as    

SELECT A.CompanyCode, A.BranchCode, A.WRSNo , A.PartNo, A.DocNo, A.PurchasePrice,
A.DiscPct,  A.ReceivedQty, A.BoxNo, (select PartName from spMstItemInfo C
where C.CompanyCode=A.CompanyCode and C.PartNo=A.PartNo) as NmPart 
  FROM spTrnPRcvDtl A
 INNER JOIN spTrnPRcvHdr B ON 
 B.CompanyCode = A.CompanyCode
 AND B.BranchCode = A.BranchCode 
 AND B.WRSNo = A.WRSNo
GO
CREATE VIEW [dbo].[spMasterPartLookup]
AS	
	SELECT 
	 Items.CompanyCode,
	 Items.BranchCode,
	 Items.PartNo
	,Items.ProductType
	,(SELECT LookupValueName 
		FROM gnMstLookupDtl 
	   WHERE CodeID = 'PRCT' AND 
			 LookUpValue = Items.PartCategory AND 
			 CompanyCode = Items.CompanyCode) AS CategoryName
	,Items.PartCategory
	,ItemInfo.PartName
	,CASE ItemInfo.IsGenuinePart WHEN 1 THEN 'Ya' ELSE 'Tidak' END AS IsGenuinePart
	,CASE Items.Status WHEN 1 THEN 'Aktif' ELSE 'Tidak' END AS IsActive
	,ItemInfo.OrderUnit
	,ItemInfo.SupplierCode
	,Supplier.SupplierName
	,(SELECT LookupValueName 
		FROM gnMstLookupDtl 
	  WHERE CodeID = 'TPGO' AND 
			LookUpValue = Items.TypeOfGoods AND 
			CompanyCode = Items.CompanyCode) AS TypeOfGoods
	FROM SpMstItems Items
	INNER JOIN SpMstItemInfo ItemInfo   ON Items.CompanyCode  = ItemInfo.CompanyCode                          
							 AND Items.PartNo = ItemInfo.PartNo
	LEFT JOIN GnMstSupplier Supplier ON Supplier.CompanyCode  = Items.CompanyCode 
							 AND Supplier.SupplierCode = ItemInfo.SupplierCode
GO
CREATE view [dbo].[spmasterpartview]
as
select a.CompanyCode,ItemPrice.BranchCode,a.PartNo,a.PartName,a.SupplierCode,gnMstSupplier.SupplierName,
a.IsGenuinePart,a.ProductType,a.PartCategory ,u.LookUpValueName as CategoryName
,a.OrderUnit
,ItemPrice.PurchasePrice
,ItemPrice.RetailPriceInclTax
 ,ItemPrice.CostPrice
 ,ItemPrice.RetailPrice
 ,ItemPrice.LastPurchaseUpdate
 ,ItemPrice.LastRetailPriceUpdate
,ItemPrice.OldCostPrice
,ItemPrice.OldPurchasePrice
,ItemPrice.OldRetailPrice

from SpMstItemInfo a 
inner join  gnMstLookUpDtl u on (a.PartCategory =u.ParaValue)
left join  spMstItemPrice ItemPrice       ON ItemPrice.CompanyCode=a.CompanyCode 
    AND ItemPrice.PartNo=a.PartNo 
	 LEFT JOIN gnMstSupplier ON gnMstSupplier.SupplierCode = a.SupplierCode AND
        gnMstSupplier.CompanyCode = a.CompanyCode
WHERE  u.CodeID='PRCT'  and a.Status > 0
GO
create view [dbo].[spMstAccountView]
			as
			        SELECT a.TypeOfGoods, 
                           b.LookUpValueName as NameOfGoods,  
                           a.SalesAccNo,  a.COGSAccNo,  a.InventoryAccNo,  a.DiscAccNo,  a.ReturnAccNo, 
                            a.ReturnPybAccNo,  a.OtherIncomeAccNo,  a.OtherReceivableAccNo,  a.InTransitAccNo, a.CompanyCode, a.BranchCode
                    FROM   spMstAccount a 
					inner join gnMstLookUpDtl b on b.LookUpValue=a.TypeOfGoods
                    WHERE  B.CodeID='TPGO'
GO
CREATE VIEW [dbo].[SpPembelian]
AS
SELECT a.CompanyCode, BranchCode,
 a.SuggorNo
,a.SuggorDate
--,CONVERT(varchar(15), a.SuggorDate, 103) as SuggorDate
,a.SupplierCode
,b.SupplierName,
TypeOfGoods
FROM spTrnPSUGGORHdr a
LEFT JOIN gnMstSupplier b on b.CompanyCode=a.CompanyCode AND b.SupplierCode=a.SupplierCode                               
WHERE a.status < 2
GO
CREATE view [dbo].[SpMasteritemStockAlokasiView] as 

 SELECT  
 
 distinct
--StockAlokasi
d.PartNo
,d.WarehouseCode
,a.LookUpValueName as 'WarehouseName'
,d.LocationCode
,d.OnHand
,d.AllocationSP
,d.AllocationSR
,d.AllocationSL

,d.CompanyCode 
,d.BranchCode 
FROM  spMstItemLoc d 
inner join  gnMstLookUpDtl a on (d.WarehouseCode=a.ParaValue)

WHERE a.CodeID='WRCD'
GO
CREATE view [dbo].[SpMasteritemview]
as
SELECT TOP 1500
ItemPrice.CompanyCode
,ItemPrice.BranchCode
 ,ItemPrice.PartNo
,ItemInfo.PartName
,ItemPrice.PurchasePrice
,ItemPrice.RetailPriceInclTax
,CASE ItemInfo.IsGenuinePart WHEN 1 THEN 'Ya' ELSE 'Tidak' END AS IsGenuinePart
,Items.TypeOfGoods
,Items.ProductType
,Items.PartCategory
,(SELECT LookupValueName 
    FROM gnMstLookupDtl 
    WHERE CodeID = 'PRCT' AND 
    LookUpValue = Items.PartCategory AND 
    CompanyCode =ItemPrice.CompanyCode) CategoryName
FROM spMstItemPrice ItemPrice 
INNER JOIN spMstItems Items 
    ON ItemPrice.CompanyCode=Items.CompanyCode 
    AND ItemPrice.BranchCode=Items.BranchCode
    AND ItemPrice.PartNo=Items.PartNo
INNER JOIN spMstItemInfo ItemInfo 
    ON ItemPrice.CompanyCode = ItemInfo.CompanyCode 
    AND ItemPrice.PartNo = ItemInfo.PartNo
GO
CREATE VIEW [dbo].[SvGetTableChassis]
AS
select CompanyCode, ChassisCode, cast(a.ChassisNo as varchar) ChassisNo, SeqNo, PreviousData, ChangeCode, LastUpdateBy, LastUpdateDate 
from svMstCustomerVehicleHist a
/*where 
a.companycode = '6006406' and
a.chassiscode = 'JSAJTEA4VC4' and
a.chassisno = '200049'*/
GO
CREATE VIEW [dbo].[SvGetInvoiceView]
AS
SELECT     dbo.svTrnInvoice.Remarks, dbo.svTrnInvoice.CompanyCode, dbo.svTrnInvoice.BranchCode, dbo.svTrnInvoice.ProductType, dbo.svTrnInvoice.InvoiceNo, 
                      dbo.svTrnInvoice.JobOrderNo, dbo.svTrnInvoice.PoliceRegNo, dbo.svTrnInvoice.ChassisCode, dbo.svTrnInvoice.ChassisNo, dbo.svTrnService.ColorCode, 
                      RTRIM(RTRIM(dbo.svTrnService.ColorCode) + CASE isnull(omMstRefference.RefferenceDesc2, '') 
                      WHEN '' THEN '' ELSE ' - ' END + ISNULL(dbo.omMstRefference.RefferenceDesc2, '')) AS ColorCodeDesc, dbo.svTrnInvoice.CustomerCode, 
                      dbo.gnMstCustomer.CustomerName, dbo.gnMstCustomer.Address1 AS CustAddr1, dbo.gnMstCustomer.Address2 AS CustAddr2, 
                      dbo.gnMstCustomer.Address3 AS CustAddr3, dbo.gnMstCustomer.Address4 AS CustAddr4, dbo.gnMstCustomer.CityCode, 
                      dbo.gnMstLookUpDtl.LookUpValueName AS CityName, dbo.svTrnInvoice.CustomerCodeBill, dbo.gnMstCustomer.CustomerName AS CustomerNameBill, 
                      dbo.gnMstCustomer.Address1 AS CustAddr1Bill, dbo.gnMstCustomer.Address2 AS CustAddr2Bill, dbo.gnMstCustomer.Address3 AS CustAddr3Bill, 
                      dbo.gnMstCustomer.Address4 AS CustAddr4Bill, dbo.gnMstCustomer.CityCode AS CityCodeBill, dbo.gnMstLookUpDtl.LookUpValueName AS CityNameBill, 
                      dbo.gnMstCustomer.PhoneNo, dbo.gnMstCustomer.FaxNo, dbo.gnMstCustomer.HPNo, dbo.svTrnInvoice.LaborDiscPct, dbo.svTrnInvoice.PartsDiscPct, 
                      dbo.svTrnInvoice.MaterialDiscPct, dbo.svTrnInvoice.JobType, dbo.svTrnService.ForemanID, dbo.svTrnService.MechanicID, dbo.svTrnService.ServiceStatus, 
                      dbo.svTrnInvoice.FPJNo, dbo.svMstCustomerVehicle.IsContractStatus AS IsContract, dbo.svMstCustomerVehicle.ContractNo, 
                      dbo.svMstContract.EndPeriod AS ContractEndPeriod, dbo.svMstContract.IsActive AS ContractStatus, 
                      CASE svMstCustomerVehicle.IsContractStatus WHEN 1 THEN (CASE svMstContract.IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END) 
                      ELSE '' END AS ContractStatusDesc, dbo.svMstCustomerVehicle.IsClubStatus AS IsClub, dbo.svMstCustomerVehicle.ClubCode, 
                      dbo.svMstCustomerVehicle.ClubDateFinish AS ClubEndPeriod, dbo.svMstClub.IsActive AS ClubStatus, 
                      CASE svMstCustomerVehicle.IsClubStatus WHEN 1 THEN (CASE svMstClub.IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END) ELSE '' END AS ClubStatusDesc, 
                      dbo.svMstRefferenceService.Description AS JobTypeDesc, dbo.svMstRefferenceService.Description AS ServiceStatusDesc, 
                      dbo.gnMstEmployee.EmployeeName AS ForemanName, dbo.gnMstEmployee.EmployeeName AS MechanicName, ISNULL(dbo.gnMstCustomerProfitCenter.TaxCode, '')
                       AS TaxCode, ISNULL(dbo.gnMstTax.TaxPct, 0) AS TaxPct
FROM         dbo.svTrnInvoice LEFT OUTER JOIN
                      dbo.svTrnService ON dbo.svTrnInvoice.CompanyCode = dbo.svTrnService.CompanyCode AND dbo.svTrnInvoice.BranchCode = dbo.svTrnService.BranchCode AND 
                      dbo.svTrnInvoice.ProductType = dbo.svTrnService.ProductType AND dbo.svTrnInvoice.JobOrderNo = dbo.svTrnService.JobOrderNo LEFT OUTER JOIN
                      dbo.omMstRefference ON dbo.svTrnInvoice.CompanyCode = dbo.omMstRefference.CompanyCode AND dbo.omMstRefference.RefferenceType = 'COLO' AND 
                      dbo.svTrnService.ColorCode = dbo.omMstRefference.RefferenceCode LEFT OUTER JOIN
                      dbo.gnMstCustomer ON dbo.svTrnService.CompanyCode = dbo.gnMstCustomer.CompanyCode AND 
                      dbo.svTrnService.CustomerCode = dbo.gnMstCustomer.CustomerCode LEFT OUTER JOIN
                      dbo.gnMstLookUpDtl ON dbo.svTrnInvoice.CompanyCode = dbo.gnMstLookUpDtl.CompanyCode AND dbo.gnMstLookUpDtl.CodeID = 'CITY' AND 
                      dbo.gnMstCustomer.CityCode = dbo.gnMstLookUpDtl.LookUpValue LEFT OUTER JOIN
                      dbo.gnMstCustomer AS gnMstCustomer_1 ON dbo.svTrnService.CompanyCode = gnMstCustomer_1.CompanyCode AND 
                      dbo.svTrnService.CustomerCodeBill = gnMstCustomer_1.CustomerCode LEFT OUTER JOIN
                      dbo.gnMstLookUpDtl AS gnMstLookUpDtl_1 ON dbo.svTrnInvoice.CompanyCode = gnMstLookUpDtl_1.CompanyCode AND gnMstLookUpDtl_1.CodeID = 'CITY' AND 
                      gnMstCustomer_1.CityCode = gnMstLookUpDtl_1.LookUpValue LEFT OUTER JOIN
                      dbo.svMstCustomerVehicle ON dbo.svTrnService.CompanyCode = dbo.svMstCustomerVehicle.CompanyCode AND 
                      dbo.svTrnService.ChassisCode = dbo.svMstCustomerVehicle.ChassisCode AND 
                      dbo.svTrnService.ChassisNo = dbo.svMstCustomerVehicle.ChassisNo LEFT OUTER JOIN
                      dbo.svMstContract ON dbo.svTrnInvoice.CompanyCode = dbo.svMstContract.CompanyCode AND 
                      dbo.svMstCustomerVehicle.ContractNo = dbo.svMstContract.ContractNo AND dbo.svMstCustomerVehicle.IsContractStatus = 1 LEFT OUTER JOIN
                      dbo.svMstClub ON dbo.svTrnInvoice.CompanyCode = dbo.svMstClub.CompanyCode AND 
                      dbo.svMstCustomerVehicle.ClubCode = dbo.svMstClub.ClubCode LEFT OUTER JOIN
                      dbo.svMstRefferenceService ON dbo.svTrnInvoice.CompanyCode = dbo.svMstRefferenceService.CompanyCode AND 
                      dbo.svTrnInvoice.ProductType = dbo.svMstRefferenceService.ProductType AND dbo.svTrnInvoice.JobType = dbo.svMstRefferenceService.RefferenceCode AND 
                      dbo.svMstRefferenceService.RefferenceType = 'JOBSTYPE' LEFT OUTER JOIN
                      dbo.svMstRefferenceService AS svMstRefferenceService_1 ON dbo.svTrnInvoice.CompanyCode = svMstRefferenceService_1.CompanyCode AND 
                      dbo.svTrnInvoice.ProductType = svMstRefferenceService_1.ProductType AND dbo.svTrnService.ServiceStatus = svMstRefferenceService_1.RefferenceCode AND 
                      svMstRefferenceService_1.RefferenceType = 'SERVSTAS' LEFT OUTER JOIN
                      dbo.gnMstEmployee ON dbo.svTrnInvoice.CompanyCode = dbo.gnMstEmployee.CompanyCode AND 
                      dbo.svTrnInvoice.BranchCode = dbo.gnMstEmployee.BranchCode AND dbo.svTrnService.ForemanID = dbo.gnMstEmployee.EmployeeID LEFT OUTER JOIN
                      dbo.gnMstEmployee AS gnMstEmployee_1 ON dbo.svTrnInvoice.CompanyCode = gnMstEmployee_1.CompanyCode AND 
                      dbo.svTrnInvoice.BranchCode = gnMstEmployee_1.BranchCode AND dbo.svTrnService.MechanicID = gnMstEmployee_1.EmployeeID LEFT OUTER JOIN
                      dbo.gnMstCustomerProfitCenter ON dbo.svTrnInvoice.CompanyCode = dbo.gnMstCustomerProfitCenter.CompanyCode AND 
                      dbo.svTrnInvoice.BranchCode = dbo.gnMstCustomerProfitCenter.BranchCode AND 
                      dbo.svTrnInvoice.CustomerCode = dbo.gnMstCustomerProfitCenter.CustomerCode AND dbo.gnMstCustomerProfitCenter.ProfitCenterCode = '200' LEFT OUTER JOIN
                      dbo.gnMstTax ON dbo.svTrnInvoice.CompanyCode = dbo.gnMstTax.CompanyCode AND dbo.gnMstCustomerProfitCenter.TaxCode = dbo.gnMstTax.TaxCode
GO
CREATE view [dbo].[SvGetCustomerDetailView]

as 


select a.CompanyCode ,a.CustomerCode, a.CustomerName, 
(a.Address1 + ' ' + a.Address2 + ' ' + a.Address3 + ' ' + a.Address4) as CustomerAddress
,case a.Status when '1' then 'Aktif' else 'Tidak Aktif' end as Status
from gnMstCustomer a with(nolock, nowait)
where  a.Status = '1'
GO
create view [dbo].[ITSBrowseSO]  
as  
select distinct a.CompanyCode,a.BranchCode,convert(varchar,a.InquiryNumber) InquiryNo,a.InquiryDate,b.EmployeeName,a.NamaProspek,a.TipeKendaraan,  
 a.EmployeeID, a.LastProgress  
from pmKDP a  
 left join gnMstEmployee b on a.CompanyCode=b.CompanyCode and a.BranchCode=b.BranchCode  
  and a.EmployeeID=b.EmployeeID  
  where a.LastProgress='SPK'
GO
CREATE VIEW [dbo].[SvHistVehicleServiceView]
AS
SELECT DISTINCT 
                         a.CompanyCode, e.BranchCode, a.PoliceRegNo, a.CustomerCode, b.CustomerName, RTRIM(RTRIM(a.CustomerCode) + ' - ' + RTRIM(b.CustomerName)) 
                         AS CustomerDesc, RTRIM(RTRIM(b.Address1) + ' ' + RTRIM(b.Address2) + ' ' + RTRIM(b.Address3) + ' ' + RTRIM(b.Address4)) AS CustomerAddr, b.Address1, 
                         b.Address2, b.Address3 + ' ' + b.Address4 AS Address3, a.DealerCode, c.CustomerName AS DealerName, a.CustomerCode + ' - ' + c.CustomerName AS DealerDesc, 
                         a.ChassisCode, CAST(a.ChassisNo AS varchar) AS ChassisNo, a.EngineCode, CAST(a.EngineNo AS varchar) AS EngineNo, a.ServiceBookNo, a.ClubCode, 
                         a.ColourCode, CASE a.FakturPolisiDate WHEN ('19000101') THEN NULL ELSE a.FakturPolisiDate END AS FakturPolisiDate, a.ClubNo, 
                         CASE a.ClubDateStart WHEN ('19000101') THEN NULL ELSE a.ClubDateStart END AS ClubDateStart, CASE a.ClubDateFinish WHEN ('19000101') THEN NULL 
                         ELSE a.ClubDateFinish END AS ClubDateFinish, CASE a.ClubSince WHEN ('19000101') THEN NULL ELSE a.ClubSince END AS ClubSince, 
                         (CASE a.IsClubStatus WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END) AS IsClubStatusDesc, a.IsClubStatus, 
                         (CASE a.IsContractStatus WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END) AS IsContractStatusDesc, a.IsActive, 
                         (CASE a.IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END) AS IsActiveDesc, a.BasicModel, a.TransmissionType, CASE a.LastServiceDate WHEN ('19000101') 
                         THEN NULL ELSE a.LastServiceDate END AS LastServiceDate, a.LastJobType, a.ContractNo, a.ContactName, b.CityCode, f.LookUpValueName AS CityName
FROM            dbo.svMstCustomerVehicle AS a LEFT OUTER JOIN
                         dbo.gnMstCustomer AS b ON b.CompanyCode = a.CompanyCode AND b.CustomerCode = a.CustomerCode LEFT OUTER JOIN
                         dbo.gnMstCustomer AS c ON c.CompanyCode = a.CompanyCode AND c.CustomerCode = a.DealerCode LEFT OUTER JOIN
                         dbo.svMstJob AS d ON d.CompanyCode = a.CompanyCode AND d.BasicModel = a.BasicModel INNER JOIN
                         dbo.gnMstCustomerProfitCenter AS e ON e.CompanyCode = a.CompanyCode AND e.CustomerCode = a.CustomerCode LEFT OUTER JOIN
                         dbo.gnMstLookUpDtl AS f ON f.CompanyCode = a.CompanyCode AND f.CodeID = 'CITY' AND f.LookUpValue = b.CityCode
WHERE        (a.IsActive = 1) AND (e.ProfitCenterCode = 200)
GO
CREATE view [dbo].[SvGroupJobView]

as 

SELECT CompanyCode, ProductType, RefferenceType, RefferenceCode AS GroupJobType, Description AS GroupJobDescription,
DescriptionEng, CASE IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS IsActive
FROM      svMstRefferenceService with (Nolock, Nowait)
WHERE     RefferenceType = 'GRPJOBTY'
GO
CREATE view [dbo].[SvGaransiView]

as 


select
a.CompanyCode
,a.ProductType
,a.BasicModel
,a.OperationNo
,a.Description
,a.Odometer
,a.TimePeriod
,a.TimeDim
,a.EffectiveDate
,b.LookUpValueName TimeDimDesc
,case a.IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status,
a.IsActive
from svMstWarranty a
left join gnMstLookupDtl b on b.CompanyCode=a.CompanyCode 
                          and b.CodeID='STWK'
                          and b.LookUpValue=a.TimeDim
GO
CREATE view [dbo].[SvEventView]

as 

select CompanyCode
,EventNo
,EventDate
,BasicModel
,JobType
,EventStartDate
,EventEndDate
,LaborDiscPct
,PartsDiscPct
,MaterialDiscPct
,TotalAmount
,Description
,case isActive when 1 then 'Aktif' else 'Tidak Aktif' end Status
,IsActive
from svMstEvent
GO
CREATE VIEW [dbo].[SvEventBM]
AS

select distinct a.CompanyCode
,a.BasicModel
,a.TechnicalModelCode
from omMstModel a
where a.status = 1
GO
CREATE VIEW [dbo].[View_1]
AS
SELECT        TOP (1500) Invoice.ProductType, Invoice.InvoiceNo, Invoice.BranchCode, CASE Invoice.InvoiceDate WHEN ('19000101') THEN NULL 
                         ELSE Invoice.InvoiceDate END AS InvoiceDate, Invoice.InvoiceStatus, Invoice.FPJNo, CASE Invoice.FPJDate WHEN ('19000101') THEN NULL 
                         ELSE Invoice.FPJDate END AS FPJDate, Invoice.JobOrderNo, CASE Invoice.JobOrderDate WHEN ('19000101') THEN NULL 
                         ELSE Invoice.JobOrderDate END AS JobOrderDate, Invoice.JobType, Invoice.ChassisCode, Invoice.ChassisNo, Invoice.EngineCode, Invoice.EngineNo, 
                         Invoice.PoliceRegNo, Invoice.BasicModel, Invoice.CustomerCode, Invoice.CustomerCodeBill, Invoice.Remarks, 
                         Invoice.CustomerCode + ' - ' + Cust.CustomerName AS Customer, Invoice.CustomerCodeBill + ' - ' + CustBill.CustomerName AS CustomerBill, 
                         vehicle.ServiceBookNo, Invoice.Odometer
FROM            dbo.svTrnInvoice AS Invoice LEFT OUTER JOIN
                         dbo.gnMstCustomer AS Cust ON Cust.CompanyCode = Invoice.CompanyCode AND Cust.CustomerCode = Invoice.CustomerCode LEFT OUTER JOIN
                         dbo.gnMstCustomer AS CustBill ON CustBill.CompanyCode = Invoice.CompanyCode AND CustBill.CustomerCode = Invoice.CustomerCodeBill LEFT OUTER JOIN
                         dbo.svMstCustomerVehicle AS vehicle ON Invoice.CompanyCode = vehicle.CompanyCode AND Invoice.ChassisCode = vehicle.ChassisCode AND 
                         Invoice.ChassisNo = vehicle.ChassisNo AND Invoice.EngineCode = vehicle.EngineCode AND Invoice.EngineNo = vehicle.EngineNo AND 
                         Invoice.BasicModel = vehicle.BasicModel LEFT OUTER JOIN
                         dbo.svMstFscCampaign AS fsc ON fsc.CompanyCode = Invoice.CompanyCode AND fsc.ChassisCode = Invoice.ChassisCode AND fsc.ChassisNo = Invoice.ChassisNo
GO
CREATE VIEW [dbo].[RefferenceTypeView]
AS
SELECT distinct(a.RefferenceType)  AS RefferenceType
	FROM dbo.omMstRefference a 
	UNION
	SELECT distinct(b.RefferenceCode)  AS RefferenceType
	FROM dbo.omMstRefference b
	WHERE b.RefferenceType = 'REFF'
GO
CREATE VIEW [dbo].[SvGetAllBranchFromSPKView]
AS
SELECT DISTINCT 
                         a.CompanyCode, a.ProductType, a.BranchCode, a.GenerateNo, a.GenerateDate, a.FromInvoiceNo, a.ToInvoiceNo, CASE isnull(a.FromInvoiceNo, '') 
                         WHEN '' THEN '' ELSE (rtrim(a.FromInvoiceNo) + ' s/d ' + rtrim(a.ToInvoiceNo)) END AS Invoice, a.FPJNo, CASE a.FPJDate WHEN ('19000101') THEN NULL 
                         ELSE a.FPJDate END AS FPJDate, a.FPJGovNo, a.SourceData, b.Description AS SourceDataDesc, a.TotalNoOfItem, a.TotalAmt, a.SenderDealerName, 
                         a.RefferenceNo, CASE a.RefferenceDate WHEN ('19000101') THEN NULL ELSE a.RefferenceDate END AS RefferenceDate, a.PostingFlag, 
                         c.Description AS PostingFlagDesc, a.SenderDealerCode, d.CustomerName
FROM            dbo.svTrnPdiFsc AS a WITH (nolock, nowait) LEFT OUTER JOIN
                         dbo.svMstRefferenceService AS b WITH (nolock, nowait) ON b.CompanyCode = a.CompanyCode AND b.ProductType = a.ProductType AND 
                         b.RefferenceCode = a.SourceData AND b.RefferenceType = 'SORCDATA' LEFT OUTER JOIN
                         dbo.svMstRefferenceService AS c WITH (nolock, nowait) ON c.CompanyCode = a.CompanyCode AND c.ProductType = a.ProductType AND 
                         c.RefferenceCode = a.PostingFlag AND c.RefferenceType = 'POSTFLAG' LEFT OUTER JOIN
                         dbo.gnMstCustomer AS d ON d.CompanyCode = a.CompanyCode AND d.CustomerCode = a.SenderDealerCode
WHERE        (1 = 1) AND (a.FromInvoiceNo LIKE 'SPK%') OR
                         (1 = 1) AND (a.ToInvoiceNo LIKE 'SPK%')
GO
create view [dbo].[CsLkuBirthdayViewSource]
as 
select distinct a.CompanyCode
     , BranchCode = (
			select top 1
			       x.BranchCode
			  from OmTrSalesSo x
			 where x.CompanyCode=a.CompanyCode
			   and x.CustomerCode=a.CustomerCode
	   )
	 , a.CustomerCode
	 , CustomerAddress = convert(varchar(1000), rtrim(a.Address1) + ' ' + rtrim(a.Address2) + ' ' + rtrim(a.Address3) + ' ' + rtrim(a.Address4))
	 , datepart(year, getdate()) as PeriodOfYear
	 , convert(varchar(1000), b.AdditionalInquiries) as AdditionalInquiries
	 , b.Status

	 , a.CustomerName
	 , CustomerTelephone = a.PhoneNo
	 , CustomerBirthDate = a.BirthDate
	 , CustomerGiftSentDate = b.SentGiftDate
	 , CustomerGiftReceivedDate = b.ReceivedGiftDate
	 , CustomerTypeOfGift = b.TypeOfGift
	 , CustomerComment = convert(varchar(1000), b.Comment)


	  , SpouseName = c.FullName				
	  , SpouseTelephone = c.PhoneNo
	  , SpouseRelation = c.RelationInfo
	  , SpouseBirthDate = c.BirthDate
	  , SpouseGiftSentDate = c.SentGiftDate
	  , SpouseGiftReceivedDate = c.ReceivedGiftDate
	  , SpouseTypeOfGift = c.TypeOfGift
	  , SpouseComment = convert(varchar(1000), c.Comment)
		 

	 , ChildName1 = d.FullName				
	 , ChildTelephone1 = d.PhoneNo
	 , ChildRelation1 = d.RelationInfo
	 , ChildBirthDate1 = d.BirthDate
	 , ChildGiftSentDate1 = d.SentGiftDate
	 , ChildGiftReceivedDate1 = d.ReceivedGiftDate
	 , ChildTypeOfGift1 = d.TypeOfGift
	 , ChildComment1 = convert(varchar(1000), d.Comment)

	 , ChildName2 = e.FullName				
	 , ChildTelephone2 = e.PhoneNo
	 , ChildRelation2 = e.RelationInfo
	 , ChildBirthDate2 = e.BirthDate
	 , ChildGiftSentDate2 = e.SentGiftDate
	 , ChildGiftReceivedDate2 = e.ReceivedGiftDate
	 , ChildTypeOfGift2 = e.TypeOfGift
	 , ChildComment2 = convert(varchar(1000), e.Comment)

	 , ChildName3 = f.FullName				
	 , ChildTelephone3 = f.PhoneNo
	 , ChildRelation3 = f.RelationInfo
	 , ChildBirthDate3 = f.BirthDate
	 , ChildGiftSentDate3 = f.SentGiftDate
	 , ChildGiftReceivedDate3 = f.ReceivedGiftDate
	 , ChildTypeOfGift3 = f.TypeOfGift
	 , ChildComment3 = convert(varchar(1000), f.Comment)

	 , NumberOfChildren = (
     	  select count(xx.CustomerCode)
     		from CsCustRelation xx
     	   where xx.CompanyCode=a.CompanyCode
     		 and xx.CustomerCode=a.CustomerCode
     		 and xx.RelationType like '%CHILD%'
     )
     , NumberOfSpouse = (
     	  select count(xx.CustomerCode)
     		from CsCustRelation xx
     	   where xx.CompanyCode=a.CompanyCode
     		 and xx.CustomerCode=a.CustomerCode
     		 and xx.RelationType = 'SPOUSE'
     )
	 , Outstanding = (
			 case	 
					when isnull((  select top 1
					               x.CustomerCode
						      from CsCustBirthDay x
							 where x.CompanyCode=a.CompanyCode
							   and x.CustomerCode=a.CustomerCode
				    ), '') = '' then 'Y'
					else 'N'
			 end	 
	   )
	 --, OutStanding = ''
  from gnMstCustomer a
  left join CsCustBirthDay b
    on b.CompanyCode=a.CompanyCode
   and a.CustomerCode=b.CustomerCode
  left join CsCustRelation c			/* Spouse */
	on c.CompanyCode=a.CompanyCode
   and c.CustomerCode=a.CustomerCode
   and c.RelationType='SPOUSE' 
  left join CsCustRelation d			/* Child 1s */
	on d.CompanyCode=a.CompanyCode
   and d.CustomerCode=a.CustomerCode
   and d.RelationType='CHILD_1' 
   left join CsCustRelation e			/* Child 2 */
	on e.CompanyCode=a.CompanyCode
   and e.CustomerCode=a.CustomerCode
   and e.RelationType='CHILD_2' 
  left join CsCustRelation f			/* Child 3 */
	on f.CompanyCode=a.CompanyCode
   and f.CustomerCode=a.CustomerCode
   and f.RelationType='CHILD_3' 
 where a.CustomerType = 'I'
 --where 1 = 1
   --and (
		 --  datepart(month, a.BirthDate) = 
			--   (
			--		case 
			--			when datepart(month, getdate()) = 1  then 12
			--			else datepart(month, getdate()) - 1
			--		end
			--   ) 
			--or datepart(month, a.BirthDate) = datepart(month, getdate())
	  -- )
   --and ( right( replicate('0', 2) + datepart(month, a.BirthDate), 2) + right( replicate('0', 2) + datepart(day, a.BirthDate), 2)  ) <= ( right( replicate('0', 2) + datepart(month, getdate()), 2) + right( replicate('0', 2) + datepart(day, getdate()), 2)  )
GO
CREATE VIEW [dbo].[OmTrPurchaseBPUDetailView]
AS
SELECT dtl.CompanyCode, dtl.BranchCode, dtl.BPUNo, dtl.PONo,dtl.BPUSeq, dtl.SalesModelCode, dtl.SalesModelYear, mdl.SalesModelDesc
    , dtl.ColourCode, ref.RefferenceDesc1 AS ColourName, dtl.ChassisCode
    , (CASE dtl.ChassisNo WHEN 0 THEN '' ELSE CONVERT(Varchar, dtl.ChassisNo) END) AS ChassisNo 
    , dtl.EngineCode, (CASE dtl.EngineNo WHEN 0 THEN '' ELSE CONVERT(Varchar, dtl.EngineNo) END) AS EngineNo
    , dtl.ServiceBookNo, dtl.KeyNo, dtl.Remark, dtl.isReturn
FROM OmTrPurchaseBPUDetail dtl
LEFT JOIN OmMstModelYear mdl ON dtl.CompanyCode = mdl.CompanyCode AND dtl.SalesModelCode = mdl.SalesModelCode
    AND dtl.SalesModelYear = mdl.SalesModelYear
LEFT JOIN OmMstRefference ref ON dtl.CompanyCode = ref.CompanyCode AND dtl.ColourCode = ref.RefferenceCode
    AND ref.RefferenceType = 'COLO'
GO
CREATE view [dbo].[SvVehicleDetailView]

as 

select CompanyCode, 
a.ContractNo as ContractNoStr, a.PoliceRegNo, a.ChassisCode, 
convert(varchar, a.ChassisNo) ChassisNo, a.EngineCode, 
convert(varchar, a.EngineNo) EngineNo, a.ServiceBookNo, 
CASE a.FakturPolisiDate WHEN null THEN '-' ELSE a.FakturPolisiDate END as FakturPolisiDate,
ClubCode, ClubNo, CustomerCode
from svMstCustomerVehicle a
--where a.CompanyCode = '6006406' and a.CustomerCode = '6023'
--order by	a.PoliceRegNo asc
GO
CREATE view [dbo].[OmTrPurchaseBPULookupView]
as
	SELECT bpu.*, sup.SupplierName
	, (CASE ISNULL(bpu.BPUType, '0') WHEN '0' THEN 'DO' WHEN '1' THEN 'SJ' WHEN '2' THEN 'DO & SJ' WHEN '3' THEN 'SJ Booking' END) AS Tipe
	, (CASE ISNULL(bpu.Status, '0') WHEN '0' THEN 'OPEN' WHEN '1' THEN 'PRINTED' WHEN '2' THEN 'APPROVED' WHEN '3' THEN 'CANCELED' WHEN '9' THEN 'FINISHED' END) AS StatusBPU
	, '' as ExpeditionName, '' as WarehouseName
	FROM OmTrPurchaseBPU bpu
	LEFT JOIN GnMstSupplier sup ON bpu.CompanyCode = sup.CompanyCode AND bpu.SupplierCode = sup.SupplierCode
GO
CREATE VIEW [dbo].[SvTrnServiceMechanicView]
AS
SELECT DISTINCT 
     dbo.svTrnService.CompanyCode, 
     dbo.svTrnService.BranchCode, 
     dbo.svTrnService.ProductType, 
     dbo.svTrnService.ServiceNo, 
     dbo.svTrnService.ServiceType, 
     dbo.svTrnService.ForemanID, 
     dbo.svTrnService.EstimationNo, 
     dbo.svTrnService.EstimationDate, 
     dbo.svTrnService.BookingNo, 
     dbo.svTrnService.BookingDate, 
     dbo.svTrnService.JobOrderNo, 
     dbo.svTrnService.JobOrderDate, 
     dbo.svTrnService.InvoiceNo, 
     dbo.svTrnService.PoliceRegNo, 
     dbo.svTrnService.ServiceBookNo, 
     dbo.svTrnService.BasicModel, 
     dbo.svTrnService.TransmissionType, 
     dbo.svTrnService.ChassisCode, 
     dbo.svTrnService.ChassisNo, 
     dbo.svTrnService.EngineCode, 
     dbo.svTrnService.EngineNo, 
     dbo.svTrnService.ChassisCode + ' ' + CAST(dbo.svTrnService.ChassisNo
      AS varchar) AS KodeRangka, 
     dbo.svTrnService.EngineCode + ' ' + CAST(dbo.svTrnService.EngineNo
      AS varchar) AS KodeMesin, 
     dbo.svTrnService.ColorCode, 
     dbo.svTrnService.CustomerCode + ' - ' + dbo.gnMstCustomer.CustomerName
      AS Customer, 
     dbo.svTrnService.CustomerCodeBill + ' - ' + custBill.CustomerName
      AS CustomerBill, dbo.svTrnService.CustomerCode, 
     dbo.svTrnService.CustomerCodeBill, 
     dbo.svTrnService.Odometer, 
     dbo.svTrnService.JobType, 
     reffService.RefferenceCode AS ServiceStatus, 
     reffService.Description AS ServiceStatusDesc, 
     reffService.LockingBy, 
     dbo.svTrnService.InsurancePayFlag, 
     dbo.svTrnService.InsuranceOwnRisk, 
     dbo.svTrnService.InsuranceNo, 
     dbo.svTrnService.InsuranceJobOrderNo, 
     dbo.svTrnService.LaborDiscPct, 
     dbo.svTrnService.PartDiscPct, 
     dbo.svTrnService.MaterialDiscPct, 
     dbo.svTrnService.PPNPct, 
     dbo.svTrnService.ServiceRequestDesc, 
     dbo.svTrnService.ConfirmChangingPart, 
     dbo.svTrnService.EstimateFinishDate, 
     dbo.svTrnService.LaborDppAmt, 
     dbo.svTrnService.PartsDppAmt, 
     dbo.svTrnService.MaterialDppAmt, 
     dbo.svTrnService.TotalDPPAmount, 
     dbo.svTrnService.TotalPpnAmount, 
     dbo.svTrnService.TotalPphAmount, 
     dbo.svTrnService.TotalSrvAmount, 
     employee.EmployeeName AS ForemanName, 
     custBill.Address1 + '' + custBill.Address2 + '' + custBill.Address3
      + '' + custBill.Address4 AS AddressBill, 
     custBill.NPWPNo, custBill.PhoneNo, custBill.FaxNo, 
     custBill.HPNo
FROM dbo.svTrnService WITH (NOLOCK, NOWAIT) 
     LEFT OUTER JOIN
     dbo.gnMstCustomer ON 
     dbo.gnMstCustomer.CompanyCode = dbo.svTrnService.CompanyCode
      AND 
     dbo.gnMstCustomer.CustomerCode = dbo.svTrnService.CustomerCode
      LEFT OUTER JOIN
     dbo.gnMstCustomer AS custBill ON 
     custBill.CompanyCode = dbo.svTrnService.CompanyCode
      AND 
     custBill.CustomerCode = dbo.svTrnService.CustomerCodeBill
      LEFT OUTER JOIN
     dbo.gnMstEmployee AS employee ON 
     employee.CompanyCode = dbo.svTrnService.CompanyCode
      AND 
     employee.BranchCode = dbo.svTrnService.BranchCode AND
      employee.EmployeeID = dbo.svTrnService.ForemanID LEFT
      OUTER JOIN
     dbo.svTrnSrvItem AS srvItem ON 
     srvItem.CompanyCode = dbo.svTrnService.CompanyCode
      AND 
     srvItem.BranchCode = dbo.svTrnService.BranchCode AND
      srvItem.ProductType = dbo.svTrnService.ProductType AND
      srvItem.ServiceNo = dbo.svTrnService.ServiceNo LEFT
      OUTER JOIN
     dbo.svTrnSrvTask AS srvTask ON 
     srvTask.CompanyCode = dbo.svTrnService.CompanyCode
      AND 
     srvTask.BranchCode = dbo.svTrnService.BranchCode AND
      srvTask.ProductType = dbo.svTrnService.ProductType AND
      srvTask.ServiceNo = dbo.svTrnService.ServiceNo LEFT
      OUTER JOIN
     dbo.svMstRefferenceService AS reffService ON 
     reffService.CompanyCode = dbo.svTrnService.CompanyCode
      AND 
     reffService.ProductType = dbo.svTrnService.ProductType
      AND 
     reffService.RefferenceCode = dbo.svTrnService.ServiceStatus
      AND 
     reffService.RefferenceType = 'SERVSTAS' LEFT OUTER JOIN
     dbo.svTrnInvoice AS invoice ON 
     invoice.CompanyCode = dbo.svTrnService.CompanyCode
      AND 
     invoice.BranchCode = dbo.svTrnService.BranchCode AND
      invoice.ProductType = dbo.svTrnService.ProductType AND
      invoice.JobOrderNo = dbo.svTrnService.JobOrderNo LEFT
      OUTER JOIN
     dbo.svTrnSrvVOR AS VOR ON 
     VOR.CompanyCode = dbo.svTrnService.CompanyCode AND
      VOR.BranchCode = dbo.svTrnService.BranchCode AND 
     VOR.ServiceNo = dbo.svTrnService.ServiceNo
WHERE (1 = 1) AND (dbo.svTrnService.ServiceStatus IN (0, 
     1, 2, 3, 4)) AND (srvTask.ServiceNo IS NOT NULL) AND 
     (srvTask.IsSubCon = 0)
GO
CREATE VIEW [dbo].[OmSelectReffSJTrueView]
AS
SELECT a.CompanyCode, a.BranchCode, a.BatchNo, b.SJNo, b.SJDate, b.SKPNo, b.DONo, a.DealerCode, c.ShipTo, b.DODate, c.PONo,
    (select SupplierName from gnMstSupplier where supplierCode = c.supplierCode) as DealerName, c.SupplierCode, b.FlagRevisi
FROM OmUtlSSJALHdr a
    inner join OmUtlSSJALDtl1 b on a.CompanyCode=b.CompanyCode and a.BranchCode=b.BranchCode
        and a.BatchNo=b.BatchNo
    inner join omTrPurchaseBPU c on a.CompanyCode=c.CompanyCode and a.BranchCode=c.BranchCode
        and c.RefferenceDONo = b.DONo
WHERE 1=1
	-- and a.CompanyCode = convert(varchar,@CompanyCode)
	-- and a.BranchCode = convert(varchar,@BranchCode)
	-- and a.RcvDealerCode = convert(varchar,@CompanyCode)
    and c.status = '2'
    and b.Status = '0'
    and not exists (
        select 1 from omTrPurchaseBPU d 
        where 1=1
            and d.CompanyCode = a.CompanyCode and d.BranchCode = a.BranchCode 
            and d.RefferenceSJNo=b.SJNo
            and d.Status <> '3'
    )
-- order by FlagRevisi Desc,a.BatchNo,b.SJNo,b.SKPNo
GO
CREATE VIEW [dbo].[SvTrnSPKGeneralView]
as

SELECT DISTINCT 
    svTrnService.InvoiceNo
    , svTrnService.ServiceNo
    , svTrnService.ServiceType
    , ForemanID
    , EstimationNo
    , EstimationDate
    , BookingNo
    , BookingDate
    , svTrnService.JobOrderNo
    , svTrnService.JobOrderDate
    , svTrnService.PoliceRegNo
    , ServiceBookNo
    , svTrnService.BasicModel
    , TransmissionType
    , svTrnService.ChassisCode
    , svTrnService.ChassisNo
    , svTrnService.EngineCode
    , svTrnService.EngineNo
    , svTrnService.ChassisCode + ' ' + cast(svTrnService.ChassisNo as  varchar) KodeRangka
    , svTrnService.EngineCode + ' ' + cast(svTrnService.EngineNo as varchar) KodeMesin
    , ColorCode
    , (svTrnService.CustomerCode + ' - ' + gnMstCustomer.CustomerName) as Customer
    , (svTrnService.CustomerCodeBill + ' - ' + custBill.CustomerName) as CustomerBill
    , svTrnService.CustomerCode
    , svTrnService.CustomerCodeBill
    , svTrnService.Odometer
    , svTrnService.JobType
    ,svTrnService.ServiceStatus
    , case when svTrnService.ServiceStatus='4' then
            case when '4W'='4W' then reffService.Description
                else reffService.LockingBy
            end
        else reffService.Description 
    end ServiceStatusDesc
    , InsurancePayFlag
    , InsuranceOwnRisk
    , InsuranceNo
    , InsuranceJobOrderNo
    , svTrnService.LaborDiscPct
    , PartDiscPct
    , svTrnService.MaterialDiscPct
    , svTrnService.PPNPct
    , svTrnService.ServiceRequestDesc
    , ConfirmChangingPart
    , svTrnService.MechanicID
    , EstimateFinishDate
    , svTrnService.LaborDPPAmt
    , svTrnService.PartsDPPAmt
    , svTrnService.MaterialDPPAmt
    , TotalDPPAmount
    , TotalPpnAmount
    , TotalPphAmount
    , TotalSrvAmount
    , employee.EmployeeName
    , (custBill.Address1 + '' + custBill.Address2 + '' + custBill.Address3 + '' + custBill.Address4) as AddressBill
    , custBill.NPWPNo
    , custBill.PhoneNo
    , custBill.HPNo
    , svTrnService.CompanyCode
    ,svTrnService.BranchCode
FROM svTrnService WITH(NOLOCK, NOWAIT)
LEFT JOIN gnMstCustomer 
    ON gnMstCustomer.CompanyCode = svTrnService.CompanyCode 
    AND gnMstCustomer.CustomerCode = svTrnService.CustomerCode
LEFT JOIN gnMstCustomer custBill 
    ON custBill.CompanyCode = svTrnService.CompanyCode
    AND custBill.CustomerCode = svTrnService.CustomerCodeBill
LEFT JOIN gnMstEmployee employee
    ON employee.CompanyCode = svTrnService.CompanyCode
    AND employee.BranchCode = svTrnService.BranchCode
	AND employee.EmployeeID = svTrnService.ForemanID
LEFT JOIN svTrnSrvItem srvItem 
    ON srvItem.CompanyCode = svTrnService.CompanyCode
    AND srvItem.BranchCode = svTrnService.BranchCode
    AND srvItem.ProductType = svTrnService.ProductType
    AND srvItem.ServiceNo = svTrnService.ServiceNo
LEFT JOIN svTrnSrvTask srvTask
    ON srvTask.CompanyCode = svTrnService.CompanyCode
    AND srvTask.BranchCode = svTrnService.BranchCode
    AND srvTask.ProductType = svTrnService.ProductType
    AND srvTask.ServiceNo = svTrnService.ServiceNo
LEFT JOIN svMstRefferenceService reffService
    ON reffService.CompanyCode = svTrnService.CompanyCode
    AND reffService.ProductType = svTrnService.ProductType    
    AND reffService.RefferenceCode = svTrnService.ServiceStatus
    AND reffService.RefferenceType = 'SERVSTAS'
LEFT JOIN svTrnInvoice invoice
	ON invoice.CompanyCode = svTrnService.CompanyCode
	AND invoice.BranchCode = svTrnService.BranchCode
	AND invoice.ProductType = svTrnService.ProductType
	AND invoice.JobOrderNo = svTrnService.JobOrderNo
LEFT JOIN svTrnSrvVOR VOR
    ON VOR.CompanyCode = svTrnService.CompanyCode
	AND VOR.BranchCode = svTrnService.BranchCode
    AND VOR.ServiceNo = svTrnService.ServiceNo
GO
CREATE VIEW [dbo].[OmTrPurchasePOSelect4BPUView]
AS
SELECT PO.*, sup.SupplierName FROM omTrPurchasePO PO
LEFT JOIN gnMstSupplier sup ON PO.CompanyCode = sup.CompanyCode
AND PO.SupplierCode = sup.SupplierCode
WHERE (
	SELECT SUM(ISNULL(QuantityPO, 0)) - SUM(ISNULL(QuantityBPU, 0)) 
	FROM omTrPurchasePOModel
	WHERE CompanyCode = PO.CompanyCode AND BranchCode = PO.BranchCode
	AND PONo = PO.PONo
) > 0
GO
CREATE VIEW [dbo].[omTrSalesDraftSOLookupView]
AS
SELECT a.CompanyCode, a.BranchCode, a.DraftSONo, 
    CASE convert(varchar, a.RefferenceDate, 111) when convert(varchar, '1900/01/01') 
    then '' else convert(varchar, a.RefferenceDate, 111) end as RefferenceDate, 
    e.Address1 + ' ' + e.Address2 + ' ' + e.Address3 + ' ' + e.Address4 as Address,
    a.RefferenceNo, a.SKPKNo, a.DraftSODate, (a.CustomerCode
        + ' || '
        + (SELECT b.CustomerName
            FROM gnMstCustomer b
            WHERE a.CompanyCode = b.CompanyCode
		    AND a.CustomerCode = b.CustomerCode))  
		    AS Customer, (a.Salesman
        + ' || '
        + (SELECT c.EmployeeName
            FROM gnMstEmployee c
            WHERE a.CompanyCode = c.CompanyCode AND a.BranchCode = c.BranchCode
	        AND a.Salesman = c.EmployeeID))  AS Salesman, (a.GroupPriceCode
        + ' || '
        + (SELECT d.RefferenceDesc1
            FROM omMstRefference d
            WHERE a.CompanyCode = d.CompanyCode
		    AND d.RefferenceCode = a.GroupPriceCode))  AS GroupPriceCode, 
    CASE a.Status when 0 then 'OPEN'
                    when 1 then 'PRINTED'
                    when 2 then 'APPROVED'
                    when 3 then 'DELETED'
                    when 4 then 'REJECTED'
                    when 9 then 'FINISHED' END as Stat
    , CASE ISNULL(a.SalesType, 0) WHEN 0 THEN 'Wholesales' ELSE 'Direct' END AS TypeSales
FROM omTrSalesDraftSO a
    INNER JOIN gnMstCustomer e
        ON a.CompanyCode = e.CompanyCode AND a.CustomerCode = e.CustomerCode
--WHERE a.CompanyCode = '6006410' AND a.BranchCode = '600641001'
GO
CREATE FUNCTION [dbo].[GetDbMD] (@CompanyCode VARCHAR(15),@BranchCode VARCHAR(15)) 
RETURNS VARCHAR (20)
AS 
BEGIN
	DECLARE @DbMD varchar(20);
	SET @DbMD = (SELECT DbMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)

	RETURN @DbMD
END
GO
CREATE view [dbo].[SvWaktuKerja]

as 

select a.CompanyCode, a.BranchCode ,DayCode 
, a.Description
, a.BeginWorkTime  --, convert(varchar, a.BeginWorkTime, 24)  as BeginWorkTime
, a.EndWorkTime    --, convert(varchar, a.EndWorkTime, 24) as EndWorkTime
, a.BeginLunchTime --, convert(varchar, a.BeginLunchTime, 24) as BeginLunchTime
, a.EndLunchTime   --, convert(varchar, a.EndLunchTime, 24) as EndLunchTime  
, IsActive
,case IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status
from svMstWorkingTime a with(nolock, nowait)
GO
CREATE view [dbo].[OmTrPurchaseBPUView]
as
	SELECT bpu.*, sup.SupplierName as ExpeditionName, ref.RefferenceDesc1 as WarehouseName, '' as SupplierName
	, (CASE ISNULL(bpu.BPUType, '0') WHEN '0' THEN 'DO' WHEN '1' THEN 'SJ' WHEN '2' THEN 'DO & SJ' WHEN '3' THEN 'SJ Booking' END) AS Tipe
	, (CASE ISNULL(bpu.Status, '0') WHEN '0' THEN 'OPEN' WHEN '1' THEN 'PRINTED' WHEN '2' THEN 'APPROVED' WHEN '3' THEN 'CANCELED' WHEN '9' THEN 'FINISHED' END) AS StatusBPU
	FROM OmTrPurchaseBPU bpu
	LEFT JOIN GnMstSupplier sup ON bpu.CompanyCode = sup.CompanyCode AND bpu.Expedition = sup.SupplierCode
	LEFT JOIN omMstRefference ref ON bpu.CompanyCode = ref.CompanyCode AND bpu.WarehouseCode = ref.RefferenceCode AND ref.RefferenceType = 'WARE'
GO
CREATE FUNCTION [dbo].[GetWarehouseMD] (@CompanyCode VARCHAR(15),@BranchCode VARCHAR(15)) 
RETURNS VARCHAR (20)
AS 
BEGIN
	DECLARE @WarehouseMD AS VARCHAR(15)
	SET @WarehouseMD = (SELECT WarehouseMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)

	RETURN @WarehouseMD
END
GO
CREATE view [dbo].[SvDefectView]

as 

/*SELECT
CompanyCode, ProductType, RefferenceType, RefferenceCode as ComplainCode, Description as Ket, DescriptionEng,
CASE IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status
FROM      
svMstRefferenceService
WHERE RefferenceType = 'COMPLNCD'
*/
SELECT
CompanyCode, ProductType, RefferenceType, RefferenceCode as DefectCode, Description as Keterangan, DescriptionEng,
CASE IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status
FROM      
svMstRefferenceService
WHERE RefferenceType = 'DEFECTCD'
GO
CREATE view [dbo].[RptHPPBrowse]  as    

  SELECT a.CompanyCode, a.BranchCode, 
    a.HPPNo
    , a.HPPDate
    , a.WRSNo
    , a.WRSDate 
    ,(
        select LookUpValueName
		from gnMstLookUpDtl
		where CompanyCode=a.CompanyCode and CodeID='STAT' and LookUpValue=a.Status
    ) Status, a.TypeOfGoods
FROM 
    spTrnPHPP a
GO
CREATE VIEW [dbo].[SvClaimJudgement4LookupView]
AS
	SELECT
		a.*,
		b.SenderDealerCode, 
		b.SenderDealerName,
		b.ReceiveDealerCode,
		b.LotNo,
		b.BatchNo
	FROM 
		SvTrnClaimJudgement a,
		SvTrnClaim b
GO
CREATE view [dbo].[vw_SvJobOrder]
as

select top 500 a.CompanyCode, a.BranchCode
     , a.JobOrderNo, a.JobOrderDate
     , a.PoliceRegNo, a.ServiceBookNo
     , a.BasicModel, a.TransmissionType
     , a.ChassisCode + ' ' + cast(a.ChassisNo as  varchar) Chassis
     , a.EngineCode + ' ' + cast(a.EngineNo as varchar) Engine
     , a.ColorCode
     , a.CustomerCode + ' - ' + b.CustomerName as Customer
     , a.CustomerCodeBill + ' - ' + c.CustomerName as CustomerBill
     , c.Address1 + ' ' + c.Address2 + ' ' + c.Address3 + ' ' + c.Address4 as AddressBill
     , c.NPWPNo, c.PhoneNo, c.HPNo
     , a.Odometer, a.JobType
     , a.ForemanID, a.MechanicID
     , a.ServiceStatus
     , a.ServiceType
     , case when a.ServiceStatus in (0,1,2,3,4,5) then 'Outstanding Task' else 'Finish Task' end StatusTask
     , case when a.ServiceStatus='4' 
            then case when '4W'='4W'
                      then d.Description
                      else d.LockingBy end
            else d.Description end ServiceStatusDesc
     , a.ServiceRequestDesc
     , e.EmployeeName as ForemanName
  from svTrnService a
  left join gnMstCustomer b
    on b.CompanyCode = a.CompanyCode
   and b.CustomerCode = a.CustomerCode
  left join gnMstCustomer c
    on c.CompanyCode = a.CompanyCode
   and c.CustomerCode = a.CustomerCodeBill
  left join svMstRefferenceService d
    on d.CompanyCode = a.CompanyCode
   and d.ProductType = a.ProductType    
   and d.RefferenceCode = a.ServiceStatus
   and d.RefferenceType = 'SERVSTAS'
  left join gnMstEmployee e
    on e.CompanyCode = a.CompanyCode
   and e.BranchCode = a.BranchCode
   and e.EmployeeID = a.ForemanID
  left join gnMstEmployee f
    on f.CompanyCode = a.CompanyCode
   and f.BranchCode = a.BranchCode
   and f.EmployeeID = a.ForemanID
 where 1 = 1
GO
CREATE view [dbo].[RptFPJNoBrowse]  as    

  select CompanyCode, BranchCode, FPJNo, FPJDate, PickingSlipNo, PickingSlipDate, InvoiceNo, InvoiceDate, TypeOfGoods
                from	    spTrnSFPJHdr
GO
CREATE view [dbo].[vw_SvCustomerVehicle]
as

select a.CompanyCode 
     , rtrim(a.ChassisCode) + convert(varchar, a.ChassisNo) Chassis
     , rtrim(a.EngineCode) + convert(varchar, a.EngineNo) Engine
     , a.BasicModel, a.PoliceRegNo, a.ServiceBookNo
     , a.CustomerCode
     , b.CustomerName
     , b.Address1 + ' ' + b.Address2 + ' ' + b.Address3 + ' ' + b.Address4 as CustAddress
     , a.TransmissionType
     , a.TechnicalModelCode
     , case a.LastServiceDate
         when ('19000101') then null
         else a.LastServiceDate
       end LastServiceDate
     , a.LastJobType
     , a.ColourCode
     , a.ChassisCode
     , a.ChassisNo
     , a.EngineCode
     , a.EngineNo
  from svMstCustomerVehicle a
  left join gnMstCustomer b
    on b.CompanyCode = a.CompanyCode
   and b.CustomerCode = a.CustomerCode
 where isnull(a.BasicModel, '') <> ''
GO
CREATE view [dbo].[SvClubTable]

as 

select distinct a.CompanyCode, e.BranchCode,
 a.PoliceRegNo
,a.CustomerCode
,b.CustomerName
,  rtrim(rtrim(a.CustomerCode) + ' - ' + rtrim(b.CustomerName)) as CustomerDesc
,  rtrim(rtrim(b.Address1) + ' ' + rtrim(b.Address2) + ' ' + rtrim(b.Address3) + ' ' + rtrim(b.Address4)) as CustomerAddr
, b.Address1, b.Address2, b.Address3 + ' ' + b.Address4 Address3
,a.DealerCode
,c.CustomerName DealerName
, (a.CustomerCode + ' - ' + c.CustomerName) as DealerDesc
,a.ChassisCode
,  cast(a.ChassisNo as varchar) ChassisNo
,a.EngineCode
,  cast(a.EngineNo as varchar) EngineNo
,a.ServiceBookNo
,a.ClubCode
,a.ColourCode
,case a.FakturPolisiDate when ('19000101') then null else a.FakturPolisiDate end FakturPolisiDate
,a.ClubNo --ClubDateStart, ClubDateFinish, ClubSince
,case a.ClubDateStart when ('19000101') then null else a.ClubDateStart end ClubDateStart
,case a.ClubDateFinish when ('19000101') then null else a.ClubDateFinish end ClubDateFinish
,case a.ClubSince when ('19000101') then null else a.ClubSince end ClubSince
, (case a.IsClubStatus when 1 then 'Aktif' else 'Tidak Aktif' end) as IsClubStatusDesc
,a.IsClubStatus
, (case a.IsContractStatus when 1 then 'Aktif' else 'Tidak Aktif' end) as IsContractStatusDesc
,a.IsActive as IsActiveP
, (case a.IsActive when 1 then 'Aktif' else 'Tidak Aktif' end) as IsActiveDesc
,a.BasicModel
,a.TransmissionType
,case a.LastServiceDate when ('19000101') then null else a.LastServiceDate end LastServiceDate
,a.LastJobType
--,a.ChassisNo
,a.ContractNo
,a.ContactName
,b.CityCode
,f.LookUpValueName CityName
from svMstCustomerVehicle a
left join gnMstCustomer b on b.CompanyCode = a.CompanyCode 
	and b.CustomerCode = a.CustomerCode
left join gnMstCustomer c on c.CompanyCode = a.CompanyCode 
	and c.CustomerCode = a.DealerCode
left join svMstJob d on 
	d.CompanyCode = a.CompanyCode and
	d.BasicModel = a.BasicModel 	
inner join gnMstCustomerProfitCenter e on 
    e.CompanyCode = a.CompanyCode and
    e.CustomerCode = a.CustomerCode
left join gnMstLookupDtl f on 
    f.CompanyCode = a.CompanyCode and
    f.CodeID = 'CITY' and
    f.LookUpValue = b.CityCode
    WHERE --ClubCode = 'KLB/11/000002'
   -- AND a.CompanyCode = '6006406'
    --AND BranchCode = '6006400'
    a.IsActive='1'
GO
CREATE VIEW [dbo].[vw_SvRekapInsentifMekanik]
AS
SELECT     BranchCode, Periode, MechanicID, MechanicName, SUM(OperationHour) AS OperationHour, SUM(LaborGrossAmt) AS LaborGrossAmt, SUM(LaborDiscAmt) 
                      AS LaborDiscAmt, SUM(LaborGrossAmt) - SUM(LaborDiscAmt) AS LaborDppAmt
FROM         (SELECT     mek.BranchCode, LEFT(CONVERT(varchar, inv.InvoiceDate, 112), 6) AS Periode, mek.InvoiceNo, inv.InvoiceDate, mek.OperationNo, mek.MechanicID, 
                                              emp.EmployeeName AS MechanicName, CASE LEFT(inv.InvoiceNo, 3) WHEN 'INW' THEN tsk.ClaimHour ELSE tsk.OperationHour END AS OperationHour, 
                                              CONVERT(money, tsk.OperationCost * tsk.OperationHour) AS LaborGrossAmt, CONVERT(money, 
                                              tsk.OperationCost * tsk.OperationHour * inv.LaborDiscPct * 0.01) AS LaborDiscAmt
                       FROM          dbo.svTrnInvMechanic AS mek LEFT OUTER JOIN
                                              dbo.svTrnInvTask AS tsk ON tsk.CompanyCode = mek.CompanyCode AND tsk.BranchCode = mek.BranchCode AND tsk.InvoiceNo = mek.InvoiceNo AND 
                                              tsk.OperationNo = mek.OperationNo LEFT OUTER JOIN
                                              dbo.svTrnInvoice AS inv ON inv.CompanyCode = tsk.CompanyCode AND inv.BranchCode = tsk.BranchCode AND 
                                              inv.InvoiceNo = tsk.InvoiceNo LEFT OUTER JOIN
                                              dbo.gnMstEmployee AS emp ON emp.CompanyCode = mek.CompanyCode AND emp.BranchCode = mek.BranchCode AND 
                                              emp.EmployeeID = mek.MechanicID) AS [#]
GROUP BY BranchCode, Periode, MechanicID, MechanicName
GO
CREATE view [dbo].[SvBMView]

as 


Select a.CompanyCode, a.ProductType, a.RefferenceCode AS BasicModel, a.DescriptionEng AS TechnicalModelCode,
a.Description AS ModelDescription, CASE a.IsActive WHEN '1' THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status from svMstrefferenceService a
WHERE a.RefferenceType = 'BASMODEL'
GO
CREATE view [dbo].[RptWarehouseTransferBrowse]  as    

SELECT c.CompanyCode, c.BranchCode, c.WHTrfNo, c.WHTrfDate, c.ReferenceNo, 
c.ReferenceDate,c.TypeOfGoods 
FROM spTrnIWHTrfHdr c WITH(NOLOCK, NOWAIT)
WHERE c.Status <> '3'
GO
CREATE VIEW [dbo].[SvChassicView]
AS
select a.CompanyCode, a.ChassisCode, cast(a.ChassisNo as varchar) ChassisNo, a.EngineCode, a.SalesModelYear
     , cast(a.EngineNo as varchar) EngineNo, a.ServiceBookNo
     , case a.PoliceRegistrationDate when ('19000101') then NULL else a.PoliceRegistrationDate end as PoliceRegistrationDate
     , a.PoliceRegistrationNo, FakturPolisiNo, d.FakturPolisiDate
     , case a.IsActive when 1 then 'Aktif' else 'Tidak Aktif' end as Status
     , b.BasicModel
    -- , b.TechnicalModelCode
     , b.TransmissionType
     , a.ColourCode
     , c.CustomerCode
  from omMstVehicle a
  left join omMstModel b
    on b.CompanyCode = a.CompanyCode
   and b.SalesModelCode = a.SalesModelCode
  left join omTrSalesInvoice c
    on c.CompanyCode = a.CompanyCode
   and c.InvoiceNo = a.InvoiceNo
  LEFT JOIN svMstCustomerVehicle d
	ON a.CompanyCode = d.CompanyCode 
	AND a.ChassisCode = d.ChassisCode 
	AND a.ChassisNo = d.ChassisNo
 where --a.ChassisCode = 'MA3GXB72SE0' AND a.ChassisNo='477379' and--a.CompanyCode = @CompanyCode
    a.IsActive = 1
GO
CREATE VIEW [dbo].[SvCBasmodView]
AS

Select CompanyCode, ProductType, RefferenceCode, RefferenceCode AS BasicModel, DescriptionEng AS TechnicalModelCode, 
Description AS ModelDescription, CASE IsActive WHEN '1' THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status 
from svMstrefferenceService
WHERE --a.CompanyCode = '6006406' AND a.ProductType = '4W' AND 
RefferenceType = 'BASMODEL' --AND RefferenceCode = 'JB424AT' AND CompanyCode = '6006406'
GO
CREATE view [dbo].[SvCampaignView]

as 


select
a.CompanyCode, a.ProductType,
 a.ComplainCode
,a.DefectCode
,a.ChassisCode
,a.ChassisStartNo
,a.ChassisEndNo
,a.OperationNo
,a.CloseDate
,case a.IsActive when 1 then 'Aktif' else 'Tidak Aktif' end as Status
,a.IsActive
,a.Description    
from svMstCampaign a
where a.ComplainCode in (select RefferenceCode from svMstRefferenceService where RefferenceType='COMPLNCD')
  and a.DefectCode in (select RefferenceCode from svMstRefferenceService where RefferenceType='DEFECTCD')
GO
CREATE VIEW [dbo].[vw_spMasterItemBrowse]
AS
SELECT 
 Items.PartNo
,Items.ProductType
,(SELECT LookupValueName 
    FROM gnMstLookupDtl 
   WHERE CodeID = 'PRCT' AND 
         LookUpValue = Items.PartCategory AND 
         CompanyCode = Items.CompanyCode) AS CategoryName
,Items.PartCategory
,ItemInfo.PartName
,CASE ItemInfo.IsGenuinePart WHEN 1 THEN 'Ya' ELSE 'Tidak' END AS IsGenuinePart
,CASE Items.Status WHEN 1 THEN 'Aktif' ELSE 'Tidak' END AS IsActive
,ItemInfo.OrderUnit
,ItemInfo.SupplierCode
,Supplier.SupplierName
,Items.TypeOfGoods aaa
,(SELECT LookupValueName 
    FROM gnMstLookupDtl 
  WHERE CodeID = 'TPGO' AND 
        LookUpValue = Items.TypeOfGoods AND 
        CompanyCode = Items.CompanyCode) AS TypeOfGoods
FROM SpMstItems Items
INNER JOIN SpMstItemInfo ItemInfo   ON Items.CompanyCode  = ItemInfo.CompanyCode                          
                         AND Items.PartNo = ItemInfo.PartNo
LEFT JOIN GnMstSupplier Supplier ON Supplier.CompanyCode  = Items.CompanyCode 
                         AND Supplier.SupplierCode = ItemInfo.SupplierCode
GO
CREATE view [dbo].[SvCustomerDetailView]

as 

SELECT a.CustomerCode, a.CompanyCode, a.CustomerName , a.Address1, a.Address2, a.Address3, a.Address4, 
a.Address1 + ' ' + a.Address2 + ' ' + a.Address3 + ' ' + a.Address4 AS Address,
CASE a.Status WHEN 1 THEN 'Aktif' ELSE 'TIdak Aktif' END AS Status, HPNo, FaxNo, e.ProfitCenterCode
  FROM gnMstCustomer a with(nolock, nowait)
  inner join gnMstCustomerProfitCenter e on 
    e.CompanyCode = a.CompanyCode and
    e.CustomerCode = a.CustomerCode
GO
create view [dbo].[vw_GnCheckTax]
as

select a.BranchCode, a.FPJNo, a.FPJDate, a.CustomerCodeBill, b.TaxTransCode
  from SpTrnSFPJHdr a
  left join gnMstCustomerProfitCenter b
    on b.BranchCode = a.BranchCode
   and b.CustomerCode = a.CustomerCodeBill
 where 1 = 1
   and a.IsPKP = 1 
   and isnull(a.FPJGovNo, '') = ''
   and b.ProfitCenterCode = '300'
   
union all
   
select a.BranchCode, a.FPJNo, a.FPJDate, a.CustomerCodeBill, b.TaxTransCode
  from SvTrnFakturPajak a  
  left join gnMstCustomerProfitCenter b
    on b.BranchCode = a.BranchCode
   and b.CustomerCode = a.CustomerCodeBill
 where 1 = 1
   and a.IsPKP = 1 
   and isnull(a.FPJGovNo, '') = ''
   and b.ProfitCenterCode = '200'
   
union all   

select a.BranchCode, a.InvoiceNo, a.InvoiceDate, a.CustomerCode, b.TaxTransCode
  from OmFakturPajakHdr a
  left join gnMstCustomerProfitCenter b
    on b.BranchCode = a.BranchCode
   and b.CustomerCode = a.CustomerCode
 where 1 = 1
   and a.TaxType = 'Standard'
   and isnull(a.FakturPajakNo, '') = ''
   and b.ProfitCenterCode = '100'
GO
CREATE view [dbo].[SvComplainView]

as 

SELECT
CompanyCode, ProductType, RefferenceType, RefferenceCode as ComplainCode, Description as Keterangan, DescriptionEng,
CASE IsActive WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status
FROM      
svMstRefferenceService
WHERE RefferenceType = 'COMPLNCD'
GO
create view [dbo].[vtemp] as 
SELECT 
		a.CompanyCode,a.BranchCode	,a.InvoiceNo	,a.InvoiceDate	,a.SONo	,a.CustomerCode	,a.BillTo	,a.FakturPajakNo	
		,a.FakturPajakDate	,a.DueDate	,a.isStandard	,a.Remark	,a.Status,b.CustomerName,c.SalesType, 
		CASE ISNULL(c.SalesType, 0) WHEN 0 THEN 'Wholesales' ELSE 'Direct' END AS TypeSales
FROM 
		omTrSalesInvoice a
		LEFT JOIN gnMstCustomer b
		ON a.CompanyCode = b.CompanyCode AND a.CustomerCode = b.CustomerCode
		LEFT JOIN gnMstCustomerProfitCenter c
		ON a.CompanyCode = c.CompanyCode AND a.BranchCode = c.BranchCode AND a.CustomerCode = c.CustomerCode AND c.ProfitCenterCode = '100'
GO
CREATE VIEW [dbo].[SvDealerView]
AS
SELECT        TOP (100) PERCENT a.CompanyCode, b.BranchCode, b.ProfitCenterCode, a.CustomerCode, a.CustomerName, 
                         a.Address1 + ' ' + a.Address2 + ' ' + a.Address3 + ' ' + a.Address4 AS Address, a.Address1, a.CustomerAbbrName, a.Address2, a.Address3, a.Address4, a.CityCode, 
                         d.LookUpValueName AS CityCodeDesc, a.PhoneNo, a.HPNo, a.FaxNo, e.LookUpValueName AS ProfitCenter, 
                         CASE Status WHEN 1 THEN 'Aktif' ELSE 'Tidak Aktif' END AS Status
FROM            dbo.gnMstCustomer AS a WITH (nolock, nowait) INNER JOIN
                         dbo.gnMstCustomerProfitCenter AS b WITH (nolock, nowait) ON b.CustomerCode = a.CustomerCode AND b.CompanyCode = a.CompanyCode LEFT OUTER JOIN
                         dbo.gnMstCustomerClass AS c WITH (nolock, nowait) ON c.ProfitCenterCode = b.ProfitCenterCode AND c.CustomerClass = b.CustomerClass AND 
                         c.CompanyCode = b.CompanyCode AND c.BranchCode = b.BranchCode LEFT OUTER JOIN
                         dbo.gnMstLookUpDtl AS d WITH (nolock, nowait) ON d.CompanyCode = a.CompanyCode AND d.CodeID = 'CITY' AND d.LookUpValue = a.CityCode LEFT OUTER JOIN
                         dbo.gnMstLookUpDtl AS e WITH (nolock, nowait) ON e.CompanyCode = a.CompanyCode AND e.CodeID = 'PFCN' AND e.LookUpValue = b.ProfitCenterCode
WHERE        (b.isBlackList = 0) AND (a.Status = 1) AND (b.ProfitCenterCode = 200)
GO
CREATE view [dbo].[RptAdjustmentNoBrowse]  as    

SELECT c.CompanyCode, c.BranchCode, c.AdjustmentNo, c.AdjustmentDate, c.ReferenceNo, 
c.ReferenceDate, c.TypeOfGoods
FROM SpTrnIAdjustHdr c with(nolock,nowait)
WHERE c.Status <> '3'
GO
CREATE VIEW [dbo].[SvClubView]
AS
select CompanyCode, ClubCode as ClubCodeStr, --replace(convert(varchar, CreatedDate, 106),' ','-') as CreatedDate, 
CreatedDate,
Description, 
LaborDiscPct, PartDiscPct, MaterialDiscPct,
case IsActive when 1 then 'Aktif' else 'Tidak Aktif' end as IsActiveStr, IsActive
from svMstClub
GO
CREATE view [dbo].[RptClaimNo]  as    

  SELECT DISTINCT a.CompanyCode, a.BranchCode, a.ClaimNo, ClaimDate, a.TypeOfGoods
  FROM spTrnPClaimHdr a
JOIN spTrnPClaimDtl b ON a.CompanyCode = b.CompanyCode
AND a.BranchCode = b.BranchCode
AND a.ClaimNo = b.ClaimNo
GO
CREATE view [dbo].[RptClaimReceivedNo]  as    

  SELECT CompanyCode, BranchCode, ClaimReceivedNo
    ,ClaimNo    
    ,ClaimReceivedDate, TypeOfGoods   
  FROM spTrnPRcvClaimHdr 
 WHERE (Status = '2' OR Status = '8')
GO
CREATE view [dbo].[RptBinningBrowse]  as
    
SELECT CompanyCode, BranchCode, BinningNo, BinningDate, Status,ReferenceNo,DNSupplierNo, TypeOfGoods
FROM spTrnPBinnHdr WITH(NOLOCK, NOWAIT)
GO
CREATE VIEW [dbo].[SvColorView]
AS

/*select CompanyCode, RefferenceCode as ColourCode, RefferenceDesc1, RefferenceDesc2 
from omMstRefference
where --CompanyCode = '6006406' and 
RefferenceType = 'COLO' 
--order by RefferenceDesc1
*/   
SELECT CompanyCode, RefferenceCode, RefferenceCode as ColourCode, RefferenceDesc1, RefferenceDesc2 FROM omMstRefference WHERE RefferenceType = 'COLO'
GO
CREATE view [dbo].[vw_GnCustomer]
as

-- select top 10  * from vw_GnCustomer where ProfitCenterCode = '200'
-- select * from gnMstCustomer

select a.CompanyCode, b.BranchCode
     , a.CustomerCode
     , a.CustomerName
     , a.Address1 + ' ' + a.Address2 + ' ' + a.Address3 + ' ' + a.Address4 as CustAddress
     , a.Address1
     , a.CustomerAbbrName
     , a.Address2, a.Address3, a.Address4, a.CityCode
     , d.LookUpValueName as CityCodeDesc
     , a.PhoneNo, a.HPNo, a.FaxNo
     , e.LookupValueName as ProfitCenter
     , case Status when 1 then 'Aktif' else 'Tidak Aktif' end as Status
     , b.ProfitCenterCode
  from gnMstCustomer a with(nolock, nowait)
 inner join gnMstCustomerProfitCenter b with(nolock, nowait) 
    on b.CustomerCode = a.CustomerCode 
   and b.CompanyCode = a.CompanyCode
  left join gnMstCustomerClass c with(nolock, nowait) 
    on c.ProfitCenterCode = b.ProfitCenterCode 
   and c.CustomerClass = b.CustomerClass 
   and c.CompanyCode = b.CompanyCode
   and c.BranchCode = b.BranchCode
  left join gnMstLookUpDtl d with(nolock, nowait)
    on d.CompanyCode = a.CompanyCode
   and d.CodeID = 'CITY'
   and d.LookUpValue = a.CityCode
  left join gnMstLookUpDtl e with(nolock, nowait)
    on e.CompanyCode = a.CompanyCode
   and e.CodeID = 'PFCN'
   and e.LookUpValue = b.ProfitCenterCode
 where b.IsBlackList = 0 
   and a.Status = 1
   and a.CategoryCode not in ('00', '01')
GO
CREATE FUNCTION [dbo].[fn_diagramobjects]() 
	RETURNS int
	WITH EXECUTE AS N'dbo'
	AS
	BEGIN
		declare @id_upgraddiagrams		int
		declare @id_sysdiagrams			int
		declare @id_helpdiagrams		int
		declare @id_helpdiagramdefinition	int
		declare @id_creatediagram	int
		declare @id_renamediagram	int
		declare @id_alterdiagram 	int 
		declare @id_dropdiagram		int
		declare @InstalledObjects	int

		select @InstalledObjects = 0

		select 	@id_upgraddiagrams = object_id(N'dbo.sp_upgraddiagrams'),
			@id_sysdiagrams = object_id(N'dbo.sysdiagrams'),
			@id_helpdiagrams = object_id(N'dbo.sp_helpdiagrams'),
			@id_helpdiagramdefinition = object_id(N'dbo.sp_helpdiagramdefinition'),
			@id_creatediagram = object_id(N'dbo.sp_creatediagram'),
			@id_renamediagram = object_id(N'dbo.sp_renamediagram'),
			@id_alterdiagram = object_id(N'dbo.sp_alterdiagram'), 
			@id_dropdiagram = object_id(N'dbo.sp_dropdiagram')

		if @id_upgraddiagrams is not null
			select @InstalledObjects = @InstalledObjects + 1
		if @id_sysdiagrams is not null
			select @InstalledObjects = @InstalledObjects + 2
		if @id_helpdiagrams is not null
			select @InstalledObjects = @InstalledObjects + 4
		if @id_helpdiagramdefinition is not null
			select @InstalledObjects = @InstalledObjects + 8
		if @id_creatediagram is not null
			select @InstalledObjects = @InstalledObjects + 16
		if @id_renamediagram is not null
			select @InstalledObjects = @InstalledObjects + 32
		if @id_alterdiagram  is not null
			select @InstalledObjects = @InstalledObjects + 64
		if @id_dropdiagram is not null
			select @InstalledObjects = @InstalledObjects + 128
		
		return @InstalledObjects 
	END
GO

if object_id('PmKdpClnUpView') is not null
	drop view PmKdpClnUpView
GO
CREATE view [dbo].[PmKdpClnUpView]
with schemabinding
as

select a.CompanyCode, a.BranchCode, a.InquiryNumber, convert(varchar, a.InquiryNumber, 100) InquiryNumberStr, InquiryDate, convert(varchar, a.InquiryDate, 103) InquiryDateStr, a.NamaProspek, 
a.TipeKendaraan, a.Variant, a.Transmisi, a.ColourCode, a.PerolehanData, c.EmployeeID, c.EmployeeID + ' - ' + c.EmployeeName Wiraniaga, 
d.EmployeeID SpvEmployeeID, d.EmployeeID + ' - ' + d.EmployeeName Coordinator, a.LastProgress, 
(select top 1 NextFollowUpDate from dbo.pmActivities where CompanyCode = a.CompanyCode and BranchCode = a.BranchCode and InquiryNumber = a.InquiryNumber order by NextFollowUpDate desc) NextFollowUpDate,
(select top 1 convert(varchar, NextFollowUpDate, 103) from dbo.pmActivities where CompanyCode = a.CompanyCode and BranchCode = a.BranchCode and InquiryNumber = a.InquiryNumber order by NextFollowUpDate desc) NextFollowUpDateStr
from dbo.pmKDP a
inner join dbo.gnMstEmployee c on
	a.CompanyCode = c.CompanyCode 
	and a.BranchCode = c.BranchCode
	and a.EmployeeID = c.EmployeeID
inner join dbo.gnMstEmployee d on
	a.CompanyCode = d.CompanyCode 
	and a.BranchCode = d.BranchCode
	and a.SpvEmployeeID = d.EmployeeID	
where a.LastProgress in ('P', 'HP', 'SPK')
GO


CREATE TRIGGER [dbo].[EmployeeDataInsTrig] ON gnMstEmployeeData

FOR INSERT AS
BEGIN
    DECLARE @Rows int, @TrgDate datetime, @ID01 varchar(40), @ID02 varchar(40)
    DECLARE @CompanyCode varchar(20)
    DECLARE @BranchCode  varchar(20)
    DECLARE @EmployeeID  varchar(20)

    SELECT @Rows = @@rowcount, @TrgDate = getdate(), @ID01 = newid(), @ID02 = newid()

    IF @Rows = 0 RETURN

    SELECT  @CompanyCode = (SELECT TOP 1 CompanyCode FROM inserted)
    SELECT  @BranchCode  = (SELECT TOP 1 BranchCode  FROM inserted)
    SELECT  @EmployeeID  = (SELECT TOP 1 EmployeeID  FROM inserted)
        
	-- EMPLOYEE JOIN
	IF EXISTS (SELECT 1 FROM inserted WHERE ISNULL(MutationFrom, '') = '' AND ISNULL(MutationTo, '') = '' AND EmpJoinDate is not null)
    BEGIN
		INSERT SfHistEmplMutation (MutationID, CompanyCode, BranchCode, DeptCode, PosCode, Grade, MutaType, MutaCode, MutaDate, EmployeeID, RelationID, CreatedBy, CreatedDate, IsTransfered, TransferedDate, TransferedID) 
		SELECT @ID01, i.CompanyCode, i.BranchCode, i.OrgCode, i.PosCode, i.GradeCode , 'IN', 'JOIN', i.EmpJoinDate, i.EmployeeID, null, 'TRIG_INS', @TrgDate, 0, null, null 
		  FROM inserted i
		 WHERE NOT EXISTS (
			SELECT 1 FROM SyncEmployee
			 WHERE CompanyCode = i.CompanyCode
			   AND EmployeeID = i.EmployeeID
			   AND IsDeleted != 1
		 )
    END

	-- EMPLOYEE MUTATION 
	IF EXISTS (
	   SELECT 1 FROM inserted i
	    WHERE ISNULL(i.MutationFrom, '') != ''
	      AND ISNULL(i.MutationTo, '') != ''
	      AND i.MutationDate is not null
	      AND i.InActiveDate is null
	      AND i.UpdatedBy != 'TRIGGER')
    BEGIN
		INSERT SfHistEmplMutation (MutationID, CompanyCode, BranchCode, DeptCode, PosCode, Grade, MutaType, MutaCode, MutaDate, EmployeeID, RelationID, CreatedBy, CreatedDate, IsTransfered, TransferedDate, TransferedID) 
		SELECT @ID01, CompanyCode, MutationFrom, OrgCode, PosCode, GradeCode , 'OUT', 'MUTATION (1)', MutationDate, EmployeeID, @ID02, 'TRIG_INS', @TrgDate, 0, null, null FROM inserted

		INSERT SfHistEmplMutation (MutationID, CompanyCode, BranchCode, DeptCode, PosCode, Grade, MutaType, MutaCode, MutaDate, EmployeeID, RelationID, CreatedBy, CreatedDate, IsTransfered, TransferedDate, TransferedID) 
		SELECT @ID02, CompanyCode, MutationTo, OrgCode, PosCode, GradeCode , 'IN', 'MUTATION (2)', MutationDate, EmployeeID, @ID01, 'TRIG_INS', @TrgDate, 0, null, null FROM inserted
				
		UPDATE gnMstEmployee
		   SET PersonnelStatus = '2'
		 WHERE CompanyCode = @CompanyCode
		   AND BranchCode != @BranchCode
		   AND EmployeeID = @EmployeeID
		
		UPDATE gnMstEmployeeData
		   SET MutationFrom = '', MutationTo = '', MutationDate = null, InactiveDate = @TrgDate, UpdatedBy = 'TRIGGER'
		 WHERE CompanyCode = @CompanyCode
		   AND BranchCode != @BranchCode
		   AND EmployeeID = @EmployeeID
    END
END
GO



CREATE TRIGGER [dbo].[EmployeeDataUpdTrig] ON gnMstEmployeeData

FOR UPDATE AS
BEGIN
    DECLARE @Rows int, @TrgDate datetime, @ID01 varchar(40), @ID02 varchar(40)
    SELECT  @Rows = @@rowcount, @TrgDate = getdate(), @ID01 = newid(), @ID02 = newid()
    IF @Rows = 0 RETURN
        
	-- PROMOTION
	IF UPDATE(PosCode)
	BEGIN
		INSERT SfHistEmplMutation (MutationID, CompanyCode, BranchCode, DeptCode, PosCode, Grade, MutaType, MutaCode, MutaDate, EmployeeID, RelationID, CreatedBy, CreatedDate, IsTransfered, TransferedDate, TransferedID) 
		SELECT @ID01, i.CompanyCode, i.BranchCode, i.OrgCode, d.PosCode, i.GradeCode , 'OUT', 'PROMOTION (1)', @TrgDate, i.EmployeeID, @ID02, i.UpdatedBy, @TrgDate, 0, null, null
		  FROM Inserted i, Deleted d
		 WHERE 1 = 1
		   AND ISNULL(i.MutationFrom, '') = ''
		   AND ISNULL(i.MutationTo, '') = ''
		   AND i.UpdatedBy != 'TRIGGER'

		INSERT SfHistEmplMutation (MutationID, CompanyCode, BranchCode, DeptCode, PosCode, Grade, MutaType, MutaCode, MutaDate, EmployeeID, RelationID, CreatedBy, CreatedDate, IsTransfered, TransferedDate, TransferedID) 
		SELECT @ID02, i.CompanyCode, i.BranchCode, i.OrgCode, i.PosCode, i.GradeCode , 'IN', 'PROMOTION (2)', @TrgDate, i.EmployeeID, @ID01, i.UpdatedBy, @TrgDate, 0, null, null
		  FROM Inserted i
		 WHERE 1 = 1
		   AND ISNULL(i.MutationFrom, '') = ''
		   AND ISNULL(i.MutationTo, '') = ''
		   AND i.UpdatedBy != 'TRIGGER'
	END
    
    -- MUTATION
    IF UPDATE(MutationFrom) OR UPDATE(MutationTo)
    BEGIN
        IF EXISTS(
			SELECT 1 FROM gnMstEmployee e, inserted i
			 WHERE e.CompanyCode = i.CompanyCode 
			   AND e.BranchCode = i.MutationFrom
			   AND e.EmployeeID = i.EmployeeID
			   AND e.PersonnelStatus != '1'
			 )
        BEGIN
            RAISERROR 30001 'Employee yang dimutasikan harus dalam kondisi aktif'
            ROLLBACK TRAN
        END
    
		-- MUTATION OUT
		INSERT SfHistEmplMutation (MutationID, CompanyCode, BranchCode, DeptCode, PosCode, Grade, MutaType, MutaCode, MutaDate, EmployeeID, RelationID, CreatedBy, CreatedDate, IsTransfered, TransferedDate, TransferedID) 
		SELECT @ID01, i.CompanyCode, i.MutationFrom, i.OrgCode, i.PosCode, i.GradeCode , 'OUT', 'MUTATION (1)', i.MutationDate, i.EmployeeID, @ID02, i.UpdatedBy, @TrgDate, 0, null, null
		  FROM Inserted i
	    WHERE 1 = 1
	      AND ISNULL(i.MutationFrom, '') != ''
	      AND ISNULL(i.MutationTo, '') != ''
	      AND i.UpdatedBy != 'TRIGGER'

		-- MUTATION IN
		INSERT SfHistEmplMutation (MutationID, CompanyCode, BranchCode, DeptCode, PosCode, Grade, MutaType, MutaCode, MutaDate, EmployeeID, RelationID, CreatedBy, CreatedDate, IsTransfered, TransferedDate, TransferedID) 
		SELECT @ID02, i.CompanyCode, i.MutationTo, i.OrgCode, i.PosCode, i.GradeCode , 'IN', 'MUTATION (2)', i.MutationDate, i.EmployeeID, @ID01, i.UpdatedBy, @TrgDate, 0, null, null
		  FROM Inserted i
	    WHERE 1 = 1
	      AND ISNULL(i.MutationFrom, '') != ''
	      AND ISNULL(i.MutationTo, '') != ''
	      AND i.UpdatedBy != 'TRIGGER'

		-- SET OLD BRANCH STATUS INACTIVE
		;WITH x AS (	      
		SELECT a.PersonnelStatus
		  FROM gnMstEmployee a, Inserted i
		 WHERE 1 = 1
		   AND a.CompanyCode = i.CompanyCode
		   AND a.BranchCode != i.BranchCode
		   AND a.EmployeeID = i.EmployeeID
		) UPDATE x SET PersonnelStatus = '2'

		-- SET OLD BRANCH STATUS INACTIVE
		;WITH x AS (	      
		SELECT a.InactiveDate, a.UpdatedBy
		  FROM gnMstEmployeeData a, Inserted i
		 WHERE 1 = 1
		   AND a.CompanyCode = i.CompanyCode
		   AND a.BranchCode != i.BranchCode
		   AND a.EmployeeID = i.EmployeeID
		) UPDATE x SET InactiveDate = @TrgDate, UpdatedBy = 'TRIGGER'

		-- CLEAR COLUMN
		;WITH x AS (	      
		SELECT a.MutationFrom, a.MutationTo, a.MutationDate, a.UpdatedBy
		  FROM gnMstEmployeeData a, Inserted i
		 WHERE 1 = 1
		   AND a.CompanyCode = i.CompanyCode
		   AND a.EmployeeID = i.EmployeeID
		) UPDATE x SET MutationFrom = '', MutationTo = '', MutationDate = null, UpdatedBy = 'TRIGGER'
    END
    
    -- RESIGN
    IF UPDATE(EmpResignDate)
    BEGIN
		-- INPUT RESIGN
		INSERT SfHistEmplMutation (MutationID, CompanyCode, BranchCode, DeptCode, PosCode, Grade, MutaType, MutaCode, MutaDate, EmployeeID, RelationID, CreatedBy, CreatedDate, IsTransfered, TransferedDate, TransferedID) 
		SELECT @ID01, i.CompanyCode, i.BranchCode, i.OrgCode, i.PosCode, i.GradeCode , 'OUT', 'RESIGN', i.EmpResignDate, i.EmployeeID, null, i.UpdatedBy, @TrgDate, 0, null, null 
		  FROM inserted i, deleted d
	     WHERE ISNULL(i.MutationFrom, '') = ''
	       AND ISNULL(i.MutationTo, '') = ''
		   AND i.CompanyCode = d.CompanyCode
		   AND i.BranchCode = d.BranchCode
		   AND i.EmployeeID = d.EmployeeID
	       AND i.EmpResignDate is not null
	       AND d.EmpResignDate is null
	       AND i.UpdatedBy != 'TRIGGER'

		;WITH x AS (	      
		SELECT a.EmployeeID, a.InActiveDate
		  FROM gnMstEmployeeData a, inserted i, deleted d
		 WHERE 1 = 1
		   AND a.CompanyCode = i.CompanyCode
		   AND a.BranchCode = i.BranchCode
		   AND a.EmployeeID = i.EmployeeID
		   AND i.CompanyCode = d.CompanyCode
		   AND i.BranchCode = d.BranchCode
		   AND i.EmployeeID = d.EmployeeID
		   AND i.EmpResignDate is not null
		   AND d.EmpResignDate is null
		) UPDATE x SET InActiveDate = @TrgDate

		-- CANCEL RESIGN
		;WITH x AS (	      
		SELECT a.EmployeeID, a.MutaType, a.MutaCode, a.MutaDate
		  FROM SfHistEmplMutation a, inserted i, deleted d
		 WHERE 1 = 1
		   AND a.CompanyCode = i.CompanyCode
		   AND a.BranchCode = i.BranchCode
		   AND a.EmployeeID = i.EmployeeID
		   AND a.MutaType = 'OUT'
		   AND a.MutaCode = 'RESIGN'
		   AND i.CompanyCode = d.CompanyCode
		   AND i.BranchCode = d.BranchCode
		   AND i.EmployeeID = d.EmployeeID
		   AND i.EmpResignDate is null
		   AND d.EmpResignDate is not null
		) UPDATE x SET MutaDate = '1/1/2100'
	      
    END
    
    -- CHANGE JOIN-DATE
	IF (UPDATE(EmpJoinDate))
    BEGIN
		-- UPDATE IF EXISTS
		;WITH X AS (		
		   SELECT a.EmployeeID, a.MutaDate, i.EmpJoinDate, a.CreatedBy, i.UpdatedBy, a.CreatedDate, i.UpdatedDate
		        , a.IsTransfered, a.TransferedDate, a.TransferedID
		     FROM SfHistEmplMutation a, inserted i
		    WHERE a.CompanyCode = i.CompanyCode
		      AND a.EmployeeID = i.EmployeeID
		      AND a.MutaType = 'IN'
		      AND a.MutaCode = 'JOIN'
		      )
		   UPDATE X SET MutaDate = EmpJoinDate, CreatedBy = UpdatedBy, CreatedDate = UpdatedDate, IsTransfered = 0, TransferedDate = null, TransferedID = null
    END

	-- INSERT JOIN IF NOT EXISTS
	INSERT SfHistEmplMutation (MutationID, CompanyCode, BranchCode, DeptCode, PosCode, Grade, MutaType, MutaCode, MutaDate, EmployeeID, RelationID, CreatedBy, CreatedDate, IsTransfered, TransferedDate, TransferedID)     
	SELECT newid(), i.CompanyCode, i.BranchCode, i.OrgCode, i.PosCode, i.GradeCode , 'IN', 'JOIN', i.EmpJoinDate, i.EmployeeID, null, i.UpdatedBy, @TrgDate, 0, null, null
	  FROM inserted i
	 WHERE 1 = 1
	   AND i.EmpJoinDate is not null
	   AND NOT EXISTS (
		SELECT 1 FROM SfHistEmplMutation
		 WHERE CompanyCode = i.CompanyCode
	       AND EmployeeID = i.EmployeeID
	       AND MutaType = 'IN'
	       AND MutaCode = 'JOIN')

	-- REFRESH SYNCEMPLOYEE - CHANGE SALESID
	IF EXISTS (
	   SELECT 1 FROM SyncEmployee e, inserted i
	    WHERE e.CompanyCode = i.CompanyCode
	      AND e.EmployeeID = i.EmployeeID
	      AND isnull(e.SalesID, '') = ''
	      AND isnull(i.SalesID, '') != '')
	BEGIN
		;WITH X AS (
		SELECT e.SyncID, e.SalesID, i.SalesID as SalesIDNew
			 , e.IsTransfered, e.TransferedID, e.TransferedDate
		  FROM SyncEmployee e, inserted i
		 WHERE e.CompanyCode = i.CompanyCode
		   AND e.EmployeeID = i.EmployeeID
		)
		UPDATE X SET 
			 SalesID = SalesIDNew,
			 IsTransfered = 0, 
			 TransferedID = null, 
			 TransferedDate = null
	END	      


	-- REFRESH SYNCEMPLOYEE
	IF EXISTS (
	   SELECT 1 FROM SyncEmployee e, inserted i
	    WHERE e.CompanyCode = i.CompanyCode
	      AND e.SalesID = i.SalesID)
	BEGIN
		;WITH X AS (
		SELECT e.SyncID, e.SalesID
			 , e.EmployeeID, i.EmployeeID EmployeeIDNew
			 , e.BranchCode, i.BranchCode BranchCodeNew
			 , e.DeptCode, i.OrgCode DeptCodeNew
			 , e.PosCode, i.PosCode PosCodeNew
			 , e.Grade, i.GradeCode GradeNew
			 , e.TeamLeaderID, i.TeamLeaderID TeamLeaderIDNew
			 , e.UpdatedBy, i.UpdatedBy UpdatedByNew
			 , e.UpdatedDate, i.UpdatedDate UpdatedDateNew
			 , e.IsTransfered, e.TransferedID, e.TransferedDate
		  FROM SyncEmployee e, inserted i
		 WHERE e.CompanyCode = i.CompanyCode
		   AND e.SalesID = i.SalesID
		   AND isnull(i.SalesID, '') != ''
		)
		UPDATE X SET 
			 EmployeeID = EmployeeIDNew,
			 BranchCode = BranchCodeNew,
			 DeptCode = DeptCodeNew,
			 PosCode = PosCodeNew,
			 Grade = GradeNew,
			 TeamLeaderID = TeamLeaderIDNew,
			 UpdatedBy = UpdatedByNew,
			 UpdatedDate = UpdatedDateNew,
			 IsTransfered = 0, 
			 TransferedID = null, 
			 TransferedDate = null
	END	      

    -- INSERT SyncEmployee IF NOT EXISTS
    INSERT INTO SyncEmployee (SyncID, SalesID, EmployeeID, EmployeeName, CompanyCode, BranchCode, DeptCode, PosCode, Grade, TeamLeaderID, IsDeleted, AdditionalData, CreatedBy, CreatedDate, UpdatedBy, UpdatedDate, IsTransfered, TransferedID, TransferedDate)
	SELECT newid() SyncID
	     , i.SalesID
		 , i.EmployeeID
		 , e.EmployeeName
		 , i.CompanyCode
		 , i.BranchCode
		 , i.OrgCode as DeptCode
		 , i.PosCode
		 , i.GradeCode as Grade
		 , i.TeamLeaderID
		 , 0 as IsDeleted
		 , '' as AdditionalData
		 , i.CreatedBy 
		 , i.CreatedDate
		 , i.UpdatedBy
		 , i.Updateddate
		 , 0 as IsTransfered
		 , null TransferedID
		 , null TransferedDate
	  FROM gnMstEmployee e, inserted i	
	 WHERE e.CompanyCode = i.CompanyCode
	   AND e.BranchCode = i.BranchCode
	   AND e.EmployeeID = i.EmployeeID
	   AND e.PersonnelStatus = 1
	   AND NOT EXISTS (
		SELECT 1 FROM SyncEmployee
		 WHERE CompanyCode = i.CompanyCode
	       AND EmployeeID = i.EmployeeID)
END
GO

CREATE trigger [dbo].[SyncEmployeeUpdTrig] ON SyncEmployee

for update as
begin
    declare @rows int

    select  @rows = @@rowcount
    if @rows = 0 return
	
	if(update(EmployeeID))
	begin
		;with x as (
		select e.MutationID, e.EmployeeID, i.EmployeeID EmployeeIDNew, e.IsTransfered, e.TransferedDate, e.TransferedID
		  from SfHistEmplMutation e, deleted d, inserted i
		 where e.CompanyCode = d.CompanyCode
		   and e.EmployeeID = d.EmployeeID
		   and d.CompanyCode = i.CompanyCode
		)
		update x set EmployeeID = EmployeeIDNew, IsTransfered = 0, TransferedDate = null, TransferedID = null
	end
end
GO
create TRIGGER [dbo].[EmployeeTrnInsTrg] ON [dbo].[SfEmployeeTraining]
AFTER INSERT AS
BEGIN
    DECLARE @Rows int
    SELECT @Rows = @@rowcount
    IF @Rows = 0 RETURN

    BEGIN
		insert into SyncEmployeeTrainingHist (SyncID, CompanyCode, BranchCode, DeptCode, PosCode, Grade, EmployeeID, EmployeeName, TrainingSeq, TrainingCode, TrainingDate, PreTest, PostTest, Qualitatif, CreatedBy, CreatedDate, UpdatedBy, UpdatedDate, IsDeleted, IsTransfered, TransferedDate, TransferedID)
		select newid() SyncID, a.CompanyCode, a.BranchCode
			 , b.OrgCode as DeptCode, b.PosCode, Grade = isnull((
				select top 1 
					y.GradeCode
				from 	
					gnMstEmployee x
				inner join 
					gnMstEmployeeData y	
				on
					x.CompanyCode = y.CompanyCode
					and
					x.BranchCode = y.BranchCode
					and
					x.EmployeeID = y.EmployeeID
				where
					x.CompanyCode = a.CompanyCode
					and
					x.BranchCode = a.BranchCode
					and
					x.EmployeeID = a.EmployeeID
					and
					x.PersonnelStatus = '1'
			 ), '1'), a.EmployeeID, c.EmployeeName
			 , a.TrnSeq as TrainingSeq, a.TrnCode as TrainingCode, a.TrnDate as TrainingDate
			 , a.PreTest, a.PostTest, a.Qualitatif, a.CreatedBy, getdate() as CreatedDate, a.UpdateBy, getdate() as UpdatedDate
			 , 0 as IsDeleted, 0 as IsTransfered, null as TransferedDate, null as TransferedID
		  from inserted a
		  left join gnMstEmployeeData b
			on b.CompanyCode = a.CompanyCode
		   and b.BranchCode = a.BranchCode
		   and b.EmployeeID = a.EmployeeID
		  left join gnMstEmployee c
		    on c.CompanyCode = a.CompanyCode
		   and c.BranchCode = a.BranchCode
		   and c.EmployeeID = a.EmployeeID
    END
END
GO
create TRIGGER [dbo].[EmployeeTrnUpdTrg] ON [dbo].[SfEmployeeTraining]
AFTER UPDATE AS
BEGIN
    DECLARE @Rows int;
    SELECT @Rows = @@rowcount;
    IF @Rows = 0 RETURN;
	
	with x as (
		select * from deleted
	)

	update SyncEmployeeTrainingHist
	set
		IsTransfered = '0',
		IsDeleted = '0',
		TrainingCode = (select x.TrnCode from inserted x),
		TrainingDate = (select x.TrnDate from inserted x),
		PreTest = (select x.PreTest from inserted x),
		PostTest = (select x.PostTest from inserted x),
		Qualitatif = (select x.Qualitatif from inserted x),
		UpdatedBy = (select x.UpdateBy from inserted x),
		UpdatedDate  = getdate()
	where
		CompanyCode = (select x.CompanyCode from x)
		and
		BranchCode = (select x.BranchCode from x)
		and
		EmployeeID = (select x.EmployeeID from x)
		and
		TrainingSeq = (select x.TrnSeq from x)
		and
		IsDeleted != '1'

	-- SYNC EMPLOYEE INIT
END
GO
CREATE TRIGGER [dbo].[EmployeeTrnDelTrg] ON [dbo].[SfEmployeeTraining]
FOR DELETE AS
BEGIN
    DECLARE @Rows int;
    SELECT @Rows = @@rowcount;
    IF @Rows = 0 RETURN;

	with x as (
		select * from deleted
	)

	update SyncEmployeeTrainingHist
	set
		IsTransfered = '0',
		IsDeleted = '1'
	where
		CompanyCode = (select x.CompanyCode from x)
		and
		BranchCode = (select x.BranchCode from x)
		and
		EmployeeID = (select x.EmployeeID from x)
		and
		TrainingCode = (select x.TrnCode from x)
		and
		TrainingDate = (select x.TrnDate from x)
		and
		IsDeleted != '1'
		
	-- SYNC EMPLOYEE INIT
END
GO

CREATE procedure [dbo].[sp_SpMstItemModifInfo]  (  @CompanyCode varchar(10))
 as

SELECT distinct
                     ItemInfo.PartNo
                    ,ItemInfo.ProductType
					   ,(SELECT LookupValueName 
                        FROM gnMstLookupDtl 
                       WHERE CodeID = 'PRDT' AND 
                             LookUpValue = ItemInfo.ProductType AND 
                             CompanyCode = @CompanyCode) AS ProductTypeName
                    ,(SELECT LookupValueName 
                        FROM gnMstLookupDtl 
                       WHERE CodeID = 'PRCT' AND 
                             LookUpValue = ItemInfo.PartCategory AND 
                             CompanyCode = @CompanyCode) AS CategoryName
                    ,ItemInfo.PartCategory
                    ,ItemInfo.PartName
                    ,CASE ItemInfo.IsGenuinePart WHEN 1 THEN 'Ya' ELSE 'Tidak' END AS IsGenuinePart
                    ,ItemInfo.OrderUnit
                    ,ItemInfo.SupplierCode
                    ,Supplier.SupplierName ,ItemInfo.CompanyCode 
                FROM SpMstItemInfo ItemInfo
                LEFT JOIN GnMstSupplier Supplier ON 
                    Supplier.CompanyCode  = ItemInfo.CompanyCode 
                AND Supplier.SupplierCode = ItemInfo.SupplierCode

				where  ItemInfo.CompanyCode= @CompanyCode
GO
CREATE procedure [dbo].[sp_spMstMovingCodeView]  (@CompanyCode varchar(15))
 as
SELECT MovingCode, MovingCodeName,
Formula = Cast(Param1 as varchar(10)) + Sign1 + Variable + Sign2 + Cast(Param2 as varchar(10)),
Param1, Sign1, Variable, Param2, Sign2,CompanyCode
FROM spMstMovingCode
where CompanyCode=@CompanyCode
GO
CREATE procedure [dbo].[sp_SpMstItemModifSelect]  (  @CompanyCode varchar(10),@PartNo varchar(50))
 as

SELECT 
                     ItemInfo.PartNo
                    ,ItemInfo.ProductType
					   ,(SELECT LookupValueName 
                        FROM gnMstLookupDtl 
                       WHERE CodeID = 'PRDT' AND 
                             LookUpValue = ItemInfo.ProductType AND 
                             CompanyCode = @CompanyCode) AS ProductTypeName
                    ,(SELECT LookupValueName 
                        FROM gnMstLookupDtl 
                       WHERE CodeID = 'PRCT' AND 
                             LookUpValue = ItemInfo.PartCategory AND 
                             CompanyCode = @CompanyCode) AS CategoryName
                    ,ItemInfo.PartCategory
                    ,ItemInfo.PartName
                    ,CASE ItemInfo.IsGenuinePart WHEN 1 THEN 'Ya' ELSE 'Tidak' END AS IsGenuinePart
                    ,ItemInfo.OrderUnit
                    ,ItemInfo.SupplierCode
                    ,Supplier.SupplierName ,ItemInfo.CompanyCode 
                FROM SpMstItemInfo ItemInfo
                LEFT JOIN GnMstSupplier Supplier ON 
                    Supplier.CompanyCode  = ItemInfo.CompanyCode 
                AND Supplier.SupplierCode = ItemInfo.SupplierCode

				where  ItemInfo.CompanyCode= @CompanyCode
				and ItemInfo.PartNo=@PartNo
GO
CREATE procedure [dbo].[sp_spMstOrderParamLookup] (  @CompanyCode varchar(10) ,@BranchCode varchar(10),@SupplierCode varchar(20))
 as   
		    SELECT distinct a.SupplierCode,b.SupplierName,
                        a.MovingCode,
						c.MovingCodeName,
                   a.LeadTime, 
                   a.OrderCycle, 
                  a.SafetyStock,
				    a.CompanyCode,
					a.BranchCode
            FROM spMstOrderParam a
			inner join gnMstSupplier b on  b.CompanyCode=a.CompanyCode AND
                      b.SupplierCode=a.SupplierCode
					  inner join SpMstMovingCode c on                      
					   c.CompanyCode=a.CompanyCode AND
                      c.MovingCode=a.MovingCode
 

            WHERE a.CompanyCode=@CompanyCode
            AND a.BranchCode=@BranchCode and a.SupplierCode=@SupplierCode
GO
CREATE procedure [dbo].[sp_spMstSalesCampaignView] (  @CompanyCode varchar(10) ,@BranchCode varchar(10))
 as
SELECT 
spMstSalesCampaign.PartNo, 
spMstItemInfo.PartName, 
spMstSalesCampaign.DiscPct, 
spMstSalesCampaign.BegDate,
spMstSalesCampaign.EndDate,
spMstSalesCampaign.SupplierCode, 
gnMstSupplier.SupplierName,
 spMstSalesCampaign.CompanyCode,
  spMstSalesCampaign.BranchCode
  FROM spMstSalesCampaign
  LEFT JOIN spMstItemInfo ON spMstItemInfo.PartNo = spMstSalesCampaign.PartNo AND spMstItemInfo.CompanyCode = spMstSalesCampaign.CompanyCode
  LEFT JOIN gnMstSupplier ON gnMstSupplier.SupplierCode = spMstItemInfo.SupplierCode AND gnMstSupplier.CompanyCode = spMstItemInfo.CompanyCode
  INNER JOIN spMstItems ON spMstItems.CompanyCode=spMstSalesCampaign.CompanyCode AND spMstItems.BranchCode=spMstSalesCampaign.BranchCode 
        AND spMstItems.PartNo=spMstSalesCampaign.PartNo
 
where  spMstSalesCampaign.CompanyCode=@CompanyCode and spMstSalesCampaign.BranchCode=@BranchCode
GO
CREATE procedure [dbo].[sp_spMstPurchCampaignView] (  @CompanyCode varchar(10) ,@BranchCode varchar(10))
 as
SELECT 
spMstPurchCampaign.PartNo, 
spMstItemInfo.PartName, 
spMstPurchCampaign.DiscPct, 
spMstPurchCampaign.BegDate,
spMstPurchCampaign.EndDate,
spMstPurchCampaign.SupplierCode, 
gnMstSupplier.SupplierName,
 spMstPurchCampaign.CompanyCode,
  spMstPurchCampaign.BranchCode
  FROM spMstPurchCampaign
  LEFT JOIN spMstItemInfo ON spMstItemInfo.PartNo = spMstPurchCampaign.PartNo AND	
        spMstItemInfo.CompanyCode = spMstPurchCampaign.CompanyCode
  LEFT JOIN gnMstSupplier ON gnMstSupplier.SupplierCode = spMstPurchCampaign.SupplierCode AND
        gnMstSupplier.CompanyCode = spMstPurchCampaign.CompanyCode
  INNER JOIN spMstItems ON spMstItems.CompanyCode=spMstPurchCampaign.CompanyCode AND 
	      spMstItems.BranchCode=spMstPurchCampaign.BranchCode AND 
				spMstItems.PartNo=spMstPurchCampaign.PartNo
where  spMstPurchCampaign.CompanyCode=@CompanyCode and spMstPurchCampaign.BranchCode=@BranchCode
GO
CREATE procedure [dbo].[sp_spMstOrderParamView] (  @CompanyCode varchar(10) ,@BranchCode varchar(10))
 as   
		    SELECT a.SupplierCode,b.SupplierName,
                        a.MovingCode,
						c.MovingCodeName,
                   a.LeadTime, 
                   a.OrderCycle, 
                  a.SafetyStock,
				    a.CompanyCode,
					a.BranchCode
            FROM spMstOrderParam a
			inner join gnMstSupplier b on  b.CompanyCode=a.CompanyCode AND
                      b.SupplierCode=a.SupplierCode
					  inner join SpMstMovingCode c on                      
					   c.CompanyCode=a.CompanyCode AND
                      c.MovingCode=a.MovingCode
 

            WHERE a.CompanyCode=@CompanyCode
            AND a.BranchCode=@BranchCode
GO
CREATE procedure [dbo].[sp_SpMstItemLocView] (  @CompanyCode varchar(10) ,@BranchCode varchar(10))
 as
SELECT 
	 ItemLoc.PartNo
	,ItemInfo.PartName
	,ItemInfo.SupplierCode
	,ItemLoc.WarehouseCode
	,ItemLoc.LocationCode
	,Items.PartCategory
	,Items.CompanyCode
	,Items.BranchCode   
	,Items.ProductType
	,Items.TypeOfGoods
FROM spMstItemLoc ItemLoc
INNER JOIN spMstItems Items 
    ON ItemLoc.CompanyCode=Items.CompanyCode
    AND ItemLoc.BranchCode=Items.BranchCode
    AND ItemLoc.PartNo=Items.PartNo
INNER JOIN spMstItemInfo ItemInfo 
    ON ItemLoc.CompanyCode=ItemInfo.CompanyCode
    AND ItemLoc.PartNo=ItemInfo.PartNo
WHERE
	ItemLoc.WarehouseCode NOT LIKE 'X%'


and Items.CompanyCode=@CompanyCode and Items.BranchCode=@BranchCode
GO
CREATE procedure [dbo].[sp_spMstAccountView] (  @CompanyCode varchar(10) ,@BranchCode varchar(10))
 as

 SELECT a.TypeOfGoods, 
                           b.LookUpValueName as NameOfGoods,  
                           a.SalesAccNo,  a.COGSAccNo,  a.InventoryAccNo,  a.DiscAccNo,  a.ReturnAccNo, 
                            a.ReturnPybAccNo,  a.OtherIncomeAccNo,  a.OtherReceivableAccNo,  a.InTransitAccNo, a.CompanyCode, a.BranchCode
                    FROM   spMstAccount a 
					inner join gnMstLookUpDtl b on b.LookUpValue=a.TypeOfGoods
                    WHERE  B.CodeID='TPGO' 

and a.CompanyCode=@CompanyCode and a.BranchCode=@BranchCode
GO
CREATE procedure [dbo].[uspfn_SvTrnServiceInsertDefaultTaskNew]
	@CompanyCode varchar(15),
	@BranchCode varchar(15),
	@ProductType varchar(15),
	@ServiceNo bigint,
	@ServiceBookNo varchar(15),
	@UserID varchar(15)
as      

--declare @CompanyCode varchar(15),
--		@BranchCode varchar(15),
--		@ProductType varchar(15),
--		@ServiceNo bigint,
--		@ServiceBookNo varchar(15)		

--set @CompanyCode = '6006406'
--set	@BranchCode = '6006401'
--set	@ProductType = '4W'
--set	@ServiceNo = '40655'
--set @ServiceBookNo = 'EJ06'

-- check jika count svTrnSrvTask ada maka tidak perlu insert task 
if(select count(*) from svTrnSrvTask
    where 1 = 1
      and CompanyCode = @CompanyCode
      and BranchCode  = @BranchCode
      and ProductType = @ProductType
      and ServiceNo   = @ServiceNo) > 0
	return

-- select data svTrnService
select * into #srv from (
  select a.* from svTrnService a
	where 1 = 1
	  and a.CompanyCode = @CompanyCode
	  and a.BranchCode  = @BranchCode
	  and a.ProductType = @ProductType
	  and a.ServiceNo   = @ServiceNo
)#srv

-----------------------------------------------
-- insert default svTrnSrvTask
-----------------------------------------------
select * into #task from(
select a.CompanyCode, a.ProductType, a.BasicModel, a.JobType, a.OperationNo, a.Description
	 , isnull(c.OperationHour, a.OperationHour) OperationHour
	 , isnull(c.ClaimHour, a.ClaimHour) ClaimHour
	 , isnull(c.LaborCost, a.LaborCost) LaborCost
	 , isnull(c.LaborPrice, a.LaborPrice) LaborPrice
	 , a.IsSubCon, a.IsCampaign, b.CreatedBy as LastupdateBy, getdate() as  LastupdateDate
	 , case when exists (
			select pkg.CompanyCode, pkg.PackageCode, pkg.JobType
			  from svMstPackage pkg
			 inner join svMstPackageTask tsk
				on tsk.CompanyCode = pkg.CompanyCode
			   and tsk.PackageCode = pkg.PackageCode
			 inner join svMstPackageContract con
				on con.CompanyCode = pkg.CompanyCode
			   and con.PackageCode = pkg.PackageCode
			 where pkg.CompanyCode = b.CompanyCode
			   and pkg.JobType = b.JobType
			   and tsk.OperationNo = a.OperationNo
			   and con.ChassisCode = b.ChassisCode
			   and con.ChassisNo = b.ChassisNo
		) then 'P' else (case when isnull(a.BillType, '') = '' then 'C' else a.BillType end)
		  end as BillType
  from svMstTask a
 inner join #srv b
    on b.CompanyCode = a.CompanyCode
   and b.ProductType = a.ProductType
   and b.BasicModel  = a.BasicModel
   and b.JobType     = a.JobType
  left join svMstTaskPrice c
	on c.CompanyCode = a.CompanyCode
   and c.BranchCode  = b.BranchCode
   and c.ProductType = a.ProductType
   and c.BasicModel  = a.BasicModel
   and c.JobType     = a.JobType
   and c.OperationNo = a.OperationNo
 where 1 = 1
)#task

-- jika svMstTask tidak tepat 1 record, return
if (select count(*) from #task) <> 1 return

select * into #job from(
select a.* from svMstJob a, #task b
 where 1 = 1
   and a.CompanyCode = b.CompanyCode
   and a.ProductType = b.ProductType
   and a.BasicModel  = b.BasicModel
   and a.JobType     = b.JobType
)#job

-- jika svMstJob tidak tepat 1 record, return
if (select count(*) from #job) <> 1 return

-- prepare data svTrnSrvTask yg akan di Insert
declare @JobType varchar(15) set @JobType = (select JobType from #job)

if (left(@JobType,3) = 'FSC' or left(@JobType,3) = 'PDI')
begin
	insert into svTrnSrvTask (CompanyCode, BranchCode, ProductType, ServiceNo, OperationNo, OperationHour, OperationCost, IsSubCon, SubConPrice, PONo, ClaimHour, TypeOfGoods, BillType, SharingTask, TaskStatus, StartService, FinishService, CreatedBy, CreatedDate, LastupdateBy, LastupdateDate, DiscPct)
	select
		 @CompanyCode CompanyCode
		,@BranchCode BranchCode
		,@ProductType ProductType
		,@ServiceNo ServiceNo
		,a.OperationNo
		,a.OperationHour
		,OperationCost = isnull((select top 1 a.RegularLaborAmount
						   from svMstPdiFscRate a, #srv b, #task c, #job d 
						  where 1 = 1
						    and a.CompanyCode = b.CompanyCode
						    and a.ProductType = b.ProductType
						    and a.BasicModel = b.BasicModel
						    and a.IsCampaign = c.IsCampaign
						    and a.TransmissionType = a.TransmissionType
						    and a.PdiFscSeq = d.PdiFscSeq
						    and a.EffectiveDate <= getdate()
						    and a.IsActive = 1
						 order by a.EffectiveDate desc),0)
		,IsSubCon
		,a.LaborCost SubConPrice
		,'' PONo
		,ClaimHour
		,'L' TypeOfGoods
	    , case when isnull(a.BillType, '') = '' then 'C' else a.BillType end as BillType
		,'0' SharingTask
		,'0' TaskStatus
		,null StartService
		,null FinishService
		,b.LastupdateBy CreatedBy
		,b.LastupdateDate CreatedDate
		,b.LastupdateBy
		,b.LastupdateDate
		,isnull((
			select cus.LaborDiscPct
			  from svMstBillingType bil
			 inner join gnMstCustomerProfitCenter cus
				on cus.CompanyCode = bil.CompanyCode
			   and cus.CustomerCode = bil.CustomerCode 
			 where 1 = 1
			   and bil.CompanyCode = @CompanyCode
			   and cus.BranchCode = @BranchCode
			   and cus.ProfitCenterCode = '200'
			   and bil.BillType = 'F'
			), b.LaborDiscPct) as LaborDiscPct
	from #task a, #srv b
end
else if @JobType = 'CLAIM'
begin
	insert into svTrnSrvTask (CompanyCode, BranchCode, ProductType, ServiceNo, OperationNo, OperationHour, OperationCost, IsSubCon, SubConPrice, PONo, ClaimHour, TypeOfGoods, BillType, SharingTask, TaskStatus, StartService, FinishService, CreatedBy, CreatedDate, LastupdateBy, LastupdateDate, DiscPct)
	select
		 @CompanyCode CompanyCode
		,@BranchCode BranchCode
		,@ProductType ProductType
		,@ServiceNo ServiceNo
		,a.OperationNo
		,a.ClaimHour OperationHour
		,a.LaborPrice OperationCost
		,a.IsSubCon
		,a.LaborCost SubConPrice
		,'' PONo
		,a.ClaimHour
		,'L' TypeOfGoods
		,'W' BillType
		,'0' SharingTask
		,'0' TaskStatus
		,null StartService
		,null FinishService
		,b.LastupdateBy CreatedBy
		,b.LastupdateDate CreatedDate
		,b.LastupdateBy
		,b.LastupdateDate
		,b.LaborDiscPct
	from #task a, #srv b
end
else if @JobType = 'REWORK'
begin
	insert into svTrnSrvTask (CompanyCode, BranchCode, ProductType, ServiceNo, OperationNo, OperationHour, OperationCost, IsSubCon, SubConPrice, PONo, ClaimHour, TypeOfGoods, BillType, SharingTask, TaskStatus, StartService, FinishService, CreatedBy, CreatedDate, LastupdateBy, LastupdateDate, DiscPct)
	select
		 @CompanyCode CompanyCode
		,@BranchCode BranchCode
		,@ProductType ProductType
		,@ServiceNo ServiceNo
		,a.OperationNo
		,a.OperationHour
		,a.LaborPrice OperationCost
		,a.IsSubCon
		,a.LaborCost SubConPrice
		,'' PONo
		,ClaimHour
		,'L' TypeOfGoods
		,'I' BillType
		,'0' SharingTask
		,'0' TaskStatus
		,null StartService
		,null FinishService
		,b.LastupdateBy CreatedBy
		,b.LastupdateDate CreatedDate
		,b.LastupdateBy
		,b.LastupdateDate
		,b.LaborDiscPct
	from #task a, #srv b
end
else
begin
	insert into svTrnSrvTask (CompanyCode, BranchCode, ProductType, ServiceNo, OperationNo, OperationHour, OperationCost, IsSubCon, SubConPrice, PONo, ClaimHour, TypeOfGoods, BillType, SharingTask, TaskStatus, StartService, FinishService, CreatedBy, CreatedDate, LastupdateBy, LastupdateDate, DiscPct)
	select
		 @CompanyCode CompanyCode
		,@BranchCode BranchCode
		,@ProductType ProductType
		,@ServiceNo ServiceNo
		,a.OperationNo
		,a.OperationHour
		,a.LaborPrice OperationCost
		,IsSubCon
		,a.LaborCost SubConPrice
		,'' PONo
		,ClaimHour
		,'L' TypeOfGoods
		, case when isnull(a.BillType, '') = '' then 'C' else a.BillType end as BillType
		,'0' SharingTask
		,'0' TaskStatus
		,null StartService
		,null FinishService
		,b.LastupdateBy CreatedBy
		,b.LastupdateDate CreatedDate
		,b.LastupdateBy
		,b.LastupdateDate
		,isnull((
			select top 1 tsk.DiscPct
			  from svMstPackage pkg
			 inner join svMstPackageTask tsk
				on tsk.CompanyCode = pkg.CompanyCode
			   and tsk.PackageCode = pkg.PackageCode
			 inner join svMstPackageContract con
				on con.CompanyCode = pkg.CompanyCode
			   and con.PackageCode = pkg.PackageCode
			 where pkg.CompanyCode = b.CompanyCode
			   and pkg.JobType = b.JobType
			   and tsk.OperationNo = a.OperationNo
			   and con.ChassisCode = b.ChassisCode
			   and con.ChassisNo = b.ChassisNo
			), b.LaborDiscPct) LaborDiscPct
		
	from #task a, #srv b
end
-----------------------------------------------
-- insert default svTrnSrvItem
-----------------------------------------------
select * into #part from(
select a.* from svMstTaskPart a, #task b
 where 1 = 1
   and a.CompanyCode = b.CompanyCode
   and a.ProductType = b.ProductType
   and a.BasicModel  = b.BasicModel
   and a.JobType     = b.JobType
   and a.OperationNo = b.OperationNo
)#part

insert into svTrnSrvItem (CompanyCode, BranchCode, ProductType, ServiceNo, PartNo, PartSeq, DemandQty, SupplyQty, ReturnQty, CostPrice, RetailPrice, TypeOfGoods, BillType, SupplySlipNo, SupplySlipDate, SSReturnNo, SSReturnDate, CreatedBy, CreatedDate, LastupdateBy, LastupdateDate, DiscPct)
select 
	 @CompanyCode CompanyCode
	,@BranchCode BranchCode
	,@ProductType ProductType
	,@ServiceNo ServiceNo
	,a.PartNo
	,(row_number() over (order by a.PartNo)) PartSeq
	,a.Quantity DemandQty
	,'0' SupplyQty
	,'0' ReturnQty
	,c.CostPrice
	,case rtrim(a.BillType) when 'F' then a.RetailPrice else c.RetailPrice end RetailPrice
	,d.TypeOfGoods
	,case when exists (
			select pkg.CompanyCode, pkg.PackageCode, pkg.JobType
			  from svMstPackage pkg
			 inner join svMstPackagePart prt
				on prt.CompanyCode = pkg.CompanyCode
			   and prt.PackageCode = pkg.PackageCode
			 inner join svMstPackageContract con
				on con.CompanyCode = pkg.CompanyCode
			   and con.PackageCode = pkg.PackageCode
			 inner join #srv srv
				on srv.CompanyCode = con.CompanyCode
			   and srv.ChassisCode = con.ChassisCode
			   and srv.ChassisNo = con.ChassisNo
			 where pkg.CompanyCode = b.CompanyCode
			   and pkg.JobType = b.JobType
			   and prt.PartNo = a.PartNo
		) then 'P' else 
		(case when isnull(a.BillType, '') = '' then 'C' else 
			(case when substring(@ServiceBookNo, 1, 2) >= 'EJ' and f.PartName like '%OIL FILTER%' and (select PdiFscSeq from #job) = 1 then 'C' else 		
			
				(case when substring(@ServiceBookNo, 1, 2) >= 'EJ' and f.PartName like '%ENGINE%' and (select PdiFscSeq from #job) = 3 then 'C' else 		
				a.BillType 
				end)
			
			end)		
		end)
		  end as BillType
	,null SupplySlipNo
	,null SupplySlipDate
	,null SSReturnNo
	,null SSReturnDate
	,b.LastupdateBy CreatedBy
	,b.LastupdateDate CreatedDate
	,b.LastupdateBy
	,b.LastupdateDate
	,isnull((
		select top 1 prt.DiscPct
		  from svMstPackage pkg
		 inner join svMstPackagePart prt
			on prt.CompanyCode = pkg.CompanyCode
		   and prt.PackageCode = pkg.PackageCode
		 inner join svMstPackageContract con
			on con.CompanyCode = pkg.CompanyCode
		   and con.PackageCode = pkg.PackageCode
		 inner join #srv srv
			on srv.CompanyCode = con.CompanyCode
		   and srv.ChassisCode = con.ChassisCode
		   and srv.ChassisNo = con.ChassisNo
		 where pkg.CompanyCode = b.CompanyCode
		   and pkg.JobType = b.JobType
		   and prt.PartNo = a.PartNo
		), 
		(case when rtrim(a.BillType) = 'F' and rtrim(e.ParaValue) = 'SPAREPART' then 0
		      when rtrim(a.BillType) = 'F' then 0
		      when rtrim(e.ParaValue) = 'SPAREPART' then (select top 1 PartDiscPct from #srv) 
			  else (select top 1 MaterialDiscPct from #srv) end)
		) as DiscPct
  from #part a
  left join #task b
    on b.CompanyCode = a.CompanyCode
   and b.ProductType = a.ProductType
   and b.BasicModel  = a.BasicModel
   and b.JobType     = a.JobType
   and b.OperationNo = a.OperationNo
  left join spMstItemPrice c
    on c.CompanyCode = a.CompanyCode
   and c.BranchCode  = @BranchCode
   and c.PartNo      = a.PartNo
  left join spMstItems d
    on d.CompanyCode = a.CompanyCode
   and d.BranchCode  = @BranchCode
   and d.PartNo      = a.PartNo
  left join gnMstLookupDtl e
    on e.CompanyCode = d.CompanyCode
   and e.CodeID = 'GTGO'
   and e.LookupValue = d.TypeOfGoods
   left join spMstItemInfo f
	on f.CompanyCode = a.CompanyCode
	and f.PartNo = a.PartNo
 where 1 = 1
   and b.CompanyCode = a.CompanyCode
   and b.ProductType = a.ProductType
   and b.BasicModel  = a.BasicModel
   and b.JobType     = a.JobType
   and b.OperationNo = a.OperationNo
exec uspfn_SvInsertDefaultTaskMovement @CompanyCode, @BranchCode, @ProductType, @ServiceNo, @UserID

drop table #srv
drop table #task
drop table #part
drop table #job
GO


CREATE procedure [dbo].[sp_spmasterpartview] (  @CompanyCode varchar(10) ,@BranchCode varchar(10))
 as

 select a.CompanyCode,ItemPrice.BranchCode,a.PartNo,a.PartName,a.SupplierCode,gnMstSupplier.SupplierName,
a.IsGenuinePart,a.ProductType,a.PartCategory ,u.LookUpValueName as CategoryName
,a.OrderUnit as 'FromQty'
,ItemPrice.PurchasePrice
,ItemPrice.RetailPriceInclTax
 ,ItemPrice.CostPrice
 ,ItemPrice.RetailPrice
 ,ItemPrice.LastPurchaseUpdate
 ,ItemPrice.LastRetailPriceUpdate
,ItemPrice.OldCostPrice
,ItemPrice.OldPurchasePrice
,ItemPrice.OldRetailPrice

from SpMstItemInfo a 
inner join  gnMstLookUpDtl u on (a.PartCategory =u.ParaValue)
left join  spMstItemPrice ItemPrice       ON ItemPrice.CompanyCode=a.CompanyCode 
    AND ItemPrice.PartNo=a.PartNo 
	 LEFT JOIN gnMstSupplier ON gnMstSupplier.SupplierCode = a.SupplierCode AND
        gnMstSupplier.CompanyCode = a.CompanyCode
WHERE  u.CodeID='PRCT'  and a.Status > 0  

and a.CompanyCode=@CompanyCode and ItemPrice.BranchCode=@BranchCode
GO
CREATE procedure [dbo].[sp_SpMstItemConversionview]    (  @CompanyCode varchar(10)  )
as
select   a.CompanyCode,a.PartNo,a.ProductType, b.PartName, FromQty, ToQty ,IsActive
from SpMstItemConversion a
left join spMstItemInfo b on
    a.CompanyCode = b.CompanyCode
    and a.ProductType = b.ProductType
    and a.PartNo = b.PartNo
 where   a.CompanyCode=@CompanyCode
GO
CREATE procedure [dbo].[sp_SpMstItemLocItemLookupView] (  @CompanyCode varchar(10) ,@BranchCode varchar(10))
 as
SELECT 
	ItemInfo.PartNo,
	Items.ABCClass,
	ItemLoc.OnHand - itemLoc.ReservedSP - itemLoc.ReservedSR - itemLoc.ReservedSL - itemLoc.AllocationSP - itemLoc.AllocationSL - itemLoc.AllocationSR AS AvailQty,
	Items.OnOrder,
	Items.ReservedSP,
	Items.ReservedSR,
	Items.ReservedSL,
	Items.MovingCode,
	ItemInfo.SupplierCode,
	ItemInfo.PartName,
	ItemPrice.RetailPrice,
	ItemPrice.RetailPriceInclTax,
	ItemPrice.PurchasePrice
	,Items.CompanyCode
	,Items.BranchCode   
	,Items.ProductType
	,Items.TypeOfGoods
FROM SpMstItems Items
INNER JOIN SpMstItemInfo ItemInfo ON Items.CompanyCode  = ItemInfo.CompanyCode                          
                         AND Items.PartNo = ItemInfo.PartNo
INNER JOIN spMstItemPrice ItemPrice ON Items.CompanyCode = ItemPrice.CompanyCode
                        AND Items.BranchCode = ItemPrice.BranchCode AND Items.PartNo = ItemPrice.PartNo
INNER JOIN spMstItemLoc ItemLoc ON Items.CompanyCode = ItemLoc.CompanyCode AND Items.BranchCode = ItemLoc.BranchCode
                        AND Items.PartNo = ItemLoc.PartNo
WHERE Items.Status > 0
  AND ItemLoc.WarehouseCode = '00'

and Items.CompanyCode=@CompanyCode and Items.BranchCode=@BranchCode
GO
CREATE procedure [dbo].[sp_spMstCompanyAccount]  (  @CompanyCode varchar(10)  )
as
select 
CompanyCode,
CompanyCodeTo,
CompanyCodeToDesc,
BranchCodeTo,
BranchCodeToDesc,
WarehouseCodeTo,
WarehouseCodeToDesc,
UrlAddress,
isActive
from spMstCompanyAccount
where CompanyCode= @CompanyCode
GO
CREATE procedure [dbo].[sp_SpMstItemcondition] (  @CompanyCode varchar(10) )  
	 as
                SELECT 
                    a.PartNo, a.NewPartNo, a.InterchangeCode, a.ProductType, a.PartCategory, a.UnitConversion,EndMark , a.CompanyCode
                FROM 
                    spMstItemMod a 
                WHERE a.CompanyCode=@CompanyCode
                    ORDER BY a.PartNo, a.NewPartNo
GO
CREATE procedure [dbo].[uspfn_syscreatepermission] 
@roleid varchar(50)
AS
BEGIN
	insert into SysRoleMenuAccess(roleid,menuid)
	select  @roleid,menuid from VW_TREEMENUS a
	WHERE NOT EXISTS 
    (SELECT 0
     FROM SysRoleMenuAccess WITH (UPDLOCK, HOLDLOCK)
     WHERE RoleId=@roleid and MenuId=a.MenuId) 
END
GO
CREATE PROCEDURE [dbo].[sp_dropdiagram]
	(
		@diagramname 	sysname,
		@owner_id	int	= null
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
		declare @theId 			int
		declare @IsDbo 			int
		
		declare @UIDFound 		int
		declare @DiagId			int
	
		if(@diagramname is null)
		begin
			RAISERROR ('Invalid value', 16, 1);
			return -1
		end
	
		EXECUTE AS CALLER;
		select @theId = DATABASE_PRINCIPAL_ID();
		select @IsDbo = IS_MEMBER(N'db_owner'); 
		if(@owner_id is null)
			select @owner_id = @theId;
		REVERT; 
		
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname 
		if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)
			return -3
		end
	
		delete from dbo.sysdiagrams where diagram_id = @DiagId;
	
		return 0;
	END
GO
EXEC sys.sp_addextendedproperty @name=N'microsoft_database_tools_support', @value=N'1' ,@level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'sp_dropdiagram'
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryTransferInDetail] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @TransferInNo varchar(15)
)
AS
BEGIN

SELECT a.SalesModelCode,Convert(varchar,a.SalesModelYear) as SalesModelYear,b.SalesModelDesc,
a.ChassisCode,Convert(varchar,a.ChassisNo) as ChassisNo,a.EngineCode,Convert(varchar,a.EngineNo) as EngineNo,a.ColourCode,
c.RefferenceDesc1 as ColourName,a.Remark
FROM OmTrInventTransferInDetail a
LEFT JOIN omMstModel b
ON a.CompanyCode = b.CompanyCode
AND a.SalesModelCode = b.SalesModelCode
LEFT JOIN omMstRefference c
ON a.CompanyCode = c.CompanyCode
AND a.ColourCode = c.RefferenceCode
WHERE c.RefferenceType = 'COLO'
AND a.CompanyCode = @p_CompanyCode
AND a.BranchCode = @p_BranchCode
AND a.TransferInNo = @TransferInNo
ORDER BY a.SalesModelCode,a.SalesModelYear,a.ChassisNo ASC

END
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryTransferOut] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @TransferOutDateFrom DateTime,
 @TransferOutDateTo DateTime,
 @NoTransferOutFrom varchar(100),
 @NoTransferOutTo varchar(100),
 @GudangAsalAwal varchar(100),
 @GudangAsalAkhir varchar(100),
 @CabangTujuanAwal varchar(100),
 @CabangTujuanAkhir varchar(100),
 @GudangTujuanAwal varchar(100),
 @GudangTujuanAkhir varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT 
	a.TransferOutNo, convert(varchar(20),a.TransferOutDate,106) as TransferOutDate,
	a.ReferenceNo, case when year(a.ReferenceDate) = ''1900'' then '''' else convert(varchar(20),a.ReferenceDate,106) end as ReferenceDate,
	c.BranchName as BranchNameFrom, 
	(select b.RefferenceDesc1  from OmTrInventTransferOut x 
	INNER JOIN omMstRefference b 
	ON x.CompanyCode = b.CompanyCode 
	AND x.BranchCode = a.BranchCode
	AND x.WareHouseCodeFrom = b.RefferenceCode 
	AND x.TransferOutNo= a.TransferOutNo)as WareHouseNameFrom,
	d.BranchName as BranchNameTo, 
	(select b.RefferenceDesc1  from OmTrInventTransferOut x 
	INNER JOIN omMstRefference b 
	ON x.CompanyCode = b.CompanyCode 
	AND x.BranchCode = a.BranchCode
	AND x.WareHouseCodeTo = b.RefferenceCode 
	AND x.TransferOutNo= a.TransferOutNo)as WareHouseNameTo,
	case when year(a.ReturnDate) = ''1900'' then '''' else convert(varchar(20),a.ReturnDate,106) end as ReturnDate,
	a.Remark, CASE WHEN a.Status = 0 THEN ''Open'' WHEN a.Status = 1 THEN ''Printed''
	WHEN a.Status = 2 THEN ''Closed'' WHEN a.Status = 3 THEN ''Canceled'' END AS Status
FROM 
	OmTrInventTransferOut a 
	INNER JOIN gnMstOrganizationDtl c 
	ON a.CompanyCode = c.CompanyCode 
	AND a.BranchCodeFrom = c.BranchCode
	INNER JOIN gnMstOrganizationDtl d 
	ON a.CompanyCode = d.CompanyCode 
	AND a.BranchCodeTo = d.BranchCode
WHERE 1 = 1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if year(@TransferOutDateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.TransferOutDate between ''' + convert(varchar(50),@TransferOutDateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@TransferOutDateTo) + ''''

if len(rtrim(@NoTransferOutFrom)) > 0
   set @pQuery = @pQuery + ' and a.TransferOutNo between ''' + rtrim(@NoTransferOutFrom) + '''' + ' and ' + '''' + rtrim(@NoTransferOutTo) + ''''

if len(rtrim(@GudangAsalAwal)) > 0
   set @pQuery = @pQuery + ' and a.WareHouseCodeFrom between ''' + rtrim(@GudangAsalAwal) + '''' + ' and ' + '''' + rtrim(@GudangAsalAkhir) + ''''

if len(rtrim(@CabangTujuanAwal)) > 0
   set @pQuery = @pQuery + ' and a.BranchCodeTo between ''' + rtrim(@CabangTujuanAwal) + '''' + ' and ' + '''' + rtrim(@CabangTujuanAkhir) + ''''

if len(rtrim(@GudangTujuanAwal)) > 0
   set @pQuery = @pQuery + ' and a.WareHouseCodeTo between ''' + rtrim(@GudangTujuanAwal) + '''' + ' and ' + '''' + rtrim(@GudangTujuanAkhir) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' + ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.TransferOutNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryTransferIn] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @TransferInDateFrom DateTime,
 @TransferInDateTo DateTime,
 @NoTransferInFrom varchar(100),
 @NoTransferInTo varchar(100),
 @NoTransferOutFrom varchar(100),
 @NoTransferOutTo varchar(100),
 @GudangTujuanAwal varchar(100),
 @GudangTujuanAkhir varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'


SELECT 
	a.TransferInNo, 
	convert(varchar(20),a.TransferInDate,106) as TransferInDate,
	a.TransferOutNo, a.ReferenceNo, 
	case when year(a.ReferenceDate) = ''1900'' then '''' else convert(varchar(20),a.ReferenceDate,106) end as ReferenceDate, 
	c.BranchName as BranchNameFrom, 
	(select b.RefferenceDesc1  from OmTrInventTransferIn x INNER JOIN omMstRefference b 
	ON x.CompanyCode = b.CompanyCode AND x.BranchCode = a.BranchCode
	AND x.WareHouseCodeFrom = b.RefferenceCode AND x.TransferInNo= a.TransferInNo)as WareHouseNameFrom , 
	d.BranchName as BranchNameTo, 
	(select b.RefferenceDesc1  from OmTrInventTransferIn x INNER JOIN omMstRefference b 
	ON x.CompanyCode = b.CompanyCode AND x.BranchCode = a.BranchCode
	AND x.WareHouseCodeTo = b.RefferenceCode AND x.TransferInNo= a.TransferInNo)as WareHouseNameTo, 
	case when year(a.ReturnDate) = ''1900'' then '''' else convert(varchar(20),a.ReturnDate,106) end as ReturnDate, 
	a.Remark, CASE WHEN a.Status = 0 THEN ''Open'' WHEN a.Status = 1 THEN ''Printed''
	WHEN a.Status = 2 THEN ''Closed'' WHEN a.Status = 3 THEN ''Canceled'' END AS Status
FROM 
	OmTrInventTransferIn a 
INNER JOIN 
	gnMstOrganizationDtl c 
	ON a.CompanyCode = c.CompanyCode
	AND a.BranchCodeFrom = c.BranchCode
INNER JOIN 
	gnMstOrganizationDtl d 
	ON a.CompanyCode = d.CompanyCode
	AND a.BranchCodeTo = d.BranchCode
WHERE 1 = 1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if year(@TransferInDateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.TransferInDate between ''' + convert(varchar(50),@TransferInDateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@TransferInDateTo) + ''''

if len(rtrim(@NoTransferOutFrom)) > 0
   set @pQuery = @pQuery + ' and a.TransferOutNo between ''' + rtrim(@NoTransferOutFrom) + '''' + ' and ' + '''' + rtrim(@NoTransferOutTo) + ''''

if len(rtrim(@NoTransferInFrom)) > 0
   set @pQuery = @pQuery + ' and a.TransferInNo between ''' + rtrim(@NoTransferInFrom) + '''' + ' and ' + '''' + rtrim(@NoTransferInTo) + ''''

if len(rtrim(@GudangTujuanAwal)) > 0
   set @pQuery = @pQuery + ' and a.WareHouseCodeTo between ''' + rtrim(@GudangTujuanAwal) + '''' + ' and ' + '''' + rtrim(@GudangTujuanAkhir) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' + ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.TransferInNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
CREATE PROCEDURE [dbo].[sp_renamediagram]
	(
		@diagramname 		sysname,
		@owner_id		int	= null,
		@new_diagramname	sysname
	
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
		declare @theId 			int
		declare @IsDbo 			int
		
		declare @UIDFound 		int
		declare @DiagId			int
		declare @DiagIdTarg		int
		declare @u_name			sysname
		if((@diagramname is null) or (@new_diagramname is null))
		begin
			RAISERROR ('Invalid value', 16, 1);
			return -1
		end
	
		EXECUTE AS CALLER;
		select @theId = DATABASE_PRINCIPAL_ID();
		select @IsDbo = IS_MEMBER(N'db_owner'); 
		if(@owner_id is null)
			select @owner_id = @theId;
		REVERT;
	
		select @u_name = USER_NAME(@owner_id)
	
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname 
		if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)
			return -3
		end
	
		-- if((@u_name is not null) and (@new_diagramname = @diagramname))	-- nothing will change
		--	return 0;
	
		if(@u_name is null)
			select @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @new_diagramname
		else
			select @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @owner_id and name = @new_diagramname
	
		if((@DiagIdTarg is not null) and  @DiagId <> @DiagIdTarg)
		begin
			RAISERROR ('The name is already used.', 16, 1);
			return -2
		end		
	
		if(@u_name is null)
			update dbo.sysdiagrams set [name] = @new_diagramname, principal_id = @theId where diagram_id = @DiagId
		else
			update dbo.sysdiagrams set [name] = @new_diagramname where diagram_id = @DiagId
		return 0
	END
GO
EXEC sys.sp_addextendedproperty @name=N'microsoft_database_tools_support', @value=N'1' ,@level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'sp_renamediagram'
GO


CREATE procedure [dbo].[sp_spMstSalesTargetview] (  @CompanyCode varchar(10) ,@BranchCode varchar(10))
 as
SELECT  CompanyCode,BranchCode,  [Year]  , 
                               [Month]  , QtyTarget, AmountTarget, TotalJaringan 
                                FROM spMstSalesTarget
WHERE  CompanyCode=@CompanyCode and  BranchCode=@BranchCode
GO
--declare @CompanyCode varchar(20)
--declare @BranchCode varchar(20)
--
--set @CompanyCode = '6159401'
--set @BranchCode = '615940100'
--uspfn_GlTbCorrection '6159401', '615940100'

CREATE procedure [dbo].[uspfn_GlTbCorrection]
	@CompanyCode varchar(20),
	@BranchCode varchar(20)
as

declare @FiscalYearPrev int
declare @FiscalYearCurr int
declare @PeriodeNumPrev int
declare @PeriodeNumCurr int

set @FiscalYearPrev = '2010'
set @FiscalYearCurr = '2011'
set @PeriodeNumPrev = '13'
set @PeriodeNumCurr = '01'

begin

---------------------------------------------------------------------------------------
-- get data from current month bring into next month
---------------------------------------------------------------------------------------
declare @t_tb as table 
(
	CompanyCode varchar(20),
	BranchCode varchar(20),
	AccountNo varchar(50),
	ProfitCenterCode varchar(20),
	BeginBalance numeric(18, 2),
	DbAmount numeric(18, 2),
	CrAmount numeric(18, 2),
	EndingBalance numeric(18, 2)
)

insert into @t_tb
select x.CompanyCode, x.BranchCode, x.AccountNo, ProfitCenterCode
	 , x.BeginBalance
	 , x.DbAmount
	 , x.CrAmount
	 , isnull(x.BeginBalance, 0) + isnull(x.DbAmount, 0) - isnull(x.CrAmount, 0) as EndBalance
  from glTrAccBalance x
 where 1 = 1
   and x.CompanyCode = @CompanyCode
   and x.BranchCode = @BranchCode
   and x.FiscalYear = @FiscalYearPrev
   and x.PeriodeNum = @PeriodeNumPrev

--select * from @t_tb
;with x as (
select a.BranchCode, a.FiscalYear, a.AccountNo, a.ProfitCenterCode, a.BeginBalance, b.EndingBalance EndingBalancePrev
  from glTrAccBalance a
 inner join @t_tb b
    on b.CompanyCode = a.CompanyCode
   and b.BranchCode = a.BranchCode
   and b.ProfitCenterCode = a.ProfitCenterCode
   and b.AccountNo = a.AccountNo
 where 1 = 1
   and a.CompanyCode = @CompanyCode
   and a.BranchCode = @BranchCode
   and a.FiscalYear = @FiscalYearCurr
   and a.PeriodeNum = @PeriodeNumCurr
) 
update x set BeginBalance = EndingBalancePrev

insert into glTrAccBalance (CompanyCode, BranchCode, FiscalYear, AccountNo, PeriodeNum, ProfitCenterCode, PeriodeName, AccDescription, BeginBalance, DbAmount, CrAmount, Status, CreatedBy, CreatedDate)
select a.CompanyCode, a.BranchCode, @FiscalYearCurr as FiscalYear
	 , a.AccountNo, @PeriodeNumCurr PeriodeNum, a.ProfitCenterCode
	 , 'Jan-11' PeriodeName, b.Description AccDescription
	 , a.EndingBalance as BeginBalance, 0 as DbAmount, 0 as CrAmount
	 , 1 as Status, 'system' as CreatedBy, getdate() as CreatedDate
  from @t_tb a
  left join gnMstAccount b on b.CompanyCode = a.CompanyCode and b.BranchCode = a.BranchCode and b.AccountNo = a.AccountNo
 where 1 = 1
   and not exists (
	select * from glTrAccBalance
	 where CompanyCode = a.CompanyCode
	   and BranchCode = a.BranchCode
	   and ProfitCenterCode = a.ProfitCenterCode
	   and AccountNo = a.AccountNo
	   and FiscalYear = @FiscalYearCurr
	   and PeriodeNum = @PeriodeNumCurr
	)

;with x as (
select a.BranchCode, a.FiscalYear, a.AccountNo, a.ProfitCenterCode, a.BeginBalance
  from glTrAccBalance a
 where 1 = 1
   and a.CompanyCode = @CompanyCode
   and a.BranchCode = @BranchCode
   and a.FiscalYear = @FiscalYearCurr
   and a.PeriodeNum = @PeriodeNumCurr
   and a.AccountNo = (select AccCurrentEarnings from fnSystemConfigDtl where CompanyCode = @CompanyCode and BranchCode = @BranchCode)
)
update x set BeginBalance = 0

;with x as (
select a.BranchCode, a.FiscalYear, a.AccountNo, a.ProfitCenterCode, a.BeginBalance, b.EndingBalance EndingBalancePrev
  from glTrAccBalance a
 inner join @t_tb b
    on b.CompanyCode = a.CompanyCode
   and b.BranchCode = a.BranchCode
   and b.ProfitCenterCode = a.ProfitCenterCode
   and b.AccountNo = (select AccCurrentEarnings from fnSystemConfigDtl where CompanyCode = @CompanyCode and BranchCode = @BranchCode)
 where 1 = 1
   and a.CompanyCode = @CompanyCode
   and a.BranchCode = @BranchCode
   and a.FiscalYear = @FiscalYearCurr
   and a.PeriodeNum = @PeriodeNumCurr
   and a.AccountNo = (select AccRetainedEarnings from fnSystemConfigDtl where CompanyCode = @CompanyCode and BranchCode = @BranchCode)
)
update x set BeginBalance = BeginBalance + EndingBalancePrev

--select a.BranchCode, a.FiscalYear, a.AccountNo, a.ProfitCenterCode, a.BeginBalance
--  from glTrAccBalance a
-- where 1 = 1
--   and a.CompanyCode = @CompanyCode
--   and a.BranchCode = @BranchCode
--   and a.FiscalYear = @FiscalYearCurr
--   and a.PeriodeNum = @PeriodeNumCurr
--   and (a.AccountNo = (select AccRetainedEarnings from fnSystemConfigDtl where CompanyCode = @CompanyCode and BranchCode = @BranchCode)
--     or a.AccountNo = (select AccCurrentEarnings from fnSystemConfigDtl where CompanyCode = @CompanyCode and BranchCode = @BranchCode))

---------------------------------------------------------------------------------------
-- transfer data month earning & year earning
---------------------------------------------------------------------------------------
declare @temp as table (ProfitCenterCode varchar(20), BeginBalance numeric(18,2))
insert into @temp
select a.ProfitCenterCode, -sum(BeginBalance)
  from glTrAccBalance a
 inner join gnMstAccount b
    on a.CompanyCode = b.CompanyCode
   and a.BranchCode = b.BranchCode
   and a.AccountNo = b.AccountNo
   and b.AccountType in('100', '200')
 where 1 = 1
   and a.CompanyCode = @CompanyCode
   and a.BranchCode = @BranchCode
   and a.FiscalYear = @FiscalYearCurr
   and a.PeriodeNum = @PeriodeNumCurr
 group by a.ProfitCenterCode

;with t_tb as (
select 0 as BeginBalanceNew, a.* from glTrAccBalance a
 inner join gnMstAccount b
    on a.CompanyCode = b.CompanyCode
   and a.BranchCode = b.BranchCode
   and a.AccountNo = b.AccountNo
   and b.AccountType IN('300', '400')
 where 1 = 1
   and a.FiscalYear = @FiscalYearCurr and a.PeriodeNum = 1
)
update t_tb set BeginBalance = BeginBalanceNew


;with x as(
select a.BranchCode, a.FiscalYear, a.AccountNo, a.PeriodeNum, a.ProfitCenterCode
	 , a.BeginBalance
	 , isnull((
		select (BeginBalance) from glTrAccBalance
		 where BranchCode = a.BranchCode
		   and FiscalYear = '2010'
		   and AccountNo = a.AccountNo
		   and PeriodeNum = '13'
		   and ProfitCenterCode = a.ProfitCenterCode
		), 0) as BeginBalance13
	 , isnull((
		select (BeginBalance + CrAmount - DbAmount) from glTrAccBalance
		 where BranchCode = a.BranchCode
		   and FiscalYear = '2010'
		   and AccountNo = a.AccountNo
		   and PeriodeNum = '13'
		   and ProfitCenterCode = a.ProfitCenterCode
		), 0) as EndingBalance13
	 , isnull((
		select BeginBalance from glBeginBalanceDtl
		 where BranchCode = a.BranchCode
		   and FiscalYear = '2010'
		   and AccountNo = a.AccountNo
		   and Periode = '201013'
		   and ProfitCenterCode = a.ProfitCenterCode
		), 0) as tblBeginBalance
  from glTrAccBalance a
 where a.BranchCode = @BranchCode
   and a.FiscalYear = '2011'
   and a.PeriodeNum = '01'
   and (a.AccountNo like '%063401%' or a.AccountNo like '%470000%')
)
--select * from x where BeginBalance <> tblBeginBalance
update x set BeginBalance = tblBeginBalance where BeginBalance <> tblBeginBalance

;with x as (
select isnull((
	select isnull(BeginBalance, 0) + isnull(DbAmount, 0) - isnull(CrAmount, 0)
	  from glTrAccBalance a
	 where 1 = 1
	   and a.FiscalYear = '2010' and a.PeriodeNum = 13
	   and a.AccountNo = '420.000.200.00000.214421.046.000'
	), 0) as BeginBalanceNew, a.AccountNo, a.BeginBalance
  from glTrAccBalance a
 where 1 = 1
   and a.FiscalYear = '2011' and a.PeriodeNum = 1
   and a.AccountNo = '420.000.200.00000.214421.046.000'
)
--select * from x
update x set BeginBalance = BeginBalanceNew

end
GO
CREATE procedure [dbo].[sp_spMstSalesTargetDetil] (
	@CompanyCode varchar(10),
	@BranchCode varchar(10)
)
as
select 
	a.CompanyCode,
	a.BranchCode,
	a.[Year],
	a.[Month],
	a.CategoryCode,
	(select LookUpValueName from gnMstLookUpDtl where CodeID='CSCT' and CompanyCode= a.CompanyCode and LookUpValue = a.CategoryCode) CategoryName,
	a.QtyTarget,
	a.AmountTarget,
	a.TotalJaringan
from spMstSalesTargetDtl a
WHERE a.CompanyCode=@CompanyCode and a.BranchCode=@BranchCode
GO
--declare @CompanyCode varchar(20)
--declare @BranchCode  varchar(20)
--declare @TypeJournal  varchar(20)
--declare @DocNo   varchar(20)

--set @CompanyCode = '6558201'
--set @BranchCode  = '655820100'
--set @TypeJournal = 'invoice'
--set @DocNo       = 'IVU/13/001280'

-- =============================================
-- Author:		<xxxxxx>
-- Create date: <xxxxxx>
-- Description:	<Get Journal>
-- Last Update By:	<yo - 29 Nov 2013>
-- =============================================

CREATE procedure [dbo].[uspfn_OmGetJournalDebetCredit]
	@CompanyCode varchar(20),
	@BranchCode  varchar(20),
	@TypeJournal varchar(50),
	@DocNo       varchar(50)
as 

declare @t_journal as table (
	SeqCode     varchar(50),
	TypeTrans   varchar(50),
	AccountNo   varchar(50),
	AccountDesc varchar(100),
	AmountDb    decimal,
	AmountCr    decimal
)

--#region TypeJournal = 'TRANSFEROUT'
if @TypeJournal = 'TRANSFEROUT'
begin
	declare @t_trans_out as table (
		CompanyCode varchar(50),
		BranchCode  varchar(50),
		DocInfo     varchar(50),
		Amount      decimal
	)

	insert into @t_trans_out
	select a.CompanyCode, a.BranchCode, a.SalesModelCode 
		 , isnull(b.CogsUnit, 0) + isnull(b.COGSKaroseri, 0) + isnull(b.COGSOthers, 0)
	  from omTrInventTransferOutDetail a
	  left join omMstVehicle b on 1 = 1
	   and b.CompanyCode = a.CompanyCode
	   and b.ChassisCode = a.ChassisCode
	   and b.ChassisNo   = a.ChassisNo
	   and b.EngineCode  = a.EngineCode
	   and b.EngineNo    = a.EngineNo
	   and b.SalesModelCode = a.SalesModelCode
	   and b.SalesModelYear = a.SalesModelYear
	 where 1 = 1 
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode  = @BranchCode
	   and a.TransferOutNo = @DocNo

	insert into @t_journal
	select '01', 'PSEMENTARA'
		 , isnull(b.InTransitTransferStockAccNo,'')
		 , isnull(c.Description,'')
		 , a.Amount
		 , 0
	  from @t_trans_out a
		left join omMstModelAccount b on a.CompanyCode=b.CompanyCode and a.BranchCode=b.BranchCode
			and a.DocInfo=b.SalesModelCode
		left join gnMstAccount c on b.CompanyCode=c.CompanyCode and b.BranchCode=c.BranchCode
			and b.InTransitTransferStockAccNo= c.AccountNo

	insert into @t_journal
	select '02', 'INVENTORY'
		 , isnull(b.InventoryAccNo,'')
		 , isnull(c.Description,'')
		 , 0
		 , a.Amount
	  from @t_trans_out a
		left join omMstModelAccount b on a.CompanyCode=b.CompanyCode and a.BranchCode=b.BranchCode
			and a.DocInfo=b.SalesModelCode
		left join gnMstAccount c on b.CompanyCode=c.CompanyCode and b.BranchCode=c.BranchCode
			and b.InventoryAccNo= c.AccountNo
end

--#region TypeJournal = 'TRANSFERIN'
if @TypeJournal = 'TRANSFERIN'
begin
	declare @t_trans_in as table (
		CompanyCode varchar(50),
		BranchCode  varchar(50),
		BranchCodeFrom varchar(50),
		BranchCodeTo varchar(50),
		DocInfo     varchar(50),
		Amount      decimal
	)

	insert into @t_trans_in
	select a.CompanyCode, a.BranchCode, c.BranchCodeFrom, c.BranchCodeTo, a.SalesModelCode 
		 , isnull(b.CogsUnit, 0) + isnull(b.COGSKaroseri, 0) + isnull(b.COGSOthers, 0)
	  from omTrInventTransferInDetail a
	  left join omMstVehicle b on 1 = 1
	   and b.CompanyCode = a.CompanyCode
	   and b.ChassisCode = a.ChassisCode
	   and b.ChassisNo   = a.ChassisNo
	   and b.EngineCode  = a.EngineCode
	   and b.EngineNo    = a.EngineNo
	   and b.SalesModelCode = a.SalesModelCode
	   and b.SalesModelYear = a.SalesModelYear
	  left join omTrInventTransferIn c on 1 = 1
	   and c.CompanyCode = a.CompanyCode
	   and c.BranchCode  = a.BranchCode
	   and c.TransferInNo = a.TransferInNo
	 where 1 = 1 
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode  = @BranchCode
	   and a.TransferInNo = @DocNo

	insert into @t_journal
	select '01', 'INVENTORY'
		 , isnull(b.InventoryAccNo,'')
		 , isnull(c.Description,'')
		 , a.Amount
		 , 0
	  from @t_trans_in a
		left join omMstModelAccount b on a.CompanyCode=b.CompanyCode and a.BranchCodeTo=b.BranchCode
			and a.DocInfo=b.SalesModelCode
		left join gnMstAccount c on b.CompanyCode=c.CompanyCode and b.BranchCode=c.BranchCode
			and b.InventoryAccNo= c.AccountNo

	insert into @t_journal
	select '02', 'PSEMENTARA'
		 , isnull(b.InTransitTransferStockAccNo,'')
		 , isnull(c.Description,'')
		 , 0
		 , a.Amount
	  from @t_trans_in a
		left join omMstModelAccount b on a.CompanyCode=b.CompanyCode and a.BranchCodeFrom=b.BranchCode
			and a.DocInfo=b.SalesModelCode
		left join gnMstAccount c on b.CompanyCode=c.CompanyCode and b.BranchCode=c.BranchCode
			and b.InTransitTransferStockAccNo= c.AccountNo

end
--#endregion

--#region TypeJournal = 'TRANSFEROUTMULTIBRANCH'
if @TypeJournal = 'TRANSFEROUTMULTIBRANCH'
begin
	declare @t_trans_outMB as table (
	CompanyCode		varchar(50),
	BranchCode		varchar(50),
	CompanyCodeTo	varchar(50),
	DocInfo			varchar(50),
	Amount			decimal
	)

	insert into @t_trans_outMB
		select a.CompanyCode
			, a.BranchCode
			, b.CompanyCodeTo
			, a.SalesModelCode 
			, isnull(a.CogsUnit, 0) + isnull(a.COGSKaroseri, 0) + isnull(a.COGSOthers, 0)
		from omTrInventTransferOutDetailMultiBranch a
		left join omTrInventTransferOutMultiBranch b on b.CompanyCode = a.CompanyCode
			and b.BranchCode = a.BranchCode
			and b.TransferOutNo = a.TransferOutNo
		where 1 = 1 
		   and a.CompanyCode = @CompanyCode
		   and a.BranchCode  = @BranchCode
		   and a.TransferOutNo = @DocNo
		   
	insert into @t_journal
	select '01', 'PSEMENTARA'
		 , isnull(b.InterCompanyAccNoTo,'')
		 , isnull(c.Description,'')
		 , a.Amount
		 , 0
	from @t_trans_outMB a
	left join omMstCompanyAccount b on b.CompanyCode = a.CompanyCode
		and b.CompanyCodeTo = a.CompanyCodeTo
	left join gnMstAccount c on b.CompanyCode=c.CompanyCode and a.BranchCode=c.BranchCode
		and b.InterCompanyAccNoTo = c.AccountNo

	insert into @t_journal
	select '02', 'INVENTORY'
		 , isnull(b.InventoryAccNo,'')
		 , isnull(c.Description,'')
		 , 0
		 , a.Amount
	from @t_trans_outMB a
	left join omMstModelAccount b on a.CompanyCode=b.CompanyCode and a.BranchCode=b.BranchCode
		and a.DocInfo=b.SalesModelCode
	left join gnMstAccount c on b.CompanyCode=c.CompanyCode and b.BranchCode=c.BranchCode
		and b.InventoryAccNo= c.AccountNo
end
--#endregion

--#region TypeJournal = 'TRANSFERINMULTIBRANCH'
if @TypeJournal = 'TRANSFERINMULTIBRANCH'
begin
	declare @t_trans_inMB as table (
	CompanyCode		varchar(50),
	BranchCode		varchar(50),
	CompanyCodeFrom	varchar(50),
	BranchCodeFrom	varchar(50),
	BranchCodeTo	varchar(50),
	DocInfo			varchar(50),
	Amount			decimal
)

insert into @t_trans_inMB
	select a.CompanyCode
		, a.BranchCode
		, b.CompanyCodeFrom
		, b.BranchCodeFrom
		, b.BranchCodeTo
		, a.SalesModelCode 
		, isnull(a.CogsUnit, 0) + isnull(a.COGSKaroseri, 0) + isnull(a.COGSOthers, 0)
	from omTrInventTransferInDetailMultiBranch a
	left join omTrInventTransferInMultiBranch b on 1 = 1
	   and b.CompanyCode	= a.CompanyCode
	   and b.BranchCode		= a.BranchCode
	   and b.TransferInNo	= a.TransferInNo
	where 1 = 1 
	   and a.CompanyCode	= @CompanyCode
	   and a.BranchCode		= @BranchCode
	   and a.TransferInNo	= @DocNo

	insert into @t_journal
	select '01', 'INVENTORY'
		 , isnull(b.InventoryAccNo,'')
		 , isnull(c.Description,'')
		 , a.Amount
		 , 0
	  from @t_trans_inMB a
		left join omMstModelAccount b on a.CompanyCode=b.CompanyCode and a.BranchCodeTo=b.BranchCode
			and a.DocInfo=b.SalesModelCode
		left join gnMstAccount c on b.CompanyCode=c.CompanyCode and b.BranchCode=c.BranchCode
			and b.InventoryAccNo= c.AccountNo
			
	insert into @t_journal
	select '02', 'PSEMENTARA'
		 , isnull(b.InterCompanyAccNoTo,'')
		 , isnull(c.Description,'')
		 , 0
		 , a.Amount
	from @t_trans_inMB a
	left join omMstCompanyAccount b on b.CompanyCode = a.CompanyCode
		and b.CompanyCodeTo = a.CompanyCodeFrom
	left join gnMstAccount c on b.CompanyCode=c.CompanyCode and a.BranchCode=c.BranchCode
		and b.InterCompanyAccNoTo = c.AccountNo

end
--#endregion

--#region TypeJournal = 'KAROSERI'
if @TypeJournal = 'KAROSERI'
begin
	declare @t_karoseri as table (
		SeqCode     varchar(50),
		TypeTrans   varchar(50),
		AccountNo   varchar(50),
		AmountDb    decimal,
		AmountCr    decimal
	)
	
	insert into @t_karoseri
	select '01', 'INVENTORY'
		 , isnull((
			select acc.InventoryAccNo
			  from omMstModelAccount acc
			 where 1 = 1
			   and acc.CompanyCode    = a.CompanyCode
			   and acc.BranchCode     = a.BranchCode
			   and acc.SalesModelCode = a.SalesModelCodeNew
			), '')
		 , sum(isnull(c.COGSKaroseri, 0) + (isnull(c.COGsUnit, 0) + isnull(c.COGsOthers, 0)))
		 , 0
	  from OmTrPurchaseKaroseriTerima a, OmTrPurchaseKaroseriTerimaDetail b, OmMstVehicle c
	 where 1 = 1
	   and c.CompanyCode = b.CompanyCode 
	   and c.ChassisCode = b.ChassisCode
	   and c.ChassisNo = b.ChassisNo 
	   and b.CompanyCode = a.CompanyCode 
	   and b.BranchCode = a.BranchCode
	   and b.KaroseriTerimaNo = a.KaroseriTerimaNo
	   and a.CompanyCode = @CompanyCode 
	   and a.BranchCode  = @BranchCode
	   and a.KaroseriTerimaNo = @DocNo 
	 group by a.CompanyCode, a.BranchCode, a.KaroseriTerimaNo, a.SalesModelCodeNew
	having sum(isnull(a.Quantity, 0) * (isnull(a.Total, 0) - isnull(a.PPn, 0))) > 0

	insert into @t_karoseri
	select '02', 'PPN'
		 , isnull((
			select cls.TaxInAccNo
			  from gnMstSupplierProfitCenter sup, gnMstSupplierClass cls
			 where 1 = 1
			   and cls.CompanyCode   = sup.CompanyCode
			   and cls.BranchCode    = sup.BranchCode
			   and cls.SupplierClass = sup.SupplierClass
			   and sup.CompanyCode   = a.CompanyCode
			   and sup.BranchCode    = a.BranchCode
			   and sup.SupplierCode  = a.SupplierCode
			   and sup.ProfitCenterCode = '100'
			), '')
		 , sum(isnull(a.Quantity, 0) * isnull(a.PPn, 0))
		 , 0
	  from OmTrPurchaseKaroseriTerima a
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode 
	   and a.BranchCode  = @BranchCode
	   and a.KaroseriTerimaNo = @DocNo 
	 group by a.CompanyCode, a.BranchCode, a.KaroseriTerimaNo, a.SalesModelCodeNew, a.SupplierCode
	having sum(isnull(a.Quantity, 0) * (isnull(a.Total, 0) - isnull(a.PPn, 0))) > 0

	insert into @t_karoseri
	select '03', 'INVENTORY'
		 , isnull((
			select acc.InventoryAccNo
			  from omMstModelAccount acc
			 where 1 = 1
			   and acc.CompanyCode    = a.CompanyCode
			   and acc.BranchCode     = a.BranchCode
			   and acc.SalesModelCode = a.SalesModelCodeOld
			), '')
		 , 0
		 , sum((isnull (c.COGsUnit, 0) + isnull (c.COGsOthers, 0 )))
	  from OmTrPurchaseKaroseriTerima a, OmTrPurchaseKaroseriTerimaDetail b, OmMstVehicle c
	 where 1 = 1
	   and c.CompanyCode = b.CompanyCode 
	   and c.ChassisCode = b.ChassisCode
	   and c.ChassisNo = b.ChassisNo 
	   and b.CompanyCode = a.CompanyCode 
	   and b.BranchCode = a.BranchCode
	   and b.KaroseriTerimaNo = a.KaroseriTerimaNo
	   and a.CompanyCode = @CompanyCode 
	   and a.BranchCode  = @BranchCode
	   and a.KaroseriTerimaNo = @DocNo 
	 group by a.CompanyCode, a.BranchCode, a.KaroseriTerimaNo, a.SalesModelCodeOld
	having sum(isnull(a.Quantity, 0) * (isnull(a.Total, 0) - isnull(a.PPn, 0))) > 0

	insert into @t_karoseri
	select '04', 'AP'
		 , isnull((
			select cls.PayableAccNo
			  from gnMstSupplierProfitCenter sup, gnMstSupplierClass cls
			 where 1 = 1
			   and cls.CompanyCode   = sup.CompanyCode
			   and cls.BranchCode    = sup.BranchCode
			   and cls.SupplierClass = sup.SupplierClass
			   and sup.CompanyCode   = a.CompanyCode
			   and sup.BranchCode    = a.BranchCode
			   and sup.SupplierCode  = a.SupplierCode
			   and sup.ProfitCenterCode = '100'
			), '')
		 , 0
		 , sum(isnull(a.Quantity, 0) * isnull(a.Total, 0))
	  from OmTrPurchaseKaroseriTerima a
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode 
	   and a.BranchCode  = @BranchCode
	   and a.KaroseriTerimaNo = @DocNo 
	 group by a.CompanyCode, a.BranchCode, a.KaroseriTerimaNo, a.SupplierCode
	having sum(isnull(a.Quantity, 0) * (isnull(a.Total, 0) - isnull(a.PPn, 0))) > 0

	insert into @t_journal
	select a.SeqCode, a.TypeTrans, a.AccountNo
		 , b.Description AccountDesc, a.AmountDb, a.AmountCr    
	  from @t_karoseri a, gnMstAccount b
	 where b.CompanyCode = @CompanyCode
	   and b.BranchCode = @BranchCode 
	   and b.AccountNo = a.AccountNo
end
--#endregion

--#region TRANS TYPE PURCHASE
IF @TypeJournal = 'PURCHASE'
	BEGIN	
	Select * into #t1 from
	(
		select distinct a.CompanyCode
				, a.BranchCode
				, a.HPPNo
				, a.BPUNo
				, a.SalesModelCode
				, a.SalesModelYear
				, a.OthersCode
				, isnull(b.OthersNonInventoryAccNo,'') AccountNo
				, SUM(a.OthersDPP) DPP
				, SUM(a.OthersPPN) PPN
		from omTrPurchaseHPPDetailModelOthers a
		left join omMstOthersNonInventory b on a.CompanyCode = b.CompanyCode
			and a.BranchCode = b.BranchCode
			--and a.OthersCode = b.OthersNonInventory
		where a.CompanyCode = @CompanyCode
			and a.BranchCode = @BrancHCode
			and a.HPPNo = @DocNo
			and isnull(b.OthersNonInventoryAccNo,'') <> ''
		group by a.CompanyCode, a.BranchCode, a.HPPNo, a.BPUNo, a.SalesModelCode, a.SalesModelYear, a.OthersCode,b.OthersNonInventoryAccNo		
	)#t1


	select * into #Inventory from(
	select 'INVENTORY' CodeTrans
		 , @DocNo DocNo
		 , a.SalesModelCode DocInfo
		 , isnull((
			select acc.InventoryAccNo
			  from omMstModelAccount acc
			 where 1 = 1
			   and acc.CompanyCode    = a.CompanyCode
			   and acc.BranchCode     = a.BranchCode
			   and acc.SalesModelCode = a.SalesModelCode
			), '') AccountNo
		 , isnull(a.Quantity, 0) Quantity
		 , isnull(a.AfterDiscDPP, 0) AfterDiscDPP	 
		 , case when (select COUNT(*) from #t1 where HPPNo = a.HppNo and BPUNo = a.BPUNo and SalesModelCode = a.SalesModelCode and SalesModelYear = SalesModelYear) > 0 
			   then isnull((select distinct (b.DPP)
					from #t1 b
					where b.CompanyCode = a.CompanyCode
						and b.BranchCode = a.BranchCode
						and b.HPPNo = a.HPPNo
						and b.SalesModelCode = a.SalesModelCode
						and b.SalesModelYear = a.SalesModelYear
						and b.OthersCode not in (select distinct OthersNonInventory 
								from omMstOthersNonInventory))
				, 0) else a.OthersDPP end OthersDPP
		 , isnull(a.AfterDiscPPnBM, 0) AfterDiscPPnBM
		 , 0 AmountCr
	  from omTrPurchaseHPPDetailModel a
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode 
	   and a.BranchCode  = @BranchCode
	   and a.HPPNo       = @DocNo 
	)#Inventory

	insert into @t_journal
	select	1
			, a.CodeTrans
			, a.AccountNo
			, '' AccountDesc
			, sum(isnull(a.Quantity, 0) * (isnull(a.AfterDiscDPP, 0) + isnull(a.OthersDPP, 0) + isnull(a.AfterDiscPPnBM, 0))) as DPP
			, 0
	  from #Inventory a
	 group by a.CodeTrans, a.DocNo, a.DocInfo, a.AccountNo
	having sum(isnull(a.Quantity, 0) * (isnull(a.AfterDiscDPP, 0) + isnull(a.OthersDPP, 0) + isnull(a.AfterDiscPPnBM, 0))) > 0

	select * into #OthersInv from(
	select 'OTHERS' CodeTrans 		
		 , isnull((
			select acc.OthersNonInventoryAccNo
			  from omMstOthersNonInventory acc
			 where 1 = 1
			   and acc.CompanyCode    = a.CompanyCode
			   and acc.BranchCode     = a.BranchCode
			   and acc.OthersNonInventory = b.OthersCode
			), '') AccountNo
		 , '' AccountDesc
		 , sum(isnull(a.Quantity, 0) * isnull(b.DPP, 0)) as DPP
		 , 0 AmountCr
	  from omTrPurchaseHPPDetailModel a, #t1 b
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode 
	   and a.BranchCode  = @BranchCode
	   and a.HPPNo       = @DocNo 
	   and a.SalesModelCode = b.SalesModelCode
	   and a.SalesModelYear = b.SalesModelYear
	   and a.BPUNo = b.BPUNo
	   and b.OthersCode in (select distinct OthersNonInventory 
									from omMstOthersNonInventory) 
	 group by a.CompanyCode, a.BranchCode, a.HPPNo, a.SalesModelCode,a.SalesModelYear,b.OthersCode,b.AccountNo
	having sum(isnull(a.Quantity, 0) * isnull(b.DPP, 0)) > 0
	)#OthersInv
	
	insert into @t_journal
	select 2, CodeTrans			
			, AccountNo
			, '' AccountDesc
			, SUM(DPP)
			, AmountCr
	  from #OthersInv a
	 group by a.CodeTrans, a.AccountNo,a.AmountCr
	having sum(DPP) > 0

	insert into @t_journal
	select 3, 'PPN'
		 , isnull((
			select cls.TaxInAccNo
			  from omTrPurchaseHPP pur, gnMstSupplierProfitCenter sup, gnMstSupplierClass cls
			 where 1 = 1
			   and sup.CompanyCode   = pur.CompanyCode
			   and sup.BranchCode    = pur.BranchCode
			   and sup.SupplierCode  = pur.SupplierCode
			   and sup.ProfitCenterCode = '100'
			   and cls.CompanyCode   = pur.CompanyCode
			   and cls.BranchCode    = pur.BranchCode
			   and cls.SupplierClass = sup.SupplierClass
			   and sup.CompanyCode   = @CompanyCode
			   and sup.BranchCode    = @BranchCode
			   and pur.HPPNo         = @DocNo
			), '')
		 , '' AccountDesc
		 , sum(isnull(a.Quantity, 0) * (isnull(a.AfterDiscPPn, 0) + isnull(a.OthersPPn, 0))) as PPN
		 , 0
	  from omTrPurchaseHPPDetailModel a, omTrPurchaseHPP b
	 where 1 = 1
	   and b.CompanyCode = a.CompanyCode 
	   and b.BranchCode  = a.BranchCode
	   and b.HPPNo       = a.HPPNo
	   and a.CompanyCode = @CompanyCode 
	   and a.BranchCode  = @BranchCode
	   and a.HPPNo       = @DocNo 
	 group by a.CompanyCode, a.BranchCode, a.HPPNo, b.SupplierCode
	having sum(isnull(a.Quantity, 0) * (isnull(a.AfterDiscDPP, 0) + isnull(a.OthersDPP, 0) + isnull(a.AfterDiscPPnBM, 0))) > 0

	insert into @t_journal
	select 4, 'AP'
		 , isnull((
			select cls.PayableAccNo
			  from omTrPurchaseHPP pur, gnMstSupplierProfitCenter sup, gnMstSupplierClass cls
			 where 1 = 1
			   and sup.CompanyCode   = pur.CompanyCode
			   and sup.BranchCode    = pur.BranchCode
			   and sup.SupplierCode  = pur.SupplierCode
			   and sup.ProfitCenterCode = '100'
			   and cls.CompanyCode   = pur.CompanyCode
			   and cls.BranchCode    = pur.BranchCode
			   and cls.SupplierClass = sup.SupplierClass
			   and sup.CompanyCode   = @CompanyCode
			   and sup.BranchCode    = @BranchCode
			   and pur.HPPNo         = @DocNo
			), '')
		 , '' AccountDesc
		 , 0
		 , sum(isnull(a.Quantity, 0) * (isnull(a.AfterDiscDPP, 0) + isnull(a.OthersDPP, 0) + isnull(a.AfterDiscPPnBM, 0)))
		 + sum(isnull(a.Quantity, 0) * (isnull(a.AfterDiscPPn, 0) + isnull(a.OthersPPn, 0))) as TotalTransAmt
	  from omTrPurchaseHPPDetailModel a, omTrPurchaseHPP b
	 where 1 = 1
	   and b.CompanyCode = a.CompanyCode 
	   and b.BranchCode  = a.BranchCode
	   and b.HPPNo       = a.HPPNo
	   and a.CompanyCode = @CompanyCode 
	   and a.BranchCode  = @BranchCode
	   and a.HPPNo       = @DocNo 
	 group by a.CompanyCode, a.BranchCode, a.HPPNo, b.SupplierCode
	having sum(isnull(a.Quantity, 0) * (isnull(a.AfterDiscDPP, 0) + isnull(a.OthersDPP, 0) + isnull(a.AfterDiscPPnBM, 0))) > 0	

	drop table #t1
	drop table #Inventory
	drop table #OthersInv
		
	END
--#endregion

--#region TypeJournal = 'INVOICE'
IF @TypeJournal = 'INVOICE'
BEGIN
	insert into @t_journal
		select 1, 'AR'
			 , isnull((
				select cls.ReceivableAccNo
				  from omTrSalesInvoice ivu, GnMstCustomerProfitCenter cus, GnMstCustomerClass cls
				 where 1 = 1
				   and cus.CompanyCode   = ivu.CompanyCode
				   and cus.BranchCode    = ivu.BranchCode
				   and cus.CustomerCode  = ivu.CustomerCode
				   and cus.ProfitCenterCode = '100'
				   and cls.CompanyCode   = ivu.CompanyCode
				   and cls.BranchCode    = ivu.BranchCode
				   and cls.CustomerClass = cus.CustomerClass
				   and cus.CompanyCode   = @CompanyCode
				   and cus.BranchCode    = @BranchCode
				   and ivu.InvoiceNo     = @DocNo
				), '') AccounNo
			 , '' AccountDesc
			 , isnull((
				select sum(isnull(Quantity, 0) * (AfterDiscDPP + AfterDiscPPn + AfterDiscPPnBm))
				  from omTrSalesInvoiceModel
				 where 1 = 1
				   and CompanyCode = @CompanyCode 
				   and BranchCode  = @BranchCode
				   and InvoiceNo   = @DocNo
				), 0)
			 + isnull((
				select sum(mdl.Quantity * (oth.AfterDiscDPP + oth.AfterDiscPPn))
				  from omTrSalesInvoiceOthers oth left join omTrSalesInvoiceModel mdl
					on oth.BranchCode = mdl.BranchCode
					and oth.InvoiceNo = mdl.InvoiceNo
					and oth.BPKNo = mdl.BPKNo
					and oth.SalesModelCode = mdl.SalesModelCode
				 where 1 = 1
				   and oth.CompanyCode = @CompanyCode 
				   and oth.BranchCode  = @BranchCode
				   and oth.InvoiceNo   = @DocNo
				), 0)
			 + isnull((
				select sum(DPP + PPN)
				  from omTrSalesInvoiceAccs
				 where 1 = 1
				   and CompanyCode = @CompanyCode 
				   and BranchCode  = @BranchCode
				   and InvoiceNo   = @DocNo
				), 0)
			 + (select isnull(sum(isnull(Quantity,0)*isnull(Total,0)),0) from omTrSalesInvoiceAccsSeq where CompanyCode=@CompanyCode
				   and BranchCode=@BranchCode and InvoiceNo=@DocNo) 
			 , 0

insert into @t_journal
select 2, 'DISCOUNT UNIT'
	 , isnull((
		select acc.DiscountAccNo
		  from omMstModelAccount acc
		 where 1 = 1
		   and acc.CompanyCode    = a.CompanyCode
		   and acc.BranchCode     = a.BranchCode
		   and acc.SalesModelCode = a.SalesModelCode
		), '') AccountNo
	 , '' AccountDesc
	 , sum(isnull(a.Quantity, 0) * isnull (a.DiscExcludePPn, 0)) as Discount
	 , 0
  from omTrSalesInvoiceModel a
 where 1 = 1
   and a.CompanyCode = @CompanyCode 
   and a.BranchCode  = @BranchCode
   and a.InvoiceNo   = @DocNo 
 group by a.CompanyCode, a.BranchCode, a.InvoiceNo, a.BPKNo, a.SalesModelCode, a.SalesModelYear
having sum(isnull(a.Quantity, 0) * isnull (a.DiscExcludePPn, 0)) > 0

insert into @t_journal
select 3, 'DISCOUNT AKSESORIS'
	 , isnull((
		select acc.DiscountAccNoAks
		  from omMstModelAccount acc
		 where 1 = 1
		   and acc.CompanyCode    = a.CompanyCode
		   and acc.BranchCode     = a.BranchCode
		   and acc.SalesModelCode = a.SalesModelCode
		), '') AccountNo
	 , '' AccountDesc
	 , sum(isnull(a.DiscExcludePPn, 0)) as Discount
	 , 0
  from omTrSalesInvoiceOthers a
 where 1 = 1
   and a.CompanyCode = @CompanyCode 
   and a.BranchCode  = @BranchCode
   and a.InvoiceNo   = @DocNo 
 group by a.CompanyCode, a.BranchCode, a.InvoiceNo, a.BPKNo, a.SalesModelCode, a.SalesModelYear
having sum(isnull(a.DiscExcludePPn, 0)) > 0

insert into @t_journal
select distinct 4, 'DISCOUNT SPAREPART['+a.TypeOfGoods+']'
	, (select top 1 DiscAccNo from spMstAccount where companycode=a.companycode and branchcode=a.branchcode and typeofgoods=a.typeofgoods) AccountNo
	, '' AccountDesc
	, (select sum(isnull(Quantity,0)*isnull(DiscExcludePPn,0)) from omtrsalesinvoiceaccsseq where companycode=a.companycode and branchcode=a.branchcode 
		and invoiceno=a.invoiceno and typeofgoods=a.typeofgoods group by typeofgoods) AmountDb
	, 0 AmountCr
from omTrSalesInvoiceAccsSeq a 
inner join omTrSalesInvoice b on b.CompanyCode=a.CompanyCode
	and b.BranchCode=a.BranchCode
	and b.InvoiceNo=a.InvoiceNo
where a.companyCode=@CompanyCode 
	and a.BranchCode=@BranchCode 
	and a.InvoiceNo=@DocNo

insert into @t_journal
select 5, 'SALES UNIT'
	 , isnull((
		select acc.SalesAccNo
		  from omMstModelAccount acc
		 where 1 = 1
		   and acc.CompanyCode    = a.CompanyCode
		   and acc.BranchCode     = a.BranchCode
		   and acc.SalesModelCode = a.SalesModelCode
		), '') AccountNo
	 , '' AccountDesc
	 , 0
	 , sum(isnull(a.Quantity, 0) * isnull (a.AfterDiscDPP, 0))
	 + sum(isnull(a.Quantity, 0) * isnull (a.DiscExcludePPn, 0)) 
  from omTrSalesInvoiceModel a
 where 1 = 1
   and a.CompanyCode = @CompanyCode 
   and a.BranchCode  = @BranchCode
   and a.InvoiceNo   = @DocNo 
 group by a.CompanyCode, a.BranchCode, a.InvoiceNo, a.BPKNo, a.SalesModelCode, a.SalesModelYear
having (sum(isnull(a.Quantity, 0) * isnull (a.AfterDiscDPP, 0)) +
	    sum(isnull(a.Quantity, 0) * isnull (a.DiscExcludePPn, 0))) > 0

insert into @t_journal
select 6, 'SALES AKSESORIS'
	 , isnull((
		select acc.SalesAccNoAks
		  from omMstModelAccount acc
		 where 1 = 1
		   and acc.CompanyCode    = a.CompanyCode
		   and acc.BranchCode     = a.BranchCode
		   and acc.SalesModelCode = a.SalesModelCode
		), '') AccountNo
	 , '' AccountDesc
	 , 0
	 , sum(isnull(b.Quantity, 0) * isnull (a.AfterDiscDPP, 0))
	 + sum(isnull(b.Quantity, 0) * isnull (a.DiscExcludePPn, 0)) 
  from omTrSalesInvoiceOthers a, omTrSalesInvoiceModel b
 where 1 = 1
   and b.BranchCode = a.BranchCode 
   and b.InvoiceNo = a.InvoiceNo 
   and b.BPKNo = a.BPKNo 
   and b.SalesModelCode = a.SalesModelCode 
   and b.SalesModelYear = a.SalesModelYear 
   and a.CompanyCode = @CompanyCode 
   and a.BranchCode  = @BranchCode
   and a.InvoiceNo   = @DocNo 
 group by a.CompanyCode, a.BranchCode, a.InvoiceNo, a.BPKNo, a.SalesModelCode, a.SalesModelYear
having (sum(isnull(b.Quantity, 0) * isnull (a.AfterDiscDPP, 0)) +
	    sum(isnull(b.Quantity, 0) * isnull (a.DiscExcludePPn, 0))) > 0

insert into @t_journal
select distinct 7, 'SALES SPAREPART ['+a.typeOfGoods+']'
	, (select top 1 SalesAccNo from spMstAccount where companycode=a.companycode and branchcode=a.branchcode and typeofgoods=a.typeofgoods) AccountNo
	, '' AccountDesc
	, 0 AmountDb
	, (select sum(isnull(Quantity,0) * isnull(RetailPrice,0)) from omtrsalesinvoiceaccsseq where companycode=a.companycode and branchcode=a.branchcode 
		and invoiceno=a.invoiceno and typeofgoods=a.typeofgoods group by typeofgoods) AmountCr
from omTrSalesInvoiceAccsSeq a 
inner join omTrSalesInvoice b on b.CompanyCode=a.CompanyCode
	and b.BranchCode=a.BranchCode
	and b.InvoiceNo=a.InvoiceNo
 where 1 = 1
   and a.CompanyCode = @CompanyCode 
   and a.BranchCode  = @BranchCode
   and a.InvoiceNo   = @DocNo 
 group by a.CompanyCode, a.BranchCode, a.InvoiceNo, a.TypeOfGoods

insert into @t_journal
select 8, 'PPN'
	 , isnull((
		select cls.TaxOutAccNo
		  from omTrSalesInvoice ivu, GnMstCustomerProfitCenter cus, GnMstCustomerClass cls
		 where 1 = 1
		   and cus.CompanyCode   = ivu.CompanyCode
		   and cus.BranchCode    = ivu.BranchCode
		   and cus.CustomerCode  = ivu.CustomerCode
		   and cus.ProfitCenterCode = '100'
		   and cls.CompanyCode   = ivu.CompanyCode
		   and cls.BranchCode    = ivu.BranchCode
		   and cls.CustomerClass = cus.CustomerClass
		   and cus.CompanyCode   = @CompanyCode
		   and cus.BranchCode    = @BranchCode
		   and ivu.InvoiceNo     = @DocNo
		), '') AccountNo
	 , '' AccountDesc
	 , 0
	 , isnull((
		select sum(Quantity * AfterDiscPPn)
		  from omTrSalesInvoiceModel
		 where 1 = 1
		   and CompanyCode = @CompanyCode 
		   and BranchCode  = @BranchCode
		   and InvoiceNo   = @DocNo
		), 0)
	 + isnull((
		select sum(mdl.Quantity * oth.AfterDiscPPn)
		  from omTrSalesInvoiceOthers oth left join omTrSalesInvoiceModel mdl
			on oth.BranchCode = mdl.BranchCode
			and oth.InvoiceNo = mdl.InvoiceNo
			and oth.BPKNo = mdl.BPKNo
			and oth.SalesModelCode = mdl.SalesModelCode
		 where 1 = 1
		   and oth.CompanyCode = @CompanyCode 
		   and oth.BranchCode  = @BranchCode
		   and oth.InvoiceNo   = @DocNo
		), 0)
	 + isnull((
		select sum(PPN)
		  from omTrSalesInvoiceAccs
		 where 1 = 1
		   and CompanyCode = @CompanyCode 
		   and BranchCode  = @BranchCode
		   and InvoiceNo   = @DocNo
		), 0)
	 + (select isnull(sum(isnull(Quantity,0)*isnull(PPN,0)),0) from omTrSalesInvoiceAccsSeq where companyCode = @CompanyCode 
		   and BranchCode=@BranchCode and InvoiceNo=@DocNo)
where (isnull((
		select sum(Quantity * AfterDiscPPn)
		  from omTrSalesInvoiceModel
		 where 1 = 1
		   and CompanyCode = @CompanyCode 
		   and BranchCode  = @BranchCode
		   and InvoiceNo   = @DocNo
		), 0)
	 + isnull((
		select sum(AfterDiscPPn)
		  from omTrSalesInvoiceOthers
		 where 1 = 1
		   and CompanyCode = @CompanyCode 
		   and BranchCode  = @BranchCode
		   and InvoiceNo   = @DocNo
		), 0)
	 + isnull((
		select sum(PPN)
		  from omTrSalesInvoiceAccs
		 where 1 = 1
		   and CompanyCode = @CompanyCode 
		   and BranchCode  = @BranchCode
		   and InvoiceNo   = @DocNo
		), 0)) 
	 +(select isnull(sum(isnull(quantity,0)*isnull(PPN,0)),0) from omTrSalesInvoiceAccsSeq where companyCode = @CompanyCode 
		   and BranchCode=@BranchCode and InvoiceNo=@DocNo) > 0

insert into @t_journal
select 9, 'PPN BM'
	 , isnull((
		select cls.LuxuryTaxAccNo
		  from omTrSalesInvoice ivu, GnMstCustomerProfitCenter cus, GnMstCustomerClass cls
		 where 1 = 1
		   and cus.CompanyCode   = ivu.CompanyCode
		   and cus.BranchCode    = ivu.BranchCode
		   and cus.CustomerCode  = ivu.CustomerCode
		   and cus.ProfitCenterCode = '100'
		   and cls.CompanyCode   = ivu.CompanyCode
		   and cls.BranchCode    = ivu.BranchCode
		   and cls.CustomerClass = cus.CustomerClass
		   and cus.CompanyCode   = @CompanyCode
		   and cus.BranchCode    = @BranchCode
		   and ivu.InvoiceNo     = @DocNo
		), '') AccountNo
	 , '' AccountDesc
	 , 0
	 , isnull((
		select sum(Quantity * AfterDiscPPnBm)
		  from omTrSalesInvoiceModel
		 where 1 = 1
		   and CompanyCode = @CompanyCode 
		   and BranchCode  = @BranchCode
		   and InvoiceNo   = @DocNo
		), 0)
where isnull((
		select sum(Quantity * AfterDiscPPnBm)
		  from omTrSalesInvoiceModel
		 where 1 = 1
		   and CompanyCode = @CompanyCode 
		   and BranchCode  = @BranchCode
		   and InvoiceNo   = @DocNo
		), 0) > 0

insert into @t_journal
select 10, 'HPP Unit'
	 , isnull((
		select acc.COGSAccNo
		  from omMstModelAccount acc
		 where 1 = 1
		   and acc.CompanyCode    = a.CompanyCode
		   and acc.BranchCode     = a.BranchCode
		   and acc.SalesModelCode = a.SalesModelCode
		), '') AccountNo
	 , '' AccountDesc
	 , sum(isnull (a.COGS, 0)) as COGS
	 , 0
  from OmTrSalesInvoiceVin a
 where 1 = 1
   and a.CompanyCode = @CompanyCode 
   and a.BranchCode  = @BranchCode
   and a.InvoiceNo   = @DocNo 
 group by a.CompanyCode, a.BranchCode, a.InvoiceNo, a.BPKNo, a.SalesModelCode, a.SalesModelYear
having sum(isnull (a.COGS, 0)) > 0

insert into @t_journal
select 11, 'INVENTORY UNIT'
	 , isnull((
		select acc.InventoryAccNo
		  from omMstModelAccount acc
		 where 1 = 1
		   and acc.CompanyCode    = a.CompanyCode
		   and acc.BranchCode     = a.BranchCode
		   and acc.SalesModelCode = a.SalesModelCode
		), '') AccountNo
	 , '' AccountDesc
	 , 0
	 , sum(isnull (a.COGS, 0)) as COGS
  from OmTrSalesInvoiceVin a
 where 1 = 1
   and a.CompanyCode = @CompanyCode 
   and a.BranchCode  = @BranchCode
   and a.InvoiceNo   = @DocNo 
 group by a.CompanyCode, a.BranchCode, a.InvoiceNo, a.BPKNo, a.SalesModelCode, a.SalesModelYear
having sum(isnull (a.COGS, 0)) > 0

insert into @t_journal
select distinct 12, 'COGS SPAREPART ['+a.TypeOfGoods+']'
	, (select top 1 COGSAccNo from spMstAccount where companycode=a.companycode and branchcode=a.branchcode and typeofgoods=a.typeofgoods) AccountNo
	, '' AccountDesc
	, (select sum(isnull(Quantity,0)*isnull(COGS,0)) from omtrsalesinvoiceaccsseq where companycode=a.companycode and branchcode=a.branchcode 
			and invoiceno=a.invoiceno and typeofgoods=a.typeofgoods group by typeofgoods) AmountDb
	, 0 AmountCr
from omTrSalesInvoiceAccsSeq a 
inner join omTrSalesInvoice b on b.CompanyCode=a.CompanyCode
	and b.BranchCode=a.BranchCode
	and b.InvoiceNo=a.InvoiceNo
where a.companyCode=@CompanyCode 
	and a.BranchCode=@BranchCode 
	and a.InvoiceNo=@DocNo

insert into @t_journal
select distinct 13, 'INVENTORY AKSESORIES ['+a.TypeOfGoods+']'
	, (select top 1 InventoryAccNo from spMstAccount where companycode=a.companycode and branchcode=a.branchcode and typeofgoods=a.typeofgoods) AccountNo
	, '' AccountDesc
	, 0 AmountDb
	, (select sum(isnull(Quantity,0)*isnull(COGS,0)) from omtrsalesinvoiceaccsseq where companycode=a.companycode and branchcode=a.branchcode and invoiceno=a.invoiceno
		and typeofgoods=a.typeofgoods group by typeofgoods) AmountCr
from omTrSalesInvoiceAccsSeq a 
inner join omTrSalesInvoice b on b.CompanyCode=a.CompanyCode

	and b.BranchCode=a.BranchCode
	and b.InvoiceNo=a.InvoiceNo
WHERE a.companyCode=@CompanyCode 
	and a.BranchCode=@BranchCode 
	and a.InvoiceNo=@DocNo

END
--#endregion

select sum(a.AmountDb) as AmountDb, sum(a.AmountCr) as AmountCr
  from @t_journal a
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryTransferOutDetail] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @TransferOutNo varchar(15)
)
AS
BEGIN

SELECT Convert(varchar,a.TransferOutSeq) as TransferOutSeq,a.SalesModelCode,Convert(varchar,a.SalesModelYear) as SalesModelYear,b.SalesModelDesc,
a.ChassisCode,Convert(varchar,a.ChassisNo) as ChassisNo,a.EngineCode,Convert(varchar,a.EngineNo) as EngineNo,a.ColourCode,
c.RefferenceDesc1 as ColourName,a.Remark
FROM OmTrInventTransferOutDetail a
LEFT JOIN omMstModel b
ON a.CompanyCode = b.CompanyCode
AND a.SalesModelCode = b.SalesModelCode
LEFT JOIN omMstRefference c
ON a.CompanyCode = c.CompanyCode
AND a.ColourCode = c.RefferenceCode
WHERE c.RefferenceType = 'COLO'
AND a.CompanyCode = @p_CompanyCode
AND a.BranchCode = @p_BranchCode
AND a.TransferOutNo = @TransferOutNo
ORDER BY a.TransferOutSeq, a.SalesModelCode,a.SalesModelYear,a.ChassisNo ASC

END
GO
CREATE procedure [dbo].[uspfn_omsdmovementsoinsert]
@CompanyCode as varchar(15),
@BranchCode as varchar(15),
@SONo as varchar(15)
as
--exec spfn_omsdmovementsoinsert '6159401000','6159401001','SOR/15/000233'
declare @sql varchar(max);

set @sql='insert into '+dbo.GetDbMD(@CompanyCode,@BranchCode)+'..omSDMovement
   select a.CompanyCode,a.BranchCode,a.SONo,a.SODate,b.SOSeq,b.SalesModelCode,b.SalesModelYear,
   b.ChassisCode,b.ChassisNo,b.enginecode, b.EngineNo,b.ColourCode,a.WareHouseCode,a.CustomerCode,''-'',
   dbo.getcompanymd(a.CompanyCode,a.BranchCode),dbo.GetBranchMD(a.companycode,a.branchcode),
   dbo.GetWarehouseMD(a.companyCode,a.branchcode),a.Status,''0'',GETDATE(),a.ApproveBy,GETDATE(),a.ApproveBy,GETDATE()   
   from omTrSalesSO a inner join omTrSalesSOVin b on a.CompanyCode=b.CompanyCode and a.BranchCode=b.BranchCode and a.SONo=b.SONo
   where a.companycode='+@CompanyCode+' and a.branchcode='+@BranchCode+' and a.SONo='''+@SONo+'''';
--print @sql;
exec(@sql)
GO
CREATE procedure [dbo].[sp_InqVehicleHistory4Lookup] (
	@CompanyCode varchar(15),
	@BranchCode varchar(15),
	@ProfitCenterCode varchar(15)
)
as
begin
	 select distinct
                     a.PoliceRegNo
                    ,a.CustomerCode
                    ,b.CustomerName
                    ,  rtrim(rtrim(a.CustomerCode) + ' - ' + rtrim(b.CustomerName)) as CustomerDesc
                    ,  rtrim(rtrim(b.Address1) + ' ' + rtrim(b.Address2) + ' ' + rtrim(b.Address3) + ' ' + rtrim(b.Address4)) as CustomerAddr
                    , b.Address1, b.Address2, b.Address3 + ' ' + b.Address4 Address3
                    ,a.DealerCode
                    ,c.CustomerName DealerName
                    , (a.CustomerCode + ' - ' + c.CustomerName) as DealerDesc
                    ,a.ChassisCode
                    ,  cast(a.ChassisNo as varchar) ChassisNo
                    ,a.EngineCode
                    ,  cast(a.EngineNo as varchar) EngineNo
                    ,a.ServiceBookNo
                    ,a.ClubCode
                    ,a.ColourCode
                    ,case a.FakturPolisiDate when ('19000101') then null else a.FakturPolisiDate end FakturPolisiDate
                    ,a.ClubNo
                    ,case a.ClubDateStart when ('19000101') then null else a.ClubDateStart end ClubDateStart
                    ,case a.ClubDateFinish when ('19000101') then null else a.ClubDateFinish end ClubDateFinish
                    ,case a.ClubSince when ('19000101') then null else a.ClubSince end ClubSince
                    , (case a.IsClubStatus when 1 then 'Aktif' else 'Tidak Aktif' end) as IsClubStatusDesc
                    ,a.IsClubStatus
                    , (case a.IsContractStatus when 1 then 'Aktif' else 'Tidak Aktif' end) as IsContractStatusDesc
                    ,a.IsActive
                    , (case a.IsActive when 1 then 'Aktif' else 'Tidak Aktif' end) as IsActiveDesc
                    ,a.BasicModel
                    ,a.TransmissionType
                    ,case a.LastServiceDate when ('19000101') then null else a.LastServiceDate end LastServiceDate
                    ,a.LastJobType
                    ,a.ChassisNo
                    ,a.ContractNo
                    ,a.ContactName
                    ,b.CityCode
                    ,f.LookUpValueName CityName
                    from svMstCustomerVehicle a
                    left join gnMstCustomer b on b.CompanyCode = a.CompanyCode 
	                    and b.CustomerCode = a.CustomerCode
                    left join gnMstCustomer c on c.CompanyCode = a.CompanyCode 
	                    and c.CustomerCode = a.DealerCode
                    left join svMstJob d on 
	                    d.CompanyCode = a.CompanyCode and
	                    d.BasicModel = a.BasicModel 	
                    inner join gnMstCustomerProfitCenter e on 
                        e.CompanyCode = a.CompanyCode and
                        e.CustomerCode = a.CustomerCode
                    left join gnMstLookupDtl f on 
                        f.CompanyCode = a.CompanyCode and
                        f.CodeID = 'CITY' and
                        f.LookUpValue = b.CityCode
                    where a.CompanyCode=@CompanyCode and a.IsActive = 1 and e.BranchCode = @BranchCode and e.ProfitCenterCode = @ProfitCenterCode
END
GO
CREATE proc [dbo].[uspfn_CsInqBday]
@CompanyCode varchar(20),
@DateFrom datetime,
@DateTo datetime
as
begin
select CompanyCode = a.CompanyCode
     , a.CustomerCode
	 --, PeriodOfYear = c.PeriodYear
  --   , CompanyName = b.CompanyName
     , a.CustomerName
     , CustomerAddress = a.Address1 + ' ' + rtrim(a.Address2) + ' ' + rtrim(a.Address3) + ' ' + rtrim(a.Address4)
  --   , CustomerTelephone = a.PhoneNo
  --   , CustomerBirthDate = a.BirthDate
	 --, CustomerTypeOfGift = c.TypeOfGift
	 --, CustomerGiftSentDate = c.SentGiftDate
	 --, CustomerGiftReceivedDate = c.ReceivedGiftDate
	 ----, SpouseGiftSentDate = (
		----select top 1
		----	x.SentGiftDate
		----from
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'SPOUSE'
	 ----)
	 ----, ChildGiftSentDate1 =(
		----select top 1
		----	x.SentGiftDate
		----from
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_1'
	 ----)
	 ----, ChildGiftSentDate2 = (
		----select top 1
		----	x.SentGiftDate
		----from
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_2'
	 ----)
	 ----, ChildGiftSentDate3 = (
		----select top 1
		----	x.SentGiftDate
		----from
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_3'
	 ----)
	 ------, ParentGiftReceivedDate = c.SouvRcvParent
	 ----, SpouseGiftReceivedDate = (
		----select top 1
		----	x.ReceivedGiftDate
		----from
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'SPOUSE'
	 ----)
	 ----, ChildGiftReceivedDate1 = (
		----select top 1
		----	x.ReceivedGiftDate
		----from
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_1'
	 ----)
	 ----, ChildGiftReceivedDate2 = (
		----select top 1
		----	x.ReceivedGiftDate
		----from
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_2'
	 ----)
	 ----, ChildGiftReceivedDate3 = (
		----select top 1
		----	x.ReceivedGiftDate
		----from
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_3'
	 ----)
	 ------ ======================================== Spouse
	 ----, SpouseName = (
		----select top 1
		----	x.FullName	
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'SPOUSE'
	 ----)
	 ----, SpouseTelephone = (
		----select top 1
		----	x.PhoneNo	
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'SPOUSE'
	 ----),
	 ----SpouseRelation = (
		----select top 1
		----	x.RelationInfo	
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'SPOUSE'
	 ----),
	 ----SpouseBirthDate = (
		----select top 1
		----	x.BirthDate	
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'SPOUSE'
	 ----)
	 ----, SpouseComment = (
		----select top 1
		----	x.Comment
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'SPOUSE'
	 ----)
	 ----, SpouseTypeOfGift = (
		----select top 1
		----	x.TypeOfGift
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'SPOUSE'
	 ----)
	 ------ ======================================== Child 1
	 ----, ChildName1 = (
		----select top 1
		----	x.FullName	
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_1'
	 ----)
	 ----, ChildTelephone1 = (
		----select top 1
		----	x.PhoneNo	
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_1'
	 ----)
	 ----, ChildBirthDate1 = (
		----select top 1
		----	x.BirthDate	
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_1'
	 ----)
	 ----, ChildComment1 = (
		----select top 1
		----	x.Comment
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_1'
	 ----)
	 ----, ChildTypeOfGift1 = (
		----select top 1
		----	x.TypeOfGift
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_1'
	 ----)
	 ------ ======================================== Child 2
	 ----, ChildName2 = (
		----select top 1
		----	x.FullName	
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_2'
	 ----)
	 ----, ChildTelephone2 = (
		----select top 1
		----	x.PhoneNo	
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_2'
	 ----)
	 ----, ChildBirthDate2 = (
		----select top 1
		----	x.BirthDate	
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_2'
	 ----),
	 ----ChildComment2 = (
		----select top 1
		----	x.Comment
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_2'
	 ----)
	 ----, ChildTypeOfGift2 = (
		----select top 1
		----	x.TypeOfGift
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_2'
	 ----)
	 ------ ======================================== Child 3
	 ----, ChildName3 = (
		----select top 1
		----	x.FullName	
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_3'
	 ----)
	 ----, ChildTelephone3 = (
		----select top 1
		----	x.PhoneNo	
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_3'
	 ----)
	 ----, ChildBirthDate3 = (
		----select top 1
		----	x.BirthDate	
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_3'
	 ----),
	 ----ChildComment3 = (
		----select top 1
		----	x.Comment
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_3'
	 ----)
	 ----, ChildTypeOfGift3 = (
		----select top 1
		----	x.TypeOfGift
		----from 
		----	CsCustRelation x
		----where
		----	x.CompanyCode = a.CompanyCode
		----	and
		----	x.CustomerCode = a.CustomerCode
		----	and
		----	x.RelationType = 'CHILD_3'
	 ----)
  ----   , BPKDate = convert(varchar(11),getdate(),106)
  ----   , e.SalesModelCode as CarType
  ----   , e.ColourCode as Color
  ----   , h.PoliceRegNo 
  ----   , e.EngineCode + convert(varchar, e.EngineNo) as Engine 
  ----   , (e.ChassisCode + convert(varchar, e.ChassisNo)) Chassis
  ----   , f.Salesman as SalesmanCode
  ----   , g.EmployeeName as SalesmanName
	 ----, CustomerComment = c.Comment
	 ----, c.AdditionalInquiries
	 ----, c.Status
  from gnMstCustomer a
  inner join gnMstOrganizationHdr b
    on b.CompanyCode = a.CompanyCode
  inner join csCustBirthday c
	on c.CompanyCode = a.CompanyCode
   and c.CustomerCode = a.CustomerCode
   and c.PeriodYear = DATEPART(YEAR, getdate())
 -- inner join CsTdayCall d
	--on a.CompanyCode = d.CompanyCode
 --  and a.CustomerCode = d.CustomerCode
  --left join omTrSalesSOVin e
  --  on e.CompanyCode = d.CompanyCode
  -- and (e.ChassisCode + convert(varchar, e.ChassisNo)) = d.Chassis
  --left join omTrSalesSO f
  --  on f.CompanyCode = e.CompanyCode
  -- and f.BranchCode = e.BranchCode
  -- and f.SONo = e.SONo
  --left join gnMstEmployee g
  --  on g.CompanyCode = f.CompanyCode
  -- and g.BranchCode = f.BranchCode
  -- and g.EmployeeID = f.Salesman
  --left join svMstCustomerVehicle h
  --  on h.CompanyCode = d.CompanyCode
  -- and h.ChassisCode + convert(varchar, h.ChassisNo) = d.Chassis
  where 1=1
	--and convert(varchar, @DateFrom, 112) < left(convert(varchar, a.BirthDate, 112), 6) + convert(varchar, convert(int, right(convert(varchar, a.BirthDate, 112), 2)) + 3)
	--and convert(varchar, @DateTo, 112) > left(convert(varchar, a.BirthDate, 112), 6) + convert(varchar, convert(int, right(convert(varchar, a.BirthDate, 112), 2)) + 3)
	--and datepart(MONTH, a.BirthDate) between @DateFrom and @DateTo

end
GO
CREATE procedure [dbo].[sp_spMasterPartSelect4Lookup] ( 
	@CompanyCode varchar(15)
	,@BranchCode varchar(15)
	,@TypeOfGoods varchar(15)
	,@ProductType varchar(15)
)
AS
	SELECT 
	 Items.PartNo
	,Items.ProductType
	,(SELECT LookupValueName 
		FROM gnMstLookupDtl 
	   WHERE CodeID = 'PRCT' AND 
			 LookUpValue = Items.PartCategory AND 
			 CompanyCode = @CompanyCode) AS CategoryName
	,Items.PartCategory
	,ItemInfo.PartName
	,CASE ItemInfo.IsGenuinePart WHEN 1 THEN 'Ya' ELSE 'Tidak' END AS IsGenuinePart
	,CASE Items.Status WHEN 1 THEN 'Aktif' ELSE 'Tidak' END AS IsActive
	,ItemInfo.OrderUnit
	,ItemInfo.SupplierCode
	,Supplier.SupplierName
	,(SELECT LookupValueName 
		FROM gnMstLookupDtl 
	  WHERE CodeID = 'TPGO' AND 
			LookUpValue = Items.TypeOfGoods AND 
			CompanyCode = @CompanyCode) AS TypeOfGoods
	FROM SpMstItems Items
	INNER JOIN SpMstItemInfo ItemInfo   ON Items.CompanyCode  = ItemInfo.CompanyCode                          
							 AND Items.PartNo = ItemInfo.PartNo
	LEFT JOIN GnMstSupplier Supplier ON Supplier.CompanyCode  = Items.CompanyCode 
							 AND Supplier.SupplierCode = ItemInfo.SupplierCode
	WHERE Items.CompanyCode = @CompanyCode
	  AND Items.BranchCode  = @BranchCode    
	  AND Items.TypeOfGoods = @TypeOfGoods
	  AND Items.ProductType = @ProductType
GO
CREATE procedure [dbo].[sp_MstOthersInventoryBrowse] @CompanyCode varchar(10), @BranchCode varchar(10)
as

SELECT a.OthersNonInventory, a.OthersNonInventoryDesc, a.OthersNonInventoryAccNo, b.Description, a.Remark, a.IsActive
FROM omMstOthersNonInventory a
INNER JOIN GnMstAccount b
ON a.OthersNonInventoryAccNo=b.AccountNo
WHERE a.CompanyCode=@CompanyCode AND a.BranchCode=@BranchCode
GO
CREATE procedure [dbo].[sp_MstPriceListBeliBrowse] @CompanyCode varchar(10) , @BranchCode varchar(100)
 as

SELECT a.CompanyCode, a.BranchCode, a.SupplierCode, b.SupplierName, a.SalesModelCode, c.SalesModelDesc, a.SalesModelYear
		,a.PPnBMPaid, a.DPP, a.PPn, a.PPnBM, a.Total, a.Remark, cast(a.Status AS bit) as Status
FROM omMstPricelistBuy a
LEFT JOIN gnMstSupplier b
	ON a.SupplierCode = b.SupplierCode
LEFT JOIN omMstModel c
	ON a.SalesModelCode = c.SalesModelCode
WHERE a.CompanyCode = @CompanyCode and a.BranchCode = @BranchCode
GO
CREATE procedure [dbo].[sp_ModelAccountBrowse]  @CompanyCode varchar(10), @BranchCode varchar(10)
 as

 SELECT a.CompanyCode, a.BranchCode, a.SalesModelCode, z.SalesModelDesc
		, SalesAccNo, DiscountAccNo, ReturnAccNo, COGsAccNo,HReturnAccNo
		, b.Description as SalesAccDesc, c.Description as DiscountAccDesc, d.Description as ReturnAccDesc, e.Description as COGsAccDesc, f.Description as HReturnAccDesc
		, SalesAccNoAks, ReturnAccNoAks, DiscountAccNoAks
		, g.Description as SalesAccDescAks, h.Description as ReturnAccDescAks, i.Description as DiscountAccDescAks
		, ShipAccNo, DepositAccNo, OthersAccNo, BBNAccNo, KIRAccNo
		,j.Description as ShipAccDesc, k.Description as DepositAccDesc, l.Description as OthersAccDesc, m.Description as BBNAccDesc, n.Description as KIRAccDesc
		, PReturnAccNo, InTransitTransferStockAccNo
		, o.Description as PReturnAccDesc, p.Description as IntransitAccDesc
		, a.Remark, IsActive, a.InventoryAccNo, q.Description as InventoryAccDesc
-- select *
FROM omMstModelAccount a
LEFT JOIN GnMstAccount b
	ON a.SalesAccNo = b.AccountNo
LEFT JOIN GnMstAccount c
	ON a.DiscountAccNo = c.AccountNo
LEFT JOIN GnMstAccount d
	ON a.ReturnAccNo = d.AccountNo
LEFT JOIN GnMstAccount e
	ON a.COGsAccNo = e.AccountNo
LEFT JOIN GnMstAccount f
	ON a.HReturnAccNo = f.AccountNo
LEFT JOIN GnMstAccount g
	ON a.SalesAccNoAks = g.AccountNo
LEFT JOIN GnMstAccount h
	ON a.ReturnAccNoAks = h.AccountNo
LEFT JOIN GnMstAccount i
	ON a.DiscountAccNoAks = i.AccountNo
LEFT JOIN GnMstAccount j
	ON a.ShipAccNo = j.AccountNo
LEFT JOIN GnMstAccount k
	ON a.DepositAccNo = k.AccountNo
LEFT JOIN GnMstAccount l
	ON a.OthersAccNo = l.AccountNo
LEFT JOIN GnMstAccount m
	ON a.BBNAccNo = m.AccountNo
LEFT JOIN GnMstAccount n
	ON a.KIRAccNo = n.AccountNo
LEFT JOIN GnMstAccount o
	ON a.PReturnAccNo = o.AccountNo AND o.BranchCode = @BranchCode
LEFT JOIN GnMstAccount p
	ON a.InTransitTransferStockAccNo = p.AccountNo AND p.BranchCode = @BranchCode
LEFT JOIN GnMstAccount q
	ON a.InventoryAccNo = q.AccountNo
INNER JOIN omMstModel z
	ON a.SalesModelCode = z.SalesModelCode
WHERE a.CompanyCode = @CompanyCode AND a.BranchCode = @BranchCode
GO
CREATE procedure [dbo].[sp_ModelAccountLookup]  @CompanyCode varchar(10), @BranchCode varchar(10), @SalesModelCode varchar(100)
 as

 SELECT a.CompanyCode, a.BranchCode, a.SalesModelCode, z.SalesModelDesc
		, SalesAccNo, DiscountAccNo, ReturnAccNo, COGsAccNo,HReturnAccNo
		, b.Description as SalesAccDesc, c.Description as DiscountAccDesc, d.Description as ReturnAccDesc, e.Description as COGsAccDesc, f.Description as HReturnAccDesc
		, SalesAccNoAks, ReturnAccNoAks, DiscountAccNoAks
		, g.Description as SalesAccDescAks, h.Description as ReturnAccDescAks, i.Description as DiscountAccDescAks
		, ShipAccNo, DepositAccNo, OthersAccNo, BBNAccNo, KIRAccNo
		,j.Description as ShipAccDesc, k.Description as DepositAccDesc, l.Description as OthersAccDesc, m.Description as BBNAccDesc, n.Description as KIRAccDesc
		, PReturnAccNo, InTransitTransferStockAccNo
		, o.Description as PReturnAccDesc, p.Description as IntransitAccDesc
		, a.Remark, IsActive, a.InventoryAccNo, q.Description as InventoryAccDesc
-- select *
FROM omMstModelAccount a
LEFT JOIN GnMstAccount b
	ON a.SalesAccNo = b.AccountNo
LEFT JOIN GnMstAccount c
	ON a.DiscountAccNo = c.AccountNo
LEFT JOIN GnMstAccount d
	ON a.ReturnAccNo = d.AccountNo
LEFT JOIN GnMstAccount e
	ON a.COGsAccNo = e.AccountNo
LEFT JOIN GnMstAccount f
	ON a.HReturnAccNo = f.AccountNo
LEFT JOIN GnMstAccount g
	ON a.SalesAccNoAks = g.AccountNo
LEFT JOIN GnMstAccount h
	ON a.ReturnAccNoAks = h.AccountNo
LEFT JOIN GnMstAccount i
	ON a.DiscountAccNoAks = i.AccountNo
LEFT JOIN GnMstAccount j
	ON a.ShipAccNo = j.AccountNo
LEFT JOIN GnMstAccount k
	ON a.DepositAccNo = k.AccountNo
LEFT JOIN GnMstAccount l
	ON a.OthersAccNo = l.AccountNo
LEFT JOIN GnMstAccount m
	ON a.BBNAccNo = m.AccountNo
LEFT JOIN GnMstAccount n
	ON a.KIRAccNo = n.AccountNo
LEFT JOIN GnMstAccount o
	ON a.PReturnAccNo = o.AccountNo AND o.BranchCode = @BranchCode
LEFT JOIN GnMstAccount p
	ON a.InTransitTransferStockAccNo = p.AccountNo AND p.BranchCode = @BranchCode
LEFT JOIN GnMstAccount q
	ON a.InventoryAccNo = q.AccountNo
INNER JOIN omMstModel z
	ON a.SalesModelCode = z.SalesModelCode
WHERE a.CompanyCode = @CompanyCode AND a.BranchCode = @BranchCode and a.SalesModelCode = @SalesModelCode
GO
CREATE procedure [dbo].[uspfn_omSlsInvLkpSO]     
(    
 @CompanyCode varchar(15),    
 @BranchCode varchar(15)   
)    
AS    
BEGIN    
-- exec uspfn_omSlsInvLkpSO 6006410,600641001  
    SELECT tableA.SONo,tableA.QtyBPK,tableA.QtyInvoice, tableB.CustomerCode, tableB.CustomerName, tableB.BillTo, tableB.BillName,  
    tableB.Address,tableB.SalesType,tableB.SalesTypeDsc,tableB.TOPDays, tableB.SKPKNo, tableB.RefferenceNo      
      FROM (SELECT a.SONo, sum (b.QuantityBPK)  AS QtyBPK, sum (b.QuantityInvoice)  AS QtyInvoice                     
              FROM omTrSalesBPK a, omTrSalesBPKModel b  
             WHERE a.CompanyCode = b.CompanyCode  
                   AND a.BranchCode = b.BranchCode  
                   AND a.BPKNo = b.BPKNo  
                   AND a.CompanyCode = @CompanyCode  
                   AND a.BranchCode = @BranchCode  
                   AND a.Status = '2'  
             GROUP BY a.SONo) tableA,  
           (SELECT a.SONo, a.CustomerCode, b.CustomerName, a.BillTo, b.CustomerName as BillName,  
   b.Address1 + ' ' + b.Address2 + ' ' + b.Address3 + ' ' + b.Address4 as Address,a.SalesType  
            , (CASE ISNULL(a.SalesType, 0) WHEN 0 THEN 'WholeSales' ELSE 'Direct' END) AS SalesTypeDsc  
            , ISNULL(a.TOPDays, 0) AS TOPDays, a.SKPKNo, a.RefferenceNo  
              FROM omTrSalesSO a  
     LEFT JOIN gnMstCustomer b ON a.CompanyCode = b.CompanyCode AND a.CustomerCode = b.CustomerCode  
             WHERE a.CompanyCode = @CompanyCode  
                   AND a.BranchCode = @BranchCode  
                   AND a.Status = '2') tableB  
    WHERE tableA.QtyBPK > tableA.QtyInvoice AND tableA.SONo = tableB.SONo 
    AND tableA.SONo NOT IN (SELECT z.SONo FROM omTrSalesInvoice z)  
      
 ORDER BY tableA.SONo  
END
GO
CREATE procedure [dbo].[sp_MstPriceListJualView] @CompanyCode varchar(10) , @BranchCode varchar(100)
													, @GroupPriceCode varchar(10),@SalesModelCode varchar(100), @SalesModelYear varchar(10)
 as

SELECT a.CompanyCode, a.BranchCode, a.GroupPriceCode, b.RefferenceDesc1 as GroupPriceName, a.SalesModelCode, c.SalesModelDesc, a.SalesModelYear
		, a.*
FROM omMstPricelistSell a
LEFT JOIN OmMstRefference b
	ON a.GroupPriceCode = b.RefferenceCode AND b.RefferenceType='GRPR'
LEFT JOIN omMstModel c
	ON a.SalesModelCode = c.SalesModelCode
WHERE a.CompanyCode = @CompanyCode and a.BranchCode = @BranchCode
		and a.GroupPriceCode = @GroupPriceCode and a.SalesModelCode = @SalesModelCode and a.SalesModelYear = @SalesModelYear
GO
CREATE procedure [dbo].[uspfn_SvTrnServiceSelectPesananPekerjaanLuar]
	@CompanyCode varchar(15),
	@BranchCode  varchar(15),
	@ProductType  varchar(15),
	@ShowAll bit
AS
-- EXEC uspfn_SvTrnServiceSelectPesananPekerjaanLuar '6156401000', '6156401001', '4W', '0'

declare @Query varchar(max)
declare @Condition varchar(4000);

set @Condition = '';
if(@ShowAll = 0) begin
	set @Condition = ' AND svTrnService.ServiceStatus IN (0,1,2,3,4) 
		AND srvTask.PONo = '''' AND srvTask.ServiceNo IS NOT NULL AND srvTask.IsSubCon = 1 ';
end 

set @Query = '
SELECT DISTINCT 
    svTrnService.InvoiceNo
    , svTrnService.ServiceNo
    , svTrnService.ServiceType
    , ForemanID
    , EstimationNo
    , EstimationDate
    , BookingNo
    , BookingDate
    , svTrnService.JobOrderNo
    , svTrnService.JobOrderDate
    , svTrnService.PoliceRegNo
    , ServiceBookNo
    , svTrnService.BasicModel
    , TransmissionType
    , svTrnService.ChassisCode
    , svTrnService.ChassisNo
    , svTrnService.EngineCode
    , svTrnService.EngineNo
    , svTrnService.ChassisCode + '' '' + cast(svTrnService.ChassisNo as  varchar) KodeRangka
    , svTrnService.EngineCode + '' '' + cast(svTrnService.EngineNo as varchar) KodeMesin
    , ColorCode
    , (svTrnService.CustomerCode + '' - '' + gnMstCustomer.CustomerName) as Customer
    , (svTrnService.CustomerCodeBill + '' - '' + custBill.CustomerName) as CustomerBill
    , svTrnService.CustomerCode
    , svTrnService.CustomerCodeBill
    , svTrnService.Odometer
    , svTrnService.JobType
    , case when svTrnService.ServiceStatus=''4'' then
            case when ''' + @ProductType + '''=''4W'' then reffService.Description
                else reffService.LockingBy
            end
        else reffService.Description 
    end ServiceStatus
    --, svTrnService.PoliceRegNo
	--, svTrnService.CustomerCode
    , InsurancePayFlag
    , InsuranceOwnRisk
    , InsuranceNo
    , InsuranceJobOrderNo
    --, svTrnService.CustomerCodeBill
    , svTrnService.LaborDiscPct
    , PartDiscPct
    , svTrnService.MaterialDiscPct
    , svTrnService.PPNPct
    , svTrnService.ServiceRequestDesc
    , ConfirmChangingPart
    --, ForemanID
    , svTrnService.MechanicID
    , EstimateFinishDate
    , svTrnService.LaborDPPAmt
    , svTrnService.PartsDPPAmt
    , svTrnService.MaterialDPPAmt
    , TotalDPPAmount
    , TotalPpnAmount
    , TotalPphAmount
    , TotalSrvAmount
    , employee.EmployeeName
    , (custBill.Address1 + '''' + custBill.Address2 + '''' + custBill.Address3 + '''' + custBill.Address4) as AddressBill
    , custBill.NPWPNo
    , custBill.PhoneNo
    , custBill.HPNo
FROM svTrnService WITH(NOLOCK, NOWAIT)
LEFT JOIN gnMstCustomer 
    ON gnMstCustomer.CompanyCode = svTrnService.CompanyCode 
    AND gnMstCustomer.CustomerCode = svTrnService.CustomerCode
LEFT JOIN gnMstCustomer custBill 
    ON custBill.CompanyCode = svTrnService.CompanyCode
    AND custBill.CustomerCode = svTrnService.CustomerCodeBill
LEFT JOIN gnMstEmployee employee
    ON employee.CompanyCode = svTrnService.CompanyCode
    AND employee.BranchCode = svTrnService.BranchCode
	AND employee.EmployeeID = svTrnService.ForemanID
LEFT JOIN svTrnSrvItem srvItem 
    ON srvItem.CompanyCode = svTrnService.CompanyCode
    AND srvItem.BranchCode = svTrnService.BranchCode
    AND srvItem.ProductType = svTrnService.ProductType
    AND srvItem.ServiceNo = svTrnService.ServiceNo
LEFT JOIN svTrnSrvTask srvTask
    ON srvTask.CompanyCode = svTrnService.CompanyCode
    AND srvTask.BranchCode = svTrnService.BranchCode
    AND srvTask.ProductType = svTrnService.ProductType
    AND srvTask.ServiceNo = svTrnService.ServiceNo
LEFT JOIN svMstRefferenceService reffService
    ON reffService.CompanyCode = svTrnService.CompanyCode
    AND reffService.ProductType = svTrnService.ProductType    
    AND reffService.RefferenceCode = svTrnService.ServiceStatus
    AND reffService.RefferenceType = ''SERVSTAS''
LEFT JOIN svTrnInvoice invoice
	ON invoice.CompanyCode = svTrnService.CompanyCode
	AND invoice.BranchCode = svTrnService.BranchCode
	AND invoice.ProductType = svTrnService.ProductType
	AND invoice.JobOrderNo = svTrnService.JobOrderNo
LEFT JOIN svTrnSrvVOR VOR
    ON VOR.CompanyCode = svTrnService.CompanyCode
	AND VOR.BranchCode = svTrnService.BranchCode
    AND VOR.ServiceNo = svTrnService.ServiceNo
WHERE svTrnService.CompanyCode = ''' + @CompanyCode + '''
    AND svTrnService.BranchCode = ''' + @BranchCode + '''
 AND svTrnService.ServiceType = ''2''' + @Condition+ ' ORDER BY svTrnService.JobOrderNo DESC';

EXEC (@Query)
GO
CREATE procedure [dbo].[sp_MstPriceListJualBrowse] @CompanyCode varchar(10) , @BranchCode varchar(100)
 as

SELECT a.CompanyCode, a.BranchCode, a.GroupPriceCode, b.RefferenceDesc1 as GroupPriceName, a.SalesModelCode, c.SalesModelDesc, a.SalesModelYear
		, a.TotalMinStaff, a.DPP, a.PPn, a.PPnBM, a.Total, a.Remark, cast(a.Status AS bit) as Status, a.TaxCode, a.TaxPct
FROM omMstPricelistSell a
LEFT JOIN OmMstRefference b
	ON a.GroupPriceCode = b.RefferenceCode AND b.RefferenceType='GRPR'
LEFT JOIN omMstModel c
	ON a.SalesModelCode = c.SalesModelCode
WHERE a.CompanyCode = @CompanyCode and a.BranchCode = @BranchCode
GO
CREATE procedure [dbo].[sp_KaroseriBrowse]  @CompanyCode varchar(10), @BranchCode varchar(10)
 as

select a.CompanyCode, a.BranchCode, a.SupplierCode, b.SupplierName, a.SalesModelCode, c.SalesModelDesc, a.SalesModelCodeNew, d.SalesModelDesc as SalesModelDescNew
		,a.DPPMaterial, a.DPPFee, a.DPPOthers, a.PPn, a.Total, a.Remark, cast(a.Status AS bit) as Status
from omMstKaroseri a
INNER JOIN gnMstSupplier b
	ON a.SupplierCode = b.SupplierCode
INNER JOIN omMstModel c
	ON a.SalesModelCode = c.SalesModelCode
INNER JOIN omMstModel d
	ON a.SalesModelCodeNew = d.SalesModelCode
WHERE a.CompanyCode = @CompanyCode AND a.BranchCode = @BranchCode
GO


CREATE procedure [dbo].[sp_SpPosLkp]
@CompanyCode varchar(15),  
@BranchCode varchar(15),   
@TypeOfGoods  varchar(15)
as

SELECT 
 a.POSNo
,a.PosDate
,ISNULL(a.IsDeleted, 0) IsDeleted
,a.SupplierCode
,b.SupplierName
FROM spTrnPPOSHdr a
INNER JOIN gnMstSupplier b ON b.SupplierCode = a.SupplierCode and b.CompanyCode = a.CompanyCode
WHERE a.CompanyCode=@CompanyCode 
	  AND a.BranchCode=@BranchCode
      AND a.IsDeleted=0 
      AND TypeOfGoods = @TypeOfGoods
ORDER BY a.POSNo ASC
GO
CREATE procedure [dbo].[sp_InsertHistoryItemStatusTuning] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@Year numeric(10),
@Month numeric(10),
@CreatedBy varchar(10))


as

DELETE spHstItemStatus WHERE YEAR = @Year AND MONTH = @Month and CompanyCode = @CompanyCode and BranchCode = @BranchCode
SELECT
	a.CompanyCode     
	, a.BranchCode      
	, @Year Year                                    
	, @Month Month                                   
	, a.PartNo   
	, a.WarehouseCode            
	, b.MovingCode      
	, b.ABCClass 
	, ISNULL(c.PurchasePrice, 0) PurchasePrice                           
	, ISNULL(c.CostPrice, 0) CostPrice                               
	, ISNULL(c.RetailPrice, 0) RetailPrice                             
	, ISNULL(c.RetailPriceInclTax, 0) RetailPriceInclTax                     
	, ISNULL(b.LeadTime, 0) LeadTime                                
	, ISNULL(b.OrderPointQty, 0) OrderPoint                              
	, ISNULL(b.SafetyStock, 0) SafetyStock                             
	, ISNULL(b.OrderCycle, 0) OrderCycle                             
	, CASE WHEN a.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(b.OnOrder, 0) ELSE 0 END OnOrder 
	, CASE WHEN a.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(b.InTransit, 0) ELSE 0 END InTransit                              
	, ISNULL(a.OnHand, 0) OnHand                                  
	, ISNULL(a.AllocationSP, 0) AllocationSP                           
	, ISNULL(a.AllocationSR, 0) AllocationSR                            
	, ISNULL(a.AllocationSL, 0) AllocationSL                           
	, ISNULL(a.ReservedSP, 0) ReservedSP                             
	, ISNULL(a.ReservedSR, 0) ReservedSR                             
	, ISNULL(a.ReservedSL, 0) ReservedSL                             
	, ISNULL(a.BackOrderSP, 0) BackOrderSP                            
	, ISNULL(a.BackOrderSR, 0) BackOrderSR                           
	, ISNULL(a.BackOrderSL, 0) BackOrderSL                            
	, ISNULL(b.BorrowQty, 0) BorrowQty                              
	, ISNULL(b.BorrowedQty, 0) BorrowedQty                             
	, CASE WHEN a.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(b.DemandAverage, 0) ELSE 0 END DemandAverage
	, (SELECT ISNULL(DiscPct, 0) FROM spMstItemInfo WHERE CompanyCode = a.CompanyCode AND PartNo = a.PartNo) DiscPct                                
	, CASE WHEN a.WarehouseCode BETWEEN '00' AND '96' THEN b.LastPurchaseDate ELSE '' END LastPurchaseDate       
	, CASE WHEN a.WarehouseCode BETWEEN '00' AND '96' THEN b.LastDemandDate ELSE '' END LastDemandDate        
	, CASE WHEN a.WarehouseCode BETWEEN '00' AND '96' THEN b.LastSalesDate ELSE '' END LastSalesDate         
	, b.Status 
	, b.ProductType 
	, b.PartCategory 
	, b.TypeOfGoods 
	, @CreatedBy CreatedBy       
	, GETDATE() CreatedDate
INTO #TempHstItemStatus	
FROM
	spMstItemLoc a
	LEFT JOIN spMstItems b WITH(NOWAIT, NOLOCK) ON a.CompanyCode = b.CompanyCode AND a.BranchCode = b.BranchCode AND a.PartNo = b.PartNo
	LEFT JOIN spMstItemPrice c WITH(NOWAIT, NOLOCK) ON a.CompanyCode = c.CompanyCode AND a.BranchCode = c.BranchCode AND a.PartNo = c.PartNo	
WHERE
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode

INSERT INTO SpHstItemStatus SELECT * FROM #TempHstItemStatus
DROP TABLE #TempHstItemStatus
GO
CREATE procedure [dbo].[sp_InsertTransactionHistoryTuning] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@Month int,
@Year int,
@CreatedBy varchar(10),
@CreatedDate datetime
)


as

DELETE spHstTransaction WHERE YEAR = @Year AND MONTH = @Month and CompanyCode = @CompanyCode and BranchCode = @BranchCode
SELECT 
	itemLoc.CompanyCode
    , itemLoc.BranchCode
    , itemLoc.PartNo
	, @Year Year
	, @Month Month
    , itemLoc.WarehouseCode
    , ProductType
    , PartCategory
    , MovingCode
    , ABCClass
    , TypeOfGoods
    , ISNULL(CostPrice, 0) CostPrice        
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(Receiving.ReceivingForPurchaseQty, 0) ELSE 0 END ReceivingForPurchaseQty
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(Receiving.ReceivingForNPurchaseQty, 0) ELSE 0 END ReceivingForNPurchaseQty
	, ISNULL(Adjustment.AdjustmentPlusQty, 0) AdjustmentPlusQty
	, ISNULL(Adjustment.AdjustmentMinusQty, 0) AdjustmentMinusQty
	, ISNULL(WHTrf.WTHOutQty, 0) WTHOutQty
	, ISNULL(WHTrf.WTHInQty, 0) WTHInQty
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(FPJ.SalesForCreditQty, 0) ELSE 0 END SalesForCreditQty
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(FPJ.SalesForCashQty, 0) ELSE 0 END SalesForCashQty
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(Lmp.SalesForBPSQty, 0) ELSE 0 END SalesForBPSQty
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(Lmp.SalesForServiceQty, 0) ELSE 0 END SalesForServiceQty
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(Lmp.SalesForUnitQty, 0) ELSE 0 END SalesForUnitQty
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(SRtur.ReturForSalesCreditQty, 0) ELSE 0 END ReturForSalesCreditQty
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(SRtur.ReturForSalesCashQty, 0) ELSE 0 END ReturForSalesCashQty
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(SRturSS.ReturnForBPSQty, 0) ELSE 0 END ReturnForBPSQty
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(SRturSS.ReturForServiceQty, 0) ELSE 0 END ReturForServiceQty
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(SRturSS.ReturForUnitQty, 0) ELSE 0 END ReturForUnitQty
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(POS.PurchaseOrderQty, 0) ELSE 0 END PurchaseOrderQty
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(Balance.OnOrderQty, 0) ELSE 0 END OnOrderQty
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(Balance.InTransitQty, 0) ELSE 0 END InTransitQty
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(BO.BackOrderQty, 0) ELSE 0 END BackOrderQty
	, ISNULL(itemLoc.OnHand, 0) OnHand
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(Receiving.ReceivingForPurchaseAmt, 0) ELSE 0 END ReceivingForPurchaseAmt
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(Receiving.ReceivingForNPurchaseAmt, 0) ELSE 0 END ReceivingForNPurchaseAmt
	, ISNULL(Adjustment.AdjustmentPlusAmt, 0) AdjustmentPlusAmt
	, ISNULL(Adjustment.AdjustmentMinusAmt, 0) AdjustmentMinusAmt
	, ISNULL(WHTrf.WTHOutAmt, 0) WTHOutAmt
	, ISNULL(WHTrf.WTHInAmt, 0) WTHInAmt
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(FPJ.SalesForCreditAmt, 0) ELSE 0 END SalesForCreditAmt
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(FPJ.SalesForCashAmt, 0) ELSE 0 END SalesForCashAmt
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(Lmp.SalesForBPSAmt, 0) ELSE 0 END SalesForBPSAmt
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(Lmp.SalesForServiceAmt, 0) ELSE 0 END SalesForServiceAmt
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(Lmp.SalesForUnitAmt, 0) ELSE 0 END SalesForUnitAmt
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(SRtur.ReturForSalesCreditAmt, 0) ELSE 0 END ReturForSalesCreditAmt
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(SRtur.ReturForSalesCashAmt, 0) ELSE 0 END ReturForSalesCashAmt
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(SRturSS.ReturnForBPSAmt, 0) ELSE 0 END ReturnForBPSAmt
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(SRturSS.ReturForServiceAmt, 0) ELSE 0 END ReturForServiceAmt
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(SRturSS.ReturForUnitAmt, 0) ELSE 0 END ReturForUnitAmt
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(POS.PurchaseOrderAmt, 0) ELSE 0 END PurchaseOrderAmt
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(Balance.OnOrderAmt, 0) ELSE 0 END OnOrderAmt
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(Balance.InTransitAmt, 0) ELSE 0 END InTransitAmt
	, CASE WHEN itemLoc.WarehouseCode BETWEEN '00' AND '96' THEN ISNULL(BO.BackOrderAmt, 0) ELSE 0 END BackOrderAmt
	, ISNULL(itemLoc.OnHand, 0) * ISNULL(itemPrice.CostPrice, 0) OnHandAmt
	, @CreatedBy CreatedBy
	, @CreatedDate CreatedDate
INTO #HstTransaction
FROM spMstItemLoc itemLoc WITH(NOLOCK, NOWAIT)
	LEFT JOIN (SELECT rcvDtl.PartNo, rcvDtl.WarehouseCode 
		    , SUM(CASE WHEN (rcvHdr.ReceivingType in (1,2) AND rcvHdr.TransType = 4) THEN ISNULL(rcvDtl.ReceivedQty, 0) ELSE 0 END) ReceivingForPurchaseQty
            , SUM(CASE WHEN NOT (rcvHdr.ReceivingType in (1,2) AND rcvHdr.TransType = 4) THEN ISNULL(rcvDtl.ReceivedQty, 0) ELSE 0 END) ReceivingForNPurchaseQty	
            , SUM(CASE WHEN (rcvHdr.ReceivingType in (1,2) AND rcvHdr.TransType = 4) THEN ISNULL(rcvDtl.ReceivedQty, 0) * ISNULL(rcvDtl.PurchasePrice, 0) - ROUND(ISNULL(rcvDtl.ReceivedQty, 0) * ISNULL(rcvDtl.PurchasePrice, 0) * ISNULL(rcvDtl.DiscPct, 0) / 100, 0) ELSE 0 END) ReceivingForPurchaseAmt
            , SUM(CASE WHEN NOT (rcvHdr.ReceivingType in (1,2) AND rcvHdr.TransType = 4) THEN ISNULL(rcvDtl.ReceivedQty, 0) * ISNULL(rcvDtl.PurchasePrice, 0) - ROUND(ISNULL(rcvDtl.ReceivedQty, 0) * ISNULL(rcvDtl.PurchasePrice, 0) * ISNULL(rcvDtl.DiscPct, 0) / 100, 0) ELSE 0 END) ReceivingForNPurchaseAmt			
		FROM spTrnPRcvHdr rcvHdr WITH(NOLOCK, NOWAIT)
			INNER JOIN spTrnPRcvDtl rcvDtl with (nolock, nowait) ON rcvHdr.WRSNo = rcvDtl.WrsNo
				AND rcvHdr.CompanyCode = rcvDtl.CompanyCode
				AND rcvHdr.BranchCode = rcvDtl.BranchCode				                
		WHERE	rcvHdr.CompanyCode = @CompanyCode
			AND rcvHdr.BranchCode = @BranchCode
			AND MONTH(rcvHdr.WRSDate) = @Month 
			AND YEAR(rcvHdr.WRSDate) = @Year
			AND rcvHdr.Status NOT IN (0, 1, 3)
		GROUP BY rcvDtl.PartNo, rcvDtl.WarehouseCode			
	) Receiving ON itemLoc.PartNo = Receiving.PartNo AND itemloc.WarehouseCode = Receiving.WarehouseCode
	LEFT JOIN (SELECT adjDtl.PartNo, adjDtl.WarehouseCode
			, SUM(CASE adjustmentCode WHEN '+' THEN ISNULL(QtyAdjustment, 0) ELSE 0 END) AdjustmentPlusQty
			, SUM(CASE adjustmentCode WHEN '-' THEN ISNULL(QtyAdjustment, 0) ELSE 0 END) AdjustmentMinusQty	
            , SUM(CASE adjustmentCode WHEN '+' THEN ISNULL(QtyAdjustment, 0) * ISNULL(CostPrice, 0) ELSE 0 END) AdjustmentPlusAmt
			, SUM(CASE adjustmentCode WHEN '-' THEN ISNULL(QtyAdjustment, 0) * ISNULL(CostPrice, 0) ELSE 0 END) AdjustmentMinusAmt	
		FROM spTrnIAdjustHdr adjHdr WITH(NOLOCK, NOWAIT)
			INNER JOIN spTrnIAdjustDtl adjDtl WITH(NOLOCK, NOWAIT) ON adjHdr.AdjustmentNo = adjDtl.AdjustmentNo
				AND adjHdr.CompanyCode = adjDtl.CompanyCode 
				AND adjHdr.BranchCode = adjDtl.BranchCode				                
		WHERE adjHdr.CompanyCode = @CompanyCode
			AND adjHdr.BranchCode  = @BranchCode
			AND MONTH(adjHdr.AdjustmentDate) = @Month
			AND YEAR(adjHdr.AdjustmentDate) = @Year
			AND adjHdr.Status = 2
		GROUP BY adjDtl.PartNo, adjDtl.WarehouseCode
	) Adjustment ON itemLoc.PartNo = Adjustment.PartNo AND itemloc.WarehouseCode = Adjustment.WarehouseCode
	LEFT JOIN (SELECT aWHTrf.PartNo, aWHTrf.warehouseCode 
			, SUM(ISNULL(aWHTrf.WTHOutQty, 0))WTHOutQty , SUM(ISNULL(aWHTrf.WTHInQty, 0))WTHInQty  
            , SUM(ISNULL(aWHTrf.WTHOutAmt, 0))WTHOutAmt , SUM(ISNULL(aWHTrf.WTHInAmt, 0))WTHInAmt
        FROM 
        (SELECT whTrfDtl.PartNo, whTrfDtl.FromWarehouseCode warehouseCode 
			    , SUM(ISNULL(Qty,0)) WTHOutQty, 0 WTHInQty 
                , SUM(ISNULL(Qty, 0) * ISNULL(CostPrice, 0)) WTHOutAmt, 0 WTHInAmt
	        FROM spTrnIWhTrfHdr whTrfHdr WITH(NOLOCK, NOWAIT)
				INNER JOIN spTrnIWhTrfDtl whTrfDtl WITH(NOLOCK, NOWAIT) ON whTrfHdr.WHTrfNo = whTrfDtl.WHTrfNo
				AND whTrfHdr.CompanyCode = whTrfDtl.CompanyCode
				AND whTrfHdr.BranchCode = whTrfDtl.BranchCode			                
			WHERE whTrfHdr.CompanyCode = @CompanyCode
				AND whTrfHdr.BranchCode = @BranchCode
				AND MONTH(whTrfHdr.WHTrfDate) = @Month
				AND YEAR(whTrfHdr.WHTrfDate) = @Year
				AND whTrfHdr.Status = 2
			GROUP BY whTrfDtl.PartNo, whTrfDtl.FromWarehouseCode
			UNION ALL
			SELECT whTrfDtl.PartNo, whTrfDtl.ToWarehouseCode warehouseCode 
				,0 WTHOutQty, SUM(ISNULL(Qty, 0)) WTHInQty 
                ,0 WTHOutAmt, SUM(ISNULL(Qty, 0) * ISNULL(CostPrice, 0)) WTHInAmt 
			FROM spTrnIWhTrfHdr whTrfHdr WITH(NOLOCK, NOWAIT)
				INNER JOIN spTrnIWhTrfDtl whTrfDtl WITH(NOLOCK, NOWAIT) ON whTrfHdr.WHTrfNo = whTrfDtl.WHTrfNo
				AND whTrfHdr.CompanyCode = whTrfDtl.CompanyCode
				AND whTrfHdr.BranchCode = whTrfDtl.BranchCode			                
			WHERE whTrfHdr.CompanyCode = @CompanyCode
				AND whTrfHdr.BranchCode = @BranchCode
				AND MONTH(whTrfHdr.WHTrfDate) = @Month
				AND YEAR(whTrfHdr.WHTrfDate) = @Year
				AND whTrfHdr.Status = 2
			GROUP BY whTrfDtl.PartNo, whTrfDtl.ToWarehouseCode 
        ) aWHTrf
        GROUP BY aWHTrf.PartNo, aWHTrf.WarehouseCode
	) WHTrf ON itemLoc.PartNo = WHTrf.PartNo AND itemloc.WarehouseCode = WHTrf.WarehouseCode
	LEFT JOIN (SELECT fpjDtl.PartNo, fpjDtl.WarehouseCode
            , SUM(CASE WHEN (fpjHdr.TOPDays = 0) THEN ISNULL(QtyBill, 0) ELSE 0 END) as SalesForCashQty
            , SUM(CASE WHEN (fpjHdr.TOPDays > 0) THEN ISNULL(QtyBill, 0) ELSE 0 END) as SalesForCreditQty
            , SUM(CASE WHEN (fpjHdr.TOPDays = 0) THEN ISNULL(QtyBill, 0) * ISNULL(CostPrice, 0) ELSE 0 END) as SalesForCashAmt
            , SUM(CASE WHEN (fpjHdr.TOPDays > 0) THEN ISNULL(QtyBill, 0) * ISNULL(CostPrice, 0) ELSE 0 END) as SalesForCreditAmt
        FROM spTrnSFPJHdr fpjHdr WITH(NOLOCK, NOWAIT)
            INNER JOIN spTrnSFPJDtl fpjDtl WITH(NOLOCK, NOWAIT) ON fpjHdr.FPJNo = fpjDtl.FPJNo
                AND fpjHdr.CompanyCode = fpjDtl.CompanyCode
                AND fpjHdr.BranchCode = fpjDtl.BranchCode				                
        WHERE fpjHdr.CompanyCode = @CompanyCode
            AND fpjHdr.BranchCode = @BranchCode
            AND MONTH(fpjHdr.FPJDate) = @Month
            AND YEAR(fpjHdr.FPJDate) = @Year
        GROUP BY fpjDtl.PartNo, fpjDtl.WarehouseCode
	) FPJ ON itemLoc.PartNo = FPJ.PartNo AND itemloc.WarehouseCode = FPJ.WarehouseCode
	LEFT JOIN (SELECT lmpDtl.PartNo, lmpDtl.WarehouseCode
            , SUM(CASE bpsHdr.SalesType WHEN 1 THEN ISNULL(lmpDtl.QtyBill, 0) ELSE 0 END) as SalesForBPSQty
            , SUM(CASE bpsHdr.SalesType WHEN 2 THEN ISNULL(lmpDtl.QtyBill, 0) ELSE 0 END) as SalesForServiceQty
            , SUM(CASE bpsHdr.SalesType WHEN 3 THEN ISNULL(lmpDtl.QtyBill, 0) ELSE 0 END) as SalesForUnitQty
            , SUM(CASE bpsHdr.SalesType WHEN 1 THEN ISNULL(lmpDtl.QtyBill, 0) * ISNULL(lmpDtl.CostPrice, 0) ELSE 0 END) as SalesForBPSAmt
            , SUM(CASE bpsHdr.SalesType WHEN 2 THEN ISNULL(lmpDtl.QtyBill, 0) * ISNULL(lmpDtl.CostPrice, 0) ELSE 0 END) as SalesForServiceAmt
            , SUM(CASE bpsHdr.SalesType WHEN 3 THEN ISNULL(lmpDtl.QtyBill, 0) * ISNULL(lmpDtl.CostPrice, 0) ELSE 0 END) as SalesForUnitAmt
        FROM spTrnSLmpHdr lmpHdr WITH(NOLOCK, NOWAIT)
            INNER JOIN spTrnSBPSFHdr bpsHdr WITH(NOLOCK, NOWAIT) ON lmpHdr.BPSFNo = bpsHdr.BPSFNo
                AND lmpHdr.CompanyCode = bpsHdr.CompanyCode
                AND lmpHdr.BranchCode = bpsHdr.BranchCode
            INNER JOIN spTrnSLmpDtl lmpDtl WITH(NOLOCK, NOWAIT) ON lmpHdr.LmpNo = lmpDtl.LmpNo
                AND lmpHdr.CompanyCode = lmpDtl.CompanyCode
                AND lmpHdr.BranchCode = lmpDtl.BranchCode				                
        WHERE lmpHdr.CompanyCode = @CompanyCode
            AND lmpHdr.BranchCode = @BranchCode
            AND MONTH(lmpHdr.LmpDate) = @Month
            AND YEAR(lmpHdr.LmpDate) = @Year
        GROUP BY lmpDtl.PartNo, lmpDtl.WarehouseCode
	) Lmp ON itemLoc.PartNo = Lmp.PartNo AND itemloc.WarehouseCode = Lmp.WarehouseCode
	LEFT JOIN (SELECT rtrDtl.PartNo, rtrDtl.WarehouseCode
            , SUM(CASE WHEN (fpjHdr.TOPDays = 0) THEN ISNULL(rtrDtl.QtyReturn, 0) ELSE 0 END) as ReturForSalesCashQty
            , SUM(CASE WHEN (fpjHdr.TOPDays > 0) THEN ISNULL(rtrDtl.QtyReturn, 0) ELSE 0 END) as ReturForSalesCreditQty
            , SUM(CASE WHEN (fpjHdr.TOPDays = 0) THEN ISNULL(rtrDtl.QtyReturn, 0) * ISNULL(rtrDtl.CostPrice, 0) ELSE 0 END) as ReturForSalesCashAmt
            , SUM(CASE WHEN (fpjHdr.TOPDays > 0) THEN ISNULL(rtrDtl.QtyReturn, 0) * ISNULL(rtrDtl.CostPrice, 0) ELSE 0 END) as ReturForSalesCreditAmt
        FROM spTrnSRturHdr rtrHdr WITH(NOLOCK, NOWAIT)
            INNER JOIN spTrnSFPJHdr fpjHdr WITH(NOLOCK, NOWAIT) ON rtrHdr.FPJNo = fpjHdr.FPJNo
                AND rtrHdr.CompanyCode = fpjHdr.CompanyCode
                AND rtrHdr.BranchCode = fpjHdr.BranchCode
            INNER JOIN spTrnSRturDtl rtrDtl WITH(NOLOCK, NOWAIT) ON rtrHdr.ReturnNo = rtrDtl.ReturnNo
                AND rtrHdr.CompanyCode = rtrDtl.CompanyCode 
                AND rtrHdr.BranchCode = rtrDtl.BranchCode 				                
        WHERE	rtrHdr.CompanyCode = @CompanyCode
            AND rtrHdr.BranchCode = @BranchCode
            AND MONTH(rtrHdr.ReturnDate) = @Month
            AND YEAR(rtrHdr.ReturnDate) = @Year
            AND rtrHdr.Status = 2
        GROUP BY rtrDtl.PartNo, rtrDtl.WarehouseCode
	) SRtur ON itemLoc.PartNo = SRtur.PartNo AND itemloc.WarehouseCode = SRtur.WarehouseCode
	LEFT JOIN (SELECT rtrSSDtl.PartNo, rtrSSDtl.WarehouseCode
            , SUM(CASE rtrSSHdr.SalesType WHEN 1 THEN ISNULL(QtyReturn, 0) ELSE 0 END) as ReturnForBPSQty
            , SUM(CASE rtrSSHdr.SalesType WHEN 2 THEN ISNULL(QtyReturn, 0) ELSE 0 END) as ReturForServiceQty
            , SUM(CASE rtrSSHdr.SalesType WHEN 3 THEN ISNULL(QtyReturn, 0) ELSE 0 END) as ReturForUnitQty
            , SUM(CASE rtrSSHdr.SalesType WHEN 1 THEN ISNULL(QtyReturn, 0) * ISNULL(CostPrice, 0) ELSE 0 END) as ReturnForBPSAmt
            , SUM(CASE rtrSSHdr.SalesType WHEN 2 THEN ISNULL(QtyReturn, 0) * ISNULL(CostPrice, 0) ELSE 0 END) as ReturForServiceAmt
            , SUM(CASE rtrSSHdr.SalesType WHEN 3 THEN ISNULL(QtyReturn, 0) * ISNULL(CostPrice, 0) ELSE 0 END) as ReturForUnitAmt
        FROM spTrnSRturSSHdr rtrSSHdr WITH(NOLOCK, NOWAIT)
            INNER JOIN spTrnSRturSSDtl rtrSSDtl WITH(NOLOCK, NOWAIT) ON rtrSSHdr.ReturnNo = rtrSSDtl.ReturnNo
                AND rtrSSHdr.CompanyCode = rtrSSDtl.CompanyCode
                AND rtrSSHdr.BranchCode = rtrSSDtl.BranchCode				                
        WHERE	rtrSSHdr.CompanyCode = @CompanyCode
            AND rtrSSHdr.BranchCode = @BranchCode
            AND MONTH(rtrSSHdr.ReturnDate) = @Month
            AND YEAR(rtrSSHdr.ReturnDate) = @Year
            AND rtrSSHdr.Status = 2
        GROUP BY rtrSSDtl.PartNo, rtrSSDtl.WarehouseCode
	) SRturSS ON itemLoc.PartNo = SRturSS.PartNo AND itemloc.WarehouseCode = SRturSS.WarehouseCode
	LEFT JOIN (SELECT posDtl.PartNo, SUM(ISNULL(posDtl.OrderQty, 0)) PurchaseOrderQty,
            SUM(ISNULL(posDtl.OrderQty, 0) * ISNULL(posDtl.PurchasePrice, 0) - ROUND(ISNULL(posDtl.OrderQty, 0) * ISNULL(posDtl.PurchasePrice, 0) * ISNULL(posDtl.DiscPct, 0) / 100, 0)) PurchaseOrderAmt
        FROM spTrnPPOSHdr posHDr WITH(NOLOCK, NOWAIT)
            INNER JOIN spTrnPPOSDtl posDtl WITH(NOLOCK, NOWAIT) ON posHdr.POSNo = posDtl.POSNo
                AND posHdr.CompanyCode = posDtl.CompanyCode
                AND posHdr.BranchCode = posDtl.BranchCode				                
        WHERE posHdr.CompanyCode = @CompanyCode 
            AND posHdr.BranchCode = @BranchCode                                
            AND MONTH(posHdr.POSDate) = @Month
            AND YEAR(posHdr.POSDate) = @Year
            AND posHdr.Status NOT IN (0, 1, 3)
        GROUP BY posDtl.PartNo
	) POS ON itemLoc.PartNo = POS.PartNo
	LEFT JOIN (SELECT PartNo, SUM(ISNULL(OnOrder, 0)) OnOrderQty, SUM(ISNULL(InTransit, 0)) InTransitQty,
            SUM(ISNULL(OnOrder, 0) * ISNULL(PurchasePrice, 0) - ROUND(ISNULL(OnOrder, 0) * ISNULL(PurchasePrice, 0) * ISNULL(DiscPct, 0) / 100, 0)) OnOrderAmt,
            SUM(ISNULL(InTransit, 0) * ISNULL(PurchasePrice, 0) - ROUND(ISNULL(InTransit, 0) * ISNULL(PurchasePrice, 0) * ISNULL(DiscPct, 0) / 100, 0)) InTransitAmt
        FROM spTrnPOrderBalance WITH(NOLOCK, NOWAIT)
        WHERE MONTH(POSDate) = @Month
            AND YEAR(POSDate) = @Year
            AND CompanyCode = @CompanyCode 
            AND BranchCode = @BranchCode
        GROUP BY PartNo
	) Balance ON itemLoc.PartNo = Balance.PartNo
	LEFT JOIN (SELECT ordDtl.PartNo, ordDtl.WarehouseCode
            , SUM(ISNULL(ordDtl.QtyBO, 0) - ISNULL(ordDtl.QtyBOSupply, 0) - ISNULL(ordDtl.QtyBOCancel, 0)) BackOrderQty
            , SUM((ISNULL(ordDtl.QtyBO, 0) - ISNULL(ordDtl.QtyBOSupply, 0) - ISNULL(ordDtl.QtyBOCancel, 0)) * ISNULL(ordDtl.CostPrice, 0)) BackOrderAmt
        FROM spTrnSORDHdr ordHdr WITH(NOLOCK, NOWAIT)
            INNER JOIN spTrnSORDDtl ordDtl WITH(NOLOCK, NOWAIT) ON ordHdr.DocNo = ordDtl.DocNo 
                AND ordHdr.CompanyCode = ordDtl.CompanyCode		
                AND ordHdr.BranchCode = ordDtl.BranchCode				                
        WHERE ordHdr.CompanyCode = @CompanyCode
            AND ordHdr.BranchCode = @BranchCode
            AND MONTH(ordHdr.DocDate) = @Month
            AND YEAR(ordHdr.DocDate) = @Year
            AND ordHdr.Status NOT IN (0, 1, 3)
        GROUP BY ordDtl.PartNo, ordDtl.WarehouseCode
	) BO ON itemLoc.PartNo = BO.PartNo AND itemloc.WarehouseCode = BO.WarehouseCode 
    LEFT JOIN spMstItems items WITH(NOLOCK, NOWAIT) ON itemLoc.PartNo = items.PartNo
        AND itemLoc.CompanyCode = items.CompanyCode
        AND itemLoc.BranchCode = items.BranchCode
    LEFT JOIN spMstItemPrice itemPrice WITH(NOLOCK, NOWAIT) ON itemLoc.PartNo = itemPrice.PartNo
        AND itemLoc.CompanyCode = itemPrice.CompanyCode
        AND itemLoc.BranchCode = itemPrice.BranchCode		
WHERE itemLoc.CompanyCode = @CompanyCode 
	AND itemLoc.BranchCode = @BranchCode		

INSERT INTO spHstTransaction SELECT * FROM #HstTransaction
DROP TABLE #HstTransaction
GO
CREATE procedure [dbo].[sp_IsValidSTAnalyze] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@STHdrNo varchar(20))


as

SELECT * INTO #a2 FROM(
SELECT
	a.PartNo, a.STNo, a.SEqNo,  CASE WHEN b.Partno is null THEN 'LOKASI UTAMA BELUM DIENTRY' ELSE '' END Status
FROM SpTrnStockTakingDtl a
LEFT JOIN 
(
	SELECT
		x.CompanyCode,
		x.BranchCode,
		x.StHdrNo,
		x.PartNo
	FROM SpTrnStockTakingDtl x
	WHERE x.CompanyCode = @CompanyCode
		AND x.BranchCode = @BranchCode
		AND x.StHdrNo = @StHdrNo
		AND x.IsMainLocation = 1

) b ON a.CompanyCode = b.CompanyCode AND a.BranchCode = b.BranchCode AND a.StHdrNo = b.StHdrNo AND a.PartNo = b.PartNo
WHERE a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.StHdrNo = @StHdrNo
GROUP BY a.PartNo, b.PartNo, a.STNo, a.SeqNo
) #a2

SELECT * FROM #a2 WHERE Status <> ''
UNION
SELECT
	a.PartNo, a.STNo, a.SEqNo,'BELUM TERDAFTAR PADA LIST TAG/FORM' Status
FROM SpTrnStockTakingTemp a
WHERE CompanyCode = @CompanyCode 
	AND BranchCode = @BranchCode
	AND StHdrNo = @StHdrNo
	AND PartNo NOT IN (
SELECT 
DISTINCT(a.PartNo)
FROM SpTrnStockTakingDtl a
WHERE CompanyCode = @CompanyCode
	  AND BranchCode = @BranchCode
	  AND StHdrNo = @StHdrNo)
	AND PartNo <> ''
GROUP BY a.PartNo, a.STNo, a.SeqNo
UNION
SELECT
	a.PartNo, a.STNo, a.SEqNo, 'BLANK TAG/FORM BELUM TERPAKAI/DIBATALKAN' Status
FROM SpTrnStockTakingTemp a
WHERE CompanyCode = @CompanyCode 
	AND BranchCode = @BranchCode
	AND StHdrNo = @StHdrNo
	AND STNo NOT IN (
SELECT 
DISTINCT(a.StNo)
FROM SpTrnStockTakingDtl a
WHERE CompanyCode = @CompanyCode
	  AND BranchCode = @BranchCode
	  AND StHdrNo = @StHdrNo)
	AND PartNo = '' AND a.Status IN ('0','1')
GROUP BY a.PartNo, a.STNo, a.SeqNo
UNION
SELECT PartNo, STNo, SeqNo, 'LOKASI UTAMA DI-ENTRY LEBIH DARI BATAS' Status
FROM SpTrnStocktakingDtl
WHERE CompanyCode = @CompanyCode 
	AND BranchCode = @BranchCode
	AND StHdrNo = @StHdrNo
	AND PartNo IN (
SELECT
	PartNo
FROM spTrnStockTakingDtl
WHERE CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND StHdrNo = @StHdrNo
	AND IsMainLocation = 1
Group By PartNo
HAVING
	Count(PartNo) > 1)
DROP TABLE #a2
GO
CREATE procedure [dbo].[sp_InsertHistoryMovementTuning] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@Year int,
@Month int,
@PID varchar(10)
)


as

-- delete spHstStockMovement based on Year and Month
-- Include all coloumn into one than insert spHstStockMovement

delete spHstStockMovement where Year = @Year AND Month = @Month and CompanyCode = @CompanyCode and BranchCode = @BranchCode

SELECT * INTO #A1 FROM
(
SELECT a.CompanyCode, a.BranchCode, a.PartNo PartNo, a.WarehouseCode WareHouseCode, 
a.LocationCode LocationCode,  
a.OnHand OnHand,
a.BOMInvQty BOMInvQty,
(SELECT ISNULL(SUM(x.ReceivedQty), 0) RcvQty FROM spTrnPRcvDtl x WITH(NOLOCK, NOWAIT) JOIN spTrnPRcvHdr b WITH(NOLOCK, NOWAIT)
 ON x.CompanyCode = b.CompanyCode
	AND x.BranchCode = b.BranchCode
    AND x.WRSNo = b.WRSNo
	WHERE Year(b.WRSDate) = @Year
	  AND Month(b.WRSDate) = @Month
	  AND b.CompanyCode = @CompanyCode
      AND b.BranchCode = @BranchCode
	  AND x.WarehouseCode = a.WarehouseCode
	  AND x.PartNo = a.PartNo
      AND b.Status NOT IN (0, 1, 3)) AS RcvQtyIN,
(SELECT ISNULL(SUM(x.QtyAdjustment), 0) AdjQty FROM spTrnIAdjustDtl x WITH(NOLOCK, NOWAIT) JOIN spTrnIAdjustHdr b WITH(NOLOCK, NOWAIT)
 ON x.CompanyCode = b.CompanyCode
	AND x.BranchCode = b.BranchCode
    AND x.AdjustmentNo = b.AdjustmentNo
	WHERE YEAR(b.AdjustmentDate) = @Year
      AND MONTH(b.AdjustmentDate) = @Month
      AND b.CompanyCode = @CompanyCode
      AND b.BranchCode = @BranchCode
      AND x.WarehouseCode = a.WarehouseCode
      AND x.PartNo = a.PartNo
      AND x.AdjustmentCode = '+'
      AND b.Status = 2) AS AdjQtyIN,
(SELECT ISNULL(SUM(x.Qty),0) FROM spTrnIWHTrfDtl x WITH(NOLOCK, NOWAIT) JOIN spTrnIWHTrfHDR b WITH(NOLOCK, NOWAIT)
 ON x.CompanyCode = b.CompanyCode
	AND x.BranchCode = b.BranchCode
    AND x.WHTrfNo = b.WHTrfNo 
	WHERE YEAR(b.WHTrfDate) = @Year
	  AND MONTH(b.WHTrfDate) = @Month
	  AND b.CompanyCode =@CompanyCode
	  AND b.BranchCode = @BranchCode
	  AND x.ToWarehouseCode = a.WarehouseCode
	  AND x.PartNo = a.PartNo
	  AND b.Status = 2
) AS WhtQtyIN,
(SELECT ISNULL(SUM(x.QtyReturn), 0) RturQty FROM spTrnSRturDtl x WITH(NOLOCK, NOWAIT) JOIN spTrnSRturHdr b WITH(NOLOCK, NOWAIT)
 ON x.CompanyCode = b.CompanyCode
	AND x.BranchCode = b.BranchCode
    AND x.ReturnNo = b.ReturnNo
	WHERE YEAR(b.ReturnDate) = @Year
	  AND MONTH(b.ReturnDate) = @Month
	  AND b.CompanyCode = @CompanyCode
	  AND b.BranchCode = @BranchCode
	  AND x.WarehouseCode = a.WarehouseCode
	  AND x.PartNo = a.PartNo
	  AND b.Status = 2) AS RtrQtyIN,
(SELECT ISNULL(SUM(x.QtyReturn),0) RturQty FROM spTrnSRturSSDtl x WITH(NOLOCK, NOWAIT) JOIN spTrnSRturSSHdr b WITH(NOLOCK, NOWAIT)
 ON x.CompanyCode = b.CompanyCode
	AND x.BranchCode = b.BranchCode
    AND x.ReturnNo = b.ReturnNo
	WHERE YEAR(b.ReturnDate) = @Year
	  AND MONTH(b.ReturnDate) = @Month
	  AND b.CompanyCode = @CompanyCode
	  AND b.BranchCode = @BranchCode
	  AND x.WarehouseCode = a.WarehouseCode
	  AND x.PartNo = a.PartNo	
	  AND b.Status = 2) AS SSQtyIN,
(SELECT ISNULL(SUM(x.QtyBill)  ,0) FROM spTrnSFPJDtl x WITH(NOLOCK, NOWAIT)JOIN spTrnSFPJHdr b WITH(NOLOCK, NOWAIT)
 ON  x.CompanyCode = b.CompanyCode
	AND x.BranchCode = b.BranchCode
    AND x.FPJNo = b.FPJNo
	WHERE YEAR(b.FPJDate) = @Year
	  AND MONTH(b.FPJDate) = @Month
	  AND b.CompanyCode = @CompanyCode
	  AND b.BranchCode = @BranchCode
	  AND x.WarehouseCode = a.WarehouseCode
	  AND x.PartNo = a.PartNo) AS FpjQtyOUT,
(SELECT ISNULL(SUM(x.QtyBill) ,0)FROM spTrnSLmpDtl x WITH(NOLOCK, NOWAIT) JOIN spTrnSLmpHdr b WITH(NOLOCK, NOWAIT)
 ON x.CompanyCode = b.CompanyCode
	AND x.BranchCode = b.BranchCode
    AND x.LmpNo = b.LmpNo 
	WHERE YEAR(b.LmpDate) = @Year
	  AND MONTH(b.LmpDate) = @Month
	  AND b.CompanyCode = @CompanyCode
	  AND b.BranchCode = @BranchCode
	  AND x.WarehouseCode = a.WarehouseCode
	  AND x.PartNo = a.PartNo) AS LmpQtyOUT,
(SELECT ISNULL(SUM(x.QtyAdjustment), 0) AdjQty FROM spTrnIAdjustDtl x WITH(NOLOCK, NOWAIT) JOIN spTrnIAdjustHdr b WITH(NOLOCK, NOWAIT)
 ON x.CompanyCode = b.CompanyCode
	AND x.BranchCode = b.BranchCode
    AND x.AdjustmentNo = b.AdjustmentNo 
	WHERE YEAR(b.AdjustmentDate) = @Year
	  AND MONTH(b.AdjustmentDate) = @Month
	  AND b.CompanyCode = @CompanyCode
	  AND b.BranchCode = @BranchCode
	  AND x.WarehouseCode = a.WarehouseCode
	  AND x.PartNo = a.PartNo
	  AND x.AdjustmentCode = '-'
	  AND b.Status = 2) AS AdjQtyOUT,
(SELECT ISNULL(SUM(x.Qty),0) FROM spTrnIWHTrfDtl x WITH(NOLOCK, NOWAIT) JOIN spTrnIWHTrfHDR b WITH(NOLOCK, NOWAIT)
 ON x.CompanyCode = b.CompanyCode
	AND x.BranchCode = b.BranchCode
    AND x.WHTrfNo = b.WHTrfNo 
	WHERE YEAR(b.WHTrfDate) = @Year
	  AND MONTH(b.WHTrfDate) = @Month
	  AND b.CompanyCode =@CompanyCode
	  AND b.BranchCode = @BranchCode
	  AND x.FromWarehouseCode = a.WarehouseCode
	  AND x.PartNo = a.PartNo
	  AND b.Status = 2) AS WhtQtyOUT 
FROM spMstItemLoc a WITH(NOLOCK, NOWAIT)
WHERE a.CompanyCode = @CompanyCode
  AND a.BranchCode = @BranchCode
) a1

SELECT * INTO #A2 FROM
(
	SELECT a.CompanyCode, a.BranchCode, @Year AS Year, @Month AS Month, a.WarehouseCode, a.LocationCode, a.PartNo, 
        BOMInvQty AS BOMStock, 
		(RcvQtyIN + AdjQtyIN + WhtQtyIN + RtrQtyIN + SSQtyIN) AS MoveIn,
        (FpjQtyOUT + LmpQtyOUT + AdjQtyOUT + WhtQtyOUT ) AS MoveOut,
        (BOMInvQty + ((RcvQtyIN + AdjQtyIN + WhtQtyIN + RtrQtyIN + SSQtyIN ) - 
        (FpjQtyOUT + LmpQtyOUT + AdjQtyOUT + WhtQtyOUT))) AS EOMStock, 
		ISNULL(b.CostPrice,0) AS CostPrice,
        @PID AS CreatedBy, GetDate() AS CreatedDate,
		@PID AS LastUpdateBy, GetDate() AS LastUpdateDate
	FROM #A1 a WITH(NOLOCK, NOWAIT)
		LEFT JOIN SpMstItemPrice b WITH(NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode AND a.BranchCode = b.BranchCode AND a.PartNo = b.PartNo
) b1

insert into spHstStockMovement select * from #A2
drop table #A1
drop table #A2
GO

CREATE procedure [dbo].[sp_spgnMstAccountView] (  @CompanyCode varchar(10) ,@BranchCode varchar(10), @Search varchar(50) = '')
 as
 IF @Search <> ''
	SELECT   AccountNo, [Description], CompanyCode,  BranchCode  FROM gnMstAccount 
	where CompanyCode=@CompanyCode and BranchCode=@BranchCode
	and (AccountNo like '%' + @Search + '%' or [Description] like '%' + @Search + '%')

 ELSE
	SELECT   AccountNo, [Description], CompanyCode,  BranchCode  FROM gnMstAccount 
	where CompanyCode=@CompanyCode and BranchCode=@BranchCode
GO
CREATE procedure [dbo].[sp_SpItemPriceView] (  @CompanyCode varchar(10) ,@BranchCode varchar(10))
 as
SELECT 
 Items.CompanyCode 
 ,Items.BranchCode
 ,ItemInfo.PartNo
,ItemInfo.PartName
,ItemPrice.PurchasePrice
,ItemInfo.SupplierCode
,ItemPrice.RetailPriceInclTax
,CASE ItemInfo.IsGenuinePart WHEN 1 THEN 'Ya' ELSE 'Tidak' END AS IsGenuinePart
,Items.ProductType
,Items.PartCategory
,u.LookupValueName 
 as CategoryName
 ,ItemPrice.CostPrice
 ,ItemPrice.RetailPrice
 ,ItemPrice.LastPurchaseUpdate
 ,ItemPrice.LastRetailPriceUpdate
,ItemPrice.OldCostPrice
,ItemPrice.OldPurchasePrice
,ItemPrice.OldRetailPrice

FROM spMstItemPrice ItemPrice 
INNER JOIN spMstItems Items 
    ON ItemPrice.CompanyCode=Items.CompanyCode 
    AND ItemPrice.BranchCode=Items.BranchCode
    AND ItemPrice.PartNo=Items.PartNo
right JOIN spMstItemInfo ItemInfo 
    ON ItemPrice.CompanyCode = ItemInfo.CompanyCode 
    AND ItemPrice.PartNo = ItemInfo.PartNo
	inner join  gnMstLookUpDtl u on (Items.PartCategory =u.ParaValue)
WHERE  u.CodeID='PRCT' 
and Items.CompanyCode=@CompanyCode and Items.BranchCode=@BranchCode
GO
CREATE procedure [dbo].[sp_Select4LookupCustomer2] (@CompanyCode varchar(10) , @BranchCode varchar(10),
	@ProfitCenterCode varchar(10), @TOPC varchar(10))
AS
	SELECT a.CustomerCode
		, a.CustomerName
		, a.Address1 + ' ' + a.Address2 + ' ' + a.Address3 + ' ' + a.Address4 as Address
		, ISNULL(c.LookUpValueName,'') AS TopCode
		, b.TopCode as TOPCD
		, b.GroupPriceCode
		, d.RefferenceDesc1 as GroupPriceDesc
		, b.SalesCode
	FROM gnMstCustomer a
	LEFT JOIN gnMstCustomerProfitCenter b ON b.CompanyCode = a.CompanyCode 
		AND b.CustomerCode = a.CustomerCode
	LEFT JOIN gnMstLookUpDtl c ON c.CompanyCode=a.CompanyCode
		AND c.LookUpValue = b.TOPCode    
		AND c.CodeID = @TOPC
	LEFT JOIN omMstRefference d ON a.CompanyCode = d.CompanyCode 
		AND d.RefferenceType = 'GRPR' 
		AND d.RefferenceCode = b.GroupPriceCode
	WHERE a.CompanyCode = @CompanyCode
		AND b.BranchCode = @BranchCode
		AND b.ProfitCenterCode = @ProfitCenterCode
		AND a.Status = '1'
		AND b.SalesType = '1'
		AND b.isBlackList = 0
	ORDER BY CustomerCode;
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquirDetailDataKendaraan] 
(
 @CompanyCode varchar(15),
 @BranchCode varchar(15),
 @ChassisCode varchar(100),
 @ChassisNo varchar(100)
)
AS

DECLARE
	@QRYTmp		AS varchar(max),
	@DBMD		AS varchar(25),
	@CompanyMD  AS varchar(25)


BEGIN

set @CompanyMD = (SELECT TOP 1 CompanyMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode) 
set @DBMD = (SELECT TOP 1 DbMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode) 

set @QRYTmp = 
'select 
	(select b.refferenceDesc1 from ' + @DBMD + '.dbo.ommstrefference b where b.companyCode = ''' + @CompanyMD + '''
	and b.refferencetype = ''WARE'' and b.refferenceCode = a.warehouseCode) as warehouseName
	,''('' + a.ColourCode+ '') '' +(select c.refferenceDesc1 from ommstrefference c where c.companyCode = ''' + @CompanyCode + '''
	and c.refferencetype = ''COLO'' and c.refferenceCode = a.ColourCode) as ColourName
	, a.servicebookno
	, a.keyno
	, a.cogsunit
	, a.cogsOthers
	, a.cogsKaroseri
    , o.afterdiscdpp dpp
    , o.afterdiscppn ppn
    , p.bbn
	, j.pono
    , convert(varchar, j.podate, 106) podate
	, h.bpuno+'' (''+h.RefferenceDONo+'')'' bpuno
    , convert(varchar, h.bpudate, 106) bpudate
	, d.sono
    , convert(varchar, d.sodate, 106) sodate
	, k.dono
    , convert(varchar, k.dodate, 106) dodate
    , case d.SKPKNo when '''' then d.RefferenceNo else d.SKPKNo end as SKPKNo
    , convert(varchar, d.sodate, 106)  SKPKDate
    , l.bpkno
    , convert(varchar, l.bpkdate, 106) bpkdate
	, m.invoiceNo
    , convert(varchar, m.invoicedate, 106) invoicedate
    , q.RefferenceSJNo
	, convert(varchar, q.RefferenceSJDate, 106) RefferenceSJDate
    , i.hppno
    , convert(varchar, i.hppdate, 106) hppdate
	, n.reqNo reqOutNo
    , convert(varchar, n.reqDate, 106) reqdate
    , i.RefferenceInvoiceNo reffinv
    , convert(varchar, i.RefferenceInvoiceDate, 106) reffinvdate
    , i.RefferenceFakturPajakNo refffp
    , convert(varchar, i.RefferenceFakturPajakDate , 106) refffpdate
	, s.PoliceRegistrationNo policeregno
    , convert(varchar, s.PoliceRegistrationDate, 106) policeregdate
	, isnull(b.CustomerCode + '' - '' + c.CustomerName, 
		k.CustomerCode + '' - '' + (select CustomerName from gnMstCustomer where CompanyCode = ''' + @CompanyCode + ''' and CustomerCode = k.CustomerCode)
		) as Customer
	, isnull(c.Address1 + '' '' + c.Address2 + '' '' + c.Address3 + '' '' + c.Address4,
		(select Address1 + '' '' + Address2 + '' '' + Address3 + '' '' + Address4 from gnMstCustomer where CompanyCode = ''' + @CompanyCode + ''' and CustomerCode = k.CustomerCode)
		) as Address
	, d.Salesman + '' - '' + f.EmployeeName as Salesman
	, d.LeasingCo + '' - '' + g.CustomerName as Leasing
	, d.SalesCode + '' - '' + e.LookUpValueName as KelAR
    , s.BPKBNo
	, s.SPKNo
	, a.ChassisCode
	, a.SalesModelCode
	, a.ChassisNo
	, a.EngineNo
from 
	' + @DBMD + '.dbo.ommstvehicle a
left join omTrSalesInvoice b on b.CompanyCode = ''' + @CompanyCode + ''' and b.BranchCode like ''' + @BranchCode + ''' 
    and a.InvoiceNo = b.InvoiceNo
left join gnMstCustomer c on c.CompanyCode = ''' + @CompanyCode + ''' and b.Customercode = c.CustomerCode
left join omTrSalesSO d on d.CompanyCode = ''' + @CompanyCode + ''' and d.BranchCode like ''' + @BranchCode + ''' and a.SONo = d.SONo
left join GnMstLookUpDtl e on e.CompanyCode = ''' + @CompanyCode + ''' and CodeID = ''GPAR'' and e.LookUpValue = d.SalesCode
left join gnMstEmployee f on f.Companycode = ''' + @CompanyCode + ''' and f.BranchCode like ''' + @BranchCode + ''' 
    and f.EmployeeID = d.Salesman
left join gnMstCustomer g on g.CompanyCode = ''' + @CompanyCode + ''' and g.CustomerCode = d.LeasingCo
left join omTrPurchaseBPU h on h.CompanyCode = ''' + @CompanyCode + ''' and h.BranchCode like ''' + @BranchCode + ''' 
    and a.PONo = h.PONo and a.BPUNo=h.BPUNo
left join omTrPurchaseHPP i on i.CompanyCode = ''' + @CompanyCode + ''' and i.BranchCode like ''' + @BranchCode + ''' and a.HPPNo= i.HPPNo
left join omTrPurchasePO j on j.CompanyCode = ''' + @CompanyCode + ''' and j.BranchCode like ''' + @BranchCode + ''' and a.PONo = j.PONo
left join omTrSalesDO k on k.CompanyCode = ''' + @CompanyCode + ''' and k.BranchCode like ''' + @BranchCode + ''' and a.DONo = k.DONo and a.SONo= k.SONo
left join omTrSalesBPK l on l.CompanyCode = ''' + @CompanyCode + ''' and l.BranchCode like ''' + @BranchCode + ''' and a.BPKNo = l.BPKNo
left join omTrSalesInvoice m on m.CompanyCode = ''' + @CompanyCode + ''' and m.BranchCode like ''' + @BranchCode + ''' 
    and a.InvoiceNo = m.InvoiceNo
left join omTrSalesReq n on n.CompanyCode = ''' + @CompanyCode + ''' and n.BranchCode like ''' + @BranchCode + ''' and a.ReqOutNo = n.ReqNo
left join omTrSalesSOModel o on o.CompanyCode = ''' + @CompanyCode + ''' and o.BranchCode like ''' + @BranchCode + ''' and a.SONo = o.SONo 
    and a.SalesModelCode = o.SalesModelCode and a.SalesModelYear = o.SalesModelYear and a.ChassisCode = o.ChassisCode
left join omTrSalesSOVin p on p.CompanyCode = ''' + @CompanyCode + ''' and p.BranchCode like ''' + @BranchCode + ''' and a.SONo = p.SONo
    and a.SalesModelCode = p.SalesModelCode and a.SalesModelYear = p.SalesModelYear and a.ColourCode = p.ColourCode
    and a.ChassisNo = p.ChassisNo and a.ChassisCode = p.ChassisCode
left join omTrPurchaseBPU q on q.CompanyCode = ''' + @CompanyCode + ''' and q.BranchCode like ''' + @BranchCode + ''' and q.PONo = j.PONO 
	and q.BPUNo = a.BPUNo
left join omTrSalesSPKDetail s on s.CompanyCode = ''' + @CompanyCode + ''' and s.BranchCode like ''' + @BranchCode + '''
	and s.ChassisCode = a.ChassisCode and s.ChassisNo = a.ChassisNo
where 
	a.companyCode = ''' + @CompanyMD + ''' and a.chassisCode = ''' + @ChassisCode + ''' and a.chassisNo = ''' + @ChassisNo + ''''

	Exec (@QRYTmp);

END
GO
CREATE procedure [dbo].[sp_spmasterpart] (  @CompanyCode varchar(10) ,@BranchCode varchar(10),@TypeOfGoods varchar(10),@ProductType varchar(10))
as
            SELECT TOP 1500
             ItemPrice.PartNo
            ,ItemInfo.PartName,ItemInfo.SupplierCode,ItemInfo.ProductType,ItemPrice.LastPurchaseUpdate,ItemPrice.LastRetailPriceUpdate
            ,ItemPrice.PurchasePrice
            ,ItemPrice.RetailPriceInclTax
            ,CASE ItemInfo.IsGenuinePart WHEN 1 THEN 'Ya' ELSE 'Tidak' END AS IsGenuinePart
			,ItemPrice.OldPurchasePrice
			,ItemPrice.OldCostPrice
			,ItemPrice.OldRetailPrice
			,OldRetailPrice
            ,Items.PartCategory
            ,(SELECT LookupValueName 
                FROM gnMstLookupDtl 
                WHERE CodeID = 'PRCT' AND 
                LookUpValue = Items.PartCategory AND 
                CompanyCode ='6004001') CategoryName
            FROM spMstItemPrice ItemPrice 
            INNER JOIN spMstItems Items 
                ON ItemPrice.CompanyCode=Items.CompanyCode 
                AND ItemPrice.BranchCode=Items.BranchCode
                AND ItemPrice.PartNo=Items.PartNo
            INNER JOIN spMstItemInfo ItemInfo 
                ON ItemPrice.CompanyCode = ItemInfo.CompanyCode 
                AND ItemPrice.PartNo = ItemInfo.PartNo
            WHERE ItemPrice.CompanyCode=@CompanyCode
                AND ItemPrice.BranchCode= @BranchCode
                AND Items.TypeOfGoods=@TypeOfGoods
                AND Items.ProductType= @ProductType
GO


CREATE procedure [dbo].[sp_SpMasteritemStockAlokasiView] (  @CompanyCode varchar(10) ,@BranchCode varchar(10))
 as
SELECT  
 
 distinct
--StockAlokasi
d.PartNo
,d.WarehouseCode
,a.LookUpValueName as 'WarehouseName'
,d.LocationCode
,d.OnHand
,d.AllocationSP
,d.AllocationSR
,d.AllocationSL

,d.CompanyCode 
,d.BranchCode 
FROM  spMstItemLoc d 
inner join  gnMstLookUpDtl a on (d.WarehouseCode=a.ParaValue)

WHERE a.CodeID='WRCD' 
 
and a.CompanyCode=@CompanyCode and d.BranchCode=@BranchCode
GO
CREATE procedure [dbo].[sp_SpMasteritemview] (  @CompanyCode varchar(10) ,@BranchCode varchar(10))
 as


 SELECT  
 a.PartNo 
,a.ProductType
,a.PartCategory
,u.LookupValueName  as CategoryName
,a.MovingCode
,a.OnHand - (a.AllocationSL + a.AllocationSP + a.AllocationSR + a.ReservedSL + a.ReservedSP + a.ReservedSR)  AS AvailableItems
,b.PartName
,b.IsGenuinePart
,b.OrderUnit
,b.SupplierCode
,c.SupplierName
,a.BornDate
,a.Status

,a.SalesUnit
,a.PurcDiscPct
,a.LastPurchaseDate
,b.DiscPct
,a.LastDemandDate
--,a.ProductTypedesc
,a.LastSalesDate
,a.ABCClass
,b.UOMCode
,a.DemandAverage

,a.Utility1
,a.Utility2
,a.Utility3
,a.Utility4


--ItemInventory
,a.OnOrder
,a.InTransit
,a.BorrowQty
,a.BorrowedQty
,a.BackOrderSR
,a.ReservedSR
,a.BackOrderSP
,a.ReservedSP
,a.BackOrderSL
,a.ReservedSL

--StockAlokasi
,d.WarehouseCode
--,a.WarehouseName
,d.LocationCode
,d.OnHand
,d.AllocationSP
,d.AllocationSR
,d.AllocationSL


--HPemPenj
--HargaSupplier
--PotonganBeli
--PotonganBelipercen
--HargaBeli
--HargaJual
--HargaJualPPn
--AvarageCost

--OrderParam
,a.OrderPointQty
,a.OrderCycle
,a.SafetyStock
,a.LeadTime





,a.CompanyCode 
,d.BranchCode 
FROM SpMstItems a
INNER JOIN SpMstItemInfo b   ON a.CompanyCode  = b.CompanyCode                          
                         AND a.PartNo = b.PartNo
LEFT JOIN GnMstSupplier c ON c.CompanyCode  = a.CompanyCode 
                         AND c.SupplierCode = b.SupplierCode
INNER JOIN spMstItemLoc d ON a.CompanyCode  = d.CompanyCode   
                         AND a.BranchCode = d.BranchCode                       
                         AND a.PartNo = d.PartNo
						 inner join  gnMstLookUpDtl u on (a.PartCategory =u.ParaValue)
WHERE  u.CodeID='PRCT'
and a.Status > 0
 
and a.CompanyCode=@CompanyCode and a.BranchCode=@BranchCode
GO
CREATE procedure [dbo].[sp_Select4LookupCustomer] (@CompanyCode varchar(10) , @BranchCode varchar(10),
	@ProfitCenterCode varchar(10), @TOPC varchar(10))
AS
 SELECT TableA.CustomerCode, TableA.CustomerName, TableA.TopCode, TableA.TOPCD, TableA.GroupPriceCode, TableA.RefferenceDesc1 as GroupPriceDesc
  FROM    (SELECT a.CustomerCode, a.CustomerName, 
                  a.Address1 + ' ' + a.Address2 + ' ' + a.Address3 + ' ' + a.Address4 as Address,
                  b.TOPCode + '||'
                  + (SELECT c.LookUpValueName
                  FROM gnMstLookUpDtl c
                  WHERE c.CodeID = @TOPC
                  AND c.LookUpValue = b.TOPCode)  AS TopCode, b.TOPCode  AS
                  TOPCD, b.CreditLimit, a.CompanyCode, b.BranchCode, b.
                  ProfitCenterCode, b.GroupPriceCode, c.RefferenceDesc1
             FROM gnMstCustomer a
            LEFT JOIN gnMstCustomerProfitCenter b ON b.CompanyCode = a.CompanyCode AND b.CustomerCode = a.CustomerCode
            LEFT JOIN omMstRefference c ON a.CompanyCode = c.CompanyCode AND c.RefferenceType = 'GRPR' AND c.RefferenceCode = b.GroupPriceCode
            WHERE a.CompanyCode = b.CompanyCode
                  AND a.CompanyCode = b.CompanyCode
                  AND b.CompanyCode = @CompanyCode
                  AND b.BranchCode = @BranchCode
                  AND b.ProfitCenterCode = @ProfitCenterCode
                  AND a.Status = '1'
                  AND b.SalesType = '0'
                  AND b.isBlackList = 0
                  AND b.CreditLimit > 0) TableA
       LEFT JOIN
          gnTrnBankBook c
       ON TableA.CompanyCode = c.CompanyCode
          AND TableA.BranchCode = c.BranchCode
          AND TableA.ProfitCenterCode = c.ProfitCenterCode
          AND TableA.CustomerCode = c.CustomerCode
 WHERE TableA.CreditLimit >
          (ISNULL (c.SalesAmt, 0) - ISNULL (c.ReceivedAmt, 0))
ORDER BY TableA.CustomerCode ASC
GO
CREATE procedure [dbo].[sp_updateOmTrInventQtyVehicleSO]    
 @companyCode varchar(25),    
 @BranchCode varchar(25),    
 @SalesModelCode varchar(25),    
 @SalesModelYear varchar(25),    
 @ColourCode varchar(25),    
 @WarehouseCode varchar(25),    
 @Quantity varchar,    
 @UserId varchar(25)    
as    
    
begin    
 --exec sp_updateOmTrInventQtyVehicleSO  6159401000,6159401001,'GC415V.M10PUMTF',2015,'ZBC','00',1,'ga'
 declare @CountSOVin int;    
 declare @CountSOModel int;    
 --declare @Month int;    
 --declare @Alocation int, @EndingOH int, @EndingAV int    
 declare @dbMD varchar(25), @sqlStr varchar(max), @companyMD varchar(25),@branchMD varchar(25);    
     
 set @dbMD =(select dbMD from gnMstCompanyMapping where CompanyCode= @companyCode and BranchCode=@BranchCode)    
 set @companyMD = (select companyMD from gnMstCompanyMapping where CompanyCode= @companyCode and BranchCode=@BranchCode)    
 set @branchMD = (select unitBranchMD from gnMstCompanyMapping where CompanyCode= @companyCode and BranchCode=@BranchCode)    
     
 --set @Month = (select FiscalPeriod from BAT_UAT.dbo.gnMstCoProfileSales where companycode=@companyCode and BranchCode=@BranchCode)    
     
 set @sqlStr = '    
  declare @Month int, @Year int;    
  declare @Alocation int, @EndingOH int, @EndingAV int;    
      
  set @Month = (select FiscalPeriod from '+@dbMD+'.dbo.gnMstCoProfileSales where companycode= '''+@companyMD+''' and BranchCode='''+@branchMD+''')    
  set @Year = (select FiscalYear from '+@dbMD+'.dbo.gnMstCoProfileSales where companycode= '''+@companyMD+''' and BranchCode='''+@branchMD+''')    
    
  if exists (select * from '+@dbMD+'.dbo.OmTrInventQtyVehicle     
  where companycode='''+@companyMD+''' and BranchCode='''+@branchMD+''' and SalesModelCode = '''+@SalesModelCode+''' and SalesModelYear='+@SalesModelYear+' and ColourCode = '''+@ColourCode+''' and WarehouseCode = '''+@WarehouseCode+''' )    
 begin    
  set @Alocation = (select Alocation + '+@Quantity+' from '+@dbMD+'.dbo.OmTrInventQtyVehicle    
   where companycode='''+@companyMD+''' and BranchCode='''+@branchMD+''' and SalesModelCode = '''+@SalesModelCode+''' and SalesModelYear='+@SalesModelYear+' and ColourCode = '''+@ColourCode+''' and WarehouseCode = '''+@WarehouseCode+''' and Month =@Month 
  
and Year = @Year )    
        set @EndingOH = (select BeginningOH + QtyIn - QtyOut from '+@dbMD+'.dbo.OmTrInventQtyVehicle    
   where companycode='''+@companyMD+''' and BranchCode='''+@branchMD+''' and SalesModelCode = '''+@SalesModelCode+''' and SalesModelYear='+@SalesModelYear+' and ColourCode = '''+@ColourCode+''' and WarehouseCode = '''+@WarehouseCode+''' and Month =@Month 
  
and Year = @Year)    
        set @EndingAV = (select BeginningAV + QtyIn - Alocation - QtyOut from '+@dbMD+'.dbo.OmTrInventQtyVehicle    
   where companycode='''+@companyMD+''' and BranchCode='''+@branchMD+''' and SalesModelCode = '''+@SalesModelCode+''' and SalesModelYear='+@SalesModelYear+' and ColourCode = '''+@ColourCode+''' and WarehouseCode = '''+@WarehouseCode+''' and Month =@Month 
  
and Year = @Year)    
      
  if (@EndingAV < 0) select 1 as Status    
  else begin    
   update '+@dbMD+'.dbo.OmTrInventQtyVehicle    
   set LastUpdateBy = '''+@userId+''', LastUpdateDate =getdate(), Alocation = @Alocation, EndingAV =@EndingAV, EndingOH = @EndingOH    
   where companycode='''+@companyMD+''' and BranchCode='''+@branchMD+''' and SalesModelCode = '''+@SalesModelCode+''' and SalesModelYear='+@SalesModelYear+' and ColourCode = '''+@ColourCode+''' and WarehouseCode = '''+@WarehouseCode+''' and Month = @Month
  
 and Year = @Year    
    
   select 2 as Status    
  end    
 end    
 else select 0 as Status    
 '    
 --if exists (select * from BAT_UAT.dbo.OmTrInventQtyVehicle     
  --where companycode=@companyCode and BranchCode=@BranchCode and SalesModelCode = @SalesModelCode and SalesModelYear=@SalesModelYear and ColourCode =@ColourCode and WarehouseCode =@WarehouseCode )    
 --begin    
  --set @Alocation = (select Alocation + @Quantity from BAT_UAT.dbo.OmTrInventQtyVehicle    
   --where companycode=@companyCode and BranchCode=@BranchCode and SalesModelCode = @SalesModelCode     
   --and SalesModelYear=@SalesModelYear and ColourCode =@ColourCode and WarehouseCode =@WarehouseCode and Month =@Month )    
        --set @EndingOH = (select BeginningOH + QtyIn - QtyOut from BAT_UAT.dbo.OmTrInventQtyVehicle    
   --where companycode=@companyCode and BranchCode=@BranchCode and SalesModelCode = @SalesModelCode     
   --and SalesModelYear=@SalesModelYear and ColourCode =@ColourCode and WarehouseCode =@WarehouseCode and Month =@Month )    
        --set @EndingAV = (select BeginningAV + QtyIn - Alocation - QtyOut from BAT_UAT.dbo.OmTrInventQtyVehicle    
   --where companycode=@companyCode and BranchCode=@BranchCode and SalesModelCode = @SalesModelCode     
   --and SalesModelYear=@SalesModelYear and ColourCode =@ColourCode and WarehouseCode =@WarehouseCode and Month =@Month )    
      
  --if (@EndingAV < 0) select 1 as Status    
  --else begin    
   --update BAT_UAT.dbo.OmTrInventQtyVehicle    
   --set LastUpdateBy = @userId, LastUpdateDate =getdate(), Alocation = @Alocation, EndingAV =@EndingAV, EndingOH = @EndingOH    
   --where companycode=@companyCode and BranchCode=@BranchCode and SalesModelCode = @SalesModelCode     
   --and SalesModelYear=@SalesModelYear and ColourCode =@ColourCode and WarehouseCode =@WarehouseCode and Month =@Month    
    
   --select 2 as Status    
  --end    
 --end    
 --else select 0 as Status    
--select @sqlStr   
--print @sqlStr;  
   
exec(@sqlStr)    
  
  
end
GO
CREATE procedure [dbo].[sp_omMstModelYear] @CompanyCode varchar(10) , @SalesModelCode varchar(100)
 as

SELECT CompanyCode, SalesModelCode, SalesModelYear, SalesModelDesc, ChassisCode, Remark, cast(Status AS bit) as [Status]
FROM omMstModelYear
where CompanyCode=@CompanyCode and SalesModelCode=@SalesModelCode
GO
CREATE procedure [dbo].[sp_omMstModelColour] @CompanyCode varchar(10) , @SalesModelCode varchar(100)
 as

SELECT a.CompanyCode, a.SalesModelCode, b.SalesModelDesc, ColourCode, RefferenceDesc1, a.Remark, cast(a.Status AS bit) as [Status]
FROM omMstModelColourView a
INNER JOIN omMstModel b
	ON a.SalesModelCode = b.SalesModelCode
where a.CompanyCode=@CompanyCode and a.SalesModelCode=@SalesModelCode
GO
CREATE procedure [dbo].[sp_omMstModelPerlengkapan] @CompanyCode varchar(10), @BranchCode varchar(10), @SalesModelCode varchar(100)
 as

SELECT a.CompanyCode
		, a.BranchCode
		, a.SalesModelCode
		, a.PerlengkapanCode
		, b.PerlengkapanName
		, a.Quantity
		, a.Remark
		, CAST(a.Status AS bit) as [Status]

FROM omMstModelPerlengkapan a
LEFT JOIN omMstPerlengkapan b
	ON a.PerlengkapanCode = b.PerlengkapanCode
	AND a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
where a.CompanyCode=@CompanyCode and a.BranchCode = @BranchCode and SalesModelCode=@SalesModelCode
GO
CREATE procedure [dbo].[sp_RefferenceTypeLookup]  @CompanyCode varchar(10)
 as
SELECT DISTINCT  * 
FROM (
	SELECT distinct(a.RefferenceType)  AS RefferenceType
	FROM dbo.omMstRefference a
	WHERE a.CompanyCode = '6006410'
	UNION
	SELECT distinct(b.RefferenceCode)  AS RefferenceType
	FROM dbo.omMstRefference b
	WHERE b.CompanyCode = '6006410' AND b.RefferenceType = 'REFF'
	) tab
ORDER BY RefferenceType ASC
GO
CREATE procedure [dbo].[uspfn_SelectEmployeeOrganizationTree]
@CompanyCode varchar(15),
@BranchCode varchar(15),
@EmployeeID varchar(15)

AS BEGIN
SELECT * INTO #test1 FROM(
SELECT a.BranchCode, a.EmployeeID, b.EmployeeName, b.Position
,(rtrim(a.EmployeeID) + ' - ' + rtrim(b.EmployeeName)) Employee, b.TeamLeader
FROM hrEmployeeMutation a
JOIN (
	SELECT c.EmployeeId, c.EmployeeName, c.Position, ISNULL(c.TeamLeader, '') AS TeamLeader, MAX(d.MutationDate) AS MutationDate
	FROM hrEmployee c
	JOIN hrEmployeeMutation d
	ON c.EmployeeId = d.EmployeeId
	WHERE c.Department = 'SALES' 
	GROUP BY c.EmployeeId, c.EmployeeName, c.Position, c.TeamLeader
) b
ON a.EmployeeId = b.EmployeeId AND a.MutationDate = b.MutationDate
WHERE a.CompanyCode = @CompanyCode AND a.BranchCode = @BranchCode
)#test1

;WITH N(lvl, BranchCode, value, text, Position, Employee, TeamLeader)
AS
(
	SELECT 
		0 AS lvl,
		a.BranchCode, a.EmployeeID, a.EmployeeName, a.Position, a.Employee, a.TeamLeader
	FROM #test1 a
	WHERE a.EmployeeID = @EmployeeID
	UNION ALL
	SELECT 
		N.lvl + 1 AS lvl,
		b.BranchCode, b.EmployeeID, b.EmployeeName, b.Position, b.Employee, b.TeamLeader
	FROM #test1 b JOIN N ON N.value = b.TeamLeader
)
SELECT * FROM N 
WHERE lvl > 0
ORDER BY lvl DESC

DROP TABLE #test1
END
GO
CREATE procedure [dbo].[uspfn_omSlsBPKLkpChassisNo]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),  
 @DONo varchar(15),
 @BPKNo varchar(15),
 @ChassisCode   varchar(15) 
)  
AS  
begin
select a.ChassisNo, a.EngineCode, a.EngineNo, 
a.ColourCode, b.RefferenceDesc1 from 
omTrSalesDODetail a
left join omMstRefference b on 
b.CompanyCode = a.CompanyCode and
b.RefferenceCode = a.ColourCode and
b.RefferenceType = 'COLO'
where
a.CompanyCode = @CompanyCode
AND a.BranchCode = @BranchCode
AND a.ChassisCode = @ChassisCode
AND a.DONo = @DONo
AND a.ChassisNo not in (select isnull(ChassisNo,0) from omTrSalesBPKDetail z
where z.CompanyCode = a.CompanyCode
and z.BranchCode = a.BranchCode
--and z.BPKNo = @BPKNo
and z.ChassisCode = a.ChassisCode
AND not exists (select 1 from omTrSalesReturnVIN where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode
		and ChassisCode=a.ChassisCode and ChassisNo=a.ChassisNo))
END
GO
CREATE procedure [dbo].[sp_PurchaseReturnBPULookup] @CompanyCode varchar(10) , @BranchCode varchar(100), @ReturnNo nvarchar(100), @HPPNo nvarchar(100)
 as

select a.BPUNo,a.BPUDate,a.SupplierCode + ' - ' + b.SupplierName AS SupplierCode
from omTrPurchaseBPU a
	left join gnMstSupplier b
		on a.CompanyCode = b.CompanyCode
		and a.SupplierCode = b.SupplierCode
	inner join omTrPurchaseHPPDetail c on a.CompanyCode=c.CompanyCode
		and a.BranchCode=c.BranchCode and c.HPPNo=@HPPNo and a.BPUNo=c.BPUNo
		where not exists (
		select 1 from omTrPurchaseReturnDetail
		where CompanyCode= a.CompanyCode
			and BranchCode= a.BranchCode
			and ReturnNo= @ReturnNo
			and BPUNo= a.BPUNo
	)
order by  BPUNo asc
GO
CREATE procedure [dbo].[uspfn_omSlsInvLkpBillTo]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),
 @ProfitCenterCode varchar(3)
)  
AS  
BEGIN  
-- exec [uspfn_omSlsInvLkpBillTo] 6006410,600641001,100
 SELECT a.CustomerCode, a.CustomerName
                  FROM gnMstCustomer a 
                INNER JOIN gnMstCustomerProfitCenter b
                  ON a.CompanyCode = b.CompanyCode AND 
                     a.CustomerCode = b.CustomerCode AND
                     b.BranchCode = @BranchCode
                WHERE a.CompanyCode = @CompanyCode AND 
                      b.ProfitCenterCode = @ProfitCenterCode

end
GO
CREATE procedure [dbo].[uspfn_UpdateAdditionalJob]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;

	with x as (
		select *
		  from SDMS..HrEmployeeAdditionalJob a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrEmployeeAdditionalJob (
		   CompanyCode
		 , EmployeeID
		 , SeqNo
		 , Department
		 , Position
		 , Grade
		 , AssignDate
		 , ExpiredDate
		 , CreatedBy
		 , CreatedDate
		 , UpdatedBy
		 , UpdatedDate
		 , IsDeleted
		 )
	select CompanyCode = @CompanyCode_B
	     , a.EmployeeID
	     , a.SeqNo
	     , a.Department
	     , a.Position
	     , a.Grade
	     , a.AssignDate
	     , a.ExpiredDate
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdatedBy
	     , a.UpdatedDate
	     , a.IsDeleted
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
create procedure [dbo].[uspfn_checkdailyaccess]
@userid varchar(32)
as
if exists (select top 1 1 from sysRoleMenu
where RoleId = (select roleid from sysroleUser where userid=@userid)
and menuid = 'gnpostdaily')
	select 1 [result]
else
	select 0 [result]
GO
CREATE procedure [dbo].[uspfn_omSlsInvGetAccsSeqTotal4Tax]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15), 
 @InvoiceNo varchar(30) 
)  
AS  
BEGIN 
-- exec uspfn_omSlsInvGetTotal4Tax 6006410,600641001,''
SELECT * INTO #f1 FROM(
    SELECT (ISNULL(SUM(a.Quantity), 0) * ISNULL(SUM(a.DPP), 0)) AS DPPAmt
        , ISNULL(SUM(a.Quantity), 0) AS TotQuantity
        , (ISNULL(SUM(a.Quantity), 0) * ISNULL(SUM(a.PPn), 0)) AS PPnAmt
        , (ISNULL(SUM(a.Quantity), 0) * ISNULL(SUM(a.Total), 0)) AS TotalAmt
    FROM omTrSalesInvoiceAccsSeq a
    WHERE a.CompanyCode = @CompanyCode 
        AND a.BranchCode = @BranchCode 
        AND a.InvoiceNo = @InvoiceNo
    GROUP BY a.PartNo   
) #f1

SELECT ISNULL(SUM(DPPAmt), 0) AS DPPAmt
    , ISNULL(SUM(TotQuantity), 0) AS TotQuantity
    , ISNULL(SUM(PPnAmt), 0) AS PPnAmt
    , ISNULL(SUM(TotalAmt), 0) AS TotalAmt
FROM #f1
DROP TABLE #f1  
end
GO
CREATE procedure [dbo].[uspfn_UpdateDataDeaeler]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;

	with x as (
		select *
		  from SDMS..HrEmployeeAdditionalBranch a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrEmployeeAdditionalBranch 
	select *
	  from #temp1 a;

	update SBTDB..HrEmployeeAdditionalBranch
	   set CompanyCode = @CompanyCode_B

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[uspfn_omSlsInvLkpBPK]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),
 @SONo varchar(15),
 @INVDate datetime
)  
AS  
BEGIN  
-- exec [uspfn_omSlsInvLkpBPK] 6006410,600641001,'','2012-01-01'
SELECT distinct a.BPKNo,a.BPKDate,a.DONo,a.SONo
                  FROM omTrSalesBPK a inner join omTrSalesBPKDetail b
	                on a.companyCode = b.companyCode and a.branchCode = b.branchCode and a.BPKNo = b.BPKNo
                 WHERE a.CompanyCode = @CompanyCode
                       AND a.BranchCode = @BranchCode
                       --AND MONTH(a.BPKDate) = @INVDate
                        AND a.BPKDate <= @INVDate
                        AND b.StatusInvoice = '0'
                        AND a.Status = '2'
                        AND SONO = @SONo
                ORDER BY a.BPKNo
END
GO
-- uspfn_OmInquiryChassisReq '6007402','600740200'
CREATE procedure [dbo].[uspfn_OmInquiryChassisReqMD]
	@CompanyCode as varchar(15)
	,@BranchCode as varchar(15)
	,@Penjual as varchar(15)
	,@CBU as bit
as

declare @isDirect as bit,
		@QRYTmp		AS varchar(max),
		@DBMD		AS varchar(25),
		@CompanyMD  AS varchar(25)

set @isDirect=0
if exists (
	select 1
	from gnMstCoProfile
	where CompanyCode=@CompanyCode and BranchCode=@Penjual
)
set @isDirect=1
set @CompanyMD = (SELECT TOP 1 CompanyMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode) 
set @DBMD = (SELECT TOP 1 DbMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode) 

set @QRYTmp =
'select * into #t1
from (
	select distinct isnull(b.BranchCode, e.BranchCode) BranchCode, isnull(c.CustomerCode, e.CustomerCode) CustomerCode
			,z.ChassisCode,z.BPKNo,z.SONo,e.DONo,convert(varchar,z.chassisNo) chassisNo, z.salesModelCode
			, z.salesModelYear, isnull(z.SuzukiDONo,'''') RefferenceDONo,
			isnull(z.SuzukiDODate,''19000101'') RefferenceDODate, isnull(z.SuzukiSJNo,'''') RefferenceSJNo, 
			isnull(z.SuzukiSJDate,''19000101'') RefferenceSJDate, 
			a.EndUserName, a.EndUserAddress1, a.EndUserAddress2, a.EndUserAddress3,
			c.CustomerName, c.Address1, c.Address2, c.Address3,
			c.CityCode,(SELECT LookUpValueName FROM gnMstLookUpDtl where CodeID = ''CITY'' AND ParaValue = c.CityCode) as CityName, 
			c.PhoneNo, c.HPNo, c.birthDate ,b.Salesman, (SELECT EmployeeName FROM gnMstEmployee where EmployeeID = b.Salesman) SalesmanName, b.SalesType
	from ' + @DBMD + '.dbo.omMstVehicle z 
		left join omTrSalesSOVin a 
			on a.CompanyCode = ''' + @CompanyCode + ''' 
			and z.SONo=a.SONo
				AND a.ChassisCode = z.ChassisCode
				AND a.ChassisNo = z.ChassisNo
		left join omTrSalesSO b
			on a.companyCode = b.companyCode 
				and a.BranchCode= b.BranchCode
				and a.SONo = b.SONo
				and b.Status = ''2'' 
		left join gnMstCustomer c 
			on b.CompanyCode = c.CompanyCode
				and b.CustomerCode = c.CustomerCode 
		left join OmTrSalesDODetail d 
			on d.CompanyCode = z.CompanyCode and z.DONo=d.DONo
				and d.ChassisCode = z.ChassisCode		
				and d.ChassisNo = z.ChassisNo	
		left join OmTrSalesDO e 
			on e.CompanyCode = d.CompanyCode
				and e.DONo = d.DONo
				and e.BranchCode=d.BranchCode
				and e.Status = ''2''
		inner join omMstModel f
			on f.CompanyCode = ''' + @CompanyCode + '''
				and f.SalesModelCode = z.SalesModelCode
	where 
		z.CompanyCode = ''' + @CompanyMD + '''
		and z.ReqOutNo = ''''
		and z.status in (''3'',''4'',''5'',''6'')
		and not exists (select 1 from omTrSalesReqdetail where ChassisCode=z.ChassisCode and ChassisNo=z.ChassisNo)
		and ((case when z.ChassisNo is not null then z.SONo end) is not null 
			or (case when z.ChassisNo is not null then z.DONo end) is not null)
		and f.IsCBU = ' + CONVERT(VARCHAR, @CBU, 1) + '
) #t1

select * from #t1 
where ((case when ' + CONVERT(VARCHAR, @isDirect, 1) + ' = ''1'' then BranchCode end)= ''' + @Penjual + '''
		or (case when ' + CONVERT(VARCHAR, @isDirect, 1) + ' <> ''1'' then BranchCode end)= ''' + @BranchCode + ''' )

drop table #t1'

Exec (@QRYTmp);
GO
CREATE procedure [dbo].[uspfn_omSlsInvLkpSlsMdlYear]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),
 @BPKNo varchar(15),
 @SalesModelCode varchar(30)
)  
AS  
BEGIN  
SELECT * 
                  FROM omMstModelYear a
                 WHERE a.CompanyCode = @CompanyCode
                       AND a.Status = '1'
                       AND a.SalesModelCode = @SalesModelCode
                       AND a.SalesModelYear IN 
                             (SELECT b.SalesModelYear
                                FROM omTrSalesBPKModel b
                               WHERE b.CompanyCode = a.CompanyCode
                                     AND b.BranchCode = @BranchCode
                                     AND b.BPKNo = @BPKNo
                                     AND b.SalesModelCode = a.SalesModelCode
                                     AND (b.QuantityBPK - b.QuantityInvoice) > 0)                        
End
GO
CREATE procedure [dbo].[uspfn_omSlsInvLkpSlsMdlCd]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),
 @BPKNo varchar(15)
)  
AS  
BEGIN  

SELECT a.*
FROM omMstModel a
WHERE EXISTS
      (SELECT 1
         FROM omTrSalesBPKModel b
        WHERE (b.QuantityBPK - b.QuantityInvoice) > 0
              AND a.SalesModelCode = b.SalesModelCode
              AND a.CompanyCode = b.CompanyCode
              AND b.BranchCode = @BranchCode
              AND b.BPKNo = @BPKNo)
   AND a.CompanyCode = @CompanyCode
ORDER BY a.SalesModelCode
                
END
GO
CREATE procedure [dbo].[uspfn_UpdateCsCustFeedback]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;
	
	with x as (
		select *
		  from SDMS..CsCustFeedback a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..CsCustFeedback (
		   CompanyCode
		 , CustomerCode
		 , Chassis
		 , FeedbackA
		 , FeedbackB
		 , FeedbackC
		 , FeedbackD
		 , CreatedBy
		 , CreatedDate
		 , UpdatedBy
		 , UpdatedDate
		 , IsManual
		 )
	select CompanyCode = @CompanyCode_B
	     , a.CustomerCode
	     , a.Chassis
	     , a.FeedbackA
	     , a.FeedbackB
	     , a.FeedbackC
	     , a.FeedbackD
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdatedBy
	     , a.UpdatedDate
	     , a.IsManual
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO


CREATE procedure [dbo].[uspfn_omSlsDoLkpMdlYear]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),  
 @SONo varchar(15),
 @SalesModelCode varchar(20)
)  
AS  

begin
--exec uspfn_omSlsDoLkpMdlYear 6006410,600641001,'',''
SELECT * FROM omMstModelYear a 
			 WHERE a.CompanyCode = @CompanyCode  
			 AND a.SalesModelCode =@SalesModelCode
			 AND a.Status = '1' 
			 AND a.SalesModelYear IN (SELECT b.SalesModelYear FROM omTrSalesSOModel b 
									  WHERE b.CompanyCode = a.CompanyCode 
									  AND b.SalesModelCode = a.SalesModelCode
									 AND b.SONo = @SONo	
								 AND b.BranchCode = @BranchCode)							 
end
GO
CREATE procedure [dbo].[uspfn_UpdateHoliday]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;
	
	with x as (
		select *
		  from SDMS..HrHoliday a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrHoliday (
		   CompanyCode
		 , HolidayYear
		 , HolidayCode
		 , HolidayDesc
		 , DateFrom
		 , DateTo
		 , IsHoliday
		 , ReligionCode
		 , CreatedBy
		 , CreatedDate
		 , UpdatedBy
		 , UpdatedDate
		 , IsDeleted
		 )
	select CompanyCode = @CompanyCode_B
	     , a.HolidayYear
	     , a.HolidayCode
	     , a.HolidayDesc
	     , a.DateFrom
	     , a.DateTo
	     , a.IsHoliday
	     , a.ReligionCode
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdatedBy
	     , a.UpdatedDate
	     , a.IsDeleted
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO

CREATE procedure [dbo].[uspfn_omSlsDoLkpMdlCode]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),  
 @SONo varchar(15) 
)  
AS  
BEGIN  
--exec uspfn_omSlsDoLkpMdlCode 6006410,600641001,''
SELECT  
	a.CompanyCode
	,a.SalesModelCode
	,a.SalesModelDesc
	,a.FakturPolisiDesc
	,a.EngineCode
	,a.PpnBmCodeBuy
	,a.PpnBmPctBuy
	,a.PpnBmCodeSell
	,a.PpnBmPctSell
	,a.PpnBmCodePrincipal
	,a.PpnBmPctPrincipal
	,a.Remark
	,a.BasicModel
	,a.TechnicalModelCode
	,a.ProductType
	,a.TransmissionType
	,a.IsChassis
	,a.IsCbu
	,a.SMCModelCode
	,a.GroupCode
	,a.TypeCode
	,a.CylinderCapacity
	,a.fuel
	,a.ModelPrincipal
	,a.Specification
	,a.ModelLine
	,a.Status
	,a.CreatedBy
	,a.CreatedDate
	,a.LastUpdateBy
	,a.LastUpdateDate
	,a.IsLocked
	,a.LockedBy
	,a.LockedDate
	,a.MarketModelCode
	,a.GroupMarketModel
	,a.ColumnMarketModel
FROM omMstModel a
INNER JOIN omTrSalesSOModel b
ON b.CompanyCode = a.CompanyCode
AND b.SalesModelCode = a.SalesModelCode	
WHERE a.CompanyCode = @CompanyCode
AND b.BranchCode = @BranchCode
AND b.SONo = @SONo
AND b.QuantityDO < b.QuantitySO
ORDER BY a.SalesModelCode ASC
end
GO
CREATE procedure [dbo].[uspfn_UpdateCsBpkb]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;
	
	with x as (
		select *
		  from SDMS..CsCustBpkb a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..CsCustBpkb (
		   CompanyCode
		 , CustomerCode
		 , Chassis
		 , BpkbReadyDate
		 , BpkbPickUp
		 , ReqKtp
		 , ReqSuratKuasa
		 , Comment
		 , Additional
		 , Status
		 , CreatedBy
		 , CreatedDate
		 , UpdatedBy
		 , UpdatedDate
		 , ReqStnk
		 , ReqInfoLeasing
		 , ReqInfoCust
		 , Tenor
		 , LeasingCode
		 , CustomerCategory
		 , FinishDate
		 , IsDeleted
		 )
	select CompanyCode = @CompanyCode_B
	     , a.CustomerCode
	     , a.Chassis
	     , a.BpkbReadyDate
	     , a.BpkbPickUp
	     , a.ReqKtp
	     , a.ReqSuratKuasa
	     , a.Comment
	     , a.Additional
	     , a.Status
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdatedBy
	     , a.UpdatedDate
	     , a.ReqStnk
	     , a.ReqInfoLeasing
	     , a.ReqInfoCust
	     , a.Tenor
	     , a.LeasingCode
	     , a.CustomerCategory
	     , a.FinishDate
	     , a.IsDeleted
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[uspfn_omSlsInvBrowse]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15) 
)  
AS  
BEGIN  
-- exec uspfn_omSlsInvBrowse 6006410,600641001,'DOS/14/000002'
SELECT a.BranchCode
    , a.InvoiceNo
    , a.InvoiceDate
    , a.SONo
    , d.SKPKNo
    , d.RefferenceNo
    , a.CustomerCode
    , b.CustomerName
    , a.BillTo
    , b.CustomerName AS BillName
    , b.Address1 + ' ' + b.Address2 + ' ' + b.Address3 + ' ' + b.Address4 as Address
    ,a.Status
    , CASE 
        WHEN a.Status = 0 THEN 'OPEN'
        WHEN a.Status = 1 THEN 'PRINTED'
        WHEN a.Status = 2 THEN 'APPROVED'
        WHEN a.Status = 3 THEN 'DELETED'
        WHEN a.Status = 5 THEN 'POSTED'
        WHEN a.Status = 9 THEN 'FINISHED'
      END as StatusDsc
    , c.SalesType
    , CASE ISNULL(c.SalesType, 0) 
        WHEN 0 THEN 'Wholesales' 
        ELSE 'Direct' 
      END AS SalesTypeDsc
    ,a.Remark
     
FROM omTrSalesInvoice a
LEFT JOIN gnMstCustomer b ON a.CompanyCode = b.CompanyCode 
    AND a.CustomerCode = b.CustomerCode
LEFT JOIN gnMstCustomerProfitCenter c ON a.CompanyCode = c.CompanyCode 
    AND a.BranchCode = c.BranchCode 
    AND a.CustomerCode = c.CustomerCode 
    AND c.ProfitCenterCode = '100'
LEFT JOIN omTrSalesSO d ON a.CompanyCode = d.CompanyCode 
    AND a.BranchCode = d.BranchCode 
    AND a.SONo = d.SONo
WHERE a.CompanyCode = @companyCode 
    AND a.BranchCode like @branchCode
ORDER BY a.InvoiceNo DESC  
END
GO
CREATE procedure [dbo].[uspfn_UpdateAchievement]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;

	with x as (
		select *
		  from SDMS..HrEmployeeAchievement a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrEmployeeAchievement (
		   CompanyCode
		 , EmployeeID
		 , AssignDate
		 , Department
		 , Position
		 , Grade
		 , IsJoinDate
		 , CreatedBy
		 , CreatedDate
		 , UpdatedBy
		 , UpdatedDate
		 , IsDeleted
		 )
	select CompanyCode = @CompanyCode_B
	     , a.EmployeeID
	     , a.AssignDate
	     , a.Department
	     , a.Position
	     , a.Grade
	     , a.IsJoinDate
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdatedBy
	     , a.UpdatedDate
	     , a.IsDeleted
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[uspfn_UpdateBpkbRetrievalInformation]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;
	
	with x as (
		select *
		  from SDMS..CsBpkbRetrievalInformation a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..CsBpkbRetrievalInformation (
		   CompanyCode
		 , CustomerCode
		 , RetrievalEstimationDate
		 , Notes
		 , CreatedBy
		 , CreatedDate
		 , UpdatedBy
		 , UpdatedDate
		 , IsDeleted
		 )
	select CompanyCode = @CompanyCode_B
	     , a.CustomerCode
	     , a.RetrievalEstimationDate
	     , a.Notes
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdatedBy
	     , a.UpdatedDate
	     , a.IsDeleted
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[uspfn_omSlsDoLkpSO]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),  
 @RefType varchar(8)
)  
AS  
BEGIN  
--exec uspfn_omSlsDoLkpSO 6006410,600641001,'WARE'
 SELECT Distinct a.SONo, a.SODate, a.SKPKNo, a.RefferenceNo, c.CustomerName, a.CustomerCode, 
                c.Address1 + ' ' + c.Address2 + ' ' + c.Address3 + ' ' + c.Address4 as Address,
                a.WareHouseCode, e.RefferenceDesc1 AS WareHouseName
                , (CASE ISNULL(a.SalesType, 0) WHEN 0 THEN 'WholeSales' ELSE 'Direct' END) AS TypeSales
                FROM omTrSalesSO a
                INNER JOIN omTrSalesSOModel b ON b.CompanyCode = a.CompanyCode AND b.BranchCode = a.BranchCode AND b.SONo = a.SONo
                LEFT JOIN gnMstCustomer c ON c.CompanyCode = a.CompanyCode AND c.CustomerCode = a.CustomerCode
                LEFT JOIN gnMstCustomer d ON d.CompanyCode = a.CompanyCode AND d.CustomerCode = a.ShipTo
                LEFT JOIN OmMstRefference e ON e.CompanyCode = a.CompanyCode AND e.RefferenceType = @RefType AND e.RefferenceCode = a.WareHouseCode
                WHERE a.Status = '2'
                AND a.CompanyCode = @CompanyCode
                AND b.BranchCode = @BranchCode
                AND b.QuantityDO < b.QuantitySO
                ORDER BY a.SONo DESC
                
end
GO
CREATE procedure [dbo].[uspfn_SelectPartNo]
@CompanyCode varchar(15),
@ProductType  varchar(15),
@BasicModel  varchar(15),
@JobType  varchar(15),
@BranchCode  varchar(15)
AS
BEGIN

--declare @CompanyCode as varchar(15)
--declare @ProductType as varchar(15)
--declare @BasicModel as varchar(15)
--declare @JobType as varchar(15)
--declare @BranchCode as varchar(15)

--set @CompanyCode = '6159401000'
--set @ProductType = '4W'
--set @BasicModel = 'AVI414'
--set @JobType = 'CLAIM'
--set @BranchCode = '6159401001'

select a.OperationNo, a.Description as DescriptionTask
	, case @JobType when 'CLAIM' then isnull(b.ClaimHour, a.ClaimHour) else isnull(b.OperationHour, a.OperationHour) end as Qty
	, case @JobType when 'CLAIM' then a.LaborCost else isnull(b.LaborPrice, a.LaborPrice) end as Price
from svMstTask a
	left join svMstTaskPrice b
on b.CompanyCode = a.CompanyCode
	and b.BranchCode  = @BranchCode
	and b.ProductType = a.ProductType
	and b.BasicModel  = a.BasicModel
	and b.JobType     = a.JobType
	and b.OperationNo = a.OperationNo
where 
a.CompanyCode = @CompanyCode
	and a.ProductType = @ProductType
	and a.BasicModel = @BasicModel
	and a.IsActive    = 1
	and a.JobType in (@JobType, 'CLAIM','OTHER')
order by a.OperationNo asc

END
GO
CREATE procedure [dbo].[uspfn_SvInqFpjStdData]    
		 @CompanyCode nvarchar(20),    
		 @BranchCode nvarchar(20),    
		 @ProductType nvarchar(2),
		 @FPJNo nvarchar(20),
		 @InvoiceNoStart nvarchar(20),
		 @InvoiceNoEnd nvarchar(20)
		
    
as    

--set @CompanyCode = '6006406'
--set @BranchCode = '6006402'
--set @ProductType = '4W'
--set @FPJNo = 'FPS/13/002075'
--set @InvoiceNoStart = 'INF/13/000472'
--set @InvoiceNoEnd = 'INF/13/000472'
    
declare	 @InvoiceStatus char(1)
set @InvoiceStatus = 0
if(@FPJNo != '')
Set @InvoiceStatus = 1

select	row_number() over(order by inv.InvoiceNo) RowNum
                        , convert(bit, 1) IsSelected
						, inv.CompanyCode
						, inv.BranchCode
                        , inv.ProductType
						, inv.InvoiceNo
		                , inv.InvoiceDate
		                , inv.JobOrderNo
		                , inv.JobOrderDate
		                , inv.TotalDPPAmt
		                , inv.TotalPPHAmt + TotalPPNAmt as TotalPpnAmt
		                , inv.TotalSrvAmt
		                , inv.JobType
		                , inv.PoliceRegNo
		                , inv.BasicModel
		                , inv.ChassisCode
		                , inv.ChassisNo
		                , inv.EngineCode
		                , inv.EngineNo
                        , inv.TOPCode
                        , inv.TOPDays
                        , inv.DueDate
                        , inv.FPJNo
                        , inv.FPJDate
                        , inv.CustomerCodeBill
                        , inv.Odometer
                        , inv.IsPkp
                        , inv.CustomerCode
		                , inv.CustomerCode + ' - ' + cust.CustomerName Pelanggan
		                , inv.CustomerCodeBill + ' - ' + custBill.CustomerName Pembayar
                        , inv.DueDate
                from	svTrnInvoice inv with(nolock, nowait)
		                left join gnMstCustomer cust with(nolock, nowait) on inv.CompanyCode = cust.CompanyCode
			                and inv.CustomerCode = cust.CustomerCode
		                left join gnMstCustomer custBill with(nolock, nowait) on inv.CompanyCode = custBill.CompanyCode
			                and inv.CustomerCodeBill = custBill.CustomerCode
                where	inv.CompanyCode = @CompanyCode 
		                and inv.BranchCode = @BranchCode 
		                and inv.ProductType = @ProductType
		                and inv.InvoiceNo between @InvoiceNoStart and @InvoiceNoEnd
		                and inv.CustomerCodeBill = isnull((select top 1 CustomerCodeBill from svTrnInvoice where InvoiceNo = @InvoiceNoStart),'')
                       and (CASE WHEN inv.InvoiceStatus = 0 THEN @InvoiceStatus ELSE inv.InvoiceStatus END) = inv.InvoiceStatus
                        and inv.FPJNo = @FPJNo
                        and (inv.InvoiceNo like 'INW%' or inv.InvoiceNo like 'INF%')
GO
CREATE procedure [dbo].[uspfn_omSlsInvSlsMdlYearVldt]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),
 @InvoiceNo varchar(30),
 @BPKNo varchar(15),
 @SalesModelCode varchar(30)
)  
AS  
BEGIN 
SELECT a.SalesModelYear, a.SalesModelDesc
                  FROM omMstModelYear a
                 WHERE a.CompanyCode = @CompanyCode
                       AND a.Status = '1'
                       AND a.SalesModelCode = @SalesModelCode
                       AND a.SalesModelYear IN
                             (SELECT b.SalesModelYear
                                FROM omTrSalesBPKModel b
                               WHERE b.CompanyCode = a.CompanyCode
                                     AND b.BranchCode = @BranchCode
                                     AND b.BPKNo = @BPKNo
                                     AND b.SalesModelCode = a.SalesModelCode
                                     AND (b.QuantityBPK - b.QuantityInvoice) > 0)
                UNION
                SELECT z.SalesModelYear, (SELECT x.SalesModelDesc 
                       FROM omMstModelYear x
                       WHERE x.SalesModelYear = z.SalesModelYear and 
			                 x.SalesModelCode = z.SalesModelCode)  AS SalesModelDesc
                  FROM omTrSalesInvoiceModel z
                 WHERE z.CompanyCode = @CompanyCode
                       AND z.BranchCode = @BranchCode
                       AND z.InvoiceNo = @InvoiceNo
                       AND z.BPKNo = @BPKNo
                       AND z.SalesModelCode = @SalesModelCode
                ORDER BY a.SalesModelYear
END
GO
CREATE procedure [dbo].[sp_BBNKIRBrowse]  @CompanyCode varchar(10), @BranchCode varchar(10)
 as
 
SELECT a.CompanyCode, a.BranchCode, a.SupplierCode, b.SupplierName, a.CityCode, c.LookUpValueName as CityName
		, a.SalesModelCode, d.SalesModelDesc, a.SalesModelYear, d.SalesModelDesc as SalesModelYearDesc, CAST(a.Status as bit) as Status
		, a.BBN, a.KIR, a.Remark
FROM omMstBBNKIR a
INNER JOIN gnMstSupplier b
	ON a.SupplierCode = b.SupplierCode
INNER JOIN gnMstLookUpDtl c
	ON a.CityCode = c.LookUpValue AND c.CodeID = 'CITY'
INNER JOIN omMstModel d
	ON a.SalesModelCode = d.SalesModelCode
WHERE a.CompanyCode = @CompanyCode AND a.BranchCode = @BranchCode
GO
-- =============================================
-- Author:		RIJAL AL
-- Create date: <Create Date,,>
-- Description:	INQUIRY OUT STANDING PROSPECT
-- =============================================
-- [[usprpt_PmRpInqOutStanding_NewPrint]] '6043401', '604340101', '2010-11-01 14:33:00.000', '', 'ALL', 'ALL', 'ALL', 'ALL'

CREATE procedure [dbo].[usprpt_PmRpInqOutStanding_NewPrint] 
(
	@CompanyCode		VARCHAR(15),
	@BranchCode			VARCHAR(15),
	@Period				DATETIME,
	@COO				VARCHAR(15),
	@BranchManager		VARCHAR(15),
	@SalesHead			VARCHAR(15),
	@SalesCoordinator	VARCHAR(15),
	@Salesman			VARCHAR(15)
	
)
AS 
BEGIN
SET NOCOUNT ON;

	EXEC usprpt_PmRpInqOutStanding_NewBySalesman @CompanyCode, @BranchCode, @Period, @COO, @BranchManager, @SalesHead, @SalesCoordinator, @Salesman

	EXEC usprpt_PmRpInqOutStanding_NewByType @CompanyCode, @BranchCode, @Period, @COO, @BranchManager, @SalesHead, @SalesCoordinator, @Salesman

	EXEC usprpt_PmRpInqOutStanding_NewByData @CompanyCode, @BranchCode, @Period, @COO, @BranchManager, @SalesHead, @SalesCoordinator, @Salesman

END
GO
CREATE procedure [dbo].[uspfn_omSlsInvSlctModelVldt]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),
 @BPKNo varchar(15),
 @InvoiceNo varchar(30)
)  
AS  
BEGIN  
 SELECT a.SalesModelCode, a.SalesModelDesc
                  FROM omMstModel a
                 WHERE EXISTS
                          (SELECT 1
                             FROM omTrSalesBPKModel b
                            WHERE (b.QuantityBPK - b.QuantityInvoice) > 0
                                  AND a.SalesModelCode = b.SalesModelCode
                                  AND a.CompanyCode = b.CompanyCode
                                  AND b.BranchCode = @BranchCode
                                  AND b.BPKNo = @BPKNo)
                       AND a.CompanyCode = @CompanyCode
                UNION
                SELECT z.SalesModelCode, (SELECT x.SalesModelDesc
                       FROM omMstModel x
                       WHERE z.SalesModelCode = x.SalesModelCode)  AS SalesModelDesc
                  FROM omTrSalesInvoiceModel z
                 WHERE z.CompanyCode = @CompanyCode
                       AND z.BranchCode = @BranchCode
                       AND z.InvoiceNo = @InvoiceNo
                       AND z.BPKNo = @BPKNo
                ORDER BY a.SalesModelCode
                
end
GO
CREATE procedure [dbo].[sp_CheckValidTrans] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@BegDate varchar(10),
@EndDate varchar(10))


as

SELECT CompanyCode, BranchCode, POSNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnPPOSHdr'
FROM spTrnPPOSHdr
WHERE CompanyCode = @CompanyCode 
AND BranchCode = @BranchCode
AND (Status NOT IN (2, 3, 4, 5, 6, 7))
AND (CONVERT(VARCHAR,POSDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, BinningNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnPBinnHdr'
FROM spTrnPBinnHdr
WHERE CompanyCode = @CompanyCode 
AND BranchCode = @BranchCode
AND (Status NOT IN (3, 4))
AND (CONVERT(VARCHAR,BinningDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, WRSNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnPRcvHdr' 
FROM spTrnPRcvHdr
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status  NOT IN (3, 4))
--AND (ReceivingType NOT IN (3))
AND ReceivingType = 1  -- add 30/10/2010  by dRU
AND TransType = 4      -- add 30/10/2010  by dRU
AND (CONVERT(VARCHAR,WRSDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, WRSNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnPRcvHdr' 
FROM spTrnPRcvHdr
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status NOT IN (2,3))
AND (ReceivingType IN (3))
AND (CONVERT(VARCHAR,WRSDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, WRSNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnPHPP' 
FROM spTrnPHPP
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status NOT IN (2, 3))
AND (CONVERT(VARCHAR,WRSDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, ClaimNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnPClaimHdr'
FROM spTrnPClaimHdr
WHERE CompanyCode = @CompanyCode 
AND BranchCode = @BranchCode
AND (Status NOT IN (2, 3, 4, 5, 6, 7))
AND (CONVERT(VARCHAR,ClaimDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, ClaimReceivedNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnPRcvClaimHdr'
FROM spTrnPRcvClaimHdr
WHERE CompanyCode = @CompanyCode 
AND BranchCode = @BranchCode
AND (Status NOT IN (2, 3, 4, 5, 6, 7, 8))
AND (CONVERT(VARCHAR,ClaimReceivedDate,111) BETWEEN @BegDate AND @EndDate)

SELECT a.CompanyCode, a.BranchCode, a.LampiranNo AS DocNo, a.Status, b.TypeOfGoods, TableName = 'spUtlStockTrfHdr' 
FROM spUtlStockTrfHdr a
	INNER JOIN SpTrnSLmpHdr b ON a.CompanyCode = b.CompanyCode AND a.DealerCode = b.BranchCode AND a.LampiranNo = b.LmpNo
WHERE a.CompanyCode = @CompanyCode 
    AND a.BranchCode = @BranchCode
	AND (a.Status <> 2)
	AND (CONVERT(VARCHAR,b.LmpDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, DocNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnSORDHdr' 
FROM spTrnSORDHdr
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status NOT IN (2, 3, 4, 5))
AND (CONVERT(VARCHAR,DocDate,111) BETWEEN @BegDate AND @EndDate)

SELECT DISTINCT a.CompanyCode, a.BranchCode, a.DocNo, b.Status, b.TypeOfGoods, TableName = 'spTrnSOSupply' 
FROM spTrnSOSupply a
	 INNER JOIN spTrnSORDHdr b ON a.CompanyCode = b.CompanyCode
	 AND a.BranchCode = b.BranchCode
	 AND a.DocNo = b.DocNo
WHERE a.CompanyCode = @CompanyCode AND a.BranchCode = @BranchCode
AND (LEN(ISNULL(PickingSlipNo, '')) = 0)
AND (CONVERT(VARCHAR, b.DocDate, 111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, PickingSlipNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnSPickingHdr' 
FROM spTrnSPickingHdr
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status NOT IN (2, 3))
AND (CONVERT(VARCHAR,PickingSlipDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, InvoiceNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnSInvoiceHdr'
FROM spTrnSInvoiceHdr 
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status NOT IN (2, 3)) 
AND (CONVERT(VARCHAR,InvoiceDate,111) BETWEEN @BegDate AND @EndDate)
                
SELECT CompanyCode, BranchCode, BPSFNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnSBPSFHdr'
FROM spTrnSBPSFHdr 
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status NOT IN (2, 3))
AND (CONVERT(VARCHAR,BPSFDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, FPJNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnSFPJHdr'
FROM spTrnSFPJHdr 
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status NOT IN (1, 2, 3))
AND ISNULL(FpjGovNo,'') = ''
AND (CONVERT(VARCHAR,FPJDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, LmpNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnSLmpHdr'
FROM spTrnSLmpHdr 
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status NOT IN (1, 2, 3))
AND (CONVERT(VARCHAR,LmpDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, ReturnNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnSRturHdr' 
FROM spTrnSRturHdr
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status NOT IN (2, 3))
AND (CONVERT(VARCHAR,ReturnDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, ReturnNo AS DocNo, Status, '-' TypeOfGoods, TableName = 'spTrnSRturSrvHdr' 
FROM spTrnSRturSrvHdr
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status NOT IN (2, 3))
AND (CONVERT(VARCHAR,ReturnDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, ReturnNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnSRturSSHdr' 
FROM spTrnSRturSSHdr                           
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status NOT IN (2, 3))
AND (CONVERT(VARCHAR,ReturnDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, AdjustmentNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnIAdjustHdr'
FROM spTrnIAdjustHdr
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status NOT IN (2, 3))
AND (CONVERT(VARCHAR,AdjustmentDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, WHTrfNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnIWHTrfHdr'
FROM spTrnIWHTrfHdr
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status NOT IN (2, 3))
AND (CONVERT(VARCHAR,WHTrfDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, ReservedNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnIReservedHdr'
FROM spTrnIReservedHdr
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status NOT IN (2, 3))
AND (CONVERT(VARCHAR,ReservedDate,111) BETWEEN @BegDate AND @EndDate)

SELECT CompanyCode, BranchCode, STHdrNo AS DocNo, Status, TypeOfGoods, TableName = 'spTrnStockTakingHdr'
FROM spTrnStockTakingHdr
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
AND (Status NOT IN (2, 3))
AND (CONVERT(VARCHAR,CreatedDate,111) BETWEEN @BegDate AND @EndDate)
GO
CREATE procedure [dbo].[uspfn_spGetUtlPORDDdtl]   
(  
--DECLARE
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),
 @CustomerCode varchar(15),
 @OrderNo varchar(20) 

--set @CompanyCode   = 6006400001
--set @BranchCode  = 6006400000
--set @CustomerCode ='0000028'
--set @OrderNo ='SOC/14/100143'

)  
AS  

begin

declare @md bit
declare @dbMD varchar(25)
declare @CompanyMD varchar(25)

set @md = (select case WHEN EXISTS(select * from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode and CompanyMD = @CompanyCode and BranchMD = @BranchCode) then cast(1 as bit) ELSE cast(0 as bit) END)

if(@md = 1)
BEGIN

SELECT  row_number () OVER (ORDER BY a.CreatedDate ASC) AS No,
	                b.DealerCode,
	                a.PartNo,
	                c.PartName,                    
	                a.Qty AS QtyOrder,
                    0.00 as QtySupply,
                    0.00 as QtyBO,
                    e.RetailPrice,
	                (e.RetailPrice * a.Qty) AS SalesAmt,
	                0.00 AS DiscPct,
                    0.00 AS NetSalesAmt
                FROM
	                spUtlPORDDDtl AS a with(nolock, nowait) , 
					spUtlPORDDHDR AS b with(nolock, nowait) ,
	                spMstItemInfo AS c with(nolock, nowait) ,
					gnMstCompanyMapping AS d with(nolock, nowait),
	                spMstItemPrice AS e with(nolock, nowait)
                WHERE
                    a.CompanyCode=b.CompanyCode AND
					a.BranchCode=b.BranchCode AND					
					a.OrderNo=b.OrderNo AND
	                a.CompanyCode = c.CompanyCode AND
	                a.PartNo = c.PartNo AND
	                a.CompanyCode = d.CompanyCode AND
	                a.BranchCode = d.BranchCode AND
					d.CompanyMD = e.CompanyCode AND
	                a.PartNo = e.PartNo AND
	                a.CompanyCode = @CompanyCode AND
	                a.BranchCode = @BranchCode AND
	                b.DealerCode = @CustomerCode AND
	                a.OrderNo = @OrderNo
                ORDER BY a.PartNo
END
ELSE
BEGIN

set @dbMD = (select DISTINCT dbmd from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)

--set @CompanyMD = (select DISTINCT CompanyMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)
--select @CompanyMD
declare @query varchar(max)

if(isnull(cast(@dbMD as varchar(max)),'') = '')
BEGIN
SELECT  row_number () OVER (ORDER BY a.CreatedDate ASC) AS No,
	                b.DealerCode,
	                a.PartNo,
	                c.PartName,                    
	                a.Qty AS QtyOrder,
                    0.00 as QtySupply,
                    0.00 as QtyBO,
                    d.RetailPrice,
	                (d.RetailPrice * a.Qty) AS SalesAmt,
	                0.00 AS DiscPct,
                    0.00 AS NetSalesAmt
                FROM
	                spUtlPORDDDtl AS a with(nolock, nowait) , 
					spUtlPORDDHDR AS b with(nolock, nowait) ,
	                spMstItemInfo AS c with(nolock, nowait) ,
	                spMstItemPrice AS d with(nolock, nowait) 
                WHERE
                    a.CompanyCode=b.CompanyCode AND
					a.BranchCode=b.BranchCode AND					
					a.OrderNo=b.OrderNo AND
	                a.CompanyCode = c.CompanyCode AND
	                a.PartNo = c.PartNo AND
	                a.CompanyCode = d.CompanyCode AND
	                a.BranchCode = d.BranchCode AND
	                a.PartNo = d.PartNo AND
	                a.CompanyCode = @CompanyCode AND
	                a.BranchCode = @BranchCode AND
	                b.DealerCode = @CustomerCode AND
	                a.OrderNo = @OrderNo
                ORDER BY a.PartNo
END
ELSE
BEGIN

set @query = '
SELECT  row_number () OVER (ORDER BY a.CreatedDate ASC) AS No,
	                b.DealerCode,
	                a.PartNo,
	                c.PartName,                    
	                a.Qty AS QtyOrder,
                    0.00 as QtySupply,
                    0.00 as QtyBO,
                    e.RetailPrice,
	                (e.RetailPrice * a.Qty) AS SalesAmt,
	                0.00 AS DiscPct,
                    0.00 AS NetSalesAmt
                FROM
	                spUtlPORDDDtl AS a with(nolock, nowait) , 
					spUtlPORDDHDR AS b with(nolock, nowait) ,
	                spMstItemInfo AS c with(nolock, nowait) ,
					gnMstCompanyMapping AS d with(nolock, nowait),
	                '+@dbMD+'..spMstItemPrice AS e with(nolock, nowait)
                WHERE
                    a.CompanyCode=b.CompanyCode AND
					a.BranchCode=b.BranchCode AND					
					a.OrderNo=b.OrderNo AND
	                a.CompanyCode = c.CompanyCode AND
	                a.PartNo = c.PartNo AND
	                a.CompanyCode = d.CompanyCode AND
	                a.BranchCode = d.BranchCode AND
					d.CompanyMD = e.CompanyCode AND
	                a.PartNo = e.PartNo AND
	                a.CompanyCode = '+@CompanyCode+' AND
	                a.BranchCode = '+@BranchCode +'AND
	                b.DealerCode = '''+@CustomerCode +'''AND
	                a.OrderNo = '''+@OrderNo+'''
                ORDER BY a.PartNo'
EXEC(@query)
print(@query)
				
		END	 
	END
end
GO
CREATE procedure [dbo].[uspfn_omSlsPrlgkpnOutBrwDocTransfer]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15)
 )  
AS  
BEGIN  
SELECT 
a.TransferOutNo, 
a.TransferOutDate, 
a.ReferenceNo, 
a.ReferenceDate, 
a.BranchCodeFrom, 
b.BranchName AS BranchNameFrom, 
a.BranchCodeTo, 
c.BranchName AS BranchNameTo, 
a.WareHouseCodeFrom, 
d.RefferenceDesc1 AS WareHouseNameFrom, 
a.WareHouseCodeTo, 
e.RefferenceDesc1 AS WareHouseNameTo, 
a.ReturnDate, 
a.Remark, 
a.Status,
CASE a.Status 
	WHEN '0' THEN 'OPEN' 
	WHEN '1' THEN 'PRINTED' 
	WHEN '2' THEN 'APPROVED' 
	WHEN '3' THEN 'DELETED' 
	WHEN '5' THEN 'TRANSFERED' 
	WHEN '9' THEN 'FINISHED' 
	ELSE '' 
END 
AS StatusDsc
FROM  OmTrInventTransferOut a 
LEFT JOIN gnMstOrganizationDtl b
ON    a.CompanyCode = b.CompanyCode 
AND   a.BranchCodeFrom = b.BranchCode 
LEFT JOIN gnMstOrganizationDtl c
ON    a.CompanyCode = c.CompanyCode 
AND   a.BranchCodeTo = c.BranchCode 
LEFT JOIN omMstRefference d
ON    a.CompanyCode = d.CompanyCode 
AND   a.WareHouseCodeFrom = d.RefferenceCode 
AND   d.RefferenceType = 'WARE' 
LEFT JOIN omMstRefference e
ON    e.CompanyCode = a.CompanyCode 
AND   e.RefferenceCode = a.WareHouseCodeTo 
AND   e.RefferenceType = 'WARE' 
WHERE a.CompanyCode = @CompanyCode
AND   a.BranchCode = @BranchCode
ORDER BY a.TransferOutNo DESC,a.TransferOutDate DESC        
END
GO
CREATE PROCEDURE [dbo].[usprpt_GnTaxDocPendingNew]
	@CompanyCode as varchar(15)
	,@BranchCode as varchar(15)
	,@StartDate as varchar(15)
	,@FPJDate as varchar(15)
	,@IsFPJCentral as varchar(5)
	,@IsCheckAll as varchar(5)
	,@DocNo as varchar(max)
	,@IsFPJGU as bit
AS

--declare @CompanyCode as varchar(15)
--		,@BranchCode as varchar(15)
--		,@StartDate as varchar(15)
--		,@FPJDate as varchar(15)
--		,@IsFPJCentral as varchar(5)
--		,@IsCheckAll as varchar(5)
--		,@DocNo as varchar(max)
--		,@IsFPJGU as bit

--set @CompanyCode='6115204001'
--set @BranchCode='6115204301'
--set @StartDate='20140901'
--set @FPJDate='20140911'
--set @IsFPJCentral='False'
--set @IsCheckAll='False'
--set @DocNo='|6115204301 INV/14/102595|'
--set @IsFPJGU = 0

declare @doc_proses table(
	BranchCode varchar(15)
	,InvoiceNo varchar(15)
)

declare @doc_pending table(
	BranchCode varchar(15)
	,ProfitCenter varchar(15)
	,InvoiceNo varchar(15)
	,InvoiceDate varchar(15)
	,Status varchar(30)
)

declare @IsFPJGab as bit
if (SELECT count(ParaValue) FROM gnMstLookUpDtl WHERE CompanyCode=@CompanyCode AND CodeID='FFPG' AND LookUpValue='STAT') > 0
	SET @IsFPJGab=(SELECT ParaValue FROM gnMstLookUpDtl WHERE CompanyCode=@CompanyCode AND CodeID='FFPG' AND LookUpValue='STAT')
else
	SET @IsFPJGab=0

declare @IsUnion as varchar(1)
set @IsUnion = '0'
if(select count(LookUpValue) from gnMstLookUpDtl where CompanyCode= @CompanyCode and LookUpValue=@BranchCode and CodeID='BRANCH') > 0
	set @IsUnion = '1'

-------------------------------------------------------------------------------------------
-- Insert Dokumen Pending
-------------------------------------------------------------------------------------------
insert into @doc_pending
SELECT	BranchCode,'UNIT' AS ProfitCenter, InvoiceNo, convert(varchar,InvoiceDate,106) InvoiceDate, 'Belum Approve' AS Status 
FROM	OmTrSalesInvoice
WHERE	CompanyCode = @CompanyCode 
        AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
        AND isStandard = '1' AND ISNULL(FakturPajakNo, '') = ''
		AND Status <> '3' AND  CONVERT(VARCHAR, InvoiceDate, 112) BETWEEN @StartDate AND @FPJDate
		AND EXISTS (SELECT ParaValue FROM gnMstLookupDtl WHERE CodeID = 'FPJG' AND LookupValue = (CASE WHEN @isFPJGU = 0 THEN '' ELSE CustomerCode END))
EXCEPT
SELECT	BranchCode,'UNIT' AS ProfitCenter, InvoiceNo, convert(varchar,InvoiceDate,106) InvoiceDate, 'Belum Approve' AS Status  
FROM	OmFakturPajakHdr
WHERE	CompanyCode = @CompanyCode 
        AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
        AND TaxType = 'Standard'
		AND  CONVERT(VARCHAR, InvoiceDate, 112) BETWEEN @StartDate AND @FPJDate

insert into @doc_pending
SELECT	BranchCode,'FINANCE' AS ProfitCenter, InvoiceNo, convert(varchar,InvoiceDate,106) InvoiceDate, 'Belum Print' AS Status  
FROM	ARTrnInvoiceHdr
WHERE	CompanyCode = @CompanyCode 
        AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
        AND StatusTax = '1' AND ISNULL(FPJNo, '') = ''
		AND Status <> '1' AND CONVERT(VARCHAR, InvoiceDate, 112) BETWEEN @StartDate AND @FPJDate
		AND EXISTS (SELECT ParaValue FROM gnMstLookupDtl WHERE CodeID = 'FPJG' AND LookupValue = (CASE WHEN @isFPJGU = 0 THEN '' ELSE CustomerCode END))
EXCEPT
SELECT	BranchCode,'FINANCE' AS ProfitCenter, InvoiceNo, convert(varchar,InvoiceDate,106) InvoiceDate, 'Belum Print' AS Status 
FROM	ARFakturPajakHdr
WHERE	CompanyCode = @CompanyCode 
        AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
        AND TaxType = 'Standard'
		AND CONVERT(VARCHAR, InvoiceDate, 112) BETWEEN @StartDate AND @FPJDate

insert into @doc_pending
SELECT	BranchCode,'UNIT' AS ProfitCenter, InvoiceNo, convert(varchar,InvoiceDate,106) InvoiceDate, 'Belum Generate Pajak' AS Status 
FROM	OmFakturPajakHdr
WHERE	CompanyCode = @CompanyCode 
        AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
        AND TaxType = 'Standard'
		AND CONVERT(VARCHAR, InvoiceDate, 112) >= @StartDate AND CONVERT(VARCHAR, InvoiceDate, 112) < @FPJDate
		AND EXISTS (SELECT ParaValue FROM gnMstLookupDtl WHERE CodeID = 'FPJG' AND LookupValue = (CASE WHEN @isFPJGU = 0 THEN '' ELSE CustomerCode END))
EXCEPT
SELECT	BranchCode,'UNIT' AS ProfitCenter, DocNo AS InvoiceNo, convert(varchar,DocDate,106) AS InvoiceDate, 'Belum Generate Pajak' AS Status
FROM	GnGenerateTax
WHERE	CompanyCode = @CompanyCode 
        AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
		AND CONVERT(VARCHAR, DocDate, 112) >= @StartDate AND CONVERT(VARCHAR, DocDate, 106) < @FPJDate

insert into @doc_pending
SELECT	BranchCode,'FINANCE' AS ProfitCenter,  InvoiceNo, convert(varchar,InvoiceDate,106) InvoiceDate, 'Belum Generate Pajak' AS Status 
FROM	ARFakturPajakHdr
WHERE	CompanyCode = @CompanyCode 
        AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
        AND TaxType = 'Standard'
		AND CONVERT(VARCHAR, InvoiceDate, 112) >= @StartDate AND CONVERT(VARCHAR, InvoiceDate, 112) < @FPJDate
		AND EXISTS (SELECT ParaValue FROM gnMstLookupDtl WHERE CodeID = 'FPJG' AND LookupValue = (CASE WHEN @isFPJGU = 0 THEN '' ELSE CustomerCode END))
EXCEPT
SELECT  BranchCode,'FINANCE' AS ProfitCenter,  DocNo AS InvoiceNo, convert(varchar,DocDate,106) AS InvoiceDate, 'Belum Generate Pajak' AS Status  
FROM	GnGenerateTax
WHERE	CompanyCode = @CompanyCode 
        AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
		AND CONVERT(VARCHAR, DocDate, 112) >= @StartDate AND CONVERT(VARCHAR, DocDate, 112) < @FPJDate

insert into @doc_pending
SELECT	BranchCode,'FINANCE' AS ProfitCenter,  InvoiceNo, convert(varchar,InvoiceDate,106) InvoiceDate, 'Belum Generate Pajak' AS Status 
FROM	ARFakturPajakHdr
WHERE	CompanyCode = @CompanyCode 
        AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
        AND TaxType = 'Standard'
		AND CONVERT(VARCHAR, InvoiceDate, 112) >= @StartDate AND CONVERT(VARCHAR, InvoiceDate, 112) < @FPJDate
		AND EXISTS (SELECT ParaValue FROM gnMstLookupDtl WHERE CodeID = 'FPJG' AND LookupValue = (CASE WHEN @isFPJGU = 0 THEN '' ELSE CustomerCode END))
EXCEPT
SELECT  BranchCode,'FINANCE' AS ProfitCenter,  DocNo AS InvoiceNo, convert(varchar,DocDate,106) AS InvoiceDate, 'Belum Generate Pajak' AS Status  
FROM	GnGenerateTax
WHERE	CompanyCode = @CompanyCode 
        AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
		AND CONVERT(VARCHAR, DocDate, 112) >= @StartDate AND CONVERT(VARCHAR, DocDate, 112) < @FPJDate

if @IsFPJGab = 1
	insert into @doc_pending
	SELECT	BranchCode,'SPAREPART' AS ProfitCenter, FPGNo, convert(varchar,FPGDate,106) InvoiceDate, 'Belum Generate Pajak' AS Status 
	FROM	SPTrnSFakturPajak
	WHERE	CompanyCode = @CompanyCode 
			AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
			AND isPKP = 1
			AND CONVERT(VARCHAR, FPGDate, 112) >= @StartDate AND CONVERT(VARCHAR, FPGDate, 112) < @FPJDate
			AND EXISTS (SELECT ParaValue FROM gnMstLookupDtl WHERE CodeID = 'FPJG' AND LookupValue = (CASE WHEN @isFPJGU = 0 THEN '' ELSE CustomerCode END))
	GROUP BY BranchCode, FPGNo, convert(varchar,FPGDate,112)
	EXCEPT
	SELECT	BranchCode,'SPAREPART' AS ProfitCenter, DocNo AS InvoiceNo, convert(varchar,DocDate,106) AS InvoiceDate, 'Belum Generate Pajak' AS Status 
	FROM	GnGenerateTax
	WHERE	CompanyCode = @CompanyCode 
			AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
			AND CONVERT(VARCHAR, DocDate, 112) >= @StartDate AND CONVERT(VARCHAR, DocDate, 112) < @FPJDate
else
	insert into @doc_pending
	SELECT	BranchCode,'SPAREPART' AS ProfitCenter, InvoiceNo, convert(varchar,InvoiceDate,106), 'Belum Generate Pajak' AS Status 
	FROM	SPTrnSFPJHdr
	WHERE	CompanyCode = @CompanyCode 
            AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
            AND isPKP = 1
			AND CONVERT(VARCHAR, InvoiceDate, 112) >= @StartDate AND CONVERT(VARCHAR, InvoiceDate, 112) < @FPJDate
			AND EXISTS (SELECT ParaValue FROM gnMstLookupDtl WHERE CodeID = 'FPJG' AND LookupValue = (CASE WHEN @isFPJGU = 0 THEN '' ELSE CustomerCode END))
	EXCEPT
	SELECT	BranchCode,'SPAREPART' AS ProfitCenter, DocNo AS InvoiceNo, convert(varchar,DocDate,106) AS InvoiceDate, 'Belum Generate Pajak' AS Status 
	FROM	GnGenerateTax
	WHERE	CompanyCode = @CompanyCode 
            AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
			AND CONVERT(VARCHAR, DocDate, 112) >= @StartDate AND CONVERT(VARCHAR, DocDate, 112) < @FPJDate
			
insert into @doc_pending
SELECT	BranchCode,'SERVICE' AS ProfitCenter, FPJNO AS  InvoiceNo, convert(varchar,FPJDate,106) AS InvoiceDate, 'Belum Generate Pajak' AS Status 
FROM 	SVTrnFakturPajak
WHERE	CompanyCode = @CompanyCode 
        AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
        AND isPKP = 1
		AND IsLocked=0
		AND CONVERT(VARCHAR, FPJDate, 112) >= @StartDate AND CONVERT(VARCHAR, FPJDate, 112) < @FPJDate
		AND EXISTS (SELECT ParaValue FROM gnMstLookupDtl WHERE CodeID = 'FPJG' AND LookupValue = (CASE WHEN @isFPJGU = 0 THEN '' ELSE CustomerCode END))
EXCEPT
SELECT	BranchCode,'SERVICE' AS ProfitCenter, DocNo AS InvoiceNo, convert(varchar,DocDate,106) AS InvoiceDate, 'Belum Generate Pajak' AS Status  
FROM	GnGenerateTax
WHERE	CompanyCode = @CompanyCode
        AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
				or (case when @IsUnion = '1' then BranchCode end) 
					in (select LookUpvalue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
						where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
					)
			)
		AND CONVERT(VARCHAR, DocDate, 112) >= @StartDate AND CONVERT(VARCHAR, DocDate, 112) < @FPJDate

if @IsCheckAll = 'True'
begin
	-------------------------------------------------------------------------------------------
	-- Insert Dokumen yang di Proses
	-------------------------------------------------------------------------------------------
	if @IsFPJGab = 1
		insert into @doc_proses
		SELECT	BranchCode,FPGNo as InvoiceNo
		FROM	SpTrnSFakturPajak
		WHERE	CompanyCode = @CompanyCode 
				AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
					or (case when @IsUnion = '1' then BranchCode end) 
						in (select LookUpvalue from gnMstLookUpDtl 
							where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
							where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
						)
				)
				AND isPKP = 1 AND ISNULL(FPJGovNo, '') = ''
				AND CONVERT(VARCHAR, FPGDate, 112) BETWEEN @StartDate AND @FPJDate
		GROUP BY CompanyCode, BranchCode,FPJGovNo,FPGNo,convert(varchar,FPGDate,112)
	else
		insert into @doc_proses
		SELECT	BranchCode,InvoiceNo as InvoiceNo
	    FROM	SpTrnSFPJHdr
	    WHERE	CompanyCode = @CompanyCode 
                AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
					or (case when @IsUnion = '1' then BranchCode end) 
						in (select LookUpvalue from gnMstLookUpDtl 
							where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
							where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
						)
				)
                AND isPKP = 1 AND ISNULL(FPJGovNo, '') = ''
			    AND CONVERT(VARCHAR, InvoiceDate, 112) BETWEEN @StartDate AND @FPJDate

	insert into @doc_proses
	SELECT	BranchCode,FPJNo as InvoiceNo
	FROM	SvTrnFakturPajak
	WHERE	CompanyCode = @CompanyCode 
			AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
					or (case when @IsUnion = '1' then BranchCode end) 
						in (select LookUpvalue from gnMstLookUpDtl 
							where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
							where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
						)
				)
			AND isPKP = 1 AND ISNULL(FPJGovNo, '') = ''
			AND IsLocked=0
			AND CONVERT(VARCHAR, FPJDate, 112) BETWEEN @StartDate AND @FPJDate

	insert into @doc_proses
	SELECT	BranchCode,InvoiceNo as InvoiceNo
	FROM	OmFakturPajakHdr
	WHERE	CompanyCode = @CompanyCode 
			AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
					or (case when @IsUnion = '1' then BranchCode end) 
						in (select LookUpvalue from gnMstLookUpDtl 
							where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
							where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
						)
				) 
			AND TaxType = 'Standard' AND ISNULL(FakturPajakNo, '') = ''
			AND CONVERT(VARCHAR, InvoiceDate, 112) BETWEEN @StartDate AND @FPJDate

	insert into @doc_proses
	SELECT	BranchCode,InvoiceNo as InvoiceNo
	FROM	ArFakturPajakHdr
	WHERE	CompanyCode = @CompanyCode 
			AND ((case when @IsUnion = '0' then BranchCode end)= (case when @IsFPJCentral='True' then BranchCode else @BranchCode end)
					or (case when @IsUnion = '1' then BranchCode end) 
						in (select LookUpvalue from gnMstLookUpDtl 
							where CompanyCode= @CompanyCode and CodeID='BRANCH' and ParaValue = (select ParaValue from gnMstLookUpDtl 
							where CompanyCode= @CompanyCode and CodeID='BRANCH' and LookUpValue= @BranchCode)
						)
				)
			AND TaxType = 'Standard' AND ISNULL(FakturPajakNo, '') = ''
			AND CONVERT(VARCHAR, InvoiceDate, 112) BETWEEN @StartDate AND @FPJDate

	select BranchCode,ProfitCenter,InvoiceNo,convert(varchar,InvoiceDate, 106) InvoiceDate,Status
	from @doc_pending a
	where not exists(
			select 1 from @doc_proses
			where BranchCode=a.BranchCode and InvoiceNo=a.InvoiceNo
		)
	order by InvoiceDate,BranchCode,ProfitCenter
end
else
begin
	select BranchCode,ProfitCenter,InvoiceNo,convert(varchar,InvoiceDate, 106) InvoiceDate,Status
	from @doc_pending
	where @DocNo not like '%|'+BranchCode+' '+InvoiceNo+'|%'
	order by InvoiceDate,BranchCode,ProfitCenter
end
GO
CREATE procedure [dbo].[uspfn_spSelectPickingSlipAfterLmp] 
--declare 
@CompanyCode varchar(15), @BranchCode varchar(15), 
		@ProductType varchar(4), @JobOrderNo varchar(25)
as
--set @CompanyCode = '6159401000'
--set @BranchCode = '6159401001'
--set @ProductType = '4W'
--set @JobOrderNo = 'SPK/15/002385'
SELECT * INTO #t1 FROM (
	SELECT
		DISTINCT c.DocNo, c.DocDate, d.PickingSlipNo, e.PartNo, e.PartNo PartNoOri, e.QtySupply, 
		e.QtyPicked, e.QtyBill, d.Status, f.LookUpValueName TransTypeDesc, c.TransType, g.LmpNo,
		d.PickedBy
	FROM
		svTrnService a
	LEFT JOIN svTrnSrvItem b ON b.CompanyCode = a.CompanyCode AND b.BranchCode = a.BranchCode 
		AND b.ProductType = a.ProductType AND b.ServiceNo=a.ServiceNo
	LEFT JOIN spTrnSOrdHdr c ON c.CompanyCode = a.CompanyCode AND c.BranchCode = a.BranchCode 
		AND c.DocNo = b.SupplySlipNo
	LEFT JOIN spTrnSPickingHdr d ON d.CompanyCode = a.CompanyCode AND d.BranchCode = a.BranchCode 
		AND d.PickingSlipNo = c.ExPickingSlipNo
	LEFT JOIN spTrnSPickingDtl e ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode 
		AND e.PickingSlipNo = d.PickingSlipNo
	LEFT JOIN gnMstLookUpDtl f ON f.CompanyCode = a.CompanyCode AND f.CodeId = 'TTSR' 
		AND f.LookUpValue = c.TransType
	LEFT JOIN spTrnSLmpHdr g ON g.CompanyCode = a.CompanyCode AND g.BranchCode = a.BranchCode 
		AND g.PickingSlipNo = d.PickingSlipNo
	WHERE 
		a.CompanyCode     = @CompanyCode
		AND a.BranchCode  = @BranchCode
		AND a.ProductType = @ProductType
		AND a.jobOrderNo  = @JobOrderNo
		--AND b.SupplySlipNo <> ''
		--AND b.PartSeq = (SELECT MAX(PartSeq) FROM SvTrnSrvItem WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
			  -- AND ProductType = @ProductType AND ServiceNo = a.ServiceNo AND PartNo = b.PartNo)
		--AND d.Status <= 2
)#t1
SELECT Row_number() OVER(ORDER BY DocNo) No, * FROM #t1
DROP TABLE #t1
GO
CREATE procedure [dbo].[uspfn_omSlsPrlgkpnOutBrwDocBPK]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),
 @ProfitCenterCode varchar(15)
 )  
AS  
BEGIN  
SELECT Distinct a.BPKNo, a.CustomerCode ,c.CustomerName,a.CustomerCode  + ' - ' + c.CustomerName as Customer,
                c.Address1 + ' ' + c.Address2 + ' ' + c.Address3 + ' ' + c.Address4 as Address 
                    FROM omTrSalesBPK a, gnMstCustomerProfitCenter b, gnMstCustomer c
                 WHERE a.CompanyCode = b.CompanyCode
                       AND a.CompanyCode = @CompanyCode
                       AND a.BranchCode = @BranchCode
                       AND b.ProfitCenterCode = @ProfitCenterCode                    
					   AND a.CompanyCode = c.CompanyCode
					   AND a.CustomerCode = c.CustomerCode
                       AND a.Status = '2'                      
                ORDER BY a.BPKNo ASC                
END
GO
CREATE procedure [dbo].[uspfn_UpdateMasterShift]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;
	
	with x as (
		select *
		  from SDMS..HrShift a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrShift (
		   CompanyCode
		 , ShiftCode
		 , ShiftName
		 , OnDutyTime
		 , OffDutyTime
		 , OnRestTime
		 , OffRestTime
		 , WorkingHour
		 , IsActive
		 , CreatedBy
		 , CreatedDate
		 , UpdatedBy
		 , UpdatedDate
		 , IsDeleted
		 )
	select CompanyCode = @CompanyCode_B
	     , a.ShiftCode
	     , a.ShiftName
	     , a.OnDutyTime
	     , a.OffDutyTime
	     , a.OnRestTime
	     , a.OffRestTime
	     , a.WorkingHour
	     , a.IsActive
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdatedBy
	     , a.UpdatedDate
	     , a.IsDeleted
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
Create PROCEDURE [dbo].[uspfn_svCusVehLookUp]
@CompanyCode varchar(15), @BranchCode varchar(15), @DynamicFilter varchar(4000) = ''
AS
begin
--declare @CompanyCode varchar(15), @BranchCode varchar(15), @DynamicFilter varchar(4000) = ''
--set @CompanyCode = '6159401000'
--set @BranchCode = '6159401001'
--set @DynamicFilter = ' 
--	and InvoiceNo like ''%INC/15/0029%''
--	and JobOrderNo like ''%SPK/15/003%'''

DECLARE @Query varchar(max);
	SET @Query = 'select top 500 * from SvCustomerVehicleView
	WHERE CompanyCode = ''' + @CompanyCode + ''' AND BranchCode = ''' + @BranchCode + '''' 
            +@DynamicFilter
          
        
	--print(@Query);
	exec (@Query)
END
GO
CREATE procedure [dbo].[uspfn_omSlsInvModelGetTotal4Tax]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15), 
 @InvoiceNo varchar(30) 
)  
AS  
BEGIN 
		 SELECT * INTO #f1 FROM (
             SELECT ISNULL(SUM(a.Quantity) * SUM(a.BeforeDiscDPP), 0) AS DPPAmt, ISNULL(SUM(a.Quantity) * SUM(a.DiscExcludePPn), 0) AS DiscAmt
            , (ISNULL(SUM(a.Quantity) * SUM(a.BeforeDiscDPP), 0) - ISNULL(SUM(a.Quantity) * SUM(a.DiscExcludePPn), 0) + ISNULL(SUM(a.Quantity) * SUM(a.AfterDiscPPn), 0)) AS TotalAmt, ISNULL(SUM(a.Quantity) * SUM(a.AfterDiscPPn), 0) AS PPnAmt
            , ISNULL(SUM(a.Quantity), 0) AS TotQuantity, ISNULL(SUM(a.Quantity) * SUM(a.PPnBMPaid), 0) AS PPnBMPaid FROM omTrSalesInvoiceModel a
             WHERE a.CompanyCode = @CompanyCode AND a.BranchCode = @BranchCode AND a.InvoiceNo = @InvoiceNo
             GROUP BY a.InvoiceNo, a.BPKNo, a.SalesModelCode, a.SalesModelYear
             ) #f1
            
            
         SELECT ISNULL(SUM(DPPAmt), 0) AS DPPAmt, ISNULL(SUM(DiscAmt), 0) AS DiscAmt
            , ISNULL(SUM(TotalAmt), 0) AS TotalAmt, ISNULL(SUM(PPnAmt), 0) AS PPnAmt
             , ISNULL(SUM(TotQuantity), 0) AS TotQuantity, ISNULL(SUM(PPnBMPaid), 0) AS PPnBMPaid FROM #f1
            
			DROP TABLE #f1

end
GO
CREATE procedure [dbo].[uspfn_UpdateIDChangedHistory]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;

	with x as (
		select *
		  from SDMS..HrEmployeeIDChangedHistory a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrEmployeeIDChangedHistory (
		   CompanyCode
		 , OldEmployeeID
		 , NewEmployeeID
		 , CreatedBy
		 , CreatedDate
		 )
	select CompanyCode = @CompanyCode_B
	     , a.OldEmployeeID
	     , a.NewEmployeeID
	     , a.CreatedBy
	     , a.CreatedDate
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[uspfn_UpdateCsCustData]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;
	
	with x as (
		select *
		  from SDMS..CsCustData a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..CsCustData (
		   CompanyCode
		 , CustomerCode
		 , AddPhone1
		 , AddPhone2
		 , ReligionCode
		 , IsDeleted
		 , CreatedBy
		 , CreatedDate
		 , UpdatedBy
		 , UpdatedDate
		 )
	select CompanyCode = @CompanyCode_B
	     , a.CustomerCode
	     , a.AddPhone1
	     , a.AddPhone2
	     , a.ReligionCode
	     , a.IsDeleted
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdatedBy
	     , a.UpdatedDate
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[uspfn_omSlsInvOtherGetTotal4Tax]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15), 
 @InvoiceNo varchar(30) 
)  
AS  
BEGIN 
SELECT * INTO #f1 FROM(
          SELECT (ISNULL(SUM(b.Quantity), 0) * ISNULL(SUM(a.AfterDiscDPP), 0)) AS DPPAmt, ISNULL(SUM(b.Quantity), 0) AS TotQuantity
         , (ISNULL(SUM(b.Quantity), 0) * ISNULL(SUM(a.AfterDiscPPn), 0)) AS PPnAmt, (ISNULL(SUM(b.Quantity), 0)  * ISNULL(SUM(a.AfterDiscTotal), 0)) AS TotalAmt
          FROM omTrSalesInvoiceOthers a
          LEFT JOIN omTrSalesInvoiceModel b ON b.CompanyCode = a.CompanyCode AND b.BranchCode = a.BranchCode
          AND b.InvoiceNo = a.InvoiceNo AND b.SalesModelCode = a.SalesModelCode AND b.SalesModelYear = a.SalesModelYear
          WHERE a.CompanyCode = @CompanyCode AND a.BranchCode = @BranchCode AND a.InvoiceNo = @InvoiceNo
          GROUP BY a.SalesModelCode, a.SalesModelYear, a.OtherCode
          ) #f1

          SELECT ISNULL(SUM(DPPAmt), 0) AS DPPAmt, ISNULL(SUM(TotQuantity), 0) AS TotQuantity, ISNULL(SUM(PPnAmt), 0) AS PPnAmt, ISNULL(SUM(TotalAmt), 0) AS TotalAmt
          FROM #f1
          DROP TABLE #f1
          
end
GO
CREATE procedure [dbo].[uspfn_omSlsInvSlctMdlYrVldt]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),
 @BPKNo varchar(15),
 @InvoiceNo varchar(30),
 @SalesModelCode varchar(30)
)  
AS  
BEGIN  
 SELECT a.SalesModelYear, a.SalesModelDesc
                  FROM omMstModelYear a
                 WHERE a.CompanyCode = @CompanyCode
                       AND a.Status = '1'
                       AND a.SalesModelCode = @SalesModelCode
                       AND a.SalesModelYear IN
                             (SELECT b.SalesModelYear
                                FROM omTrSalesBPKModel b
                               WHERE b.CompanyCode = a.CompanyCode
                                     AND b.BranchCode = @BranchCode
                                     AND b.BPKNo = @BPKNo
                                     AND b.SalesModelCode = a.SalesModelCode
                                     AND (b.QuantityBPK - b.QuantityInvoice) > 0)
                UNION
                SELECT z.SalesModelYear, (SELECT x.SalesModelDesc 
                       FROM omMstModelYear x
                       WHERE x.SalesModelYear = z.SalesModelYear and 
			                 x.SalesModelCode = z.SalesModelCode)  AS SalesModelDesc
                  FROM omTrSalesInvoiceModel z
                 WHERE z.CompanyCode = @CompanyCode
                       AND z.BranchCode = @BranchCode
                       AND z.InvoiceNo = @InvoiceNo
                       AND z.BPKNo = @BPKNo
                       AND z.SalesModelCode = @SalesModelCode
                ORDER BY a.SalesModelYear 
                
end
GO
CREATE procedure [dbo].[uspfn_GenerateSSPickingslipNew]
	@CompanyCode	VARCHAR(MAX),
	@BranchCode		VARCHAR(MAX),
	@JobOrderNo		VARCHAR(MAX),
	@ProductType	VARCHAR(MAX),
	@CustomerCode	VARCHAR(MAX),
	@TransType		VARCHAR(MAX),
	@UserID			VARCHAR(MAX),
	@DocDate		DATETIME
AS
BEGIN

--declare	@CompanyCode	VARCHAR(MAX)
--declare	@BranchCode		VARCHAR(MAX)
--declare	@JobOrderNo		VARCHAR(MAX)
--declare	@ProductType	VARCHAR(MAX)
--declare	@CustomerCode	VARCHAR(MAX)
--declare	@TransType		VARCHAR(MAX)
--declare	@UserID			VARCHAR(MAX)
--declare	@DocDate		DATETIME

--set	@CompanyCode	= '6156401000'
--set	@BranchCode		= '6156401001'
--set	@JobOrderNo		= 'SPK/15/001833'
--set	@ProductType	= '4W'
--set	@CustomerCode	= '000003'
--set	@TransType		= '20'
--set	@UserID			= 'TRAININGZZZ'
--set	@DocDate		= '3/12/2015 9:47:01 AM'


--exec uspfn_GenerateSSPickingslipNew '6006400001','6006400101','SPK/14/101589','4W','2105885','20','ga','3/2/2015 4:03:01 PM'
--================================================================================================================================
-- TABLE MASTER
--================================================================================================================================
-- Temporary for Item --
------------------------
SELECT * INTO #Item FROM (
SELECT a.CompanyCode
	, a.BranchCode
	, a.ProductType
	, a.ServiceNo
	, a.RetailPrice
	, a.PartNo
	, a.Billtype
	, SUM(ISNULL(a.DemandQty, 0) - (ISNULL(a.SupplyQty, 0))) QtyOrder
FROM svTrnSrvItem a WITH (NOLOCK, NOWAIT)
INNER JOIN svTrnService b ON b.CompanyCode = a.CompanyCode
	AND b.BranchCode = a.BranchCode
	AND b.ProductType = a.ProductType
	AND b.ServiceNo = a.ServiceNo
	AND b.JobOrderNo = @JobOrderNo
WHERE a.CompanyCode = @CompanyCode 
	AND a.BranchCode = @BranchCode 
	AND a.ProductType = @ProductType 
GROUP BY a.CompanyCode, a.BranchCode, a.ProductType
	, a.ServiceNo, a.PartNo, a.RetailPrice, a.BillType ) #Item 

DECLARE @CompanyMD AS VARCHAR(15)
DECLARE @BranchMD AS VARCHAR(15)
DECLARE @WarehouseMD AS VARCHAR(15)

SET @CompanyMD = (SELECT CompanyMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)
SET @BranchMD = (SELECT BranchMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)
SET @WarehouseMD = (SELECT WarehouseMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)

SELECT * INTO #SrvOrder FROM (
SELECT DISTINCT(a.CompanyCode) 
    , a.BranchCode
	, a.ProductType
	, a.ServiceNo
	, a.PartNo
    , (SELECT Paravalue FROM gnMstLookUpDtl WHERE CompanyCode = a.CompanyCode AND CodeID = 'GTGO' AND LookUpValue = a.TypeOfGoods) TipePart
    , (SELECT PartName FROM spMstItemInfo WHERE CompanyCode = a.CompanyCode AND PartNo = a.PartNo) PartName
	, a.RetailPrice
	, a.CostPrice
    , a.TypeOfGoods
    , a.BillType
	, SUM(a.QtyOrder) QtyOrder
    , 0 QtySupply
    , 0 QtyBO
    , (SUM(a.QtyOrder) * a.RetailPrice) * ((100 - a.PartDiscPct)/100) NetSalesAmt
    , a.PartDiscPct DiscPct
FROM
(
	SELECT
		DISTINCT(a.CompanyCode) 
		, a.BranchCode
		, a.ProductType
		, a.ServiceNo
		, a.PartNo
		, a.RetailPrice
		, c.CostPrice
		, a.TypeOfGoods
		, a.BillType
		, ISNULL(Item.QtyOrder,0) AS QtyOrder
		, a.DiscPct PartDiscPct 
	FROM
		svTrnSrvItem a WITH (NOLOCK, NOWAIT)
		LEFT JOIN svTrnService b WITH (NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
			AND a.BranchCode = b.BranchCode	
			AND a.ProductType = b.ProductType
			AND a.ServiceNo = b.ServiceNo
		LEFT JOIN #Item Item ON Item.CompanyCode = a.CompanyCode 
			AND Item.BranchCode = a.BranchCode 
			AND Item.ProductType = a.ProductType 
			AND Item.ServiceNo = a.ServiceNo 
			AND Item.PartNo = a.PartNo 
			AND Item.RetailPrice = a.RetailPrice 
			AND Item.BillType = a.Billtype
		LEFT JOIN SpMstItemPrice c WITH (NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode 
			AND a.BranchCode = c.BranchCode 
			AND a.PartNo = c.PartNo
	WHERE
		a.CompanyCode = @CompanyCode
		AND a.BranchCode = @BranchCode
		AND a.ProductType = @ProductType
		AND Item.QtyOrder > 0
		AND JobOrderNo = @JobOrderNo
		AND (a.SupplySlipNo is null OR a.SupplySlipNo = '')
) a
GROUP BY
	a.CompanyCode
	, a.BranchCode
	, a.ProductType
	, a.ServiceNo
	, a.PartNo
	, a.RetailPrice
	, a.CostPrice
    , a.TypeOfGoods
    , a.BillType
    , a.PartDiscPct 
) #SrvOrder

select * from #srvorder

--================================================================================================================================
-- INSERT TABLE SpTrnSORDHdr AND SpTrnSORDDtl
--================================================================================================================================
DECLARE @MaxDocNo			INT
DECLARE	@MaxPickingList		INT
DECLARE @TempDocNo			VARCHAR(MAX)
DECLARE @TempPickingList	VARCHAR(MAX)
DECLARE @TypeOfGoods		VARCHAR(MAX)
DECLARE @DefaultDate		DATETIME

SET @DefaultDate = '1900-01-01 00:00:00.000'

--===============================================================================================================================
-- LOOPING BASED ON THE TYPE OF GOODS
-- ==============================================================================================================================
DECLARE db_cursor CURSOR FOR
SELECT DISTINCT TypeOfGoods FROM #SrvOrder
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode AND ProductType = @ProductType 

OPEN db_cursor
FETCH NEXT FROM db_cursor INTO @TypeOfGoods

WHILE @@FETCH_STATUS = 0
BEGIN

--===============================================================================================================================
-- INSERT HEADER
-- ==============================================================================================================================
SET @MaxDocNo = ISNULL((SELECT DocumentSequence + 1 FROM GnMstDocument WHERE 
	CompanyCode = @CompanyCode
		AND BranchCode = @BranchCode
		AND DocumentType = 'SSS' 
		AND ProfitCenterCode = '300' 
		AND DocumentYear = YEAR(GetDate())),0)

SET @TempDocNo = ISNULL((SELECT 'SSS/' + RIGHT(YEAR(GETDATE()),2) +'/' + RIGHT(1000000 + CONVERT(VARCHAR, @MaxDocNo, 1), 6)),'SSS/YY/XXXXXX')

INSERT INTO SpTrnSORDHdr
([CompanyCode]
           ,[BranchCode]
           ,[DocNo]
           ,[DocDate]
           ,[UsageDocNo]
           ,[UsageDocDate]
           ,[CustomerCode]
           ,[CustomerCodeBill]
           ,[CustomerCodeShip]
           ,[isBO]
           ,[isSubstitution]
           ,[isIncludePPN]
           ,[TransType]
           ,[SalesType]
           ,[IsPORDD]
           ,[OrderNo]
           ,[OrderDate]
           ,[TOPCode]
           ,[TOPDays]
           ,[PaymentCode]
           ,[PaymentRefNo]
           ,[TotSalesQty]
           ,[TotSalesAmt]
           ,[TotDiscAmt]
           ,[TotDPPAmt]
           ,[TotPPNAmt]
           ,[TotFinalSalesAmt]
           ,[isPKP]
           ,[ExPickingSlipNo]
           ,[ExPickingSlipDate]
           ,[Status]
           ,[PrintSeq]
           ,[TypeOfGoods]
           ,[isDropsign]
           ,[CreatedBy]
           ,[CreatedDate]
           ,[LastUpdateBy]
           ,[LastUpdateDate]
           ,[isLocked]
           ,[LockingBy]
           ,[LockingDate])

SELECT 
	@CompanyCode CompanyCode
	, @BranchCode BranchCode
	, @TempDocNo DocNo 
	, @DocDate DocDate
	, @JobOrderNo UsageDocNo
	, (SELECT JobOrderDate FROM SvTrnService WHERE 1 =1 AND CompanyCode = @CompanyCode AND BranchCode = @BranchCode 
		AND ProductType = @ProductType AND JobOrderNo = @JobOrderNo) UsageDocDate
	, (SELECT CustomerCode FROM SvTrnService WHERE 1 = 1AND CompanyCode = @CompanyCode AND BranchCode = @BranchCode 
		AND ProductType = @ProductType AND JobOrderNo = @JobOrderNo) CustomerCode
	, (SELECT CustomerCodeBill FROM SvTrnService WHERE 1 = 1 AND CompanyCode = @CompanyCode AND BranchCode = @BranchCode 
		AND ProductType = @ProductType AND JobOrderNo = @JobOrderNo) CustomerCodeBill
	, (SELECT CustomerCode FROM SvTrnService WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode 
		AND ProductType = @ProductType AND JobOrderNo = @JobOrderNo) CustomerCodeShip
	, CONVERT(BIT, 0) isBO
	, CONVERT(BIT, 0) isSubstitution
	, CONVERT(BIT, 1) isIncludePPN
	, @TransType TransType
	, '2' SalesType
	, CONVERT(BIT, 0) isPORDD
	, @JobOrderNo OrderNo
	, @DocDate OrderDate
	, ISNULL((SELECT TOPCode FROM GnMstCustomerProfitCenter WITH (NOLOCK, NOWAIT) WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
		AND ProfitCenterCode = '300' AND CustomerCode = @CustomerCode),'W') TOPCode
	, ISNULL((SELECT ParaValue FROM GnMstLookUpDtl WITH (NOLOCK, NOWAIT) WHERE CompanyCode = @CompanyCode AND CodeID = 'TOPC' AND 
		LookupValue IN 
		(SELECT TOPCode FROM GnMstCustomerProfitCenter WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
			AND ProfitCenterCode = '300' AND CustomerCode = @CustomerCode)
	  ),0) TOPDays
	, ISNULL((SELECT PaymentCode FROM GnMstCustomerProfitCenter WITH (NOLOCK, NOWAIT) WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
		AND ProfitCenterCode = '300' AND CustomerCode = @CustomerCode),'W') PaymentCode
	, '' PaymentReffNo
	, 0 TotSalesQty
	, 0 TotSalesAmt
	, 0 TotDiscAmt
	, 0 TotDPPAmt
	, 0 TotPPNAmt
	, 0 TotFinalSalesAmt
	, CONVERT(BIT, 0) isPKP
	, NULL ExPickingSlipNo
	, NULL ExPickingSlipDate
	, '4' Status
	, 0 PrintSeq
	, @TypeOfGoods TypeOfGoods
	, NULL IsDropSign
	, @UserID CreatedBY
	, GetDate() CreatedDate
	, @UserID LastUpdateBy
	, GetDate() LastUpdateDate
	, NULL isLocked
	, NULL LockingBy
	, NULL LockingDate


UPDATE GnMstDocument
SET DocumentSequence = DocumentSequence + 1
	, LastUpdateDate = GetDate()
	, LastUpdateBy = @UserID
WHERE
	CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND DocumentPrefix = 'SSS'
	AND ProfitCenterCode = '300'
	AND DocumentYear = Year(GetDate())

--===============================================================================================================================
-- INSERT DETAIL
-- ==============================================================================================================================
DECLARE @DbMD AS VARCHAR(15)
SET @DbMD = (SELECT DbMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)

declare @TempAvailStock as table
(
	PartNo varchar(50),
	AvailStock decimal
)

DECLARE @Query AS VARCHAR(MAX)
--SET @Query = 
--'SELECT PartNo, (Onhand - AllocationSP - AllocationSL - AllocationSR - ReservedSP - ReservedSL - ReservedSR) AvailStock
--FROM ' + @DbMD + '..SpMstItemLoc WITH (NOLOCK, NOWAIT) 
--WHERE CompanyCode = '+''''+@CompanyMD+''''+' AND BranchCode ='+''''+@BranchMD +''''+' AND WarehouseCode = '+''''+@WarehouseMD+''''+''

--INSERT INTO #TempAvailStock

SET @Query = 
'SElect * into #TempAvailStock from (SELECT PartNo, (Onhand - AllocationSP - AllocationSL - AllocationSR - ReservedSP - ReservedSL - ReservedSR) AvailStock
FROM ' + @DbMD + '..SpMstItemLoc WITH (NOLOCK, NOWAIT) 
WHERE CompanyCode = '+''''+@CompanyMD+''''+' AND BranchCode ='+''''+@BranchMD +''''+' AND WarehouseCode = '+''''+@WarehouseMD+''''+')#TempAvailStock

INSERT INTO SpTrnSORDDtl 
(
	[CompanyCode] ,
	[BranchCode] ,
	[DocNo] ,
	[PartNo] ,
	[WarehouseCode] ,
	[PartNoOriginal] ,
	[ReferenceNo] ,
	[ReferenceDate] ,
	[LocationCode] ,
	[QtyOrder] ,
	[QtySupply] ,
	[QtyBO] ,
	[QtyBOSupply] ,
	[QtyBOCancel] ,
	[QtyBill] ,
	[RetailPriceInclTax] ,
	[RetailPrice] ,
	[CostPrice] ,
	[DiscPct] ,
	[SalesAmt] ,
	[DiscAmt] ,
	[NetSalesAmt] ,
	[PPNAmt] ,
	[TotSalesAmt] ,
	[MovingCode] ,
	[ABCClass] ,
	[ProductType] ,
	[PartCategory] ,
	[Status] ,
	[CreatedBy] ,
	[CreatedDate] ,
	[LastUpdateBy] ,
	[LastUpdateDate] ,
	[StockAllocatedBy] ,
	[StockAllocatedDate] ,
	[FirstDemandQty] )
SELECT
	''' + @CompanyCode +''' CompanyCode
	, ''' + @BranchCode +''' BranchCode
	, ''' + @TempDocNo +''' DocNo 
	, a.PartNo
	, ''00'' WarehouseCode
	, a.PartNo PartNoOriginal
	, ''' + @JobOrderNo +''' ReferenceNo
	, (SELECT JobOrderDate FROM SvTrnService WHERE 1 =1 AND CompanyCode = ''' + @CompanyCode +''' AND BranchCode = ''' + @BranchCode +'''
		AND ProductType = ''' + @ProductType +''' AND JobOrderNo = ''' + @JobOrderNo +''' ) ReferenceDate
	, (SELECT distinct LocationCode FROM ' + @DbMD +'..SpMstItemLoc WHERE CompanyCode = ''' + @CompanyMD +''' AND BranchCode = ''' + @BranchMD +''' AND WarehouseCode = ''00''
		AND PartNo = a.PartNo ) LocationCode
	, a.QtyOrder
	, CASE WHEN 
		ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0) >= a.QtyOrder 
		THEN a.QtyOrder 
		ELSE ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0)
		END AS QtySupply
	, CASE WHEN 
		ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0) >= a.QtyOrder 
		THEN 0 
		ELSE a.QtyOrder - ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0)
		END AS QtyBO
	, 0 QtyBOSupply
	, CASE WHEN 
		ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0) >= a.QtyOrder 
		THEN 0 
		ELSE a.QtyOrder - ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0)
		END AS QtyBOCancel
	, 0 QtyBill
	, a.RetailPrice + FLOOR(a.RetailPrice * 10 /100) RetailPriceIncltax
	, a.RetailPrice
	, a.CostPrice
	, a.DiscPct
	, CASE WHEN 
		ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0) >= a.QtyOrder 
		THEN a.QtyOrder * a.RetailPrice
		ELSE ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0) * a.RetailPrice
		END AS SalesAmt
	, CASE WHEN 
		ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0) >= a.QtyOrder 
		THEN floor((a.QtyOrder * a.RetailPrice) * a.DiscPct/100)
		ELSE floor((ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0) * a.RetailPrice) * a.DiscPct/100)
		END AS DiscAmt
	, CASE WHEN 
		ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0) >= a.QtyOrder 
		THEN floor((a.QtyOrder * a.RetailPrice)- ((a.QtyOrder * a.RetailPrice) * a.DiscPct/100))
		ELSE floor((ISNULL((SELECT AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0) * a.RetailPrice) - 
			(ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0) * a.RetailPrice * a.DiscPct/100))
		END AS NetSalesAmt
	, 0 PPNAmt
	,  CASE WHEN 
		ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0) >= a.QtyOrder 
		THEN floor((a.QtyOrder * a.RetailPrice)- ((a.QtyOrder * a.RetailPrice) * a.DiscPct/100))
		ELSE floor((ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0) * a.RetailPrice) - 
			(ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0) * a.RetailPrice * a.DiscPct/100))
		END AS TotSalesAmt
	, (SELECT distinct MovingCode FROM '+ @DbMD +'..SpMstItems WITH (NOLOCK, NOWAIT) WHERE CompanyCode = '''+ @CompanyMD +''' AND BranchCode = '''+ @BranchMD +''' AND PartNo = a.PartNo) 
		MovingCode
	, (SELECT distinct ABCClass FROM '+ @DbMD +'..SpMstItems WITH (NOLOCK, NOWAIT) WHERE CompanyCode = '''+ @CompanyMD +''' AND BranchCode = '''+ @BranchMD +''' AND PartNo = a.PartNo) 
		ABCClass
	, '''+ @ProductType +''' ProductType
	, (SELECT distinct PartCategory FROM '+ @DbMD +'..SpMstItems WITH (NOLOCK, NOWAIT) WHERE CompanyCode = '''+ @CompanyMD +'''  AND BranchCode = '''+ @BranchMD +''' AND PartNo = a.PartNo) 
		PartCategory
	, ''2'' Status
	, '''+ @UserID +''' CreatedBy
	, '''+ Convert(varchar,GetDate()) +''' CreatedDate
	, '''+ @UserID +''' LastUpdateBy
	, '''+ Convert(varchar,GetDate()) +''' LastUpdateDate
	, '''+ @UserID +''' StockAllocatedBy
	, '''+ Convert(varchar,GetDate()) +''' StockAllocatedDate
	, a.QtyOrder FirstDemandQty
FROM #SrvOrder a
WHERE a.TypeOfGoods = '+@TypeOfGoods +'


select top 10 * from spTrnSORDDtl order by createddate desc
--===============================================================================================================================
-- INSERT SO SUPPLY
-- ==============================================================================================================================

SELECT * INTO #TempSOSupply FROM (
SELECT
	'''+ @CompanyCode +''' CompanyCode
	, '''+ @BranchCode +''' BranchCode
	, '''+ @TempDocNo +''' DocNo 
	, 0 SupSeq
	, a.PartNo 
	, a.PartNo PartNoOriginal
	, '''' PickingSlipNo	
	, '''+ @JobOrderNo +''' ReferenceNo
	, '''+ CONVERT(varchar, @DefaultDate )+''' ReferenceDate
	, ''00'' WarehouseCode
	, (SELECT distinct LocationCode FROM '+ @DbMD+'..SpMstItemLoc WITH (NOLOCK, NOWAIT) WHERE CompanyCode = '''+ @CompanyMD +''' AND BranchCode = '''+ @BranchMD+''' AND WarehouseCode = ''00''
		AND PartNo = a.PartNo) LocationCode
	, CASE WHEN 
		ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0) >= a.QtyOrder 
		THEN a.QtyOrder 
		ELSE ISNULL((SELECT distinct AvailStock FROM #TempAvailStock WHERE PartNo = a.PartNo),0)
		END AS QtySupply
	, 0 QtyPicked
	, 0 QtyBill
	, a.RetailPrice + FLOOR(a.RetailPrice *10 /100) RetailPriceIncltax
	, a.RetailPrice
	, b.CostPrice
	, a.DiscPct
	, (SELECT distinct MovingCode FROM '+ @DbMD+'..SpMstItems WITH (NOLOCK, NOWAIT) WHERE CompanyCode = '''+ @CompanyMD +''' AND BranchCode = '''+ @BranchMD +''' AND PartNo = a.PartNo) 
		MovingCode
	, (SELECT distinct ABCClass FROM '+ @DbMD +'..SpMstItems WITH (NOLOCK, NOWAIT) WHERE CompanyCode = '''+ @CompanyMD +''' AND BranchCode = '''+ @BranchMD +''' AND PartNo = a.PartNo) 
		ABCClass
	, '''+ @ProductType +'''ProductType
	, (SELECT distinct PartCategory FROM '+ @DbMD +'..SpMstItems WITH (NOLOCK, NOWAIT) WHERE CompanyCode = '''+ @CompanyMD +''' AND BranchCode = '''+ @BranchMD +''' AND PartNo = a.PartNo) 
		PartCategory
	, ''1'' Status
	, '''+ @UserID +''' CreatedBy
	, '''+ Convert(varchar,GetDate()) +''' CreatedDate
	, '''+ @UserID +''' LastUpdateBy
	, '''+ Convert(varchar,GetDate()) +''' LastUpdateDate
	, '''+ @UserID +''' StockAllocatedBy
	, '''+ Convert(varchar,GetDate()) +''' StockAllocatedDate
FROM #SrvOrder a
inner join spMstItemPrice b WITH (NOLOCK, NOWAIT) ON a.CompanyCode = '''+ @CompanyCode +''' AND a.BranchCode = '''+ @BranchCode +''' AND a.PartNo = b.PartNo
WHERE a.TypeOfGoods = '+ @TypeOfGoods +'
)#TempSOSupply

INSERT INTO SpTrnSOSupply SELECT 
	CompanyCode,BranchCode,DocNo,SupSeq,PartNo,PartNoOriginal
	, ROW_NUMBER() OVER(ORDER BY PartNo) PTSeq,PickingSlipNo
	, ReferenceNo,ReferenceDate,WarehouseCode,LocationCode
	, QtySupply,QtyPicked,QtyBill,RetailPriceIncltax,RetailPrice,CostPrice
	, DiscPct,MovingCode,ABCClass,ProductType,PartCategory,Status
	, CreatedBy,CreatedDate,LastUpdateBy,LastUpdateDate
FROM #TempSOSupply WHERE QtySupply > 0

--===============================================================================================================================
-- UPDATE STATUS DETAIL BASED ON SUPPLY
--===============================================================================================================================

UPDATE SpTrnSORDDtl
SET Status = 4
FROM SpTrnSORDDtl a, #TempSOSupply b
WHERE 1 = 1
	AND a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
	AND a.PartNo = b.PartNo
	
--===============================================================================================================================
-- UPDATE HISTORY DEMAND ITEM AND CUSTOMER
--===============================================================================================================================

UPDATE SpHstDemandItem 
SET DemandFreq = DemandFreq + 1
	, DemandQty = DemandQty + b.QtyOrder
	, LastUpdateBy = '''+ @UserID +'''
	, LastUpdateDate = '''+ Convert(varchar,GetDate()) +''' 
FROM SpHstDemandItem a, SpTrnSordDtl b
WHERE 
	1 = 1
	AND a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
	AND a.Year = '''+ Convert(varchar,Year(GetDate())) +''' 
	AND a.Month  = '''+ Convert(varchar,Month(GetDate())) +''' 
	AND a.PartNo = b.PartNo
	AND b.DocNo = '''+ @TempDocNo +'''

UPDATE SpHstDemandCust
SET DemandFreq = DemandFreq + 1
	, DemandQty = DemandQty + b.QtyOrder
	, LastUpdateBy = '''+ @UserID +''' 
	, LastUpdateDate = '''+ Convert(varchar,GetDate()) +''' 
FROM SpHstDemandCust a, SpTrnSordDtl b
WHERE 
	1 = 1
	AND a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
	AND a.Year = '''+ Convert(varchar,Year(GetDate())) +'''
	AND a.Month  = '''+ Convert(varchar,Month(GetDate())) +'''
	AND a.PartNo = b.PartNo
	AND a.CustomerCode = '''+ @CustomerCode +'''
	AND b.DocNo = '''+ @TempDocNo +'''

INSERT INTO SpHstDemandItem
SELECT 
	CompanyCode
	, BranchCode
	, '''+ Convert(varchar,Year(GetDate())) +''' Year
	, '''+ Convert(varchar,Month(GetDate())) +''' Month
	, PartNo
	, 1 DemandFreq
	, QtyOrder DemandQty
	, 0 SalesFreq
	, 0 SalesQty
	, MovingCode
	, ProductType
	, PartCategory
	, ABCClass
	, '''+ @UserID +''' LastUpdateBy
	, '''+ CONVERT(varchar, GetDate()) +''' LastUpdateDate
FROM SpTrnSordDtl a WITH (NOLOCK, NOWAIT)
WHERE a.CompanyCode= '''+ @CompanyCode +''' AND a.BranchCode = '''+ @BranchCode +''' AND a.DocNo = '''+ @TempDocNo +''' -- add CompanyCode and BranchCode 13 Des 2010
 AND NOT EXISTS
( SELECT 1 FROM SpHstDemandItem WITH (NOLOCK, NOWAIT) WHERE 
	1 = 1 
	AND CompanyCode = a.CompanyCode 
	AND BranchCode = a.BranchCode
	AND Month = '''+ Convert(varchar,Month(GetDate())) +''' 
	AND Year = '''+ Convert(varchar,Year(GetDate())) +''' 
	AND PartNo = a.PartNo
)

INSERT INTO SpHstDemandCust
SELECT 
	CompanyCode
	, BranchCode
	, '''+ Convert(varchar,Year(GetDate())) +'''  Year
	, '''+ Convert(varchar,Month(GetDate())) +'''  Month
	, '''+ @CustomerCode +''' CustomerCode
	, PartNo
	, 1 DemandFreq
	, (SELECT QtyOrder FROM SpTrnSORDDTl WITH (NOLOCK, NOWAIT) 
		WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode 
		AND DocNo = a.DocNo AND PartNo = a.PartNo) DemandQty
	, 0 SalesFreq
	, 0 SalesQty
	, MovingCode
	, ProductType
	, PartCategory
	, ABCClass
	, '''+ @UserID +''' LastUpdateBy
	, '''+ CONVERT(varchar, GetDate()) +''' LastUpdateDate
FROM SpTrnSordDtl a WITH (NOLOCK, NOWAIT)
WHERE a.CompanyCode= '''+ @CompanyCode +''' and a.BranchCode= '''+ @BranchCode +''' AND a.DocNo = '''+ @TempDocNo +''' -- add CompanyCode and BranchCode 13 Des 2010
AND NOT EXISTS
( SELECT PartNo FROM SpHstDemandCust WITH (NOLOCK, NOWAIT) WHERE 
	1 = 1 
	AND CompanyCode = a.CompanyCode 
	AND BranchCode = a.BranchCode
	AND Month = '''+ Convert(varchar,Month(GetDate())) +''' 
	AND Year = '''+ Convert(varchar,Year(GetDate())) +'''  
	AND PartNo = a.PartNo
)

--===============================================================================================================================
-- UPDATE LAST DEMAND DATE MASTER
--===============================================================================================================================

UPDATE '+@DbMD+'..SpMstItems 
SET LastDemandDate = '''+Convert(varchar,GetDate())+'''
FROM '+@DbMD+'..SpMstItems a, SpTrnSordDtl b
WHERE 
	1 = 1
	AND a.CompanyCode = '''+@CompanyMD+'''
	AND a.BranchCode = '''+@BranchMD+'''
	AND a.PartNo = b.PartNo
	AND b.DocNo = '''+@TempDocNo+'''

--===============================================================================================================================
-- UPDATE STOCK AND MOVEMENT
--===============================================================================================================================

UPDATE '+@DbMD+'..spMstItems
SET AllocationSR = AllocationSR + b.QtySupply
	, LastUpdateBy = '''+@UserID+'''
	, LastUpdateDate = '''+Convert(varchar,GetDate())+'''
FROM '+@DbMD+'..SpMstItems a, #TempSOSupply b
WHERE 
	1 = 1
	AND a.CompanyCode = '''+@CompanyMD+'''
	AND a.BranchCode = '''+@BranchMD+'''
	AND a.PartNo = b.PartNo

UPDATE '+@DbMD+'..spMstItemloc
SET AllocationSR = AllocationSR + b.QtySupply
	, LastUpdateBy = '''+@UserID+'''
	, LastUpdateDate = '''+Convert(varchar,GetDate())+'''
FROM '+@DbMD+'..SpMstItemLoc a, #TempSOSupply b
WHERE 
	1 = 1
	AND a.CompanyCode = '''+@CompanyMD +'''
	AND a.BranchCode = '''+@BranchMD+'''
	AND a.WarehouseCode = '''+@WarehouseMD+'''
	AND a.PartNo = b.PartNo

INSERT INTO SpTrnIMovement
SELECT
	'''+@CompanyCode +''' CompanyCode
	, '''+@BranchCode +''' BranchCode
	, a.DocNo
	, (SELECT DocDate FROM SpTrnSORDHdr WITH (NOLOCK, NOWAIT) WHERE CompanyCode = '''+ @CompanyCode +'''
		AND BranchCode = '''+ @BranchCode +''' AND DocNo = a.DocNo) 
	  DocDate
	, dateadd(s,ROW_NUMBER() OVER(Order by a.PartNo),'''+convert(varchar,getdate())+''') CreatedDate 
	, ''00'' WarehouseCode
	, (SELECT LocationCode FROM SpTrnSORDDtl WITH (NOLOCK, NOWAIT) WHERE CompanyCode =  '''+@CompanyCode +'''
		AND BranchCode = '''+@BranchCode +''' AND DocNo = '''+@TempDocNo +''' AND PartNo = a.PartNo)
	  LocationCode
	, a.PartNo
	, ''OUT'' SignCode
	, ''SA-NPJUAL'' SubSignCode
	, a.QtySupply
	, a.RetailPrice
	, a.CostPrice
	, a.ABCClass
	, a.MovingCode
	, a.ProductType
	, a.PartCategory
	, '''+@UserID +''' CreatedBy
FROM #TempSOSupply a

--===============================================================================================================================
-- UPDATE SUPPLY SLIP TO SPK
--===============================================================================================================================
DECLARE @ServiceNo VARCHAR(MAX)

SET @ServiceNo = (SELECT ServiceNo FROM svTrnService WHERE CompanyCode = '''+@CompanyCode +''' AND BranchCode = '''+@BranchCode+'''
		AND ProductType = '''+@ProductType +''' AND JobOrderNo = '''+@JobOrderNo+''')

SELECT * INTO #TempServiceItem FROM (
SELECT 
	a.CompanyCode
	, a.BranchCode
	, a.ProductType
	, a.ServiceNo
	, a.PartNo
	, a.PartSeq
	, a.DemandQty
	, a.SupplyQty
	, b.QtySupply
	, b.DocNo
	, a.CostPrice
	, a.RetailPrice
	, a.TypeOfGoods
	, a.BillType
FROM SvTrnSrvItem a WITH (NOLOCK, NOWAIT)
INNER JOIN #TempSOSupply b WITH (NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode AND a.BranchCode = b.BranchCode AND a.PartNo = b.PartNo
WHERE
	1 = 1
	AND a.CompanyCode = '''+@CompanyCode+'''
	AND a.BranchCode = '''+@BranchCode+'''
	AND a.ProductType = '''+@ProductType+'''
	AND a.ServiceNo = @ServiceNo
	AND a.PartSeq IN (SELECT MAX(PartSeq) FROM SvTrnSrvItem WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode
		AND ProductType = '''+@ProductType +''' AND ServiceNo = a.ServiceNo AND PartNo = a.PartNo)
	AND (a.SupplySlipNo = '''' OR a.SupplySlipNo IS NULL)
) #TempServiceItem 

SELECT * INTO #TempServiceItemIns FROM( 
SELECT 
	a.CompanyCode
	, a.BranchCode
	, a.ProductType
	, a.ServiceNo
	, a.PartNo
	, a.PartSeq
	, a.DemandQty
	, a.SupplyQty
	, b.QtySupply
	, b.DocNo
	, a.CostPrice
	, a.RetailPrice
	, a.TypeOfGoods
	, a.BillType
	, a.DiscPct
FROM SvTrnSrvItem a WITH (NOLOCK, NOWAIT)
INNER JOIN #TempSOSupply b WITH (NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode AND a.BranchCode = b.BranchCode AND a.PartNo = b.PartNo
WHERE
	1 = 1 
	AND a.CompanyCode = '''+ @CompanyCode +''' 
	AND a.BranchCode = '''+ @BranchCode +''' 
	AND a.ProductType = '''+ @ProductType +'''  
	AND a.ServiceNo = @ServiceNo
	AND a.PartSeq IN (SELECT MAX(PartSeq) FROM SvTrnSrvItem WITH (NOLOCK, NOWAIT) WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode
		AND ProductType = '''+ @ProductType +''' AND ServiceNo = a.ServiceNo AND PartNo = a.PartNo) 
	AND (a.SupplySlipNo != '''' OR a.SupplySlipNo IS NOT NULL)
) #TempServiceItemIns


UPDATE svTrnSrvItem
SET SupplySlipNo = b.DocNo
	, SupplySlipDate = ISNULL((SELECT DocDate FROM SpTrnSORDHdr WITH (NOLOCK, NOWAIT) WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode
							AND DocNo = b.DocNo),'''+Convert(varchar,@DefaultDate)+''')
FROM svTrnSrvItem a, #TempServiceItem b
WHERE
	1 = 1
	AND a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
	AND a.ProductType = b.ProductType
	AND a.ServiceNo = b.ServiceNo
	AND a.PartNo = b.PartNo
	AND a.PartSeq = b.PartSeq
	
--===============================================================================================================================
-- INSERT NEW SRV ITEM BASED SUPPLY SLIP
--===============================================================================================================================
INSERT INTO SvTrnSrvItem (CompanyCode, BranchCode, ProductType, ServiceNo, PartNo, PartSeq, DemandQty, SupplyQty, ReturnQty, CostPrice, RetailPrice, TypeOfGoods, BillType, SupplySlipNo, SupplySlipDate, SSReturnNo, SSReturnDate, CreatedBy, CreatedDate, LastupdateBy, LastupdateDate, DiscPct)
SELECT 
	a.CompanyCode
	, a.BranchCode
	, a.ProductType
	, a.ServiceNo
	, a.PartNo
	, a.PartSeq + 1
	, 0 DemandQty
	, 0 SupplyQty
	, 0 ReturnQty
	, a.CostPrice
	, a.RetailPrice
	, a.TypeOfGoods
	, a.BillType
	, a.DocNo SupplySlipNo
	, (SELECT DocDate FROM SpTrnSORDHdr WITH (NOLOCK, NOWAIT) WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode
		AND DocNo = a.DocNo) SupplySlipDate
	, NULL SSReturnNo
	, NULL SSReturnDate
	, '''+ @UserID +''' CreatedBy
	, '''+ Convert(varchar,GetDate()) +''' CreatedDate
	, '''+ @UserID +''' LastUpdateBy
	, '''+ Convert(varchar,GetDate()) +''' LastUpdateDate
	, a.DiscPct
FROM #TempServiceItemIns a WITH (NOLOCK, NOWAIT)
WHERE
	1 = 1
	AND a.CompanyCode = '''+ @CompanyCode +'''
	AND a.BranchCode = '''+ @BranchCode +'''
	AND a.ProductType = '''+ @ProductType+'''


--===============================================================================================================================
DROP TABLE #TempServiceItem 
DROP TABLE #TempServiceItemIns
DROP TABLE #TempSOSupply'

EXEC(@query)

--select convert(xml,@query)


--===============================================================================================================================
-- INSERT SVSDMOVEMENT
--===============================================================================================================================

declare @md bit
set @md = (select case WHEN EXISTS(select * from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode and CompanyMD = @CompanyCode and BranchMD = @BranchCode) then cast(1 as bit) ELSE cast(0 as bit) END)

if(@md = 0)
begin

 declare @QueryTemp as varchar(max)  
 
	set @Query ='insert into '+ @DbMD +'..svSDMovement
	select a.CompanyCode, a.BranchCode, a.DocNo, a.CreatedDate, a.PartNo
	, Seq = convert(integer, ROW_NUMBER() OVER (PARTITION BY a.ReferenceNo ORDER BY a.DocNo)) ,
	a.WarehouseCode, a.QtyOrder, a.QtySupply, a.DiscPct
	,isnull(((select RetailPrice from spTrnSORDDtl
			where CompanyCode = ''' + @CompanyCode + '''  and BranchCode = ''' + @BranchCode  + '''
			and DocNo = ''' + @TempDocNo + ''' and PartNo = a.PartNo) / 1.1 * 
			((100 - isnull((select isnull(DiscPct, 0) from gnMstSupplierProfitCenter   
				where CompanyCode = ''' + @CompanyCode + ''' and BranchCode = ''' + @BranchCode  + ''' and SupplierCode = dbo.GetBranchMD(''' + @CompanyCode + ''', ''' + @BranchCode  + ''') 
				and ProfitCenterCode = ''300''),0)) * 0.01)),0) CostPrice
	, a.RetailPrice, b.TypeOfGoods
	, '''+ @CompanyMD +''','''+ @BranchMD +''','''+ @WarehouseMD +''', p.RetailPriceInclTax, p.RetailPrice, p.CostPrice
	,''x'','''+ @producttype +''',''300'',''0'',''0'','''+ convert(varchar,GETDATE()) +''','''+ @UserID +''','''+ convert(varchar,GETDATE()) +'''
	,'''+ @UserID +''','''+ convert(varchar,GETDATE()) +'''
	from spTrnSORDDtl a 
	join spTrnSORDHdr b on a.CompanyCode = b.CompanyCode
	and a.BranchCode = b.BranchCode 
	and a.DocNo = b.DocNo
	join spmstitemprice p
	on p.PartNo = a.PartNo
	where p.CompanyCode = '''+ @CompanyCode +'''
	and p.branchcode = '''+ @BranchCode +'''
	and a.ReferenceNo = '''+ @JobOrderNo +''''+
	' and a.DocNo = ''' + @TempDocNo + '''';

	exec (@Query)
	print (@QUERY)

end

--===============================================================================================================================
-- INSERT PICKING HEADER AND DETAIL
--===============================================================================================================================

SET @MaxPickingList = ISNULL((SELECT DocumentSequence + 1 FROM GnMstDocument WHERE 
	CompanyCode = @CompanyCode
		AND BranchCode = @BranchCode
		AND DocumentType = 'PLS' 
		AND ProfitCenterCode = '300' 
		AND DocumentYear = YEAR(GetDate())),0)

SET @TempPickingList = ISNULL((SELECT 'PLS/' + RIGHT(YEAR(GETDATE()),2) +'/' + RIGHT(1000000 + CONVERT(VARCHAR, @MaxPickingList, 1), 6)),'PLS/YY/XXXXXX')

INSERT INTO SpTrnSPickingHdr 
SELECT 
	CompanyCode
	, BranchCode
	, @TempPickingList PickingSlipNo
	, GetDate() PickingSlipDate
	, CustomerCode
	, CustomerCodeBill
	, CustomerCodeShip
	, '' PickedBy
	, CONVERT(BIT, 0) isBORelease
	, isSubstitution
	, isIncludePPN
	, TransType
	, SalesType
	, TotSalesQty
	, TotSalesAmt
	, TotDiscAmt
	, TotDPPAmt
	, TotPPNAmt
	, TotFinalSalesAmt
	, '' Remark
	, '0' Status
	, '0' PrintSeq
	, TypeOfGoods
	, CreatedBy
	, CreatedDate
	, LastUpdateBy
	, LastUpdateDate
	, NULL isLocked
	, NULL LockingBy
	, NULL LockingDate
FROM SpTrnSORDHdr WITH (NOLOCK, NOWAIT)
WHERE 
	1 = 1
	AND CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND DocNo = (SELECT distinct DocNo FROM spTrnSORDDtl WHERE CompanyCode = @CompanyCode AND Branchcode = @BranchCode 
					AND DocNo = @TempDocNo AND QtySupply > 0)		

UPDATE GnMstDocument
SET DocumentSequence = DocumentSequence + 1
	, LastUpdateDate = GetDate()
	, LastUpdateBy = @UserID
WHERE
	1 = 1
	AND CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND DocumentPrefix = 'PLS'
	AND ProfitCenterCode = '300'
	AND DocumentYear = Year(GetDate())

-- ==============================================================================================================================
-- UPDATE SALES ORDER HEADER 
-- ==============================================================================================================================
UPDATE SpTrnSORDHdr
	SET ExPickingSlipNo = @TempPickingList,
		ExPickingSlipDate = ISNULL((SELECT PickingSlipDate FROM SpTrnSPickingHdr WHERE CompanyCode = @CompanyCode
				AND BranchCode = @BranchCode AND PickingSlipNo = @TempPickingList),'')
	
WHERE
	1 = 1
	AND CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND DocNo = @TempDocNo

UPDATE SpTrnSOSupply
	SET PickingSlipNo = @TempPickingList
WHERE
	1 = 1
	AND CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND DocNo = @TempDocNo
-- ==============================================================================================================================
-- INSERT PICKING DETAIL
-- ==============================================================================================================================

INSERT INTO SpTrnSPickingDtl
SELECT 
	a.CompanyCode
	, a.BranchCode
	, @TempPickingList PickingSlipNo
	, '00' WarehouseCode
	, a.PartNo
	, a.PartNoOriginal
	, a.DocNo
	, b.DocDate 
	, a.ReferenceNo
	, a.ReferenceDate
	, a.LocationCode
	, a.QtySupply QtyOrder
	, a.QtySupply
	, a.QtySupply QtyPicked 
	, 0 QtyBill
	, a.RetailPriceInclTax
	, a.RetailPrice
	, a.CostPrice
	, a.DiscPct
	, a.SalesAmt
	, a.DiscAmt
	, a.NetSalesAmt
	, a.TotSalesAmt
	, a.MovingCode
	, a.ABCClass
	, a.ProductType
	, a.PartCategory
	, '' ExPickingSlipNo
	, @DefaultDate ExPickingSlipDate
	, CONVERT(BIT, 0) isClosed
	, @UserID CreatedBy
	, GetDate() CreatedDate
	, @UserID LastUpdateBy
	, GetDate() LastUpdateDate
FROM SpTrnSORDDtl a WITH (NOLOCK, NOWAIT)
INNER JOIN SpTrnSORDHdr b WITH (NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode AND a.BranchCode = b.BranchCode AND a.DocNo = b.DocNo
WHERE
	1 = 1
	AND a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.DocNo = @TempDocNo
	AND a.QtySupply > 0


--================================================================================================================================
-- UPDATE AMOUNT HEADER
--================================================================================================================================
SELECT * INTO #TempHeader FROM (
SELECT 
	header.CompanyCode
	, header.BranchCode
	, header.DocNo
	, header.TotSalesQty
	, header.TotSalesAmt
	, header.TotDiscAmt
	, header.TotDPPAmt
	, floor(header.TotDPPAmt * (ISNULL((SELECT TaxPct FROM GnMstTax WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
			AND TaxCode IN (SELECT TaxCode FROM GnMstCustomerProfitCenter WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
			AND ProfitCenterCode = '300' AND CustomerCode = @CustomerCode)),0)/100)) 
		TotPPNAmt
	, header.TotDPPAmt + floor(header.TotDPPAmt * (ISNULL((SELECT TaxPct FROM GnMstTax WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
			AND TaxCode IN (SELECT TaxCode FROM GnMstCustomerProfitCenter WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
			AND ProfitCenterCode = '300' AND CustomerCode = @CustomerCode)),0)/100))
		TotFinalSalesAmt
FROM (
SELECT 
	CompanyCode
	, BranchCode
	, DocNo
	, SUM(QtyOrder) TotSalesQty
	, SUM(SalesAmt) TotSalesAmt
	, SUM(DiscAmt) TotDiscAmt
	, SUM(NetSalesAmt) TotDPPAmt
FROM SpTrnSORDDtl WITH (NOLOCK, NOWAIT)
WHERE CompanyCode = @CompanyCode 
	AND BranchCode = @BranchCode
	AND DocNo = @TempDocNo
GROUP BY CompanyCode
	, BranchCode
	, DocNo
) header ) #TempHeader

UPDATE SpTrnSORDHdr
SET 
	TotSalesQty = b.TotSalesQty
	, TotSalesAmt = b.TotSalesAmt
	, TotDiscAmt = b.TotDiscAmt
	, TotDPPAmt = b.TotDPPAmt
	, TotPPNAmt = b.TotPPNAmt
	, TotFinalSalesAmt = b.TotFinalSalesAmt
FROM SpTrnSORDHdr a, #TempHeader b
WHERE 
	1 = 1
	AND a.CompanyCode = b.CompanyCode 
	AND a.BranchCode = b.BranchCode
	AND a.DocNo = b.DocNo

DROP TABLE #TempHeader

FETCH NEXT FROM db_cursor INTO @TypeOfGoods
END
CLOSE db_cursor
DEALLOCATE db_cursor 

--===============================================================================================================================
-- Update Transdate
--===============================================================================================================================

update gnMstCoProfileSpare
set TransDate=getdate()
	, LastUpdateBy=@UserID
	, LastUpdateDate=getdate()
where CompanyCode = @CompanyCode AND BranchCode = @BranchCode

--===============================================================================================================================
-- DROP TABLE SECTION 
--===============================================================================================================================
DROP TABLE #SrvOrder
DROP TABLE #Item

--rollback tran
END
GO
CREATE procedure [dbo].[uspfn_UpdateEducation]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;

	with x as (
		select *
		  from SDMS..HrEmployeeEducation a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrEmployeeEducation (
		   CompanyCode
		 , EmployeeID
		 , EduSeq
		 , College
		 , Education
		 , YearBegin
		 , YearFinish
		 , CreatedBy
		 , CreatedDate
		 , UpdateBy
		 , UpdateDate
		 , IsDeleted
		 )
	select CompanyCode = @CompanyCode_B
	     , a.EmployeeID
	     , a.EduSeq
	     , a.College
	     , a.Education
	     , a.YearBegin
	     , a.YearFinish
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdateBy
	     , a.UpdateDate
	     , a.IsDeleted
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[uspfn_UpdateEmployee]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;

	with x as (
		select *
		  from SDMS..HrEmployee a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrEmployee (
		   CompanyCode
		 , EmployeeID
		 , EmployeeName
		 , Email
		 , FaxNo
		 , Handphone1
		 , Handphone2
		 , Handphone3
		 , Handphone4
		 , Telephone1
		 , Telephone2
		 , OfficeLocation
		 , IsLinkedUser
		 , RelatedUser
		 , JoinDate
		 , Department
		 , Position
		 , Grade
		 , Rank
		 , Gender
		 , TeamLeader
		 , PersonnelStatus
		 , ResignDate
		 , ResignDescription
		 , IdentityNo
		 , NPWPNo
		 , NPWPDate
		 , BirthDate
		 , BirthPlace
		 , Address1
		 , Address2
		 , Address3
		 , Address4
		 , Province
		 , District
		 , SubDistrict
		 , Village
		 , ZipCode
		 , DrivingLicense1
		 , DrivingLicense2
		 , MaritalStatus
		 , MaritalStatusCode
		 , Height
		 , Weight
		 , UniformSize
		 , UniformSizeAlt
		 , ShoesSize
		 , FormalEducation
		 , BloodCode
		 , OtherInformation
		 , CreatedBy
		 , CreatedDate
		 , UpdatedBy
		 , UpdatedDate
		 , Religion
		 , SelfPhoto
		 , IdentityCardPhoto
		 , IsDeleted
		 , ResignCategory
		 )
	select CompanyCode = @CompanyCode_B
	     , a.EmployeeID
		 , a.EmployeeName
		 , a.Email
		 , a.FaxNo
		 , a.Handphone1
		 , a.Handphone2
		 , a.Handphone3
		 , a.Handphone4
		 , a.Telephone1
		 , a.Telephone2
		 , a.OfficeLocation
		 , a.IsLinkedUser
		 , a.RelatedUser
		 , a.JoinDate
		 , a.Department
		 , a.Position
		 , a.Grade
		 , a.Rank
		 , a.Gender
		 , a.TeamLeader
		 , a.PersonnelStatus
		 , a.ResignDate
		 , a.ResignDescription
		 , a.IdentityNo
		 , a.NPWPNo
		 , a.NPWPDate
		 , a.BirthDate
		 , a.BirthPlace
		 , a.Address1
		 , a.Address2
		 , a.Address3
		 , a.Address4
		 , a.Province
		 , a.District
		 , a.SubDistrict
		 , a.Village
		 , a.ZipCode
		 , a.DrivingLicense1
		 , a.DrivingLicense2
		 , a.MaritalStatus
		 , a.MaritalStatusCode
		 , a.Height
		 , a.Weight
		 , a.UniformSize
		 , a.UniformSizeAlt
		 , a.ShoesSize
		 , a.FormalEducation
		 , a.BloodCode
		 , a.OtherInformation
		 , a.CreatedBy
		 , a.CreatedDate
		 , a.UpdatedBy
		 , a.UpdatedDate
		 , a.Religion
		 , a.SelfPhoto
		 , a.IdentityCardPhoto
		 , a.IsDeleted
		 , a.ResignCategory
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[uspfn_omSlsInvSlctFrTblInvAccSeq]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15), 
 @InvoiceNo varchar(30) 
)  
AS  
BEGIN  
SELECT a.PartNo
    , ISNULL(b.PartName,'') AS PartName
    , a.SupplySlipNo
    , a.Quantity
    , a.DPP
    , a.PPn
    , a.Total * a.Quantity as Total
FROM omTrSalesInvoiceAccsSeq a
LEFT JOIN spMstItemInfo b ON b.CompanyCode=a.CompanyCode
    AND b.PartNo=a.PartNo
WHERE a.CompanyCode = @CompanyCode
   AND a.BranchCode = @BranchCode
   AND a.InvoiceNo = @InvoiceNo
End
GO
CREATE PROCEDURE [dbo].[uspfn_svInvoiceForLookUp]
@CompanyCode varchar(15), @BranchCode varchar(15), @ProductType varchar(2), @DynamicFilter varchar(4000) = ''
AS
begin

--declare @CompanyCode varchar(15), @BranchCode varchar(15), @ProductType varchar(2), @DynamicFilter varchar(4000) = ''
--set @CompanyCode = '6159401000'
--set @BranchCode = '6159401001'
--set @ProductType = '4W'
--set @DynamicFilter = ' 
--	and InvoiceNo like ''%INC/15/0029%''
--	and JobOrderNo like ''%SPK/15/003%'''
--exec uspfn_svInvoiceForLookUp @CompanyCode, @BranchCode, @ProductType, @DynamicFilter

DECLARE @Query varchar(max);
	SET @Query = 'SELECT TOP 500
	 Invoice.ProductType, Invoice.InvoiceNo, 
	 case Invoice.InvoiceDate when (''19000101'') then null else Invoice.InvoiceDate end as InvoiceDate
	,Invoice.InvoiceStatus, Invoice.FPJNo
	,case Invoice.FPJDate when (''19000101'') then null else Invoice.FPJDate end as FPJDate
	,Invoice.JobOrderNo
	,case Invoice.JobOrderDate when (''19000101'') then null else Invoice.JobOrderDate end as JobOrderDate
	,Invoice.JobType, Invoice.ChassisCode, Invoice.ChassisNo, Invoice.EngineCode
	,Invoice.EngineNo, Invoice.PoliceRegNo, Invoice.BasicModel, Invoice.CustomerCode, Invoice.CustomerCodeBill
	,Invoice.Remarks, (Invoice.CustomerCode + '' - '' + Cust.CustomerName) as Customer
	,(Invoice.CustomerCodeBill + '' - '' + CustBill.CustomerName) as CustomerBill
	, vehicle.ServiceBookNo, Invoice.Odometer
	FROM svTrnInvoice Invoice
	LEFT JOIN gnMstCustomer Cust
		ON Cust.CompanyCode = Invoice.CompanyCode AND Cust.CustomerCode = Invoice.CustomerCode
	LEFT JOIN gnMstCustomer CustBill
		ON CustBill.CompanyCode = Invoice.CompanyCode AND CustBill.CustomerCode = Invoice.CustomerCodeBill
	LEFT JOIN svMstcustomerVehicle vehicle 
		ON Invoice.CompanyCode = vehicle.CompanyCode and Invoice.ChassisCode = vehicle.ChassisCode and 
		Invoice.ChassisNo = vehicle.ChassisNo and Invoice.EngineCode = vehicle.EngineCode and 
		Invoice.EngineNo = vehicle.EngineNo and Invoice.BasicModel = vehicle.BasicModel	
	WHERE Invoice.CompanyCode = ''' + @CompanyCode + ''' AND Invoice.BranchCode = ''' + @BranchCode + '''
		AND Invoice.ProductType = ''' + @ProductType + '''
    AND convert(varchar, Invoice.InvoiceDate, 112) >= isnull((
            select top 1 convert(varchar, FromDate, 112) from gnMstPeriode
             where 1 = 1
               and CompanyCode = ''' + @CompanyCode + '''
               and BranchCode = ''' + @BranchCode + '''
               and FiscalYear = (select FiscalYear from gnMstCoProfileService 
				where CompanyCode = ''' + @CompanyCode + ''' and BranchCode = ''' + @BranchCode + ''')
             order by FromDate
            ), '''')' 
            +
            @DynamicFilter
            +
            ' ORDER BY Invoice.InvoiceDate DESC, Invoice.InvoiceNo DESC';
        
	--print(@Query);
	exec (@Query);
END
GO
CREATE procedure [dbo].[sp_UpdateOrderPointTuning] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@LastUpdateBy varchar(10)
)


as

SELECT
	a.CompanyCode
	, a.BranchCode
	, a.PartNo
	, (ISNULL(a.DemandAverage, 0) * (ISNULL(c.LeadTime, 0) + ISNULL(c.OrderCycle, 0))) + 
	  (ISNULL(a.DemandAverage, 0) * ISNULL(c.SafetyStock, 0)) OrderPointQty
    , (ISNULL(a.DemandAverage, 0) * ISNULL(c.SafetyStock, 0)) SafetyStockQty
	, ISNULL(c.LeadTime, 0) LeadTime
	, ISNULL(c.OrderCycle, 0) OrderCycle
	, ISNULL(c.SafetyStock, 0) SafetyStock
INTO
	#OrderPointQty
FROM
	spMstItems a		
	LEFT JOIN spMstItemInfo b ON a.CompanyCode = b.CompanyCode
		AND a.PartNo = b.PartNo		
	LEFT JOIN spMstOrderParam c ON a.CompanyCode = c.CompanyCode
		AND a.BranchCode = c.BranchCode
		AND a.MovingCode = c.MovingCode
		AND b.SupplierCode = c.SupplierCode
WHERE	
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode

UPDATE spMstItems
SET OrderPointQty = b.OrderPointQty
    , SafetyStockQty = b.SafetyStockQty
	, LeadTime = b.LeadTime
	, OrderCycle = b.OrderCycle
	, SafetyStock = b.SafetyStock
	, LastUpdateBy = @LastUpdateBy
	, LastUpdateDate = GETDATE()
FROM
	spMstItems a, #OrderPointQty b
WHERE
	a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode 
	AND a.PartNo = b.PartNo

DROP TABLE #OrderPointQty
GO
CREATE procedure [dbo].[uspfn_SvTrnServiceSelectEstimationData]
	@CompanyCode varchar(15),
	@BranchCode  varchar(15),
	@ProductType  varchar(15),
	@ShowAll bit,
	@EstimationNo varchar(20),
	@PoliceRegNo  varchar(20),
	@CustomerName varchar(200),
	@ServiceBookNo  varchar(20)
AS
declare @Query varchar(max), @Filter varchar(max)=''
declare @Condition varchar(4000);

set @Condition = ' ORDER BY svTrnService.EstimationNo DESC';
if(@ShowAll = 0) begin
	set @Condition = ' AND svTrnService.ServiceStatus IN (0,1,2,3,4,5) ORDER BY svTrnService.EstimationNo DESC';
	if(@EstimationNo <> '') begin 
		set @Filter = @Filter + ' And EstimationNo like ''%'+@EstimationNo+'%'' '
	end
	if(@PoliceRegNo <> '') begin 
		set @Filter = @Filter + ' And svTrnService.PoliceRegNo like ''%'+@PoliceRegNo+'%'' '
	end
	if(@ServiceBookNo <> '' ) begin 
		set @Filter = @Filter + ' And ServiceBookNo like ''%'+@ServiceBookNo+'%'' '
	end
	if(@CustomerName <> '') begin 
		set @Filter = @Filter + ' And gnMstCustomer.CustomerName like ''%'+@CustomerName+'%'''
	end
end 

if(@ShowAll = 1) begin
	if(@EstimationNo <> '') begin 
		set @Filter = @Filter + ' And EstimationNo like ''%'+@EstimationNo+'%'' '
	end
	if(@PoliceRegNo <> '') begin 
		set @Filter = @Filter + ' And svTrnService.PoliceRegNo like ''%'+@PoliceRegNo+'%'' '
	end
	if(@ServiceBookNo <> '' ) begin 
		set @Filter = @Filter + ' And ServiceBookNo like ''%'+@ServiceBookNo+'%'' '
	end
	if(@CustomerName <> '') begin 
		set @Filter = @Filter + ' And gnMstCustomer.CustomerName like ''%'+@CustomerName+'%'''
	end
end 

set @Query = '
SELECT DISTINCT 
    svTrnService.InvoiceNo
    , svTrnService.ServiceNo
    , svTrnService.ServiceType
    , ForemanID
    , EstimationNo
    , EstimationDate
    , BookingNo
    , BookingDate
    , svTrnService.JobOrderNo
    , svTrnService.JobOrderDate
    , svTrnService.PoliceRegNo
    , ServiceBookNo
    , svTrnService.BasicModel
    , TransmissionType
    , svTrnService.ChassisCode
    , svTrnService.ChassisNo
    , svTrnService.EngineCode
    , svTrnService.EngineNo
    , svTrnService.ChassisCode + '' '' + cast(svTrnService.ChassisNo as  varchar) KodeRangka
    , svTrnService.EngineCode + '' '' + cast(svTrnService.EngineNo as varchar) KodeMesin
    , ColorCode
    , (svTrnService.CustomerCode + '' - '' + gnMstCustomer.CustomerName) as Customer
    , (svTrnService.CustomerCodeBill + '' - '' + custBill.CustomerName) as CustomerBill
    , svTrnService.CustomerCode
    , svTrnService.CustomerCodeBill
    , svTrnService.Odometer
    , svTrnService.JobType
    , case when svTrnService.ServiceStatus=''4'' then
            case when ''' + @ProductType + '''=''4W'' then reffService.Description
                else reffService.LockingBy
            end
        else reffService.Description 
    end ServiceStatus
    --, svTrnService.PoliceRegNo
	--, svTrnService.CustomerCode
    , InsurancePayFlag
    , InsuranceOwnRisk
    , InsuranceNo
    , InsuranceJobOrderNo
    --, svTrnService.CustomerCodeBill
    , svTrnService.LaborDiscPct
    , PartDiscPct
    , svTrnService.MaterialDiscPct
    , svTrnService.PPNPct
    , svTrnService.ServiceRequestDesc
    , ConfirmChangingPart
    --, ForemanID
    , svTrnService.MechanicID
    , EstimateFinishDate
    , svTrnService.LaborDPPAmt
    , svTrnService.PartsDPPAmt
    , svTrnService.MaterialDPPAmt
    , TotalDPPAmount
    , TotalPpnAmount
    , TotalPphAmount
    , TotalSrvAmount
    , employee.EmployeeName
    , (custBill.Address1 + '''' + custBill.Address2 + '''' + custBill.Address3 + '''' + custBill.Address4) as AddressBill
    , custBill.NPWPNo
    , custBill.PhoneNo
    , custBill.HPNo
FROM svTrnService WITH(NOLOCK, NOWAIT)
LEFT JOIN gnMstCustomer 
    ON gnMstCustomer.CompanyCode = svTrnService.CompanyCode 
    AND gnMstCustomer.CustomerCode = svTrnService.CustomerCode
LEFT JOIN gnMstCustomer custBill 
    ON custBill.CompanyCode = svTrnService.CompanyCode
    AND custBill.CustomerCode = svTrnService.CustomerCodeBill
LEFT JOIN gnMstEmployee employee
    ON employee.CompanyCode = svTrnService.CompanyCode
    AND employee.BranchCode = svTrnService.BranchCode
	AND employee.EmployeeID = svTrnService.ForemanID
LEFT JOIN svTrnSrvItem srvItem 
    ON srvItem.CompanyCode = svTrnService.CompanyCode
    AND srvItem.BranchCode = svTrnService.BranchCode
    AND srvItem.ProductType = svTrnService.ProductType
    AND srvItem.ServiceNo = svTrnService.ServiceNo
LEFT JOIN svTrnSrvTask srvTask
    ON srvTask.CompanyCode = svTrnService.CompanyCode
    AND srvTask.BranchCode = svTrnService.BranchCode
    AND srvTask.ProductType = svTrnService.ProductType
    AND srvTask.ServiceNo = svTrnService.ServiceNo
LEFT JOIN svMstRefferenceService reffService
    ON reffService.CompanyCode = svTrnService.CompanyCode
    AND reffService.ProductType = svTrnService.ProductType    
    AND reffService.RefferenceCode = svTrnService.ServiceStatus
    AND reffService.RefferenceType = ''SERVSTAS''
LEFT JOIN svTrnInvoice invoice
	ON invoice.CompanyCode = svTrnService.CompanyCode
	AND invoice.BranchCode = svTrnService.BranchCode
	AND invoice.ProductType = svTrnService.ProductType
	AND invoice.JobOrderNo = svTrnService.JobOrderNo
LEFT JOIN svTrnSrvVOR VOR
    ON VOR.CompanyCode = svTrnService.CompanyCode
	AND VOR.BranchCode = svTrnService.BranchCode
    AND VOR.ServiceNo = svTrnService.ServiceNo
WHERE svTrnService.CompanyCode = ''' + @CompanyCode + '''
    AND svTrnService.BranchCode = ''' + @BranchCode + '''
 AND svTrnService.ServiceType in (''0'',''2'') and svTrnService.EstimationNo <> '''''
 + @filter
 + @Condition;
 
 exec (@Query);
GO
CREATE procedure [dbo].[sp_UpdateDemandHistoryTuning] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@Year int,
@Month int,
@ProfitCenterCode varchar(10),
@LastUpdateBy varchar(10)
)


as

DELETE SpHstDemandItem 
                    WHERE Year=@Year AND Month=@Month AND CompanyCode = @CompanyCode AND BranchCode = @BranchCode

                    SELECT 
                        x.CompanyCode
                        , x.BranchCode
                        , @Year Year
                        , @Month Month
                        , x.PartNo
                        , 0 AS DemandFreq
                        , 0 AS DemandQty
                        , 0 AS SalesFreq
                        , 0 AS SalesQty    
                        , x.MovingCode
                        , x.ProductType
                        , x.PartCategory
                        , x.ABCClass
                        , @LastUpdateBy LastUpdateBy
                        , getdate() LastUpdateDate			
                    INTO #SpHstDemandItem 
                    FROM spMstItems x WITH(NOWAIT,NOLOCK) 
                    WHERE x.CompanyCode = @CompanyCode
                        AND x.BranchCode = @BranchCode
                    
                    INSERT INTO SpHstDemandItem SELECT * FROM #SpHstDemandItem

                    DROP TABLE #SpHstDemandItem
GO
CREATE procedure [dbo].[sp_UpdateMovingCodeTuningV2] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@TransDate datetime)


as


select * into #t1 from (
select 
 a.PartNo
,a.DemandFreq
,a.DemandQty
,convert(varchar,a.Year) + right('0' + convert(varchar,a.Month),2) as date0
,convert(varchar(6), dateadd(m,-5,@TransDate), 112) date1
,convert(varchar(6), dateadd(m,-4,@TransDate), 112) date2
,convert(varchar(6), dateadd(m,-3,@TransDate), 112) date3
,convert(varchar(6), dateadd(m,-2,@TransDate), 112) date4
,convert(varchar(6), dateadd(m,-1,@TransDate), 112) date5
,convert(varchar(6), dateadd(m,-0,@TransDate), 112) date6
from spHstDemandItem a WITH(NOWAIT, NOLOCK) 
where a.CompanyCode=@CompanyCode and a.BranchCode=@BranchCode
 and convert(varchar,a.Year) + right('0' + convert(varchar,a.Month),2) >= convert(varchar(6), dateadd(m,-6,@TransDate), 112)
) #t1

select * into #t2 from (
select 
 a.PartNo
,a.DemandFreq
,case when (date0=date1) and a.DemandFreq>0 then 1 else 0 end as T1
,case when (date0=date2) and a.DemandFreq>0 then 1 else 0 end as T2
,case when (date0=date3) and a.DemandFreq>0 then 1 else 0 end as T3
,case when (date0=date4) and a.DemandFreq>0 then 1 else 0 end as T4
,case when (date0=date5) and a.DemandFreq>0 then 1 else 0 end as T5
,case when (date0=date6) and a.DemandFreq>0 then 1 else 0 end as T6
from #t1 a
) #t2

select * into #t3 from (
select
 a.PartNo
,case when (sum(T1)> 0) then 1 else 0 end as D1
,case when (sum(T2)> 0) then 1 else 0 end as D2
,case when (sum(T3)> 0) then 1 else 0 end as D3
,case when (sum(T4)> 0) then 1 else 0 end as D4
,case when (sum(T5)> 0) then 1 else 0 end as D5
,case when (sum(T6)> 0) then 1 else 0 end as D6
from #t2 a
group by a.PartNo
) #t3

select * into #t4 from (
select 
 a.PartNo
,b.NewPartNo
from #t3 a
left join spMstItemMod b WITH(NOWAIT, NOLOCK)
  on b.PartNo = a.PartNo and b.CompanyCode = @CompanyCode
where b.NewPartNo <> ''
) #t4

insert into #t3
select 
 NewPartNo as PartNo
,D1=0,D2=0,D3=0,D4=0,D5=0,D6=0
from #t4
where NewPartNo not in (select PartNo from #t3)

select * into #t5 from(
select distinct PartNo, D1, D2, D3, D4, D5, D6 from #t3)#t5


select * into #t6 from (
select 
	PartNo
	, CASE WHEN ISNULL((SELECT D1 FROM #t5 WHERE PartnO = a.PartNo),0) + ISNULL((SELECT D1 FROM #t5 WHERE PartnO = a.NewPartNo),0) > 0 THEN 1 ELSE 0 END D1
	, CASE WHEN ISNULL((SELECT D2 FROM #t5 WHERE PartnO = a.PartNo),0) + ISNULL((SELECT D2 FROM #t5 WHERE PartnO = a.NewPartNo),0) > 0 THEN 1 ELSE 0 END D2
	, CASE WHEN ISNULL((SELECT D3 FROM #t5 WHERE PartnO = a.PartNo),0) + ISNULL((SELECT D3 FROM #t5 WHERE PartnO = a.NewPartNo),0) > 0 THEN 1 ELSE 0 END D3
	, CASE WHEN ISNULL((SELECT D4 FROM #t5 WHERE PartnO = a.PartNo),0) + ISNULL((SELECT D4 FROM #t5 WHERE PartnO = a.NewPartNo),0) > 0 THEN 1 ELSE 0 END D4
	, CASE WHEN ISNULL((SELECT D5 FROM #t5 WHERE PartnO = a.PartNo),0) + ISNULL((SELECT D5 FROM #t5 WHERE PartnO = a.NewPartNo),0) > 0 THEN 1 ELSE 0 END D5
	, CASE WHEN ISNULL((SELECT D6 FROM #t5 WHERE PartnO = a.PartNo),0) + ISNULL((SELECT D6 FROM #t5 WHERE PartnO = a.NewPartNo),0) > 0 THEN 1 ELSE 0 END D6
from #t4 a) #t6

update #t5
set d1 = b.d1
	, d2 = b.d2
	, d3 = b.d3
	, d4 = b.d4
	, d5 = b.d5
	, d6 = b.d6
from #t5 a, #t6 b
where a.partno = b.partno


select * into #t7 from (
select @CompanyCode CompanyCode, @BranchCode BranchCode, partno, d1 + d2 + d3 + d4 + d5 + d6  dTotal from #t5) #t7

update spMstItems 
set MovingCode = CASE WHEN b.dTotal = 0 THEN 5
			ELSE CASE WHEN b.dTotal = 1 THEN 4 
			ELSE CASE WHEN b.dTotal = 2 THEN 4
			ELSE CASE WHEN b.dTotal = 3 THEN 3 
			ELSE CASE WHEN b.dTotal = 4 THEN 3 
			ELSE CASE WHEN b.dTotal = 5 THEN 2 
			ELSE CASE WHEN b.dTotal = 6 THEN 1 
			END END END END END END END 
from spMstItems a, #t7 b
where 
	a.CompanyCode = b.CompanyCode
	and a.branchcode = b.branchcode
	and a.partno = b.partno
	and (datediff(mm, a.BornDate, @transdate) + 1) >= 6 

-- SET MOVING CODE : 0 FOR ITEM THAT BORN DATE < 6 MONTHS
update spMstItems set MovingCode = 0
where CompanyCode = @CompanyCode
  and BranchCode = @BranchCode
  and (datediff(mm, BornDate, @TransDate) + 1) < 6

drop table #t7
drop table #t6
drop table #t5
drop table #t4
drop table #t3
drop table #t2
drop table #t1
GO
CREATE procedure [dbo].[uspfn_GetTaxInPeriod]
	@CompanyCode nvarchar(25),
	@BranchCode nvarchar(25),
	@ProductType nvarchar(2),
	@PeriodYear int,
	@PeriodMonth int
  
  as
  begin
--DECLARE @CompanyCode nvarchar(25) set @CompanyCode ='6006410'
--DECLARE @BranchCode nvarchar(25) set @BranchCode ='600641001'
--DECLARE @ProductType nvarchar(2) set @ProductType ='4W'
--DECLARE @PeriodYear int set @PeriodYear = 2014
--DECLARE @PeriodMonth int set @PeriodMonth =12

  --exec uspfn_GetTaxInPeriod 6006410,600641001,'4W',2014,12


SELECT * INTO #1 FROM (
SELECT BranchCode, TaxNo, SupplierCode FROM gnTaxIn WITH(NOLOCK, NOWAIT)
WHERE CompanyCode = @CompanyCode 
    AND BranchCode = case @BranchCode when '' then BranchCode else @BranchCode end 
    AND ProductType = @ProductType 
	AND PeriodYear = @PeriodYear 
    AND PeriodMonth = @PeriodMonth
UNION
SELECT BranchCode, TaxNo, SupplierCode FROM gnTaxInHistory WITH(NOLOCK, NOWAIT)
WHERE CompanyCode = @CompanyCode 
    AND BranchCode = case @BranchCode when '' then BranchCode else @BranchCode end 
    AND ProductType = @ProductType 
	AND PeriodYear = @PeriodYear 
    AND PeriodMonth = @PeriodMonth 
    AND IsDeleted = '1'
) #1

/* AMBIL SEMUA DATA HPP SPARE */
select * into #t_1 from (
select b.SupplierCode, a.* 
from spTrnPHpp a
left join spTrnPRcvHdr b on b.CompanyCode = a.CompanyCode 
	and b.BranchCode = a.BranchCode
	and b.WRSNo = a.WRSNo
where
	a.CompanyCode	 = @CompanyCode
	and a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end
	and a.YearTax	 = @PeriodYear
	and a.MonthTax	 = @PeriodMonth
)#t_1 

/* AMBIL SEMUA DATA BTT OTHER (AP) */
select * into #t_2 from (
select a.* 
from apTrnBTTOtherHdr a
where 
	a.CompanyCode = @CompanyCode
	and a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end
	and a.FPJNo <> ''
	and SUBSTRING(a.FPJPeriod, 1, 4) = @PeriodYear
    and RIGHT(a.FPJPeriod, 2) = @PeriodMonth
)#t_2 

/* DATA HPP SPARE YANG MEMILIKI SUPPLIER DAN TAXNO YANG SAMA DENGAN BTT OTHER (NILAI DIJUMLAHKAN) */
SELECT * INTO #t_3 FROM (
SELECT
  a.CompanyCode
, a.BranchCode
, d.ProductType
, a.YearTax PeriodYear
, a.MonthTax PeriodMonth
, '300' ProfitCenter
, a.TypeOfGoods
, 'B' TaxCode
, '2' TransactionCode
, '1' StatusCode
, '1' DocumentCode
, 'F' DocumentType
, b.SupplierCode
, c.SupplierGovName SupplierName
, c.IsPKP
, c.NPWPNo NPWP
, a.ReferenceNo FPJNo
, a.ReferenceDate FPJDate
, a.HPPNo + ' (' + a.ReferenceNo + ')' ReferenceNo
, a.WRSDate ReferenceDate
, a.TaxNo TaxNo
, a.TaxDate TaxDate
, a.DueDate SubmissionDate
, ISNULL((ISNULL(a.TotNetPurchAmt, 0) + ISNULL(a.DiffNetPurchAmt, 0)) + g.DppAmt,0) DPPAmt
, ISNULL((ISNULL(a.TotTaxAmt, 0) + ISNULL(a.DiffTaxAmt, 0)) + g.PPNAmt, 0) PPNAmt
, ISNULL(0 + g.PPNBmAmt, 0) PPNBmAmt
, 'PEMBELIAN SPARE PART' Description
, ISNULL(ISNULL(b.TotItem, 0)+(SELECT COUNT(*) FROM apTrnBTTOtherDtl WHERE CompanyCode = a.CompanyCode 
							AND BranchCode = a.BranchCode AND BTTNo = g.BTTNo), 0) Quantity	
FROM
	spTrnPHPP a	WITH(NOLOCK, NOWAIT)
	LEFT JOIN spTrnPRcvHdr b WITH(NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
		AND a.BranchCode = b.BranchCode
		AND a.WRSNo = b.WRSNo
	LEFT JOIN gnMstSupplier c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
		AND b.SupplierCode = c.SupplierCode
	LEFT JOIN gnMstCoProfile d WITH(NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
		AND a.BranchCode = d.BranchCode
    INNER JOIN gnMstSupplierProfitCenter e WITH(NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
	    AND a.BranchCode = e.BranchCode
        AND b.SupplierCode = e.SupplierCode
    INNER JOIN gnMstTax f WITH(NOLOCK, NOWAIT) ON a.CompanyCode = f.CompanyCode
        AND e.TaxCode = f.TaxCode
	INNER JOIN #t_2 g on g.BranchCode=a.BranchCode AND g.SupplierCode = b.SupplierCode
		AND g.FPJNo = a.TaxNo
WHERE
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end
	AND ProductType = @ProductType
	AND a.YearTax = @PeriodYear
	AND a.MonthTax = @PeriodMonth
	AND a.Status = '2'
    AND e.ProfitCenterCode = '300'
    AND f.TaxPct > 0
) #t_3

-----------------------------------------------------------

/* QUERY UTAMA */
SELECT * INTO Query3S FROM (
-- SALES : PURCHASE
SELECT
  a.CompanyCode
, a.BranchCode
, e.ProductType
, YEAR(a.LockingDate) PeriodYear
, MONTH(a.LockingDate) PeriodMonth
, '100' ProfitCenter
, NULL TypeOfGoods
, 'B' TaxCode
, '2' TransactionCode
, '1' StatusCode
, '1' DocumentCode
, 'F' DocumentType
, a.SupplierCode 
, d.SupplierGovName SupplierName
, d.IsPKP 
, d.NPWPNo NPWP
, a.RefferenceFakturPajakNo FPJNo
, a.RefferenceFakturPajakDate FPJDate
, a.HPPNo + ' (' + a.RefferenceInvoiceNo + ')' ReferenceNo
, a.RefferenceInvoiceDate ReferenceDate
, a.RefferenceFakturPajakNo TaxNo
, a.RefferenceFakturPajakDate TaxDate
, a.DueDate SubmissionDate
, (SELECT SUM(ISNULL(Quantity, 0) * (ISNULL(AfterDiscDPP, 0) + ISNULL(OthersDPP, 0))) FROM omTrPurchaseHPPDetailModel 
    WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND HPPNo = a.HPPNo ) DPPAmt
, (SELECT SUM(ISNULL(Quantity, 0) * (ISNULL(AfterDiscPPn, 0) + ISNULL(OthersPPn, 0))) FROM omTrPurchaseHPPDetailModel 
    WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND HPPNo = a.HPPNo ) PPNAmt
, (SELECT SUM(ISNULL(Quantity, 0) * ISNULL(AfterDiscPPnBM, 0)) FROM omTrPurchaseHPPDetailModel 
    WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND HPPNo = a.HPPNo ) PPNBmAmt
, (SELECT TOP 1 SalesModelCode + ', NO. CHS. ' + CONVERT(VARCHAR, ChassisNo) FROM omTrPurchaseHPPSubDetail 
	WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND HPPNo = a.HPPNo) Description
, (SELECT COUNT(HPPSeq) FROM omTrPurchaseHPPSubDetail c 
    LEFT JOIN omTrPurchaseHPPDetailModel b ON c.CompanyCode = b.CompanyCode AND c.BranchCode = b.BranchCode 
    AND c.HPPNo = b.HPPNo AND c.BPUNo = b.BPUNo
    WHERE c.CompanyCode = a.CompanyCode AND c.BranchCode = a.BranchCode AND c.HPPNo = a.HPPNo) Quantity
FROM
    omTrPurchaseHPP a WITH(NOLOCK, NOWAIT)
    LEFT JOIN gnMstSupplier d WITH(NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
	    AND a.SupplierCode = d.SupplierCode
    LEFT JOIN gnMstCoProfile e WITH(NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
	    AND a.BranchCode = e.BranchCode
    INNER JOIN gnMstSupplierProfitCenter f WITH(NOLOCK, NOWAIT) ON a.CompanyCode = f.CompanyCode
	    AND a.BranchCode = f.BranchCode
        AND a.SupplierCode = f.SupplierCode
    INNER JOIN gnMstTax g WITH(NOLOCK, NOWAIT) ON a.CompanyCode = g.CompanyCode
        AND f.TaxCode = g.TaxCode        
WHERE
    a.CompanyCode = @CompanyCode
    AND a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end
    AND ProductType = @ProductType
    AND YEAR(a.LockingDate) = @PeriodYear
    AND MONTH(a.LockingDate) = @PeriodMonth
    AND a.Status NOT IN ('3')
    AND f.ProfitCenterCode = '100'    
    AND g.TaxPct > 0
-------------------------------------------------------------------------------------
UNION
-- SALES : KAROSERI
SELECT
  a.CompanyCode
, a.BranchCode
, ProductType
, YEAR(a.LockingDate) PeriodYear
, MONTH(a.LockingDate) PeriodMonth
, '100' ProfitCenter
, NULL TypeOfGoods
, 'B' TaxCode
, '2' TransactionCode
, '1' StatusCode
, '1' DocumentCode
, 'F' DocumentType
, a.SupplierCode
, b.SupplierGovName SupplierName
, b.IsPKP
, b.NPWPNo NPWP
, a.RefferenceFakturPajakNo FPJNo
, a.RefferenceFakturPajakDate FPJDate
, a.KaroseriTerimaNo + ' (' + a.RefferenceInvoiceNo + ')' ReferenceNo
, a.RefferenceInvoiceDate ReferenceDate
, a.RefferenceFakturPajakNo TaxNo
, a.RefferenceFakturPajakDate TaxDate
, a.DueDate SubmissionDate
, ISNULL(a.Quantity, 0) * (ISNULL(a.DPPMaterial, 0) + ISNULL(a.DPPFee, 0) + ISNULL(a.DPPOthers, 0)) DPPAmt
, ISNULL(a.Quantity, 0) * ISNULL(a.PPn, 0) PPNAmt
, 0 PPNBmAmt
, 'Karoseri SPK No: ' + a.KaroseriSPKNo Description
, ISNULL(a.Quantity, 0) Quantity
FROM
    omTrPurchaseKaroseriTerima a WITH(NOLOCK, NOWAIT)
    LEFT JOIN gnMstSupplier b WITH(NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
	    AND a.SupplierCode = b.SupplierCode
    LEFT JOIN gnMstCoProfile c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
	    AND a.BranchCode = c.BranchCode
    INNER JOIN gnMstSupplierProfitCenter d WITH(NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
	    AND a.BranchCode = d.BranchCode
        AND a.SupplierCode = d.SupplierCode  
    INNER JOIN gnMstTax e WITH(NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
        AND d.TaxCode = e.TaxCode              
WHERE
    a.CompanyCode = @CompanyCode
    AND a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end
    AND ProductType = @ProductType
    AND YEAR(a.LockingDate) = @PeriodYear
    AND MONTH(a.LockingDate) = @PeriodMonth
    AND a.Status NOT IN ('3')
    AND d.ProfitCenterCode = '100'
    AND e.TaxPct > 0
-----------------------------------------------------------------------------------------
UNION
-- SALES : PURCHASE RETURN
SELECT
  a.CompanyCode
, a.BranchCode
, d.ProductType
, YEAR(ReturnDate) PeriodYear
, MONTH(ReturnDate) PeriodMonth
, '100' ProfitCenter
, NULL TypeOfGoods
, 'B' TaxCode
, '2' TransactionCode
, '1' StatusCode
, '1' DocumentCode
, 'R' DocumentType
, c.SupplierCode SupplierCode
, c.SupplierGovName SupplierName
, c.IsPKP IsPKP
, c.NPWPNo NPWP
, replace(a.RefferenceNo,substring(a.RefferenceNo,1,1),'9') FPJNo
, a.RefferenceDate FPJDate
, a.ReturnNo + ' (' + a.RefferenceNo + ')' ReferenceNo
, a.RefferenceDate ReferenceDate
, replace(a.RefferenceNo,substring(a.RefferenceNo,1,1),'9') TaxNo  
, a.RefferenceDate TaxDate
, a.ReturnDate SubmissionDate
,(SELECT SUM(ISNULL(Quantity, 0) * (ISNULL(AfterDiscDPP, 0) + ISNULL(OthersDPP, 0))) FROM omTrPurchaseReturnDetailModel 
    WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND ReturnNo = a.ReturnNo) * -1 DPPAmt
,(SELECT SUM(ISNULL(Quantity, 0) * (ISNULL(AfterDiscPPn, 0) + ISNULL(OthersPPn, 0)))FROM omTrPurchaseReturnDetailModel 
    WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND ReturnNo = a.ReturnNo) * -1 PPNAmt
,(SELECT SUM(ISNULL(Quantity, 0) * ISNULL(AfterDiscPPnBM, 0)) FROM omTrPurchaseReturnDetailModel 
    WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND ReturnNo = a.ReturnNo) * -1 PPNBmAmt
, 'RTR-SLS-NO: ' + a.ReturnNo Description
, (SELECT SUM(ISNULL(Quantity, 0))FROM omTrPurchaseReturnDetailModel 
    WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND ReturnNo = a.ReturnNo) * -1 Quantity
FROM
    omTrPurchaseReturn a WITH(NOLOCK, NOWAIT)
    LEFT JOIN omTrPurchaseHPP b WITH(NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
	    AND a.BranchCode = b.BranchCode
	    AND a.HPPNo = b.HPPNo
    LEFT JOIN gnMstSupplier c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
	    AND b.SupplierCode = c.SupplierCode
    LEFT JOIN gnMstCoProfile d WITH(NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
	    AND a.BranchCode = d.BranchCode
    INNER JOIN gnMstSupplierProfitCenter e WITH(NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
	    AND a.BranchCode = e.BranchCode
        AND b.SupplierCode = e.SupplierCode  
    INNER JOIN gnMstTax f WITH(NOLOCK, NOWAIT) ON a.CompanyCode = f.CompanyCode
        AND e.TaxCode = f.TaxCode              
WHERE
    a.CompanyCode = @CompanyCode
    AND a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end
    AND ProductType = @ProductType
    AND YEAR(ReturnDate) = @PeriodYear
    AND MONTH(ReturnDate) = @PeriodMonth
    AND a.Status NOT IN ('3')
    AND e.ProfitCenterCode = '100'
    AND f.TaxPct > 0
---------------------------------------------------------------------------------------
UNION
-- SERVICE
SELECT
 a.CompanyCode
, a.BranchCode
, a.ProductType
, YEAR(RecDate) PeriodYear
, MONTH(RecDate) PeriodMonth
, '200' ProfitCenter
, NULL TypeOfGoods
, 'B' TaxCode
, '2' TransactionCode
, '1' StatusCode
, '1' DocumentCode
, 'F' DocumentType
, a.SupplierCode SupplierCode
, b.SupplierGovName SupplierName
, b.IsPKP IsPKP
, b.NPWPNo NPWP
, a.FPJNo FPJNo
, a.FPJDate FPJDate
, a.PONo + ' (' + a.JobOrderNo + ')' ReferenceNo
, a.RecDate RefferenceDate
, a.FPJGovNo TaxNo
, a.FPJDate TaxDate
, a.DueDate SubmissionDate
, ISNULL(a.DPPAmt, 0) DPPAmt
, ISNULL(a.PPnAmt, 0) PPNAmt
, 0 PPNBmAmt
, 'REC-SV-NO: ' + a.RecNo Description
, 1 Quantity
FROM
    svTrnPOSubCon a	WITH(NOLOCK, NOWAIT)
    LEFT JOIN gnMstSupplier b WITH(NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
	    AND a.SupplierCode = b.SupplierCode
    INNER JOIN gnMstSupplierProfitCenter c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
	    AND a.BranchCode = c.BranchCode
        AND a.SupplierCode = c.SupplierCode      
    INNER JOIN gnMstTax d WITH(NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
        AND c.TaxCode = d.TaxCode          
WHERE
    a.CompanyCode = @CompanyCode
    AND a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end
    AND a.ProductType = @ProductType
    AND YEAR(RecDate) = @PeriodYear
    AND MONTH(RecDate) = @PeriodMonth
    AND c.ProfitCenterCode = '200'
    AND d.TaxPct > 0
---------------------------------------------------------------------------------------
UNION 
-- SPAREPART
SELECT
  a.CompanyCode
, a.BranchCode
, d.ProductType
, a.YearTax PeriodYear
, a.MonthTax PeriodMonth
, '300' ProfitCenter
, a.TypeOfGoods
, 'B' TaxCode
, '2' TransactionCode
, '1' StatusCode
, '1' DocumentCode
, 'F' DocumentType
, b.SupplierCode
, c.SupplierGovName SupplierName
, c.IsPKP
, c.NPWPNo NPWP
, a.ReferenceNo FPJNo
, a.ReferenceDate FPJDate
, a.HPPNo + ' (' + a.ReferenceNo + ')' ReferenceNo
, a.WRSDate ReferenceDate
, a.TaxNo TaxNo
, a.TaxDate TaxDate
, a.DueDate SubmissionDate
, ISNULL(a.TotNetPurchAmt, 0) + ISNULL(a.DiffNetPurchAmt, 0) DPPAmt
, ISNULL(a.TotTaxAmt, 0) + ISNULL(a.DiffTaxAmt, 0) PPNAmt
, 0 PPNBmAmt
, 'PEMBELIAN SPARE PART' Description
, ISNULL(b.TotItem, 0) Quantity	
FROM
	spTrnPHPP a	WITH(NOLOCK, NOWAIT)
	LEFT JOIN spTrnPRcvHdr b WITH(NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
		AND a.BranchCode = b.BranchCode
		AND a.WRSNo = b.WRSNo
	LEFT JOIN gnMstSupplier c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
		AND b.SupplierCode = c.SupplierCode
	LEFT JOIN gnMstCoProfile d WITH(NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
		AND a.BranchCode = d.BranchCode
    INNER JOIN gnMstSupplierProfitCenter e WITH(NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
	    AND a.BranchCode = e.BranchCode
        AND b.SupplierCode = e.SupplierCode
    INNER JOIN gnMstTax f WITH(NOLOCK, NOWAIT) ON a.CompanyCode = f.CompanyCode
        AND e.TaxCode = f.TaxCode
WHERE
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end
	AND ProductType = @ProductType
	AND a.YearTax = @PeriodYear
	AND a.MonthTax = @PeriodMonth
	AND a.Status = '2'
    AND e.ProfitCenterCode = '300'
    AND f.TaxPct > 0
	AND b.BranchCode+'-'+b.SupplierCode+'-'+a.TaxNo NOT IN (SELECT BranchCode+'-'+SupplierCode+'-'+TaxNo FROM #t_3)
-------------------------------------------------------------------------------
UNION
-- FINANCE
SELECT
  a.CompanyCode
, a.BranchCode
, c.ProductType
, SUBSTRING(a.FPJPeriod, 1, 4) PeriodYear
, RIGHT(a.FPJPeriod, 2) PeriodMonth
, '000' ProfitCenter
, 'NULL' TypeOfGoods
, 'B' TaxCode
, '2' TransactionCode
, '1' StatusCode
, '1' DocumentCode
, 'F' DocumentType
, a.SupplierCode
, b.SupplierGovName SupplierName
, b.IsPKP
, b.NPWPNo NPWP
, a.FPJNo
, a.FPJDate
, a.BTTNo + ' (' + a.ReffNo + ')' ReferenceNo
, a.ReffDate ReferenceDate
, a.FPJNo TaxNo
, a.FPJDate TaxDate
, a.DueDate SubmissionDate
, a.DPPAmt
, a.PPNAmt
, a.PPnBMAmt
, (SELECT TOP 1 Description FROM apTrnBTTOtherDtl WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND BTTNo = a.BTTNo) Description
, (SELECT COUNT(*) FROM apTrnBTTOtherDtl WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND BTTNo = a.BTTNo) Quantity	
FROM
    apTrnBTTOtherHdr a	WITH(NOLOCK, NOWAIT)    
    LEFT JOIN gnMstSupplier b WITH(NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
	    AND a.SupplierCode = b.SupplierCode
    LEFT JOIN gnMstCoProfile c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
	    AND a.BranchCode = c.BranchCode
    INNER JOIN gnMstSupplierProfitCenter d WITH(NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
	    AND a.BranchCode = d.BranchCode
        AND a.SupplierCode = d.SupplierCode
    INNER JOIN gnMstTax e WITH(NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
        AND d.TaxCode = e.TaxCode               
WHERE
    a.CompanyCode = @CompanyCode
    AND a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end
    AND ProductType = @ProductType
    AND SUBSTRING(a.FPJPeriod, 1, 4) = @PeriodYear
    AND RIGHT(a.FPJPeriod, 2) = @PeriodMonth
    AND a.Category = 'INV'
    AND d.ProfitCenterCode = '000'
    AND e.TaxPct > 0
    AND a.BranchCode+'-'+a.SupplierCode+'-'+a.FPJNo NOT IN (SELECT BranchCode+'-'+SupplierCode+'-'+TaxNo FROM #t_3)
-------------------------------------------------------------------------------
UNION
-- SPARE PART DAN BTT YANG MEMILIKI SUPPLIER DAN TAXNO YANG SAMA
SELECT * FROM #t_3
) Query3S

select ROW_NUMBER() OVER(ORDER BY q1.BranchCode, q1.ProfitCenter ASC, q1.TaxNo)  SeqNo
    , q1.CompanyCode
	, q1.BranchCode
	, q1.ProductType
	, q1.PeriodYear
	, q1.PeriodMonth
	, q1.ProfitCenter
	, ISNULL((SELECT TOP 1 TypeOfGoods FROM Query3S WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo), '') TypeOfGoods
	, q1.TaxCode
	, q1.TransactionCode
	, q1.StatusCode
	, q1.DocumentCode
	, q1.DocumentType
	, q1.SupplierCode
	, q1.SupplierName
	, q1.IsPKP
	, q1.NPWP
	, (SELECT TOP 1 FPJNo FROM Query3S WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo) FPJNo
	, (SELECT TOP 1 FPJDate FROM Query3S WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo) FPJDate
	, (SELECT TOP 1 ReferenceNo FROM Query3S WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo) ReferenceNo
	, (SELECT TOP 1 ReferenceDate FROM Query3S WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo) ReferenceDate
	, q1.TaxNo
	, (SELECT TOP 1 TaxDate FROM Query3S WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo) TaxDate
	, (SELECT TOP 1 SubmissionDate FROM Query3S WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo) SubmissionDate
	, SUM(q1.DPPAmt) DPPAmt
	, SUM(q1.PPNAmt) PPNAmt
	, SUM(q1.PPnBMAmt) PPnBMAmt
	, (SELECT TOP 1 Description FROM Query3S WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo) Description
	, SUM(q1.Quantity) Quantity
from Query3S q1
group by
	q1.CompanyCode
	, q1.BranchCode
	, q1.ProductType
	, q1.PeriodYear
	, q1.PeriodMonth
	, q1.ProfitCenter
	, q1.TaxCode
	, q1.TransactionCode
	, q1.StatusCode
	, q1.DocumentCode
	, q1.DocumentType
	, q1.SupplierCode
	, q1.SupplierName
	, q1.IsPKP
	, q1.NPWP
	, q1.TaxNo 

select
    ISNULL(SUM(DPPAmt),0) DPPAmt
    ,ISNULL(SUM(PPnAmt),0) PPnAmt
	,ISNULL((SELECT SUM(DPPAmt) FROM Query3S WHERE IsPKP='1'),0) SumDPPStd 
	,ISNULL((SELECT SUM(DPPAmt) FROM Query3S WHERE IsPKP='0'),0) SumDPPSdh 
	,ISNULL((SELECT SUM(PPnAmt) FROM Query3S WHERE IsPKP='1'),0) SumPPNStd
	,ISNULL((SELECT SUM(PPnAmt) FROM Query3S WHERE IsPKP='0'),0) SumPPNSdh
	,ISNULL(SUM(PPnBMAmt),0) SumPPnBMAmt
from Query3S

drop table Query3S
drop table #1
drop table #t_1
drop table #t_2
drop table #t_3
end
GO
CREATE procedure [dbo].[uspfn_UpdateCsBirthday]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;
	
	with x as (
		select *
		  from SDMS..CsCustBirthDay a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..CsCustBirthDay (
		   CompanyCode
		 , CustomerCode
		 , PeriodYear
		 , TypeOfGift
		 , SentGiftDate
		 , ReceivedGiftDate
		 , Comment
		 , AdditionalInquiries
		 , Status
		 , CreatedBy
		 , CreatedDate
		 , UpdatedBy
		 , UpdatedDate
		 , SpouseName
		 , ChildName1
		 , ChildName2
		 , ChildName3
		 , SpouseBirthday
		 , ChildBirthday1
		 , ChildBirthday2
		 , ChildBirthday3
		 , SpouseComment
		 , ChildComment1
		 , ChildComment2
		 , ChildComment3
		 , SpouseGiftSentDate
		 , ChildGiftSentDate1
		 , ChildGiftSentDate2
		 , ChildGiftSentDate3
		 , SpouseTypeOfGift
		 , ChildTypeOfGift1
		 , ChildTypeOfGift2
		 , SpouseRelation
		 , ChildRelation1
		 , ChildRelation2
		 , ChildRelation3
		 , ChildTelephone1
		 , ChildTelephone2
		 , ChildTelephone3
		 , SpouseGiftReceivedDate
		 , ChildGiftReceivedDate1
		 , ChildGiftReceivedDate2
		 , ChildGiftReceivedDate3
		 , ChildTypeOfGift3
		 , SpouseTelephone
		 )
	select CompanyCode = @CompanyCode_B
	     , a.CustomerCode
	     , a.PeriodYear
	     , a.TypeOfGift
	     , a.SentGiftDate
	     , a.ReceivedGiftDate
	     , a.Comment
	     , a.AdditionalInquiries
	     , a.Status
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdatedBy
	     , a.UpdatedDate
	     , a.SpouseName
	     , a.ChildName1
	     , a.ChildName2
	     , a.ChildName3
	     , a.SpouseBirthday
	     , a.ChildBirthday1
	     , a.ChildBirthday2
	     , a.ChildBirthday3
	     , a.SpouseComment
	     , a.ChildComment1
	     , a.ChildComment2
	     , a.ChildComment3
	     , a.SpouseGiftSentDate
	     , a.ChildGiftSentDate1
	     , a.ChildGiftSentDate2
	     , a.ChildGiftSentDate3
	     , a.SpouseTypeOfGift
	     , a.ChildTypeOfGift1
	     , a.ChildTypeOfGift2
	     , a.SpouseRelation
	     , a.ChildRelation1
	     , a.ChildRelation2
	     , a.ChildRelation3
	     , a.ChildTelephone1
	     , a.ChildTelephone2
	     , a.ChildTelephone3
	     , a.SpouseGiftReceivedDate
	     , a.ChildGiftReceivedDate1
	     , a.ChildGiftReceivedDate2
	     , a.ChildGiftReceivedDate3
	     , a.ChildTypeOfGift3
	     , a.SpouseTelephone
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[uspfn_OmFakturPajakDtlDoSaveDO]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15), 
 @InvoiceNo varchar(30) 
)  
AS  
BEGIN 
-- exec uspfn_OmFakturPajakDtlSaveDO 6006410,600641001,''
INSERT INTO OmFakturPajakDetailDO(CompanyCode, BranchCode, InvoiceNo, DONo)
 SELECT a.CompanyCode, a.BranchCode, a.InvoiceNo, b.DONo FROM omTrSalesInvoiceModel a
 INNER JOIN omTrSalesBPK b ON b.CompanyCode = a.CompanyCode AND b.BranchCode = a.BranchCode AND a.BPKNo = b.BPKNo
 WHERE a.CompanyCode = @CompanyCode AND a.BranchCode = @BranchCode AND a.InvoiceNo = @InvoiceNo
 AND b.DONo NOT IN(SELECT DONo FROM omFakturPajakDetailDO WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode
 AND InvoiceNo = a.InvoiceNo)
 GROUP BY a.CompanyCode, a.BranchCode, a.InvoiceNo, b.DONo
end
GO
CREATE procedure [dbo].[uspfn_OmFakturPajakDtlAccsSeqSaveDetail]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15), 
 @InvoiceNo varchar(30) 
)  
AS  
BEGIN 
-- exec uspfn_OmFakturPajakDtlAccsSeqSaveDetail 6006410,600641001,''
INSERT INTO OmFakturPajakDetailAccsSeq(CompanyCode, BranchCode, InvoiceNo, PartNo, PartName, Quantity, 
    RetailPrice, DiscExcludePPn, DPP, PPn, Total)
SELECT a.CompanyCode
    , a.BranchCode
    , a.InvoiceNo
    , a.PartNo
    , isnull(b.PartName,'') PartName
    , a.Quantity Quantity
    , a.RetailPrice
    , a.DiscExcludePPn
    , a.DPP
    , a.PPn
    , a.Total
FROM omTrSalesInvoiceAccsSeq a
LEFT JOIN spMstItemInfo b ON b.CompanyCode = a.CompanyCode 
    AND b.PartNo = a.PartNo
WHERE a.CompanyCode = @CompanyCode 
    AND a.BranchCode = @BranchCode 
    AND a.InvoiceNo = @InvoiceNo
    AND a.PartNo NOT IN(SELECT PartNo FROM omFakturPajakDetailAccsSeq WHERE CompanyCode = a.CompanyCode 
        AND BranchCode = a.BranchCode AND InvoiceNo = a.InvoiceNo AND PartNo = a.PartNo)  
end
GO


CREATE procedure [dbo].[uspfn_UpdateDepartmentTraining]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;

	with x as (
		select *
		  from SDMS..HrDepartmentTraining a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrDepartmentTraining (
		   CompanyCode
		 , Department
		 , Position
		 , Grade
		 , TrainingCode
		 , IsRequired
		 , CreatedBy
		 , CreatedDate
		 , UpdatedBy
		 , UpdatedDate
		 , IsDeleted
		 )
	select CompanyCode = @CompanyCode_B
	     , a.Department
	     , a.Position
	     , a.Grade
	     , a.TrainingCode
	     , a.IsRequired
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdatedBy
	     , a.UpdatedDate
	     , a.IsDeleted
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE PROCEDURE [dbo].[uspfn_svSelectInvoiceForCancellation]
@CompanyCode varchar(15), @BranchCode varchar(15), @ProductType varchar(2), @InvoiceNo varchar(15) = ''
AS
begin

--declare @CompanyCode varchar(15), @BranchCode varchar(15), @ProductType varchar(2), @InvoiceNo varchar(15) = ''
--set @CompanyCode = '6159401000'
--set @BranchCode = '6159401001'
--set @ProductType = '4W'
--set @InvoiceNo = 'INC/15/002968'
--exec uspfn_svSelectInvoiceForCancellation @CompanyCode, @BranchCode, @ProductType, @InvoiceNo

	DECLARE @addWhere varchar(4000);
	if(@InvoiceNo = '') begin
		set @addWhere = ''
	end else begin
		set @addWhere = ' AND Invoice.InvoiceNo =''' + @InvoiceNo + '''';
	end

	DECLARE @Query varchar(max);
	SET @Query = 'SELECT TOP 1500
		Invoice.ProductType, Invoice.InvoiceNo, 
		case Invoice.InvoiceDate when (''19000101'') then null else Invoice.InvoiceDate end as InvoiceDate
		,Invoice.InvoiceStatus, Invoice.FPJNo
		,case Invoice.FPJDate when (''19000101'') then null else Invoice.FPJDate end as FPJDate
		,Invoice.JobOrderNo
		,case Invoice.JobOrderDate when (''19000101'') then null else Invoice.JobOrderDate end as JobOrderDate
		,Invoice.JobType, Invoice.ChassisCode, Invoice.ChassisNo, Invoice.EngineCode
		,Invoice.EngineNo, Invoice.PoliceRegNo, Invoice.BasicModel, Invoice.CustomerCode, Invoice.CustomerCodeBill
		,Invoice.Remarks, (Invoice.CustomerCode + '' - '' + Cust.CustomerName) as Customer
		,(Invoice.CustomerCodeBill + '' - '' + CustBill.CustomerName) as CustomerBill
		, vehicle.ServiceBookNo, Invoice.Odometer
		FROM svTrnInvoice Invoice
		LEFT JOIN gnMstCustomer Cust
			ON Cust.CompanyCode = Invoice.CompanyCode AND Cust.CustomerCode = Invoice.CustomerCode
		LEFT JOIN gnMstCustomer CustBill
			ON CustBill.CompanyCode = Invoice.CompanyCode AND CustBill.CustomerCode = Invoice.CustomerCodeBill
		LEFT JOIN svMstcustomerVehicle vehicle 
			ON Invoice.CompanyCode = vehicle.CompanyCode and Invoice.ChassisCode = vehicle.ChassisCode and 
			Invoice.ChassisNo = vehicle.ChassisNo and Invoice.EngineCode = vehicle.EngineCode and 
			Invoice.EngineNo = vehicle.EngineNo and Invoice.BasicModel = vehicle.BasicModel	
		WHERE Invoice.CompanyCode = ''' + @CompanyCode + ''' AND Invoice.BranchCode = ''' + @BranchCode + ''' 
			AND Invoice.ProductType = ''' + @ProductType + '''' + @addWhere + '
			AND convert(varchar, Invoice.InvoiceDate, 112) >= isnull((
					select top 1 convert(varchar, FromDate, 112) from gnMstPeriode
					 where 1 = 1
					   and CompanyCode = ''' + @CompanyCode + '''
					   and BranchCode = ''' + @BranchCode + '''
					   and FiscalYear = (select FiscalYear from gnMstCoProfileService 
							where CompanyCode = ''' + @CompanyCode + ''' and BranchCode = ''' + @BranchCode + ''')
					 order by FromDate
					), '''') 
			AND EXISTS (
		select * from glInterface
		 where CompanyCode = Invoice.CompanyCode
		   and BranchCode = Invoice.BranchCode
		   and DocNo = Invoice.InvoiceNo
		   and StatusFlag  = 0
		)
		AND (NOT EXISTS (
			select * from arInterface
			 where CompanyCode = Invoice.CompanyCode
			   and BranchCode = Invoice.BranchCode
			   and DocNo = Invoice.InvoiceNo
			) 
			OR EXISTS (
			select * from arInterface
			 where CompanyCode = Invoice.CompanyCode
			   and BranchCode = Invoice.BranchCode
			   and DocNo = Invoice.InvoiceNo
			   and StatusFlag  = 0
			   and ReceiveAmt  = 0
			   and BlockAmt    = 0
			   and DebetAmt    = 0
			   and CreditAmt   = 0
			)
		)
		AND NOT EXISTS (
		select * from svTrnFakturPajak
		 where CompanyCode = Invoice.CompanyCode
		   and BranchCode = Invoice.BranchCode
		   and FPJNo = Invoice.FPJNo
		   and isnull(FPJGovNo, '''') <> ''''
		)';
        
	--print(@Query);
	exec (@Query);
END
GO
CREATE procedure [dbo].[sp_SpSOSelectforInsert] (  @CompanyCode varchar(10) ,@BranchCode varchar(10),@LocationCode varchar(10))
 as
SELECT 
	 ItemLoc.PartNo	
	,ItemLoc.WarehouseCode
	,ItemLoc.LocationCode
	,Items.PartCategory
	,Items.CompanyCode
	,Items.BranchCode   
	,Items.ProductType
	,Items.TypeOfGoods
	,itemloc.OnHand
FROM spMstItemLoc ItemLoc
INNER JOIN spMstItems Items 
    ON ItemLoc.CompanyCode=Items.CompanyCode
    AND ItemLoc.BranchCode=Items.BranchCode
    AND ItemLoc.PartNo=Items.PartNo
WHERE	
	 Items.CompanyCode=@CompanyCode and Items.BranchCode=@BranchCode and ItemLoc.LocationCode like '%' +@LocationCode
GO
CREATE procedure [dbo].[sp_SpSOSelectforEntry]   
@CompanyCode varchar(15),  
@BranchCode varchar(15),   
@ProductType  varchar(15),
@WarehouseCode  varchar(15)   

AS  
 SELECT
 distinct
	    a.PartNo,
	    (SELECT PartName FROM spMstItemInfo WHERE CompanyCode = a.CompanyCode AND PartNo = a.PartNo) AS PartName
    FROM
	    spMstItems a
        INNER JOIN spMstItemLoc b ON a.CompanyCode = b.CompanyCode
            AND a.BranchCode = b.BranchCode
            AND a.PartNo = b.PartNo
    WHERE
	    a.CompanyCode = @CompanyCode
	    AND a.BranchCode = @BranchCode	
	    AND a.ProductType = @ProductType
        AND b.WarehouseCode = @WarehouseCode
    ORDER BY
        PartNo ASC
GO
CREATE PROCEDURE [dbo].[uspfn_gnCheckPostingStatus]
AS
BEGIN
	declare @checklasttrans datetime, @retValue int, @tax int,
			@procStatus int,@retValue2 int, @prmValue varchar(20),
			@sql nvarchar(2000)	

	select @prmValue=ParamValue from sysParameter where paramid='SPSRV'
	
	declare @dbmd varchar(20)
	select top 1 @dbmd=dbmd from gnMstCompanyMapping

	set @tax = 1

	IF @prmValue='ON'
	BEGIN

     -- LMP, INV, RTR, RTN
		set @sql = 'SELECT top 1 @checklasttrans=[DocDate], @procStatus = ProcessStatus FROM ' + @dbmd + 
				   '..[svSDMovement] with(nolock,nowait) where (left(docno,3)  in (''LMP'',''INV'',''RTR'',''RTN'')) order by docdate asc'

		exec sp_Executesql @sql, N'@checklasttrans datetime output, @procStatus int output', @checklasttrans output, @procStatus output
	
		IF (@checklasttrans IS NULL)
			set @retValue=1
		ELSE
		BEGIN
			IF  (convert(varchar(10),@checklasttrans,120) <  convert(varchar(10),getdate(),120)) AND @procStatus=0
				select @retValue=0, @tax = 0
			ELSE
				set @retValue=1
		END
	END
	ELSE
		set @retValue=2

	SELECT @checklasttrans = NULL, @procStatus = 0

	select @prmValue=ParamValue from sysParameter where paramid='SLS'
	IF @prmValue='ON'
	BEGIN

     -- IVU, IU, RTS, RS
		set @sql = 'SELECT top 1 @checklasttrans=[DocDate], @procStatus = ProcessStatus FROM  ' + @dbmd + 
		           '..[omSDMovement] with(nolock,nowait) where (left(docno,2)  in (''IV'',''IU'',''RT'',''RS'')) order by docdate asc'

		exec sp_Executesql @sql, N'@checklasttrans datetime output, @procStatus int output', @checklasttrans output, @procStatus output

		IF (@checklasttrans IS NULL)
			set @retValue2=1
		ELSE
		BEGIN
			IF  (convert(varchar(10),@checklasttrans,120) <  convert(varchar(10),getdate(),120)) AND @procStatus=0
				BEGIN
					select @retValue2=0, @tax = 0	
					IF @retValue <> 2
						set @retValue=0
				END
			ELSE
				BEGIN
					set @retValue2=1
				END
		END
		
		IF @retValue2=1 and @retValue=0 
			set @retValue2=0
		
	END
	ELSE
		set @retValue2=1
		
	IF @retValue = 2
		set @retValue=1
		
	SELECT @retValue [SPSRV], @retValue2 [SALES], 
	(select top 1 replace(ParamDescription, char(13),'</BR>') from sysParameter where ParamId='POSTING_STATUS') INFO, 
	(select top 1 case when ISNULL(ParamValue,'OFF')='OFF' then 1 else @tax end from sysParameter where paramid='PAJAK') TAX

END
GO
CREATE procedure [dbo].[sp_SpReceiveClaimNo] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@TypeOfGoods varchar(10))

as
SELECT DISTINCT a.CompanyCode, a.BranchCode, a.ClaimNo
,a.ClaimDate , TypeOfGoods            
FROM spTrnPClaimHdr a
INNER JOIN spTrnPClaimDtl b ON b.CompanyCode = a.CompanyCode
AND b.BranchCode = a.BranchCode
AND b.ClaimNo = a.ClaimNo
WHERE a.CompanyCode = @CompanyCode
AND a.BranchCode = @BranchCode   
AND a.Status = '2'
AND a.TypeOfGoods = @TypeOfGoods
AND 
(SELECT ISNULL(SUM(OvertageQty) + SUM(ShortageQty) + SUM(DemageQty) + SUM(WrongQty),0) FROM spTrnPClaimDtl 
WHERE CompanyCode =  @CompanyCode
AND BranchCode = @BranchCode   
AND ClaimNo = a.ClaimNo) >
(SELECT  ISNULL(SUM(c.RcvOvertageQty) + SUM(c.RcvShortageQty) + SUM(c.RcvDamageQty) + SUM(c.RcvWrongQty),0) FROM spTrnPRcvClaimDtl c
INNER JOIN spTrnPRcvClaimHdr b ON c.CompanyCode = b.CompanyCode AND c.BranchCode = b.BranchCode AND c.ClaimNo = b.ClaimNo AND c.ClaimReceivedNo = b.ClaimReceivedNo
WHERE c.CompanyCode =  @CompanyCode
AND c.BranchCode = @BranchCode   
AND c.ClaimNo = a.ClaimNo AND b.Status NOT IN (3))
ORDER BY a.ClaimNo DESC
GO
CREATE procedure [dbo].[sp_SpSOSelectforLookup] (  @CompanyCode varchar(10) ,@BranchCode varchar(10))  
 as  
select distinct(a.STNo)  
  , b.WarehouseCode  
  , b.STHdrNo  
  --, a.PartNo  
  from spTrnStockTakingTemp a with(nolock, nowait)  
       left join spTrnStockTakingHdr b with(nolock, nowait) on a.CompanyCode = b.CompanyCode  
   and a.Branchcode = b.Branchcode   
   and a.STHdrNo = b.STHdrNo   
 where a.status IN ('0', '1')  
   and b.status < 2  
   and a.CompanyCode = @CompanyCode  
   and a.Branchcode = @BranchCode
GO
CREATE procedure [dbo].[sp_UpdateBORegisterTuning] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@LastUpdateBy varchar(10))


as

UPDATE spMstItems
SET BackOrderSP = 0, BackOrderSR = 0, BackOrderSL = 0
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode

UPDATE spMstItemLoc
SET BackOrderSP = 0, BackOrderSR = 0, BackOrderSL = 0
WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode

SELECT A.CompanyCode, A.BranchCode, A.WarehouseCode, A.Partno, B.SalesType, SUM(A.QtyBO -(A.QtyBOSupply + A.QtyBOCancel)) as BOAvail 
INTO #TempBo
FROM spTrnSORDDtl A WITH(NOWAIT, NOLOCK) INNER JOIN spTrnSORDHdr B WITH(NOWAIT, NOLOCK) 
ON A.CompanyCode = B.CompanyCode 
AND A.BranchCode = B.BranchCode
AND A.DocNo = B.DocNo
WHERE A.CompanyCode = @CompanyCode 
AND A.BranchCode = @BranchCode
GROUP BY A.CompanyCode, A.BranchCode, WarehouseCode, A.Partno, B.SalesType
HAVING SUM(A.QtyBO -(A.QtyBOSupply + A.QtyBOCancel)) > 0

UPDATE spMstItems 
SET LastUpdateBy = @LastUpdateBy, LastUpdateDate = getDate(),
    BackOrderSP = ISNULL((SELECT SUM(a.BOAvail) from #TempBo a 
    WHERE a.CompanyCode = spMstItems.CompanyCode
    AND a.BranchCode = spMstItems.BranchCode
    AND a.PartNo = spMstItems.PartNo
    AND a.SalesType in ('0','1')), spMstItems.BackOrderSP),
 BackOrderSR = ISNULL((SELECT SUM(a.BOAvail) from #TempBo a 
    WHERE a.CompanyCode = spMstItems.CompanyCode
    AND a.BranchCode = spMstItems.BranchCode
    AND a.PartNo = spMstItems.PartNo
    AND a.SalesType='2'), spMstItems.BackOrderSR),
 BackOrderSL = ISNULL((SELECT SUM(a.BOAvail) from #TempBo a
    WHERE a.CompanyCode = spMstItems.CompanyCode
    AND a.BranchCode = spMstItems.BranchCode 
    AND a.PartNo = spMstItems.PartNo
    AND a.SalesType='3'), spMstItems.BackOrderSL)
WHERE spMstItems.CompanyCode=@CompanyCode
AND spMstItems.BranchCode=@BranchCode 

UPDATE spMstItemLoc 
SET LastUpdateBy = @LastUpdateBy, LastUpdateDate = getDate(),
 BackOrderSP = ISNULL((SELECT SUM(a.BOAvail) from #TempBo a 
    WHERE a.CompanyCode = spMstItemLoc.CompanyCode
    AND a.BranchCode = spMstItemLoc.BranchCode
    AND a.WarehouseCode = spMstItemLoc.WarehouseCode
    AND a.PartNo = spMstItemLoc.PartNo 
    AND a.SalesType in ('0','1')), spMstItemLoc.BackOrderSP),
 BackOrderSR = ISNULL((SELECT SUM(a.BOAvail) from #TempBo a  
    WHERE a.CompanyCode = spMstItemLoc.CompanyCode
    AND a.BranchCode = spMstItemLoc.BranchCode
    AND a.WarehouseCode = spMstItemLoc.WarehouseCode
    AND a.PartNo = spMstItemLoc.PartNo 
    AND a.SalesType='2'), spMstItemLoc.BackOrderSR),
 BackOrderSL = ISNULL((SELECT SUM(a.BOAvail) from #TempBo a 
    WHERE a.CompanyCode = spMstItemLoc.CompanyCode
    AND a.BranchCode = spMstItemLoc.BranchCode
    AND a.WarehouseCode = spMstItemLoc.WarehouseCode
    AND a.PartNo = spMstItemLoc.PartNo 
    AND a.SalesType='3'), spMstItemLoc.BackOrderSL)
WHERE spMstItemLoc.CompanyCode=@CompanyCode
AND spMstItemLoc.BranchCode=@BranchCode 
AND spMstItemLoc.WarehouseCode = '00'

DROP TABLE #TempBo
GO
CREATE procedure [dbo].[sp_UpdateDemandAverageTuning] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@TransDate datetime)


as

--declare @TransDate as datetime
--set @TransDate = '{0}'

select * into #t1 from (
select a.CompanyCode
,a.BranchCode
,a.PartNo
,a.DemandQty
,a.Year
,a.Month
,convert(varchar,a.Year) + right('0' + convert(varchar,a.Month),2) as date0
,convert(varchar(6), dateadd(m,-5,@TransDate), 112) date1
,convert(varchar(6), @TransDate, 112) date2
from spHstDemandItem a WITH(NOWAIT, NOLOCK) where a.CompanyCode = @CompanyCode AND a.BranchCode = @BranchCode
) #T1

select * into #T2 from (
select 
a.* 
,case when date0 between date1 and date2 then 1 else 0 end as IsValid
from #t1 a
) #t2

select * into #t3 from (
select CompanyCode, BranchCode, PartNo, Sum(DemandQty) DemandQty, Sum(DemandQty)/(6*30) DemandAvg from #t2 
where IsValid = 1 and DemandQty > 0
group by CompanyCode, BranchCode, PartNo
) #t3

select * into #t4 from (
select a.companycode, a.branchcode, a.partno, 0 as DemandAvg 
from spMstItems a
left join #t3 b on a.companycode = b.companycode and a.branchcode = b.branchcode and a.partno = b.partno
where  a.CompanyCode = @CompanyCode AND a.BranchCode = @BranchCode and b.partno is null
) #t4


update spMstItems set DemandAverage = isnull(b.DemandAvg, 0)
from spMstItems a, #t4 b
where a.CompanyCode=b.CompanyCode
and a.BranchCode=b.BranchCode
and a.PartNo=b.PartNo

update spMstItems set DemandAverage = isnull(b.DemandAvg, a.DemandAverage)
from spMstItems a, #t3 b
where a.CompanyCode=b.CompanyCode
and a.BranchCode=b.BranchCode
and a.PartNo=b.PartNo

drop table #t4
drop table #t3
drop table #t2
drop table #t1
GO
CREATE procedure [dbo].[sp_UpdateBOMTuning] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@User varchar(10)
)


as

UPDATE spMstItems
SET spMstItems.BOMInvCostPrice= ISNULL((SELECT CostPrice FROM spMstItemPrice WITH(NOWAIT, NOLOCK)
						WHERE spMstItemPrice.CompanyCode=spMstItems.CompanyCode
							AND spMstItemPrice.BranchCode=spMstItems.BranchCode
							AND spMstItemPrice.PartNo=spMstItems.PartNo), spMstItems.BOMInvCostPrice),
	spMstItems.BOMInvQty= spMstItems.OnHand,
	spMstItems.BOMInvAmt= ISNULL((SELECT CostPrice FROM spMstItemPrice WITH(NOWAIT, NOLOCK)
						WHERE spMstItemPrice.CompanyCode=spMstItems.CompanyCode
							AND spMstItemPrice.BranchCode=spMstItems.BranchCode
							AND spMstItemPrice.PartNo=spMstItems.PartNo), spMstItems.BOMInvCostPrice)
                            * spMstItems.OnHand,
	spMstItems.LastUpdateBy=@User,	
	spMstItems.LastUpdateDate=GetDate()	
WHERE spMstItems.CompanyCode=@CompanyCode AND spMstItems.BranchCode=@BranchCode

UPDATE spMstItemLoc
SET spMstItemLoc.BOMInvCostPrice= ISNULL((SELECT CostPrice FROM spMstItemPrice WITH(NOWAIT, NOLOCK) 
						WHERE spMstItemPrice.CompanyCode=spMstItemLoc.CompanyCode
							AND spMstItemPrice.BranchCode=spMstItemLoc.BranchCode
							AND spMstItemPrice.PartNo=spMstItemLoc.PartNo 
							AND spMstItemLoc.WarehouseCode=spMstItemLoc.WarehouseCode), spMstItemLoc.BOMInvCostPrice),
	spMstItemLoc.BOMInvQty= spMstItemLoc.OnHand,
	spMstItemLoc.BOMInvAmount= ISNULL((SELECT CostPrice FROM spMstItemPrice WITH(NOWAIT, NOLOCK) 
						WHERE spMstItemPrice.CompanyCode=spMstItemLoc.CompanyCode
							AND spMstItemPrice.BranchCode=spMstItemLoc.BranchCode
							AND spMstItemPrice.PartNo=spMstItemLoc.PartNo 
							AND spMstItemLoc.WarehouseCode=spMstItemLoc.WarehouseCode), spMstItemLoc.BOMInvCostPrice)
                            * spMstItemLoc.OnHand,
	spMstItemLoc.LastUpdateBy=@User,	
	spMstItemLoc.LastUpdateDate=GetDate()	
WHERE spMstItemLoc.CompanyCode=@CompanyCode AND spMstItemLoc.BranchCode=@BranchCode
GO
CREATE procedure [dbo].[sp_SpSrvLampLkp]
@CompanyCode varchar(15),  
@BranchCode varchar(15),   
@SalesType char(1)

--exec sp_SpSrvLampLkp '6006410','600641001',1
as
SELECT
    DISTINCT LmpNo
    , LmpDate
    , (SELECT TOP 1 DocNo FROM spTrnSPickingDtl
		WHERE spTrnSPickingDtl.CompanyCode = spTrnSLmpHdr.CompanyCode
			AND spTrnSPickingDtl.BranchCode = spTrnSLmpHdr.BranchCode
			AND spTrnSPickingDtl.PickingSlipNo = spTrnSLmpHdr.PickingSlipNo
		) AS SSNo
	, (SELECT TOP 1 DocDate FROM spTrnSPickingDtl
		WHERE spTrnSPickingDtl.CompanyCode = spTrnSLmpHdr.CompanyCode
			AND spTrnSPickingDtl.BranchCode = spTrnSLmpHdr.BranchCode
			AND spTrnSPickingDtl.PickingSlipNo = spTrnSLmpHdr.PickingSlipNo
		) AS SSDate
    , spTrnSLmpHdr.BPSFNo
    , spTrnSLmpHdr.BPSFDate
    , spTrnSLmpHdr.PickingSlipNo
    , spTrnSLmpHdr.PickingSlipDate
FROM 
    spTrnSLmpHdr
    INNER JOIN spTrnSBPSFHdr ON spTrnSBPSFHdr.Companycode = spTrnSLmpHdr.CompanyCode 
            AND spTrnSBPSFHdr.BranchCode = spTrnSLmpHdr.BranchCode 
            AND spTrnSBPSFHdr.BPSFNo = spTrnSLmpHdr.BPSFNo 
WHERE 
    spTrnSLmpHdr.CompanyCode = @CompanyCode
    AND spTrnSLmpHdr.BranchCode = @BranchCode
    AND spTrnSBPSFHdr.SalesType = @SalesType
ORDER BY 
    LmpNo DESC
GO
CREATE procedure [dbo].[sp_UpdateABCClassTuning] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@Year int,
@Month int,
@PID varchar(10))


as

/*SET @Year = '{0}'
SET @Month = '{1}'
SET @CompanyCode = '{2}'
SET @BranchCode = '{3}'
SET @PID = '{4}'*/

SELECT * into #A1 from(
SELECT a.CompanyCode, a.BranchCode, a.PartNo, ISNULL(b.CostPrice, 0) AS HargaPokok, ISNULL(c.SalesQty, 0) AS SalesQty, ISNULL(b.CostPrice * c.SalesQty, 0) as TotalPokok
FROM 
spMstItems a
LEFT JOIN spMstItemPrice b On a.CompanyCode = b.CompanyCode AND a.BranchCode = b.BranchCode and a.PartNo = b.PartNo
LEFT JOIN 
(SELECT CompanyCode, BranchCode, PartNo, SalesQty FROM SpHstDemandItem a
  WHERE a.Year  = @Year
    AND a.Month = @Month) c ON a.CompanyCode = c.CompanyCode AND c.BranchCode = b.BranchCode AND a.PartNo = c.PartNo
LEFT JOIN
(SELECT ABCClassAPct, ABCClassBPct, ABCClassCPct, CompanyCode, BranchCode
                        FROM gnMstCoProfileSpare
                        WHERE CompanyCode = @CompanyCode
                        AND BranchCode = @BranchCode) d ON a.CompanyCode = d.CompanyCode AND a.BranchCode = d.BranchCode
WHERE a.CompanyCode = @CompanyCode
    AND a.BranchCode = @BranchCode
) #A1
--==========================================

SELECT partno, TotalPokok, Total into #A2 from 
(
SELECT TOP 1000000000 a.CompanyCode, a.BranchCode, a.PartNo, a.TotalPokok, (SELECT Sum(b.TotalPokok) FROM #A1 b WHERE a.TotalPokok <= b.TotalPokok) AS Total 
FROM #A1 a 
ORDER BY a.TotalPokok DESC
 ) #A2 WHERE TotalPokok > 0
--==========================================

select * into #A3
FROM(
SELECT CompanyCode, BranchCode, SUM(TotalPokok) AS TotalFinal FROM #A1 GROUP BY CompanyCode, BranchCode
) #A3
--==========================================

SELECT * INTO #A4
FROM(
SELECT a.CompanyCode, a.BranchCode, a.PartNo, b.Total, c.TotalFinal,
CASE WHEN c.TotalFinal = 0 THEN 'C' ELSE CASE WHEN ((b.Total/c.TotalFinal) * 100) <= ABCClassAPct THEN 'A' ELSE CASE WHEN ISNULL(((b.Total/c.TotalFinal) * 100),0) > ABCClassAPct AND ((b.Total/c.TotalFinal) * 100) <= ABCClassBPct THEN 'B' ELSE CASE WHEN ISNULL(((b.Total/c.TotalFinal) * 100),0) > ABCClassBPct THEN 'C' END END END END AS ABCClass
FROM #A1 a  
INNER JOIN #A2 b ON  a.PartNo = b.PartNo
LEFT JOIN #A3 c ON  a.CompanyCode = c.CompanyCode AND a.BranchCode = c.BranchCode
LEFT JOIN (SELECT ABCClassAPct, ABCClassBPct, ABCClassCPct, CompanyCode, BranchCode
                        FROM gnMstCoProfileSpare
                        WHERE CompanyCode = @CompanyCode
                        AND BranchCode = @BranchCode) d ON a.CompanyCode = d.CompanyCode AND a.BranchCode = d.BranchCode
)#A4 

--update spMstItems set ABCClass = isnull((select ABCClass from #A4 where PartNo = spMstItems.PartNo and CompanyCode = spMstItems.CompanyCode and BranchCode = spMstItems.BranchCode), spMstItems.ABCClass)
--update spMstItems set LastUpdateBy = @PID, LastUpdateDate = GetDate()

UPDATE spMstItems SET ABCClass = isnull(b.ABCClass, a.ABCClass),
LastUpdateBy  = @PID, 
LastUpdateDate = GetDate() 
FROM spMstItems a, #A4 b
WHERE a.CompanyCode = b.CompanyCode 
AND a.BranchCode = b.BranchCode
AND a.PartNo = b.PartNo

DROP table #A1
DROP table #A2
DROP table #A3
DROP table #A4
GO
CREATE procedure [dbo].[uspfn_omUpdatePriceList]
	@CompanyCode varchar(15)='' ,
	@BranchCode varchar(15)='' ,
	@SupplierCode varchar(15)='' ,
	@GroupPrice varchar(15)='' ,
	@SalesModelCode varchar(20) ='',
	@SalesModelYear numeric(4, 0)=2015 ,
	@EffectiveDate datetime=null ,
	@RetailPriceIncludePPN numeric(18, 0)=0 ,
	@DiscPriceIncludePPN numeric(18, 0) =0,
	@NetSalesIncludePPN numeric(18, 0)=0 ,
	@RetailPriceExcludePPN numeric(18, 0)=0 ,
	@DiscPriceExcludePPN numeric(18, 0) =0,
	@NetSalesExcludePPN numeric(18, 0) =0,
	@PPNBeforeDisc numeric(18, 0) =0,
	@PPNAfterDisc numeric(18, 0) =0,
	@PPNBMPaid numeric(18, 0)=0 ,
	@isStatus bit = 1,
	@UserId varchar(20)=''
AS
BEGIN
	
	IF @BranchCode=''
	BEGIN
		declare @loopbranch varchar(20)
		declare crBranch  cursor local for
		select branchcode from gnMstCoProfile
		where companycode=@companycode

		open crBranch
		fetch next from crBranch into @loopbranch

		while @@FETCH_STATUS=0
		begin
			exec uspfn_omUpdatePriceList @companycode,@loopbranch,@SupplierCode,@GroupPrice,@SalesModelCode,@SalesModelYear,@EffectiveDate,@RetailPriceIncludePPN,@DiscPriceIncludePPN,@NetSalesIncludePPN,@RetailPriceExcludePPN,@DiscPriceExcludePPN,@NetSalesExcludePPN,@PPNBeforeDisc,@PPNAfterDisc,@PPNBMPaid,@isStatus,@UserId
			fetch next from crBranch into @loopbranch
		end

		close crbranch
		deallocate crbranch
	END
	ELSE
	BEGIN

		INSERT INTO [dbo].[omPriceListBranchesLog]
				([CompanyCode],[BranchCode],[SupplierCode],[GroupPrice],[SalesModelCode],[SalesModelYear]
				,[EffectiveDate],[RetailPriceIncludePPN],[DiscPriceIncludePPN],[NetSalesIncludePPN]
				,[RetailPriceExcludePPN],[DiscPriceExcludePPN],[NetSalesExcludePPN],[PPNBeforeDisc],[PPNAfterDisc]
				,[PPNBMPaid],[isStatus],[LastUpdateBy],[LastUpdateDate])
			VALUES
				(@companycode,@BranchCode,@SupplierCode,@GroupPrice
				,@SalesModelCode,@SalesModelYear,@EffectiveDate,@RetailPriceIncludePPN,@DiscPriceIncludePPN,@NetSalesIncludePPN,@RetailPriceExcludePPN
				,@DiscPriceExcludePPN,@NetSalesExcludePPN,@PPNBeforeDisc,@PPNAfterDisc,@PPNBMPaid,@isStatus,@UserId,getdate()) 

		IF  EXISTS(select * from omPriceListBranches	
		where companycode=@companycode and branchcode=@branchcode
		and suppliercode=@suppliercode and groupprice=@groupprice
		and SalesModelCode=@SalesModelCode and SalesModelYear=@SalesModelYear
		and EffectiveDate = @EffectiveDate)
		BEGIN
			UPDATE [omPriceListBranches] 
			SET 
				RetailPriceIncludePPN=@RetailPriceIncludePPN,
				DiscPriceIncludePPN=@DiscPriceIncludePPN,NetSalesIncludePPN=@NetSalesIncludePPN,
				RetailPriceExcludePPN=@RetailPriceExcludePPN,DiscPriceExcludePPN=@DiscPriceExcludePPN,
				NetSalesExcludePPN=@NetSalesExcludePPN,PPNBeforeDisc=@PPNBeforeDisc,
				PPNAfterDisc=@PPNAfterDisc,PPNBMPaid=@PPNBMPaid,isStatus=@isStatus,
				[LastUpdateBy]=@userid,LastUpdateDate=getdate()
			where companycode=@companycode and branchcode=@branchcode
			and suppliercode=@suppliercode and groupprice=@groupprice
			and SalesModelCode=@SalesModelCode and SalesModelYear=@SalesModelYear
			and EffectiveDate = @EffectiveDate
		END
		ELSE
		BEGIN
			INSERT INTO [dbo].[omPriceListBranches]
				   ([CompanyCode],[BranchCode],[SupplierCode],[GroupPrice],[SalesModelCode],[SalesModelYear]
				   ,[EffectiveDate],[RetailPriceIncludePPN],[DiscPriceIncludePPN],[NetSalesIncludePPN]
				   ,[RetailPriceExcludePPN],[DiscPriceExcludePPN],[NetSalesExcludePPN],[PPNBeforeDisc],[PPNAfterDisc]
				   ,[PPNBMPaid],[isStatus],CreatedBy,[CreatedDate])
			 VALUES
				   (@companycode,@BranchCode,@SupplierCode,@GroupPrice
				   ,@SalesModelCode,@SalesModelYear,@EffectiveDate,@RetailPriceIncludePPN,@DiscPriceIncludePPN,@NetSalesIncludePPN,@RetailPriceExcludePPN
				   ,@DiscPriceExcludePPN,@NetSalesExcludePPN,@PPNBeforeDisc,@PPNAfterDisc,@PPNBMPaid,@isStatus,@UserId,getdate()) 

		END


	END

END
GO
CREATE procedure [dbo].[uspfn_UpdateTraining]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;

	with x as (
		select *
		  from SDMS..HrEmployeeTraining a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrEmployeeTraining (
		   CompanyCode
		 , EmployeeID
		 , TrainingCode
		 , TrainingDate
		 , TrainingSeq
		 , TrainingDuration
		 , PreTest
		 , PreTestAlt
		 , PostTest
		 , PostTestAlt
		 , CreatedBy
		 , CreatedDate
		 , UpdatedBy
		 , UpdatedDate
		 , IsDeleted
		 )
	select CompanyCode = @CompanyCode_B
	     , a.EmployeeID
	     , a.TrainingCode
	     , a.TrainingDate
	     , a.TrainingSeq
	     , a.TrainingDuration
	     , a.PreTest
	     , a.PreTestAlt
	     , a.PostTest
	     , a.PostTestAlt
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdatedBy
	     , a.UpdatedDate
	     , a.IsDeleted
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[uspfn_UpdateEmployeeVehicle]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;
	
	with x as (
		select *
		  from SDMS..HrEmployeeVehicle a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrEmployeeVehicle (
		   CompanyCode
		 , EmployeeID
		 , VehSeq
		 , Type
		 , Brand
		 , Model
		 , PoliceRegNo
		 , CreatedBy
		 , CreatedDate
		 , UpdatedBy
		 , UpdatedDate
		 , IsDeleted
		 )
	select CompanyCode = @CompanyCode_B
	     , a.EmployeeID
	     , a.VehSeq
	     , a.Type
	     , a.Brand
	     , a.Model
	     , a.PoliceRegNo
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdatedBy
	     , a.UpdatedDate
	     , a.IsDeleted
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[uspfn_omSlsBPKBrwDtl]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),
 @RefType varchar(15),
 @BPKNo varchar(15)
)  
AS  
BEGIN  
--exec uspfn_omSlsBPKBrwDtl 6006410,600641001,'CLCD','BSJ/14/000001'
SELECT a.SalesModelCode, a.SalesModelYear, b.SalesModelDesc, 
	           a.ChassisCode, Convert(varchar,a.ChassisNo) as ChassisNo, 
	           a.EngineCode, Convert(varchar,a.EngineNo) as EngineNo, 
	           a.ColourCode, case when c.RefferenceDesc1 is null then '' else c.RefferenceDesc1 end RefferenceDesc1, 
	           a.Remark, a.StatusPDI,
               a.BPKSeq
        FROM   omTrSalesBPKDetail a	   
	           LEFT JOIN
	           omMstModelYear b
	           ON a.CompanyCode = b.CompanyCode
	           AND a.SalesModelCode = b.SalesModelCode      
	           AND a.ChassisCode = b.ChassisCode
               AND a.SalesModelYear = b.SalesModelYear	   
	           LEFT JOIN
	           omMstRefference c
	           ON a.CompanyCode = c.CompanyCode
	           AND a.ColourCode = c.RefferenceCode
	           AND c.RefferenceType = @RefType
       WHERE a.CompanyCode= @CompanyCode 
               AND a.BranchCode= @BranchCode 
               AND a.BPKNo= @BPKNo
       ORDER BY a.ChassisNo ASC
            
end
GO
CREATE procedure [dbo].[uspfn_omGetPriceList]
	@CompanyCode varchar(20)='',
	@BranchCode varchar(20)='',
	@salesmodelcode varchar(32)='',
	@salesmodelyear int=0,
	@Status int=2
AS
SELECT 
       a.[SalesModelCode]
      ,a.[SalesModelYear]
      ,b.[SalesModelDesc]
      ,a.[GroupPrice]
      ,a.[RetailPriceIncludePPN]
      ,a.[DiscPriceIncludePPN]
      ,a.[NetSalesIncludePPN]
      ,a.[RetailPriceExcludePPN]
      ,a.[DiscPriceExcludePPN]
      ,a.[NetSalesExcludePPN]
      ,a.[PPNBeforeDisc]
      ,a.[PPNAfterDisc]
      ,a.[PPNBMPaid]
      ,a.[EffectiveDate]
      ,a.[isStatus]
  FROM [dbo].[omPriceListBranches] a inner join omMstModel b 
  on (a.CompanyCode=b.CompanyCode and a.SalesModelCode=b.SalesModelCode)
where a.companycode=@CompanyCode and a.BranchCode=@BranchCode
and a.SalesModelCode like case when @salesmodelcode='' then '%%' else @salesmodelcode end
and a.SalesModelYear = case when @salesmodelyear=0 then a.SalesModelYear else @salesmodelyear end
and a.isStatus = case when @Status=2 then a.isstatus else @Status end
GO
CREATE procedure [dbo].[uspfn_getTreeMenus]
AS
select * from VW_TREEMENUS
order by menuheader,menuindex
GO
CREATE procedure [dbo].[uspfn_getsplist]
as
declare ms_crs_syscom  CURSOR LOCAL FOR  
select ROUTINE_NAME from information_schema.ROUTINES
where ROUTINE_TYPE='procedure' 
and ROUTINE_NAME not in (Select * from a_sp_list_on_dealer) 
order by ROUTINE_NAME

declare @SyscomText varchar(255), @id bigint, @textsql varchar(MAX), @tmpsql varchar(MAX)

OPEN ms_crs_syscom

FETCH NEXT from ms_crs_syscom into @SyscomText

WHILE @@fetch_status >= 0
begin
	
	select @id=id from sys.sysobjects where name=@SyscomText and xtype not in ('S','U')
	

	declare ms_sql_script  CURSOR LOCAL FOR  
	select text from sys.syscomments where id=@id order by colid

	set @textsql='
if object_id('''+ @SyscomText +''') is not null
	drop procedure ' + @SyscomText + '
GO
'

print @textsql

	open ms_sql_script
	FETCH NEXT from ms_sql_script into @tmpsql
	WHILE @@fetch_status >= 0
	begin
		
		print @tmpsql

		FETCH NEXT from ms_sql_script into @tmpsql

		if  @@fetch_status >= 0
			print '<<GAP>>'
	end
	CLOSE  ms_sql_script
	DEALLOCATE 	ms_sql_script
	
	print '
GO
'

	FETCH NEXT from ms_crs_syscom into @SyscomText
end


CLOSE  ms_crs_syscom
DEALLOCATE 	ms_crs_syscom
GO
CREATE procedure [dbo].[uspfn_omSlsDoLkpExpdtn]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),  
 @Status varchar(1),
 @ProfitCenterCode varchar(3) 
)  
AS  
BEGIN  
--exec uspfn_omSlsDoLkpExpdtn 6006410,600641001,1,100
SELECT 
                    a.SupplierCode, a.Suppliername, (a.address1+' '+a.address2+' '+a.address3+' '+a.address4) as Alamat,
                    b.DiscPct as Diskon, (Case a.Status when 0 then 'Tidak Aktif' else 'Aktif' end) as [Status],
                    (SELECT Lookupvaluename FROM gnmstlookupdtl WHERE codeid='PFCN' 
                     AND lookupvalue = b.ProfitCentercode) as Profit
                FROM 
                    gnMstSupplier a
                LEFT JOIN gnmstSupplierProfitCenter b ON a.CompanyCode= b.CompanyCode
	                AND a.SupplierCode = b.SupplierCode
                LEFT JOIN gnMstCustomer c ON a.SupplierCode = c.customercode
                WHERE 
                    a.CompanyCode           = @CompanyCode
                    and b.BranchCode        = @BranchCode
                    AND a.Status            = @Status
                    AND b.ProfitCenterCode  = @ProfitCenterCode                
                ORDER BY 
                    a.SupplierCode 
end
GO
CREATE procedure [dbo].[uspfn_omSlsDoDtl]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),
 @DONo varchar(15)
)  
AS  
BEGIN  
-- exec uspfn_omSlsDoDtl 6006410,600641001,'DOS/14/000001'
 SELECT a.SalesModelCode, a.SalesModelYear, b.SalesModelDesc, 
	           a.ChassisCode, Convert(varchar,a.ChassisNo) as ChassisNo, 
	           a.EngineCode, Convert(varchar,a.EngineNo) as EngineNo, 
	           a.ColourCode, c.RefferenceDesc1, a.Remark, a.DOSeq
        FROM   omTrSalesDODetail a	   
	           LEFT JOIN
	           omMstModelYear b
	           ON a.CompanyCode = b.CompanyCode
	           AND a.SalesModelCode = b.SalesModelCode
               AND a.SalesModelYear = b.SalesModelYear      
	           AND a.ChassisCode = b.ChassisCode	   
	           LEFT JOIN
	           omMstRefference c
	           ON a.CompanyCode = c.CompanyCode
	           AND a.ColourCode = c.RefferenceCode
	           AND c.RefferenceType = 'COLO'
       WHERE a.CompanyCode= @CompanyCode 
               AND a.BranchCode= @BranchCode 
               AND a.DONo= @DONo
       ORDER BY a.ChassisNo ASC;
END
GO
CREATE procedure [dbo].[uspfn_UpdateEmployeeShift]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;

	with x as (
		select *
		  from SDMS..HrEmployeeShift a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrEmployeeShift (
		   CompanyCode
		 , EmployeeID
		 , AttdDate
		 , ShiftCode
		 , ClockInTime
		 , ClockOutTime
		 , OnDutyTime
		 , OffDutyTime
		 , OnRestTime
		 , OffRestTime
		 , CalcOvertime
		 , ApprOvertime
		 , CreatedBy
		 , CreatedDate
		 , UpdatedBy
		 , UpdatedDate
		 , IsDeleted
		 )
	select CompanyCode = @CompanyCode_B
	     , a.EmployeeID
	     , a.AttdDate
	     , a.ShiftCode
	     , a.ClockInTime
	     , a.ClockOutTime
	     , a.OnDutyTime
	     , a.OffDutyTime
	     , a.OnRestTime
	     , a.OffRestTime
	     , a.CalcOvertime
	     , a.ApprOvertime
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdatedBy
	     , a.UpdatedDate
	     , a.IsDeleted
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[uspfn_UpdateLookupMapping]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;
	
	with x as (
		select *
		  from SDMS..HrLookupMapping a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrLookupMapping (
		   CompanyCode
		 , CodeID
		 , CodeDescription
		 , IsDeleted
		 )
	select CompanyCode = @CompanyCode_B
	     , a.CodeID
	     , a.CodeDescription
	     , a.IsDeleted
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[uspfn_OmFakturPajakDtlOthersSaveDetail]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15), 
 @InvoiceNo varchar(30),
 @ReffType varchar(15)
)  
AS  
BEGIN 
-- exec uspfn_OmFakturPajakDtlAccsSeqSaveDetail 6006410,600641001,''
INSERT INTO OmFakturPajakDetailOthers(CompanyCode, BranchCode, InvoiceNo, SalesModelCode, SalesModelYear, OtherCode, OtherName, Quantity, DPP, PPn, Total)
SELECT a.CompanyCode, a.BranchCode, a.InvoiceNo, a.SalesModelCode, a.SalesModelYear, a.OtherCode, b.RefferenceDesc1 AS OtherName, c.Quantity, a.AfterDiscDPP, a.AfterDiscPPn, a.AfterDiscTotal
FROM omTrSalesInvoiceOthers a
LEFT JOIN omMstRefference b ON b.CompanyCode = a.CompanyCode AND b.RefferenceCode = a.OtherCode AND b.RefferenceType = @ReffType
LEFT JOIN omTrSalesInvoiceModel c ON c.CompanyCode = a.CompanyCode AND c.BranchCode = a.BranchCode AND c.InvoiceNo = a.InvoiceNo AND c.BPKNo = a.BPKNo
AND c.SalesModelCode = a.SalesModelCode AND c.SalesModelYear = a.SalesModelYear
WHERE a.CompanyCode = @CompanyCode AND a.BranchCode = @BranchCode AND a.InvoiceNo = @InvoiceNo
AND a.OtherCode NOT IN(SELECT OtherCode FROM OmFakturPajakDetailOthers WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode
AND InvoiceNo = a.InvoiceNo AND SalesModelCode = a.SalesModelCode AND SalesModelYear = a.SalesModelYear AND OtherCode = a.OtherCode)
           
end
GO
CREATE procedure [dbo].[uspfn_TransferEmployeeFromSimDmsToSFM]
	@CompanyCode varchar(12),
	@EmployeeID varchar(25),
	@UserID varchar(50)
as
begin
	begin try
		drop table #t1;
		drop table #t2;
	end try
	begin catch
	end catch;
	
	select *
	  into #t1
	  from gnMstEmployee a
	 where a.CompanyCode = @CompanyCode
	   and a.EmployeeID = @EmployeeID;


	select * 
	  into #t2
	  from HrEmployeeMutation a
	 where a.CompanyCode = @CompanyCode
	   and a.EmployeeID = @EmployeeID
	   and ( a.IsDeleted = 0 or a.IsDeleted is null )

	if ( select count(*) from #t1 ) > 0
	begin
		select 'Maaf, data karyawan tidak dapat dipindahkan ke SDMS, karena sudah ada data karyawan dengan NIK.';
	end
	else
	begin
		insert into gnMstEmployee ( CompanyCode
								  , BranchCode
								  , EmployeeID
								  , EmployeeName
								  , Address1
								  , Address2
								  , Address3
								  , Address4
								  , PhoneNo
								  , HpNo
								  , FaxNo
								  , ZipNo
								  , JoinDate
								  , ResignDate
								  , GenderCode
								  , BirthPlace
								  , BirthDate
								  , MaritalStatusCode
								  , ReligionCode
								  , BloodCode
								  , IdentityNo
								  , Height
								  , Weight
								  , UniformSize
								  , ShoesSize
								  , FormalEducation
								  , PersonnelStatus
								  , CreatedBy
								  , CreatedDate
								  , LastupdateBy
								  , LastupdateDate
								  , TitleCode
								  )
			select a.CompanyCode
			     , BranchCode = ''
			     , a.EmployeeID
				 , a.EmployeeName
				 , a.Address1
				 , a.Address2
				 , a.Address3
				 , a.Address4
				 , a.Telephone1
				 , a.Handphone1
				 , a.FaxNo
				 , a.ZipCode
				 , a.JoinDate
				 , a.ResignDate
				 , a.Gender
				 , a.BirthPlace
				 , a.BirthDate
				 , a.MaritalStatus
				 , a.Religion
				 , a.BloodCode
				 , a.IdentityNo
				 , a.Height
				 , a.Weight
				 , a.UniformSize
				 , a.ShoesSize
				 , a.FormalEducation
				 , a.PersonnelStatus
				 , @UserID
				 , getdate()
				 , @UserID
				 , getdate()
				 , ''
			  from HrEmployee a
			 where a.CompanyCode = @CompanyCode
			   and a.EmployeeID = @EmployeeID;

		select 'Data karyawan berhasil ditransfer ke SDMS.';
	end

	
end
GO
CREATE procedure [dbo].[uspfn_omSlsDoLkpShipto]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),  
 @ProfitCenterCode varchar(3)
) 
as begin
--exec uspfn_omSlsDoLkpShipto 6006410,600641001,300
SELECT a.CompanyCode
	,a.CustomerCode
	,a.StandardCode
	,a.CustomerName
	,a.CustomerAbbrName
	,a.CustomerGovName
	,a.CustomerType
	,a.CategoryCode
	,a.Address1
	,a.Address2
	,a.Address3
	,a.Address4
	,a.PhoneNo
	,a.HPNo
	,a.FaxNo
	,a.isPKP
	,a.NPWPNo
	,a.NPWPDate
	,a.SKPNo
	,a.SKPDate
	,a.ProvinceCode
	,a.AreaCode
	,a.CityCode
	,a.ZipNo
	,a.Status
	,a.CreatedBy
	,a.CreatedDate
	,a.LastUpdateBy
	,a.LastUpdateDate
	,a.isLocked
	,a.LockingBy
	,a.LockingDate
	,a.Email
	,a.BirthDate
	,a.Spare01
	,a.Spare02
	,a.Spare03
	,a.Spare04
	,a.Spare05
	,a.Gender
	,a.OfficePhoneNo
	,a.KelurahanDesa
	,a.KecamatanDistrik
	,a.KotaKabupaten
	,a.IbuKota
	,a.CustomerStatus
	  FROM gnMstCustomer a 
	INNER JOIN gnMstCustomerProfitCenter b
	  ON a.CompanyCode = b.CompanyCode AND 
		 a.CustomerCode = b.CustomerCode AND
		 b.BranchCode = @BranchCode
	WHERE a.CompanyCode = @CompanyCode AND 
		  b.ProfitCenterCode = @ProfitCenterCode                      
end
GO
CREATE procedure [dbo].[uspfn_GnDailyPosting_branch]
	@CompanyCode varchar(20),
	@BranchCode  varchar(20),
	@DocDate     date
as

set nocount on

declare @DbMD    varchar(50)
declare @SqlQry	 varchar(max)

set @DbMD   = isnull((select top 1 DbMD from GnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode), '')
set @SqlQry = N'
;with x as (
select a.CompanyCode
     , a.BranchCode
	 , a.DocNo
	 , a.DocDate
	 , a.PartNo
	 , a.PartSeq
	 , a.WarehouseCode
	 , a.Qty
	 , a.DiscPct
	 , a.CostPrice
	 , a.RetailPrice
	 , a.TypeOfGoods
	 , a.CompanyMD
	 , a.BranchMD
	 , a.WarehouseMD
	 , a.QtyFlag
	 , a.Status
	 , a.CreatedBy
	 , a.CreatedDate
	 , a.LastUpdateBy
	 , a.LastUpdateDate
	 , IsPosting = 0
	 , PostingDate = getdate()
  from SvSDMovement a
 where 1 = 1
   and CompanyCode = '''+ @CompanyCode + N'''
   and BranchCode = '''+ @BranchCode + N'''
   and convert(date, DocDate) = '''+ convert(varchar, @DocDate, 112) + N'''
)
insert into ' + @DbMD + N'..SvMDMovement (CompanyCode, BranchCode, DocNo, DocDate, PartNo, PartSeq, WarehouseCode, Qty, DiscPct, CostPrice, RetailPrice, TypeOfGoods, CompanyMD, BranchMD, WarehouseMD, QtyFlag, Status, CreatedBy, CreatedDate, LastUpdateBy, LastUpdateDate, IsPosting, PostingDate)
select * from x
 where not exists (
   select top 1 1 from ' + @DbMD + N'..SvMDMovement
    where CompanyCode = x.CompanyCode
	  and BranchCode = x.BranchCode
	  and DocNo = x.DocNo
	  and PartNo = x.PartNo
	  and PartSeq = x.PartSeq
 )';

--print (@SqlQry)
exec (@SqlQry)
GO
-- =============================================
-- Author:		<irfan>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[uspfn_SvTrnUpdateFPJHeader] 
	-- Add the parameters for the stored procedure here
	@CompanyCode as varchar(15),
	@BranchCode as varchar(15),
	@FpjNo as varchar(20),
	@InvNo as varchar(20),
	@UsrID as varchar(25)

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	declare @disc decimal(18,2)
    set @disc = (select sum(discamt) from sptrnsfpjdtl where companycode=@CompanyCode and branchcode=@BranchCode and fpjno=@FpjNo )
	declare @taxPct decimal(5,2),
			@AmountDB decimal(18,0),
			@TaxVal decimal (18,0),
			@TotSalesAmount decimal(18,2),
			@AccNo varchar (35),
			@TotDiscAmt decimal(18,2)

    set @TotSalesAmount = (select TotSalesAmt from sptrnsfpjhdr where companycode=@CompanyCode and branchcode=@BranchCode and fpjno=@FpjNo)

	if exists (select isnull(c.taxpct,0) from sptrnsfpjhdr a
		inner join gnmstcustomerprofitcenter b on b.companycode=a.companycode
			and b.branchcode=a.branchcode
			and b.customercode=a.customercode
			and b.profitcentercode='300'
		inner join gnmsttax c on c.companycode=a.companycode
			and c.taxcode=b.taxcode
		where a.companycode=@CompanyCode and a.branchcode=@BranchCode and a.fpjno=@FpjNo)
		begin
			set @taxPct = (
			select isnull(c.taxpct,0) 
			from sptrnsfpjhdr a
			inner join gnmstcustomerprofitcenter b on b.companycode=a.companycode
			and b.branchcode=a.branchcode
			and b.customercode=a.customercode
            and b.profitcentercode='300'
			inner join gnmsttax c on c.companycode=a.companycode
            and c.taxcode=b.taxcode
			where a.companycode=@CompanyCode and a.branchcode=@BranchCode and a.fpjno=@FpjNo)
		end
	else
	begin
		set @taxPct = 0
	end 

	-- Insert Log
	insert into sptrnsfpjhdrlog 
		select companycode, branchcode, fpjno, invoiceno, customercodebill, totdiscamt, totdppamt, totppnamt,
		totfinalsalesamt, @UsrID, getdate()
		from sptrnsfpjhdr
	where companycode=@CompanyCode and branchcode=@BranchCode and fpjno=@FpjNo

	-- Update Value
	update sptrnsfpjhdr 
	set TotDiscAmt = @disc,
		TotDPPAmt = TotSalesAmt-@disc,
		TotPPNAmt = (TotSalesAmt-@disc)*(@taxpct/100),
		TotFinalSalesAmt = (TotSalesAmt-@disc)+((TotSalesAmt-@disc)*(@taxpct/100)),
		LastUpdateBy = @UsrID,
		LastUpdateDate = getdate()
	where companycode=@CompanyCode and branchcode=@BranchCode and fpjno=@FpjNo

	-- Insert Log
	insert into sptrnsinvoicehdrlog 
	select companycode, branchcode, invoiceno, customercodebill, totdiscamt, totdppamt, totppnamt,
		totfinalsalesamt, @UsrID, getdate()
	from sptrnsinvoicehdr
	where companycode=@CompanyCode and branchcode=@BranchCode and invoiceno=@InvNo

	-- Update Value
	update sptrnsinvoicehdr
	set TotDiscAmt = @disc,
		TotDPPAmt = TotSalesAmt-@disc,
		TotPPNAmt = (TotSalesAmt-@disc)*(@taxpct/100),
		TotFinalSalesAmt = (TotSalesAmt-@disc)+((TotSalesAmt-@disc)*(@taxpct/100)),
		LastUpdateBy = @UsrID,
		LastUpdateDate = getdate()	
	where companycode=@CompanyCode and branchcode=@BranchCode and invoiceno=@InvNo

	--Update ar & gl Interface
	set @TaxVal = isnull((select TotPPNAmt from sptrnsfpjhdr where companycode=@CompanyCode and branchcode=@BranchCode and fpjno = @FpjNo), 0)
	set @AmountDB = (@TotSalesAmount-@disc)+((@TotSalesAmount-@disc)*(@taxpct/100))

	update arInterface set NettAmt = @AmountDB
	where companycode=@CompanyCode and branchcode=@BranchCode and docno = @FpjNo
	update glInterface set AmountDb = @AmountDB
	where companycode=@CompanyCode and branchcode=@BranchCode and docno = @FpjNo and TypeTrans='AR'
	update glInterface set AmountCr = @TotSalesAmount
	where companycode=@CompanyCode and branchcode=@BranchCode and docno = @FpjNo and TypeTrans='SALES'
	update glInterface set AmountCr = @TaxVal
	where companycode=@CompanyCode and branchcode=@BranchCode and docno = @FpjNo and TypeTrans like 'TAX%'

	set @TotDiscAmt = (select totdiscamt from sptrnsfpjhdr WHERE companycode=@CompanyCode and branchcode=@BranchCode and fpjno = @FpjNo)

	if ((select count(*) from glInterface WHERE companycode=@CompanyCode and branchcode=@BranchCode and docno=@FpjNo and typetrans='DISC1') = 0 ) 
		if (@disc > 0 )
			begin
				insert into glInterface
				select TOP 1 companycode, branchcode, docno, 
				(ISNULL((select Count(*) from glInterface where companycode=@CompanyCode and branchcode=@BranchCode and docno=@FpjNo),0)+1)
				seqno, docdate, profitcentercode, accdate, (ISNULL((select discaccno from spMstAccount WHERE companycode=@CompanyCode and branchcode=@BranchCode and TypeOfGoods=(
				select typeofgoods from sptrnsfpjhdr where companycode=@CompanyCode and branchcode=@BranchCode and fpjno=@FpjNo)),0)) accountno, 
				journalcode, typejournal, applyto, @disc amountdb, 0 amountcr,
				'DISC1' typetrans, batchno, batchdate, statusflag, @UsrID createby, getdate() createdate, @UsrID lastupdateby, getdate() lastupdatedate from glInterface
				where companycode=@CompanyCode and branchcode=@BranchCode and docno=@FpjNo
			end
	else
		set @disc = (select totdiscamt from sptrnsfpjhdr WHERE companycode=@CompanyCode and branchcode=@BranchCode and fpjno = @FpjNo)
		if (@disc > 0) 	
			begin
				update glInterface set AmountDb = @disc
				where companycode=@CompanyCode and branchcode=@BranchCode and docno = @FpjNo and TypeTrans='DISC1'
			end
		else
			begin
				delete from glInterface where companycode=@CompanyCode and branchcode=@BranchCode and docno = @FpjNo and TypeTrans='DISC1'
			end	
END
GO
CREATE procedure [dbo].[uspfn_OmFakturPajakDtlSaveDetail]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15), 
 @InvoiceNo varchar(30) 
)  
AS  
BEGIN 
-- exec uspfn_OmFakturPajakDtlSaveDetail 6006410,600641001,''
INSERT INTO OmFakturPajakDetail(CompanyCode, BranchCode, InvoiceNo, BPKNo, SalesModelCode, SalesModelYear, ChassisCode
, ChassisNo, EngineNo, BeforeDiscDPP, DiscExcludePPn, AfterDiscPPn, AfterDiscPPnBM, PPnBMPaid, OthersDPP, OthersPPN)
SELECT a.CompanyCode, a.BranchCode, a.InvoiceNo, a.BPKNo, a.SalesModelCode, a.SalesModelYear, a.ChassisCode, a.ChassisNo
, a.EngineNo, b.BeforeDiscDPP, b.DiscExcludePPn, b.AfterDiscPPn, b.AfterDiscPPnBM, b.PPnBMPaid, b.OthersDPP, b.OthersPPN
FROM omTrSalesInvoiceVin a
LEFT JOIN omTrSalesInvoiceModel b ON b.CompanyCode = a.CompanyCode AND b.BranchCode = a.BranchCode AND b.InvoiceNo = a.InvoiceNo
AND b.BPKNo = a.BPKNo AND b.SalesModelCode = a.SalesModelCode AND b.SalesModelYear = a.SalesModelYear
WHERE a.CompanyCode = @CompanyCode AND a.BranchCode = @BranchCode AND a.InvoiceNo = @InvoiceNo
AND a.ChassisNo NOT IN(SELECT ChassisNo FROM omFakturPajakDetail WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode
AND InvoiceNo = a.InvoiceNo AND SalesModelCode = a.SalesModelCode AND ChassisCode = a.ChassisCode)
            
end
GO
CREATE procedure [dbo].[uspfn_UpdateMasterTraining]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;
	
	with x as (
		select *
		  from SDMS..HrMstTraining a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrMstTraining (
		   CompanyCode
		 , TrainingCode
		 , TrainingName
		 , TrainingDescription
		 , CreatedBy
		 , CreatedDate
		 , UpdatedBy
		 , UpdatedDate
		 , IsDeleted
		 )
	select CompanyCode = @CompanyCode_B
	     , a.TrainingCode
	     , a.TrainingName
	     , a.TrainingDescription
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdatedBy
	     , a.UpdatedDate
	     , a.IsDeleted
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[uspfn_UpdateHRSetting]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;
	
	with x as (
		select *
		  from SDMS..HrSetting a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrSetting (
		   Name
		 , Value
		 , IsDeleted
		 )
	select a.Name
	     , a.Value
	     , a.IsDeleted
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[uspfn_OmGetStockDataTable]
	@CompanyCode varchar(20),
	@DateBegin datetime,
	@DateEnd datetime
AS
--exec uspfn_OmGetStockDataTable '6006406','20120101','20121230'
BEGIN
	SELECT '1'  AS RecordID, b.BPUDate  AS transactionDate, CASE
			  WHEN (SELECT StandardCode FROM GnMstSupplier WHERE CompanyCode = b.CompanyCode AND SupplierCode = b.SupplierCode)  = '2000000'
		   THEN
				 'B1'
			  ELSE
				 'B2'
		   END  AS transactionType, '' AS ReasonCode, a.ChassisCode  AS
		   ChassisCode, a.ChassisNo  AS ChassisNo, a.EngineCode  AS EngineCode, a.EngineNo  AS EngineNo, b.RefferenceDONo AS DONo,

		   (CASE WHEN (SELECT StandardCode FROM GnMstSupplier WHERE CompanyCode = b.CompanyCode AND SupplierCode = b.SupplierCode)  = '2000000'
			THEN '' ELSE b.SupplierCode END)  AS 'Supplier_CustomerCode', (
		   SELECT c.SupplierName
		   FROM gnMstSupplier c
		   WHERE b.SupplierCode = c.SupplierCode)  AS 'Supplier_CustomerName'
	  FROM omMstVehicle a
		LEFT JOIN omTrPurchaseBPUDetail c on a.CompanyCode = c.CompanyCode and a.ChassisCode = c.ChassisCode and a.ChassisNo = c.ChassisNo
		LEFT JOIN omTrPurchaseBPU b on b.CompanyCode = c.CompanyCode and b.BranchCode = c.BranchCode and b.BPUNo = c.BPUNo
	 WHERE a.CompanyCode = b.CompanyCode
		   AND a.BPUNo = b.BPUNo
		   AND CONVERT(VARCHAR, b.BPUDate, 112) BETWEEN @DateBegin AND @DateEnd
		   AND b.CompanyCode = @CompanyCode 

	UNION
	SELECT '1'  AS RecordID, b.BPUDate  AS transactionDate, CASE
			  WHEN (SELECT StandardCode FROM GnMstSupplier WHERE CompanyCode = b.CompanyCode AND SupplierCode = b.SupplierCode)  = '2000000'
		   THEN
				 'B1'
			  ELSE
				 'B2'
		   END  AS transactionType, '' AS ReasonCode, a.ChassisCode  AS
		   ChassisCode, a.ChassisNo  AS ChassisNo, a.EngineCode  AS EngineCode, a.EngineNo  AS EngineNo, b.RefferenceDONo AS DONo,
			(CASE WHEN (SELECT StandardCode FROM GnMstSupplier WHERE CompanyCode = b.CompanyCode AND SupplierCode = b.SupplierCode)  = '2000000'
			THEN '' ELSE b.SupplierCode END) AS 'Supplier_CustomerCode', (
		   SELECT c.SupplierName
		   FROM gnMstSupplier c
		   WHERE b.SupplierCode = c.SupplierCode)  AS 'Supplier_CustomerName'
	  FROM omMstVehicleTemp a, omTrPurchaseBPU b
	 WHERE a.CompanyCode = b.CompanyCode
		   AND a.BPUNo = b.BPUNo AND a.IsActive = 1
		   AND CONVERT(VARCHAR, b.BPUDate, 112) BETWEEN @DateBegin AND @DateEnd
		   AND b.CompanyCode = @CompanyCode 


	UNION
	SELECT '1'  AS RecordID, b.ReturnDate  AS transactionDate, CASE
			  WHEN (SELECT StandardCode FROM GnMstSupplier WHERE CompanyCode = x.CompanyCode AND SupplierCode = x.SupplierCode) = '2000000'
		   THEN
				 'R1'
			  ELSE
				 'R2'
		   END  AS transactionType, '' AS ReasonCode, a.ChassisCode  AS
		   ChassisCode, a.ChassisNo  AS ChassisNo, a.EngineCode  AS EngineCode, a.EngineNo  AS EngineNo, x.RefferenceDoNo AS DONo,
			(CASE WHEN (SELECT StandardCode FROM GnMstSupplier WHERE CompanyCode = b.CompanyCode AND SupplierCode = x.SupplierCode)  = '2000000'
			THEN '' ELSE x.SupplierCode END) AS 'Supplier_CustomerCode', (
		   SELECT c.SupplierName
		   FROM gnMstSupplier c
		   WHERE x.SupplierCode = c.SupplierCode)  AS 'Supplier_CustomerName'
	 FROM omMstVehicle a
	 INNER JOIN omTrPurchaseReturn b ON b.CompanyCode = a.CompanyCode AND b.ReturnNo = a.POReturnNo AND b.HPPNo = a.HPPNo
	 LEFT JOIN omTrPurchaseBPU x ON x.CompanyCode = a.CompanyCode AND x.BranchCode = b.BranchCode AND x.BPUNo = a.BPUNo
	 WHERE CONVERT(VARCHAR, b.ReturnDate, 112) BETWEEN @DateBegin AND @DateEnd
		   AND a.CompanyCode = @CompanyCode 
	UNION
	SELECT '1'  AS RecordID, b.ReturnDate  AS transactionDate, CASE
			  WHEN (SELECT StandardCode FROM GnMstSupplier WHERE CompanyCode = x.CompanyCode AND SupplierCode = x.SupplierCode) = '2000000'
		   THEN
				 'R1'
			  ELSE
				 'R2'
		   END  AS transactionType, '' AS ReasonCode, a.ChassisCode  AS
		   ChassisCode, a.ChassisNo  AS ChassisNo, a.EngineCode  AS EngineCode, a.EngineNo  AS EngineNo, 
		   (CASE WHEN charindex('-', a.RefDoNo) = 0 THEN a.RefDONo ELSE  SUBSTRING(a.RefDoNo, 0, charindex('-', a.RefDoNo) ) END) AS DONo,
			(CASE WHEN (SELECT StandardCode FROM GnMstSupplier WHERE CompanyCode = b.CompanyCode AND SupplierCode = x.SupplierCode)  = '2000000'
			THEN '' ELSE x.SupplierCode END) AS 'Supplier_CustomerCode', (
		   SELECT c.SupplierName
		   FROM gnMstSupplier c
		   WHERE x.SupplierCode = c.SupplierCode)  AS 'Supplier_CustomerName'
	  FROM omMstVehicleTemp a
	 INNER JOIN omTrPurchaseReturn b ON b.CompanyCode = a.CompanyCode AND b.ReturnNo = a.POReturnNo AND b.HPPNo = a.HPPNo
	 LEFT JOIN omTrPurchaseBPU x ON x.CompanyCode = a.CompanyCode AND x.BranchCode = b.BranchCode AND x.BPUNo = a.BPUNo
	 WHERE CONVERT(VARCHAR, b.ReturnDate, 112) BETWEEN @DateBegin AND @DateEnd
		   AND a.CompanyCode = @CompanyCode 

	UNION
	SELECT '1'  AS RecordID, b.SODate  AS transactionDate, 
		   CASE WHEN b.SalesType = '1' THEN 'S1' ELSE 'S2' END AS transactionType, ''  AS ReasonCode, a.ChassisCode  AS
		   ChassisCode, a.ChassisNo  AS ChassisNo, a.EngineCode  AS EngineCode, a.EngineNo  AS EngineNo, x.RefferenceDoNo AS DONo,
		   ''  AS 'Supplier_CustomerCode', (
		   SELECT c.CustomerName
		   FROM gnMstCustomer c
		   WHERE b.CustomerCode = c.CustomerCode)  AS 'Supplier_CustomerName'
	  FROM omMstVehicle a 
	  INNER JOIN omTrSalesSO b
	  ON a.CompanyCode = b.CompanyCode
	  AND a.SONo = b.SONo
	  LEFT JOIN omTrPurchaseBPUDetail y ON a.CompanyCode = y.CompanyCode and a.ChassisCOde = y.ChassisCode AND a.ChassisNo = y.ChassisNo
	  LEFT JOIN omTrPurchaseBPU x ON x.CompanyCode = y.CompanyCode AND x.BranchCode = y.BranchCode AND x.BPUNo = y.BPUNo
	  WHERE CONVERT(VARCHAR, b.SODate, 112) BETWEEN @DateBegin AND @DateEnd  
	  AND b.CompanyCode = @CompanyCode 
	UNION
	SELECT '1'  AS RecordID, b.ReqDate  AS transactionDate, 
	CASE WHEN b.StatusFaktur = '1' AND b.SubDealerCode = b.CompanyCode THEN 'F1' ELSE 
	(CASE WHEN b.StatusFaktur = '1' AND b.SubDealerCode <> b.CompanyCode THEN 'F2' ELSE 
	(CASE WHEN b.StatusFaktur <> '1' AND b.SubDealerCode = b.CompanyCode THEN 'F3' ELSE 'F4' END) END) END
	AS transactionType, (SELECT TOP 1 z.ReasonCode
		   FROM omTrSalesReqDetail z
		   WHERE z.ChassisNo = a.ChassisNo
		   AND z.ChassisCode = a.ChassisCode)  AS ReasonCode, a.ChassisCode  AS
		   ChassisCode, a.ChassisNo  AS ChassisNo, a.EngineCode  AS EngineCode, a.EngineNo  AS EngineNo, x.RefferenceDoNo AS DONo,
			(CASE WHEN b.SubDealerCode  = a.CompanyCode THEN '' ELSE b.SubDealerCode END) AS 'Supplier_CustomerCode'
		   , (
		   SELECT c.CustomerName
		   FROM gnMstCustomer c
		   WHERE b.SubDealerCode = c.CustomerCode)  AS 'Supplier_CustomerName'
	  FROM omMstVehicle a
	  INNER JOIN omTrSalesReqDetail z ON a.CompanyCode = z.CompanyCode AND a.ChassisCode = z.ChassisCode AND a.ChassisNo = z.ChassisNo
	  INNER JOIN omTrSalesReq b	ON b.CompanyCode = z.CompanyCode AND b.BranchCode = z.BranchCode AND b.ReqNo = z.ReqNo
	  LEFT JOIN omTrPurchaseBPUDetail y
		ON y.CompanyCode = a.CompanyCode AND y.ChassisCode = a.ChassisCode AND y.ChassisNo = a.ChassisNo
	  LEFT JOIN omTrPurchaseBPU x 
		ON x.CompanyCode = y.CompanyCode AND x.BranchCode = y.BranchCode AND x.BPUNo = y.BPUNo
	  WHERE CONVERT(VARCHAR, b.ReqDate, 112) BETWEEN @DateBegin AND @DateEnd
	  AND b.CompanyCode = @CompanyCode 
	UNION
	SELECT '1'  AS RecordID, b.ReturnDate  AS transactionDate, 'U1'  AS
		   transactionType, ''  AS ReasonCode, a.ChassisCode  AS
		   ChassisCode, a.ChassisNo  AS ChassisNo, a.EngineCode  AS EngineCode, a.EngineNo  AS EngineNo, x.RefferenceDoNo AS DONo,
		   ''  AS 'Supplier_CustomerCode', (
		   SELECT c.CustomerName
		   FROM gnMstCustomer c
		   WHERE b.CustomerCode = c.CustomerCode)  AS 'Supplier_CustomerName'
	  FROM omMstVehicle a
	  INNER JOIN omTrSalesReturn b
	  ON a.CompanyCode = b.CompanyCode
	  AND a.SOReturnNo = b.ReturnNo
	LEFT JOIN omTrPurchaseBPUDetail y ON y.CompanyCode = a.CompanyCode AND y.ChassisCode = a.ChassisCode AND y.ChassisNo = a.ChassisNo
	LEFT JOIN omTrPurchaseBPU x ON x.CompanyCode = y.CompanyCode AND x.BranchCode = y.BranchCode AND x.BPUNo = y.BPUNo
	  WHERE CONVERT(VARCHAR, b.ReturnDate, 112) BETWEEN @DateBegin AND @DateEnd
	  AND b.CompanyCode = @CompanyCode;
END
GO


CREATE procedure [dbo].[uspfn_UpdateExperience]
as
begin
	declare @CompanyCode_A varchar(17);
	declare @CompanyCode_B varchar(17);

	set @CompanyCode_A = '6006406';
	set @CompanyCode_B = '6006400001';

	if object_id('#temp1') is not null
		drop table #temp1;

	with x as (
		select *
		  from SDMS..HrEmployeeExperience a
	)
	select * into #temp1
	  from (
				select * from x 
		   ) x;

	insert into SBTDB..HrEmployeeExperience (
		   CompanyCode
		 , EmployeeID
		 , ExpSeq
		 , NameOfCompany
		 , JoinDate
		 , ResignDate
		 , ReasonOfResign
		 , LeaderName
		 , LeaderPhone
		 , LeaderHP
		 , CreatedBy
		 , CreatedDate
		 , UpdateBy
		 , UpdateDate
		 , IsDeleted
		 )
	select CompanyCode = @CompanyCode_B
	     , a.EmployeeID
	     , a.ExpSeq
	     , a.NameOfCompany
	     , a.JoinDate
	     , a.ResignDate
	     , a.ReasonOfResign
	     , a.LeaderName
	     , a.LeaderPhone
	     , a.LeaderHP
	     , a.CreatedBy
	     , a.CreatedDate
	     , a.UpdateBy
	     , a.UpdateDate
	     , a.IsDeleted
	  from #temp1 a;

	if object_id('#temp1') is not null
		drop table #temp1;
end
GO
CREATE procedure [dbo].[sp_EdpBpsNoBrowse] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@TypeOfGoods varchar(10),
@ProductType varchar(10),
@CustomerCode varchar(30))


as

SELECT 
 a.BPSFNo
,a.BPSFDate
,a.PickingSlipNo
,a.PickingSlipDate
FROM spTrnSBPSFHdr a
WHERE a.CompanyCode=@CompanyCode
  AND a.BranchCode=@BranchCode
  AND a.CustomerCode=@CustomerCode
  AND a.TypeOfGoods=@TypeOfGoods
GROUP BY  a.BPSFNo, a.BPSFDate, a.PickingSlipNo, a.PickingSlipDate
ORDER BY  a.BPSFNo DESC
GO
CREATE procedure [dbo].[uspfn_SvInqVehicleHistoryWSDS]
	 @CompanyCode varchar(20),
	 @BranchCode  varchar(20),
	 @PoliceRegNo varchar(20) = '',
	 @BasicModel  varchar(20) = '',
	 @CustomerCode varchar(20) = '',
	 @CustomerName varchar(20) = '',
	 @ChassisCode  varchar(20) = '',
	 @ChassisNo    varchar(20) = '',
	 @EngineCode  varchar(20) = '',
	 @EngineNo    varchar(20) = ''

as

select distinct convert(bit, '0') as IsSelect
     , a.PoliceRegNo
     , a.BasicModel
     , '' as TransmissionType
     , ltrim(rtrim(a.ChassisCode)) + ' ' + cast(a.ChassisNo as char) Chassis 
     , a.ChassisCode
     , cast(a.ChassisNo as varchar) as ChassisNo
     , ltrim(rtrim(a.EngineCode)) + ' ' + cast(a.EngineNo as char) Engine
     , '' as ServiceBookNo
     , '' as ColourCode
     , a.CustomerCode + ' - ' + b.CustomerName Customer
     , '' as FakturPolisiDate	
     , '' as LastServiceDate
     , '' as LastServiceOdometer
     , '' as Dealer
     , b.CustomerName
 from svHstVehicle a
 left join gnMstCustomer b with(nolock, nowait)
   on a.CompanyCode = b.CompanyCode
  and a.CustomerCode = b.CustomerCode
   and a.PoliceRegNo like ('%' + @PoliceRegNo + '%')
   and a.BasicModel like ('%' + @BasicModel + '%')
   and a.CustomerCode like ('%' + @CustomerCode + '%')
   and b.CustomerName like ('%' + @CustomerName + '%')
   and a.ChassisCode like ('%' + @ChassisCode + '%')
   and convert(varchar, a.ChassisNo) like ('%' + @ChassisNo + '%')
   and a.EngineCode like ('%' + @EngineCode + '%')
   and convert(varchar, a.EngineNo) like ('%' + @EngineNo  + '%')
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryPerlengkapanOut] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @PerlengkapanType varchar(2),
 @PerlengkapanDateFrom DateTime,
 @PerlengkapanDateTo DateTime,
 @NoPerlengkapanFrom varchar(100),
 @NoPerlengkapanTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT 
a.PerlengkapanNo, a.CustomerCode, b.Address1 + '' '' + b.Address2 + '' '' + b.Address3 + '' '' + b.Address4 as Address,
convert(varchar(20),a.PerlengkapanDate,106) as PerlengkapanDate, 
a.ReferenceNo, 
case when year(a.ReferenceDate) = ''1900'' then '''' else convert(varchar(20),a.ReferenceDate,106) end as ReferenceDate, 
a.SourceDoc, b.CustomerName, CASE ISNULL(PerlengkapanType, ''0'') WHEN ''1'' THEN ''BPK'' WHEN ''2'' THEN ''TRANSFER'' WHEN 3 THEN ''RETURN'' ELSE ''Unknown Type'' END AS PerlengkapanType, 
a.Remark, 
CASE
	WHEN a.Status = 0 THEN ''Open''
	WHEN a.Status = 1 THEN ''Printed''
	WHEN a.Status = 2 THEN ''Closed''
	WHEN a.Status = 3 THEN ''Canceled''
	WHEN a.Status = 9 THEN ''Finished''
	END as Status 
FROM 
	omTrSalesPerlengkapanOut a
LEFT JOIN 
	GnMstCustomer b ON b.CompanyCode = a.CompanyCode AND b.CustomerCode = a.CustomerCode
where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if len(rtrim(@PerlengkapanType)) > 0
   set @pQuery = @pQuery + ' and a.PerlengkapanType = ''' + rtrim(@PerlengkapanType) + ''''

if year(@PerlengkapanDateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.PerlengkapanDate between ''' + convert(varchar(50),@PerlengkapanDateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@PerlengkapanDateTo) + ''''

if len(rtrim(@NoPerlengkapanFrom)) > 0
   set @pQuery = @pQuery + ' and a.PerlengkapanNo between ''' + rtrim(@NoPerlengkapanFrom) + '''' + ' and ' + '''' + rtrim(@NoPerlengkapanTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' + ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.PerlengkapanNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryPerlengkapanIn] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @PerlengkapanType varchar(2),
 @PerlengkapanDateFrom DateTime,
 @PerlengkapanDateTo DateTime,
 @NoReffFrom varchar(100),
 @NoReffTo varchar(100),
 @NoPerlengkapanFrom varchar(100),
 @NoPerlengkapanTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT 
a.PerlengkapanNo, 
convert(varchar(20),a.PerlengkapanDate,106) as PerlengkapanDate,
a.RefferenceNo,
case when year(a.RefferenceDate) = ''1900'' then '''' else convert(varchar(20),a.RefferenceDate,106) end as RefferenceDate,
CASE a.PerlengkapanType WHEN 1 THEN ''BPU'' WHEN 2 THEN ''Transfer'' WHEN 3 THEN ''Return'' ELSE a.PerlengkapanType END AS PerlengkapanType , 
a.SourceDoc, a.Remark, 
CASE ISNULL(a.Status, 0) WHEN 0 THEN ''Open'' WHEN 1 THEN ''Printed'' WHEN 2 THEN ''Deleted'' WHEN 3 THEN ''Canceled'' WHEN 9 THEN ''Finished'' END AS Status
FROM 
OmTrPurchasePerlengkapanIn a
where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if len(rtrim(@PerlengkapanType)) > 0
   set @pQuery = @pQuery + ' and a.PerlengkapanType = ''' + rtrim(@PerlengkapanType) + ''''

if year(@PerlengkapanDateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.PerlengkapanDate between ''' + convert(varchar(50),@PerlengkapanDateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@PerlengkapanDateTo) + ''''

if len(rtrim(@NoReffFrom)) > 0
   set @pQuery = @pQuery + ' and a.RefferenceNo between ''' + rtrim(@NoReffFrom) + '''' + ' and ' + '''' + rtrim(@NoReffTo) + ''''

if len(rtrim(@NoPerlengkapanFrom)) > 0
   set @pQuery = @pQuery + ' and a.PerlengkapanNo between ''' + rtrim(@NoPerlengkapanFrom) + '''' + ' and ' + '''' + rtrim(@NoPerlengkapanTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + ''''+ ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.PerlengkapanNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
CREATE procedure [dbo].[uspfn_spMstItemsInsertFromMD]
	@CompanyCode varchar(15),
	@BranchCode varchar(15),
	@PartNo varchar(20),
	@UserID varchar(15)
AS	

BEGIN

--begin tran
--declare @CompanyCode varchar(15)
--declare @BranchCode varchar(15)
--declare @PartNo varchar(20)
--declare @MovingCode varchar(15)
--declare @UserID varchar(15)

--set @CompanyCode = '6159401000'
--set @BranchCode = '6159401001'
--set @PartNo = '990H0-990AX-009'
--set @MovingCode = '0'
--set @UserID = 'ga'
declare @sql NVARCHAR(max)

--==================================================================================================================================
-- Chek PartNo di table spMstItems MD
--==================================================================================================================================
declare @xPartNo varchar(15)		
set @sql = 'select @xPartNo = PartNo from ' 
	+ dbo.GetDbMD(@CompanyCode, @BranchCode) + '..spMstItems '
	+ ' where CompanyCode = ''' + dbo.GetCompanyMD(@CompanyCode, @BranchCode) + ''' 
		and BranchCode = ''' + dbo.GetBranchMD(@CompanyCode, @BranchCode) + '''
		and PartNo = ''' + @PartNo + ''''
		--and MovingCode = ''0'''
execute sp_executesql @sql, N'@xPartNo varchar(15) OUTPUT', @xPartNo = @xPartNo OUTPUT 

--print @sql;
--select @xPartNo

if (select @xPartNo) is not null begin
	--==================================================================================================================================
	-- INSERT spMstItems
	--==================================================================================================================================
	if not exists (select PartNo from spMstItems  
		where CompanyCode = @CompanyCode 
		and BranchCode = @BranchCode
		and PartNo = @PartNo
		--and MovingCode = 0
		) begin
		
		set @sql = 'select * into #temp from ' 
		+ dbo.GetDbMD(@CompanyCode, @BranchCode) + '..spMstItems '
		+ ' where CompanyCode = ''' + dbo.GetCompanyMD(@CompanyCode, @BranchCode) + ''' 
			and BranchCode = ''' + dbo.GetBranchMD(@CompanyCode, @BranchCode) + '''
			and PartNo = ''' + @PartNo + ''''
			--and MovingCode = ''0'''
		+ CHAR(13) + CHAR(13) +		
		
		--=== IF spMstItems.TypeOfGoods = 0 THEN spMstItems.PurcDiscPct = null
		'insert into spMstItems(
			CompanyCode,BranchCode,PartNo,MovingCode,DemandAverage,BornDate,ABCClass,LastDemandDate,LastPurchaseDate,LastSalesDate
			,BOMInvAmt,BOMInvQty,BOMInvCostPrice,OnOrder,InTransit,OnHand,AllocationSP,AllocationSR,AllocationSL,BackOrderSP
			,BackOrderSR,BackOrderSL,ReservedSP,ReservedSR,ReservedSL,BorrowQty,BorrowedQty,SalesUnit,OrderUnit,OrderPointQty
			,SafetyStockQty,LeadTime,OrderCycle,SafetyStock,Utility1,Utility2,Utility3,Utility4,TypeOfGoods,Status
			,ProductType,PartCategory,CreatedBy,CreatedDate,LastUpdateBy,LastUpdateDate,isLocked,LockingBy,LockingDate,PurcDiscPct
		)
		values(
			''' + @CompanyCode + ''',''' + @BranchCode + ''',''' + @PartNo + ''',''0'',0,GetDate(),(select ABCClass from #temp),
			GetDate(),GetDate(),GetDate()
			,0,0,0,0,0,0,0,0,0,0
			,0,0,0,0,0,0,0,(select isnull(SalesUnit,0) from #temp),(select isnull(OrderUnit,0) from #temp),0
			,(select isnull(SafetyStockQty,0) from #temp),(select isnull(LeadTime,0) from #temp),(select isnull(OrderCycle,0) from #temp),(select isnull(SafetyStock,0) from #temp)
			,(select isnull(Utility1,'''') from #temp),(select isnull(Utility2,'''') from #temp),(select isnull(Utility3,'''') from #temp),(select isnull(Utility4,'''') from #temp)
			,(select isnull(TypeOfGoods,'''') from #temp),1
			,(select isnull(ProductType,'''') from #temp),(select isnull(PartCategory,'''') from #temp),''' + @UserID + ''',GetDate(),''' + @UserID + ''',GetDate(),0,'''',GetDate()
			,(select DiscPct from gnMstSupplierProfitCenter where SupplierCode = ''' + dbo.GetBranchMD(@CompanyCode, @BranchCode) + ''' and ProfitCenterCode = ''300'')
		)'
		
		+ CHAR(13) + 
		'drop table #temp;'
		
		--print (@sql)
		exec (@sql)
	end	

	--==================================================================================================================================
	-- INSERT spMstItemLoc
	--==================================================================================================================================
	if not exists (select PartNo from spMstItemLoc
		where CompanyCode = @CompanyCode 
		and BranchCode = @BranchCode
		and PartNo = @PartNo
		and WarehouseCode = '00') begin
		
		insert into spMstItemLoc(
			CompanyCode,BranchCode,PartNo,WarehouseCode,LocationCode,LocationSub1,LocationSub2,LocationSub3,LocationSub4,LocationSub5
			,LocationSub6,BOMInvAmount,BOMInvQty,BOMInvCostPrice,OnHand,AllocationSP,AllocationSR,AllocationSL,BackOrderSP,BackOrderSR
			,BackOrderSL,ReservedSP,ReservedSR,ReservedSL,Status,CreatedBy,CreatedDate,LastUpdateBy,LastUpdateDate,isLocked
			,LockingBy,LockingDate
		)
		values(
			@CompanyCode,@BranchCode,@PartNo,'00',' - ',' - ',' - ',' - ',' - ',' - '
			,' - ',0,0,0,0,0,0,0,0,0
			,0,0,0,0,'1',@UserID,GetDate(),@UserID,GetDate(),0
			,@UserID,GetDate()
		)
	end

	--==================================================================================================================================
	-- INSERT spMstItemPrice
	--==================================================================================================================================
	if not exists (select PartNo from spMstItemPrice
		where CompanyCode = @CompanyCode 
		and BranchCode = @BranchCode
		and PartNo = @PartNo) begin

		set @sql = 'select * into #temp from ' 
			+ dbo.GetDbMD(@CompanyCode, @BranchCode) + '..spMstItemPrice '
			+ ' where CompanyCode = ''' + dbo.GetCompanyMD(@CompanyCode, @BranchCode) + ''' 
				and BranchCode = ''' + dbo.GetBranchMD(@CompanyCode, @BranchCode) + '''
				and PartNo = ''' + @PartNo + ''''
			+ CHAR(13) + CHAR(13) +		
			
		'insert into spMstItemPrice(
			CompanyCode,BranchCode,PartNo,RetailPrice,RetailPriceInclTax,PurchasePrice,CostPrice,OldRetailPrice,OldPurchasePrice,OldCostPrice
			,LastPurchaseUpdate,LastRetailPriceUpdate,CreatedBy,CreatedDate,LastUpdateBy,LastUpdateDate,isLocked,LockingBy,LockingDate
		)
		values(
			''' + @CompanyCode + ''',''' + @BranchCode + ''',''' + @PartNo + ''',(select isnull(RetailPrice,0) from #temp),(select isnull(RetailPriceInclTax,0) from #temp)
			,(select isnull(PurchasePrice,0) from #temp),(select isnull(CostPrice,0) from #temp),0,0,0
			,GetDate(),GetDate(),''' + @UserID + ''',GetDate(),''' + @UserID + ''',GetDate(),0,'''',GetDate() 
		)'
		
		+ CHAR(13) + CHAR(13) +	
		'drop table #temp';
		
		--print (@sql)
		exec (@sql);
	end

	--==================================================================================================================================
	-- INSERT spMstItemInfo
	--==================================================================================================================================
	if not exists (select PartNo from spMstItemInfo
		where CompanyCode = @CompanyCode 
		and PartNo = @PartNo) begin

		set @sql = 'select * into #temp from ' 
			+ dbo.GetDbMD(@CompanyCode, @BranchCode) + '..spMstItemInfo '
			+ ' where CompanyCode = ''' + dbo.GetCompanyMD(@CompanyCode, @BranchCode) + ''' 
				and PartNo = ''' + @PartNo + ''''
			+ CHAR(13) + CHAR(13) +		
			
		'insert into spMstItemInfo(
			CompanyCode,PartNo,SupplierCode,PartName,IsGenuinePart,DiscPct,SalesUnit,OrderUnit,PurchasePrice,UOMCode
			,Status,ProductType,PartCategory,CreatedBy,CreatedDate,LastUpdateBy,LastUpdateDate,isLocked,LockingBy,LockingDate
		)
		values(
			''' + @CompanyCode + ''',''' + @PartNo + ''',(select isnull(SupplierCode,'''') from #temp),(select isnull(PartName,'''') from #temp),(select isnull(IsGenuinePart,0) from #temp),
			(select isnull(DiscPct,0) from #temp),(select isnull(SalesUnit,0) from #temp),(select isnull(OrderUnit,0) from #temp),(select isnull(PurchasePrice,0) from #temp),(select isnull(UOMCode,'''') from #temp)
			,''1'',(select isnull(ProductType,'''') from #temp),(select isnull(PartCategory,'''') from #temp),''' + @UserID + ''',GetDate(),''' + @UserID + ''',GetDate(),0,''' + @UserID + ''',GetDate() 
		)'
		
		+ CHAR(13) + CHAR(13) +	
		'drop table #temp';
		
		--print (@sql)
		exec (@sql);
	end
end

--rollback tran

END
GO
CREATE procedure [dbo].[uspfn_SvInqFpjHQList]
	@CompanyCode nvarchar(20),
	@BranchCode nvarchar(20)

as

 select distinct
	trnFakturPajak.FPJNo
	, trnFakturPajak.FPJDate
	, (
		(	
			select top 1 InvoiceNo+' ('+substring(BranchCode,len(BranchCode)-1,3)+')'
			from svTrnInvoice 
			where CompanyCode = trnFakturPajak.CompanyCode 
				and FPJNo = trnFakturPajak.FPJNo 
				and isLocked = 1
			order by BranchCode,InvoiceNo
		) 
		+ ' s/d ' + 
		(	
			select top 1 InvoiceNo+' ('+substring(BranchCode,len(BranchCode)-1,3)+')'
			from svTrnInvoice 
			where CompanyCode = trnFakturPajak.CompanyCode 
				and FPJNo = trnFakturPajak.FPJNo 
				and isLocked = 1
			order by InvoiceNo,BranchCode desc
		)
	) as Invoice	
	, (
		select top 1 BranchCode 
		from svTrnInvoice 
		where CompanyCode = trnFakturPajak.CompanyCode  
			and FPJNo = trnFakturPajak.FPJNo 
			and isLocked = 1
		order by BranchCode, InvoiceNo
	) as BranchStart
    , (
		select top 1 BranchCode 
		from svTrnInvoice	
		where CompanyCode = trnFakturPajak.CompanyCode  
			and FPJNo = trnFakturPajak.FPJNo 
			and isLocked = 1
		order by BranchCode desc
	) as BranchEnd
	, (	trnFakturPajak.CustomerCode + ' - ' + 
		(
			select CustomerName 
			from gnMstCustomer
			where CompanyCode = trnFakturPajak.CompanyCode  and CustomerCode = trnFakturPajak.CustomerCode
		)
	) as Customer
	, (	trnFakturPajak.CustomerCodeBill + ' - ' + 
		(
			select CustomerName 
			from gnMstCustomer 
			where CompanyCode = trnFakturPajak.CompanyCode  and CustomerCode = trnFakturPajak.CustomerCodeBill
		)
	) as CustomerBill
from svTrnFakturPajak trnFakturPajak
left join svTrnInvoice trnInvoice on 
	trnInvoice.CompanyCode = trnFakturPajak.CompanyCode 
	--and trnInvoice.BranchCode = trnFakturPajak.BranchCode
	and trnInvoice.FPJNo = trnFakturPajak.FPJNo
	and trnInvoice.IsLocked=1
where 
    trnFakturPajak.CompanyCode = @CompanyCode
	and trnFakturPajak.BranchCode = @BranchCode
	and trnFakturPajak.FPJNo like 'FPH%' 
order by trnFakturPajak.FPJNo desc
GO
CREATE procedure [dbo].[uspfn_omSlsBPKBrowse]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15) 
)  
AS

DECLARE 
	@QRYTemp as varchar(max),
	@CompanyMD as varchar(15),
	@DBMD as varchar(15)
 
set @CompanyMD = (SELECT TOP 1 CompanyMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode) 
set @DBMD = (SELECT Top 1 DbMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode) 
 
BEGIN  
--exec uspfn_omSlsBPKBrowse 6006410,600641001
 SET @QRYTemp = 
 'SELECT Distinct a.BPKNo, a.BPKDate, a.DONo, a.SONo, d.SKPKNo, d.RefferenceNo, a.CustomerCode  , c.CustomerName , a.ShipTo , e.CustomerName as ShipToDsc,
            c.Address1 + '' '' + c.Address2 + '' '' + c.Address3 + '' '' + c.Address4 as Address, a.WareHouseCode, f.LookUpValueName as WrhDsc, a.Expedition,g.SupplierName as ExpeditionDsc,a.Status,
            CASE a.Status WHEN ''0'' THEN ''Open'' WHEN ''1'' THEN ''Printed'' WHEN ''2'' THEN ''Approved'' WHEN ''3'' THEN ''Canceled'' WHEN ''9'' THEN ''Finished'' END as StatusDsc       
            ,b.SalesType, CASE ISNULL(b.SalesType, 0) WHEN 0 THEN ''Wholesales'' ELSE ''Direct'' END AS TypeSales, a.Remark
            FROM omTrSalesBPK a
            LEFT JOIN gnMstCustomerProfitCenter b ON a.CompanyCode = b.CompanyCode AND a.BranchCode = b.BranchCode AND a.CustomerCode = b.CustomerCode AND b.ProfitCenterCode = ''100''
            LEFT JOIN gnMstCustomer c ON a.CompanyCode = c.CompanyCode AND a.CustomerCode = c.CustomerCode
            LEFT JOIN omTrSalesSO d ON a.CompanyCode = d.CompanyCode AND a.BranchCode = d.BranchCode AND a.SONo = d.SONo
            LEFT JOIN gnMstCustomer e ON a.CompanyCode = e.CompanyCode AND a.shipto = e.CustomerCode
            Left join ' + @DBMD + '.dbo.gnMstLookUpDtl f on f.CompanyCode = ''' + @CompanyMD + ''' and a.WarehouseCode=f.LookUpValue and f.CodeID=''MPWH''
            LEFT JOIN gnMstSupplier g ON a.CompanyCode = g.CompanyCode AND a.Expedition = g.SupplierCode
            WHERE a.CompanyCode = ''' + @CompanyCode + '''
               AND a.BranchCode = ''' + @BranchCode + '''                             
            ORDER BY a.BPKNo DESC'

	Exec (@QRYTemp);
End
GO
CREATE procedure [dbo].[uspfn_omSlsBPKLkpDO]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),
 @ProfitCenterCode varchar(15)
 )  
AS 

DECLARE 
	@QRYTemp as varchar(max),
	@CompanyMD as varchar(15),
	@DBMD as varchar(15)
 
set @CompanyMD = (SELECT CompanyMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode) 
set @DBMD = (SELECT DbMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode) 
 
BEGIN  
-- exec uspfn_omSlsBPKLkpDO  6006410,600641001,'100'
SET @QRYTemp =
	'SELECT Distinct a.DONo, a.DODate, a.SONo, g.SKPKNo, g.RefferenceNo, a.CustomerCode ,c.CustomerName, 
            c.Address1 + '' '' + c.Address2 + '' '' + c.Address3 + '' '' + c.Address4 as Address,
            a.ShipTo, c1.CustomerName as ShipName, 
            a.WareHouseCode, f.LookUpValueName as WareHouseName, a.Expedition, e.SupplierName as ExpeditionName,
            b.SalesType,(CASE ISNULL(b.SalesType, 0) WHEN 0 THEN ''WholeSales'' ELSE ''Direct'' END) AS SalesTypeDsc, a.Remark
            FROM omTrSalesDO a
            LEFT JOIN gnMstCustomerProfitCenter b ON b.CompanyCode = a.CompanyCode AND b.BranchCode = a.BranchCode AND b.CustomerCode = a.CustomerCode
			LEFT JOIN gnMstCustomer c ON c.CompanyCode = a.CompanyCode AND c.CustomerCode = a.CustomerCode
            LEFT JOIN gnMstCustomer c1 ON c1.CompanyCode = a.CompanyCode AND c1.CustomerCode = a.ShipTo
			LEFT JOIN  omTrSalesDODetail d ON d.CompanyCode = a.CompanyCode AND d.BranchCode = a.BranchCode AND d.DoNo = a.DoNo
			LEFT JOIN gnMstSupplier e ON e.CompanyCode = a.CompanyCode AND e.SupplierCode = a.Expedition 
			LEFT JOIN ' + @DBMD + '.dbo.gnMstLookUpDtl f ON f.CompanyCode = ''' + @CompanyMD + ''' AND f.LookUpValue = a.WareHouseCode and f.CodeID =''MPWH''
            LEFT JOIN omTrSalesSO g ON a.CompanyCode = g.CompanyCode AND a.BranchCode = g.BranchCode AND a.SONo = g.SONo            
            WHERE a.Status = ''2''
            and d.StatusBPK <> ''1''  
            AND a.CompanyCode = ''' + @CompanyCode + '''
            AND b.BranchCode = ''' + @BranchCode + '''
			AND b.ProfitCenterCode = ''' + @ProfitCenterCode + '''                   
            ORDER BY a.DODate DESC'

	EXEC (@QRYTemp);
END
GO
CREATE procedure [dbo].[uspfn_TaxRecalculatePPN]
	@CompanyCode nvarchar(15),
	@BranchCode nvarchar(15),
	@ProductType nvarchar(2),
	@PeriodYear int,
	@PeriodMonth int,
	@ProfitCenter nvarchar(15),
	@DocumentType nvarchar(2)

  as
  begin

update gnTaxPPN
set DPPStd=	(
            select 
                isnull(sum(DPPAmt),0) 
            from 
                gnTaxIn
            where
                CompanyCode= @CompanyCode and BranchCode= @BranchCode
                and ProductType= @ProductType and PeriodYear= @PeriodYear
                and PeriodMonth= @PeriodMonth and ProfitCenter= @ProfitCenter
                and DocumentType= @DocumentType and IsPKP= 1
        )
,DPPSdh= (
            select 
                isnull(sum(DPPAmt),0) 
            from 
                gnTaxIn
            where
                CompanyCode= @CompanyCode and BranchCode= @BranchCode
                and ProductType= @ProductType and PeriodYear= @PeriodYear
                and PeriodMonth= @PeriodMonth and ProfitCenter= @ProfitCenter
                and DocumentType= @DocumentType and IsPKP= 0
        )
,PPNStd= (
            select 
                isnull(sum(PPNAmt),0) 
            from 
                gnTaxIn
            where
                CompanyCode= @CompanyCode and BranchCode= @BranchCode
                and ProductType= @ProductType and PeriodYear= @PeriodYear
                and PeriodMonth= @PeriodMonth and ProfitCenter= @ProfitCenter
                and DocumentType= @DocumentType and IsPKP= 1
        )
,PPNSdh= (
            select 
                isnull(sum(PPNAmt),0) 
            from 
                gnTaxIn
            where
                CompanyCode= @CompanyCode and BranchCode= @BranchCode
                and ProductType= @ProductType and PeriodYear= @PeriodYear
                and PeriodMonth= @PeriodMonth and ProfitCenter= @ProfitCenter
                and DocumentType= @DocumentType and IsPKP= 0
        )
where
CompanyCode= @CompanyCode and BranchCode= @BranchCode
and ProductType= @ProductType and PeriodYear= @PeriodYear
and PeriodMonth= @PeriodMonth and ProfitCenter= @ProfitCenter
and TaxType= case when @DocumentType= 'F' then '3' else '4' end
end
GO
CREATE PROCEDURE [dbo].[usprpt_GlRpRgs002_Temp] 
(
	@CompanyCode  varchar(15),
	@BranchCode   varchar(15),
	@FiscalYear   varchar(15),
	@Status varchar(15),
	@DocSource char(2),
	@PeriodeNum01 varchar(15),
	@PeriodeNum02 varchar(15),
	@AccComp01 varchar(3),
	@AccComp02 varchar(3),
	@AccBranch01 varchar(3),
	@AccBranch02 varchar(3),
	@AccCostCenter01  varchar(3),
	@AccCostCenter02  varchar(3),
	@AccProdType01 varchar(5),
	@AccProdType02 varchar(5),
	@AccNatural01 varchar(6),
	@AccNatural02 varchar(6),
	@AccInterComp01 varchar(3),
	@AccInterComp02 varchar(3),	
	@AccFutureUse01 varchar(3),
	@AccFutureUse02 varchar(3),
	@Trx char(1),
	@ReportType   varchar(35)
)
AS
BEGIN
		select (row_number() over (order by AccountNo, JournalNo)) as RecNo, * into #t1 from (
		select a.CompanyCode
			 , a.BranchCode
			 , a.FiscalYear
			 , a.Status
			 , b.JournalNo
			 , a.JournalDate
			 , case @ReportType when 'REKAP' then substring(b.AccountNo,19,6) else b.AccountNo end AccountNo
			 , b.AmountDB
			 , b.AmountCr
			 , a.DocSource
			 , case @ReportType when 'REKAP' then ISNULL(d.Description, '') else ISNULL(c.Description, '') end AccDescription
			 , a.ReffNo
			 , b.Description
			 , CASE ISNULL(a.status, 0) WHEN 0 THEN 'UNPOSTED' WHEN 1 THEN 'UNPOSTED' WHEN 2 THEN 'POSTED' ELSE '' END AS pStatus
		  from glJournal a
		  inner join glJournalDtl b
			on 1 = 1
		   and b.CompanyCode = a.CompanyCode
		   and b.BranchCode  = a.BranchCode
		   and b.FiscalYear  = a.FiscalYear
		   and b.JournalNo   = a.JournalNo
		  LEFT JOIN gnMstAccount c ON c.CompanyCode = a.CompanyCode AND c.BranchCode = a.BranchCode AND c.AccountNo = b.AccountNo
		  LEFT JOIN gnMstSegmentAcc d ON a.CompanyCode = d.CompanyCode
		  AND a.BranchCode = d.BranchCode AND c.NaturalAccount = d.SegAccNo
		 where 1 = 1
		   and a.CompanyCode = @CompanyCode
		   and a.BranchCode  = @BranchCode
		   and a.FiscalYear  = @FiscalYear
		   and a.PeriodeNum between @PeriodeNum01 and @PeriodeNum01
		   and a.DocSource = (case when @DocSource = '' then a.DocSource else @DocSource end)
		   and (a.Status = (case @Status when '0' then a.Status when '1' then '2' when '2' then '0' end) 
				  or  a.Status = (case @Status when '0' then a.Status when '1' then '2' when '2' then '1' end))
		   and ((case when @AccComp01 = '' then substring(b.AccountNo,1,3) end) <> ''
			      or (case when @AccComp01 <> '' then substring(b.AccountNo,1,3) end) between @AccComp01 AND @AccComp02)
		   and ((case when @AccBranch01 = '' then substring(b.AccountNo,5,3) end) <> ''
			      or (case when @AccBranch01 <> '' then substring(b.AccountNo,5,3) end) between @AccBranch01 AND @AccBranch02)
		   and ((case when @AccCostCenter01 = '' then substring(b.AccountNo,9,3) end) <> ''
			      or (case when @AccCostCenter01 <> '' then substring(b.AccountNo,9,3) end) between @AccCostCenter01 AND @AccCostCenter02)
		   and ((case when @AccProdType01 = '' then substring(b.AccountNo,13,5) end) <> ''
			      or (case when @AccProdType01 <> '' then substring(b.AccountNo,13,5) end) between @AccProdType01 AND @AccProdType02)
		   and ((case when @AccNatural01 = '' then substring(b.AccountNo,19,6) end) <> '' 
				  or (case when @AccNatural01 <> '' then (case @ReportType when 'REKAP' then substring(b.AccountNo,19,6) else substring(b.AccountNo,19,6) end) end)
                 between @AccNatural01 and @AccNatural02)
		   and ((case when @AccInterComp01 = '' then substring(b.AccountNo,26,3) end) <> ''
			      or (case when @AccInterComp01 <> '' then substring(b.AccountNo,26,3) end) between @AccInterComp01 AND @AccInterComp02)
		   and ((case when @AccFutureUse01 = '' then substring(b.AccountNo,30,3) end) <> ''
			      or (case when @AccFutureUse01 <> '' then substring(b.AccountNo,30,3) end) between @AccFutureUse01 AND @AccFutureUse02)
		union all
		select a.CompanyCode
			 , a.BranchCode
			 , a.FiscalYear
			 , a.Status
			 , '' JournalNo
			 , '19000101' as JournalDate
			 , case @ReportType when 'REKAP' then substring(a.AccountNo,19,6) else a.AccountNo end AccountNo
			 , 0 as AmountDB
			 , 0 as AmountCr
			 , '' as DocSource
			 , case @ReportType when 'REKAP' then ISNULL(d.Description, '') else ISNULL(c.Description, '') end AccDescription
			 , '' as ReffNo
			 , '' as Description
			 , CASE ISNULL(a.status, 0) WHEN 0 THEN 'NEW' WHEN 1 THEN 'Balance' WHEN 2 THEN 'Posting' WHEN 3 THEN 'Void' END AS pStatus
		  from glTrAccBalance a
		  LEFT JOIN gnMstAccount c ON c.CompanyCode = a.CompanyCode AND c.BranchCode = a.BranchCode AND c.AccountNo = a.AccountNo
		  LEFT JOIN gnMstSegmentAcc d ON a.CompanyCode = d.CompanyCode
		  AND a.BranchCode = d.BranchCode AND c.NaturalAccount = d.SegAccNo
		 where 1 = 1
		   and a.CompanyCode = @CompanyCode
		   and a.BranchCode  = @BranchCode
		   and a.FiscalYear  = @FiscalYear
		   and a.PeriodeNum between @PeriodeNum01 and @PeriodeNum01
		   and (a.Status = (case @Status when '0' then a.Status when '1' then '2' when '2' then '0' end) 
				  or  a.Status = (case @Status when '0' then a.Status when '1' then '2' when '2' then '1' end))
		   and ((case when @AccComp01 = '' then substring(a.AccountNo,1,3) end) <> ''
			      or (case when @AccComp01 <> '' then substring(a.AccountNo,1,3) end) between @AccComp01 AND @AccComp02)
		   and ((case when @AccBranch01 = '' then substring(a.AccountNo,5,3) end) <> ''
			      or (case when @AccBranch01 <> '' then substring(a.AccountNo,5,3) end) between @AccBranch01 AND @AccBranch02)
		   and ((case when @AccCostCenter01 = '' then substring(a.AccountNo,9,3) end) <> ''
			      or (case when @AccCostCenter01 <> '' then substring(a.AccountNo,9,3) end) between @AccCostCenter01 AND @AccCostCenter02)
		   and ((case when @AccProdType01 = '' then substring(a.AccountNo,13,5) end) <> ''
			      or (case when @AccProdType01 <> '' then substring(a.AccountNo,13,5) end) between @AccProdType01 AND @AccProdType02)
		   and ((case when @AccNatural01 = '' then substring(a.AccountNo,19,6) end) <> '' 
				  or (case when @AccNatural01 <> '' then (case @ReportType when 'REKAP' then substring(a.AccountNo,19,6) else substring(a.AccountNo,19,6) end) end)
                 between @AccNatural01 and @AccNatural02)
		   and ((case when @AccInterComp01 = '' then substring(a.AccountNo,26,3) end) <> ''
			      or (case when @AccInterComp01 <> '' then substring(a.AccountNo,26,3) end) between @AccInterComp01 AND @AccInterComp02)
		   and ((case when @AccFutureUse01 = '' then substring(a.AccountNo,30,3) end) <> ''
			      or (case when @AccFutureUse01 <> '' then substring(a.AccountNo,30,3) end) between @AccFutureUse01 AND @AccFutureUse02)
		) #t1

		select * into #t2 from (
		select RecNo
			 , CompanyCode
			 , BranchCode
			 , FiscalYear
			 , Status
			 , JournalNo
			 , JournalDate
			 , AccountNo
			 , BegBalance = isnull((
				select sum(isnull(BeginBalance, 0))
				  from GlTrAccBalance 
				 where CompanyCode = a.CompanyCode
				   and BranchCode  = a.BranchCode
				   and FiscalYear  = a.FiscalYear
   		           and (case @ReportType when 'REKAP' then substring(AccountNo,19,6) else AccountNo end)
                          = a.AccountNo
				   and PeriodeNum between @PeriodeNum01 and @PeriodeNum01
				),0)
			 , AmountDB, AmountCr , DocSource, AccDescription
			 , ReffNo
			 , Description
			 , pStatus
			 , EndBalance  = convert(money, 0)
			 , ReportGroup = convert(varchar(50), '')
			 , IsLastGroup = convert(bit, 0)
		  from #t1 a
		)#t2

		declare @num int, @max int, @bal money, @acc varchar(50)
		set @num = 0
		set @max = isnull((select top 1 RecNo from #t2 order by RecNo desc), 0)
		set @bal = 0
		set @acc = ''

		while (@num < @max)
		begin
			set @num = @num + 1
			if (@acc <> isnull((select AccountNo from #t2 where RecNo = @num), ''))
			begin
				set @acc = isnull((select AccountNo from #t2 where RecNo = @num), '')
				set @bal = isnull((select BegBalance from #t2 where RecNo = @num), 0)

				if (@num > 1) update #t2 set IsLastGroup = 1 where RecNo = (@num - 1)
			end
			set @bal = @bal + isnull((select (AmountDb - AmountCr) from #t2 where RecNo = @num), 0)
			update #t2 set EndBalance = @bal where RecNo = @num
		end
		update #t2 set IsLastGroup = 1 where RecNo = @Max

		IF  @Trx = '0'
		BEGIN
			select RecNo
				 , CompanyCode
				 , BranchCode
				 , FiscalYear
				 , Status
				 , JournalNo as DocNo
				 , JournalDate as DocDate
				 , AccountNo
				 , BegBalance as SaldoAwal
				 , AmountDB
				 , AmountCr
				 , DocSource
				 , AccDescription
				 , ReffNo
			     , Description
			     , pStatus
				 , EndBalance as Saldo
				 , ReportGroup
				 , IsLastGroup
				 , SaldoTotal = (select sum(EndBalance) from #t2 where IsLastGroup = 1)
			  from #t2
			  where JournalDate <> '19000101'
		 END
		 ELSE 
		 BEGIN
		 	 select RecNo
			 , CompanyCode
			 , BranchCode
			 , FiscalYear
			 , Status
			 , JournalNo as DocNo
			 , JournalDate as DocDate
			 , AccountNo
			 , BegBalance as SaldoAwal
			 , AmountDB
			 , AmountCr
			 , DocSource
			 , AccDescription
			 , ReffNo
			 , Description
			 , pStatus
			 , EndBalance as Saldo
			 , ReportGroup
			 , IsLastGroup
			 , SaldoTotal = (select sum(EndBalance) from #t2 where IsLastGroup = 1)
		  from #t2
		 END

		drop table #t1
		drop table #t2
end
GO
CREATE procedure [dbo].[uspfn_SvTrnCustVehicle]
	@CompanyCode varchar(15),
	@BranchCode varchar(15),
	@ChassisCode varchar(15),
	@ChassisNo varchar (15),
	@TransPeriod DateTime
as  

select
    a.PoliceRegNo
   ,a.ServiceBookNo
   ,a.BasicModel
   ,a.TransmissionType
   ,a.ChassisCode
   ,a.ChassisNo
   ,a.EngineCode
   ,a.EngineNo
   ,a.ColourCode ColorCode
   ,rtrim(rtrim(a.ColourCode) +
    case isnull(f.RefferenceDesc2,'') when '' then '' else ' - ' end +
    isnull(f.RefferenceDesc2,'')) as ColorCodeDesc
   ,b.CustomerCode CustCode
   ,b.CustomerName CustName
   ,b.Address1 CustAddr1
   ,b.Address2 CustAddr2
   ,b.Address3 CustAddr3
   ,b.Address4 CustAddr4
   ,b.CityCode CustCityCode
   ,g.LaborDiscPct
   ,g.PartDiscPct
   ,g.MaterialDiscPct
   ,e.LookupValueName CustCityName
   ,b.PhoneNo
   ,b.FaxNo
   ,b.HPNo
   -- Contract No
   ,isnull(c.ContractNo,'') ContractNo
   ,case isnull(c.ContractNo,'') when '' then '' else c.EndPeriod end ContractEndPeriod
   ,c.IsActive ContractStatus
   ,case isnull(c.ContractNo,'')
      when '' then ''
      else (case c.IsActive when 1 then 'Aktif' else 'Tidak Aktif' end)
    end ContractStatusDesc
   -- Club Code
   ,d.ClubCode
   ,case isnull(d.ClubCode,'') when '' then '' else a.ClubDateFinish end ClubEndPeriod
   ,d.IsActive ClubStatus
   ,case isnull(d.ClubCode,'')
      when '' then ''
      else (case d.IsActive when 1 then 'Aktif' else 'Tidak Aktif' end)
    end ClubStatusDesc
   ,isnull(i.TaxCode,'') TaxCode
   ,isnull(j.TaxPct,0) TaxPct
  from svMstCustomerVehicle a with (nowait,nolock)
  left join gnMstCustomer b with (nowait,nolock)
    on b.CompanyCode = a.CompanyCode
   and b.CustomerCode = a.CustomerCode
  left join svMstContract c with (nowait,nolock)
    on c.IsActive = 1
   and c.CompanyCode = a.CompanyCode
   and c.ContractNo = a.ContractNo
   and c.BeginPeriod <= @TransPeriod
  left join svMstClub d with (nowait,nolock)
    on d.IsActive = 1
   and d.CompanyCode = a.CompanyCode
   and d.ClubCode = a.ClubCode
  left join gnMstLookupDtl e with (nowait,nolock)
    on e.CompanyCode = a.CompanyCode
   and e.CodeID = 'CITY'
   and e.LookUpValue = b.CityCode
  left join omMstRefference f with (nowait,nolock)
    on f.CompanyCode = a.CompanyCode
   and f.RefferenceCode = 'COLO'
   and f.RefferenceCode = a.ColourCode
  left join gnMstCustomerProfitCenter g with (nowait,nolock)
    on g.CompanyCode = a.CompanyCode
   and g.BranchCode = @BranchCode
   and g.CustomerCode = a.CustomerCode
   and g.ProfitCenterCode = '200'
  left join gnMstCustomerProfitCenter i with (nowait,nolock)
    on i.CompanyCode = a.CompanyCode
   and i.BranchCode = @BranchCode
   and i.CustomerCode = a.CustomerCode
   and i.ProfitCenterCode = '200'
  left join gnMstTax j with (nowait,nolock)
    on j.CompanyCode = a.CompanyCode
   and j.TaxCode = i.TaxCode
 where 1 = 1
   and a.CompanyCode = @CompanyCode
   and a.ChassisCode = @ChassisCode
   and a.ChassisNo = @ChassisNo
   and a.ClubDateStart <= @TransPeriod
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryPurchaseOrder] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @PODateFrom DateTime,
 @PODateTo DateTime,
 @refNoFrom varchar(100),
 @refNoTo varchar(100),
 @PONoFrom varchar(100),
 @PONoTo varchar(100),
 @supplierCodeFrom varchar(100),
 @supplierCodeTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'
SELECT 
a.PONo, 
 case Year(a.PODate) when (1900) then null else convert(varchar(20),a.PODate,106) end as PODate, 
a.RefferenceNo, 
	case Year(a.RefferenceDate) when (1900) then null else convert(varchar(20),a.RefferenceDate,106) end as RefferenceDate, 
a.SupplierCode, ( SELECT sup.SupplierName FROM gnMstSupplier sup 
WHERE sup.SupplierCode = a.SupplierCode AND a.CompanyCode = sup.CompanyCode) AS SupplierName, 
a.BillTo, a.ShipTo, a.Remark, 
CASE WHEN a.Status = 0 THEN ''Open''
WHEN a.Status = 1 THEN ''Printed''
WHEN a.Status = 2 THEN ''Approved''
WHEN a.Status = 3 THEN ''Canceled''
WHEN a.Status = 9 THEN ''Finished''
END  AS Status
FROM 
omTrPurchasePO a
where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if year(@PODateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.PODate between ''' + convert(varchar(50),@PODateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@PODateTo) + ''''

if len(rtrim(@supplierCodeFrom)) > 0
   set @pQuery = @pQuery + ' and a.SupplierCode between ''' + rtrim(@supplierCodeFrom) + '''' + ' and ' + '''' + rtrim(@supplierCodeTo) + ''''

if len(rtrim(@refNoFrom)) > 0
   set @pQuery = @pQuery + ' and a.RefferenceNo between ''' + rtrim(@refNoFrom) + '''' + ' and ' + '''' + rtrim(@refNoTo) + ''''

if len(rtrim(@PONoFrom)) > 0
   set @pQuery = @pQuery + ' and a.PONo between ''' + rtrim(@PONoFrom) + '''' + ' and ' + '''' + rtrim(@PONoTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' + ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.PONo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryKaroseri] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @KaroseriDateFrom DateTime,
 @KaroseriDateTo DateTime,
 @SalesModelCodeOldFrom varchar(100),
 @SalesModelCodeOldTo varchar(100),
 @SalesModelYearFrom varchar(100),
 @SalesModelYearTo varchar(100),
 @NoSPKKaroseriFrom varchar(100),
 @NoSPKKaroseriTo varchar(100),
 @SupplierCodeFrom varchar(100),
 @SupplierCodeTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT 
a.KaroseriSPKNo, 
convert(varchar(20),a.KaroseriSPKDate,106) as KaroseriSPKDate, 
a.RefferenceNo, 
case when year(a.RefferenceDate) = ''1900'' then '''' else convert(varchar(20),a.RefferenceDate,106) end as RefferenceDate, 
a.SupplierCode,b.SupplierName, a.SalesModelCodeOld, a.SalesModelYear, a.SalesModelCodeNew, 
a.Quantity, a.DPPMaterial, a.DPPFee, a.DPPOthers, a.PPn, a.Total, a.DurationDays, 
a.Remark, CASE ISNULL(a.Status, 0) WHEN 0 THEN ''Open'' WHEN 1 THEN ''Printed'' WHEN 2 THEN ''Approved'' WHEN 3 THEN ''Canceled'' END AS Status        
FROM 
OmTrPurchaseKaroseri a
LEFT JOIN 
gnMstSupplier b 
ON a.CompanyCode = b.CompanyCode 
AND a.SupplierCode =  b.SupplierCode
Where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if year(@KaroseriDateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.KaroseriSPKDate between ''' + convert(varchar(50),@KaroseriDateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@KaroseriDateTo) + ''''

if len(rtrim(@SalesModelCodeOldFrom)) > 0
   set @pQuery = @pQuery + ' and a.SalesModelCodeOld between ''' + rtrim(@SalesModelCodeOldFrom) + '''' + ' and ' + '''' + rtrim(@SalesModelCodeOldFrom) + ''''

if len(rtrim(@SalesModelYearFrom)) > 0
   set @pQuery = @pQuery + ' and a.SalesModelYear between ''' + rtrim(@SalesModelYearFrom) + '''' + ' and ' + '''' + rtrim(@SalesModelYearTo) + ''''

if len(rtrim(@NoSPKKaroseriFrom)) > 0
   set @pQuery = @pQuery + ' and a.KaroseriSPKNo between ''' + rtrim(@NoSPKKaroseriFrom) + '''' + ' and ' + '''' + rtrim(@NoSPKKaroseriTo) + ''''

if len(rtrim(@SupplierCodeFrom)) > 0
   set @pQuery = @pQuery + ' and a.SupplierCode between ''' + rtrim(@SupplierCodeFrom) + '''' + ' and ' + '''' + rtrim(@SupplierCodeTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + ''''+ ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.KaroseriSPKNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
CREATE procedure [dbo].[uspfn_omSlsBPKLkpMdlYear]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),  
 @DONo varchar(15),
 @SalesModelCode varchar(20)
)  
AS  
begin
	SELECT DISTINCT a.*
FROM omMstModelYear a
INNER JOIN OmTrSalesDODetail b
ON b.CompanyCode = a.CompanyCode
AND b.SalesModelCode = a.SalesModelCode
AND b.salesModelYear = a.SalesModelYear
WHERE a.CompanyCode = @CompanyCode
AND b.BranchCode = @BranchCode
AND a.Status = '1'
AND b.StatusBPK = '0'
AND b.DONo = @DONo
AND b.SalesModelCode = @SalesModelCode					 
end
GO
CREATE procedure [dbo].[uspfn_spGetSpTrnSBPSFDtl]   
@CompanyCode varchar(15), @BranchCode varchar(15), @BPSFNo varchar(15)  
as  
select PartNo, PartNoOriginal, DocNo, DocDate, ReferenceNo, QtyBill from spTrnSBPSFDtl  
where CompanyCode = @CompanyCode and BranchCode = @BranchCode and BPSFNo = @BPSFNo
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE procedure [dbo].[uspfn_spGetEmployeeBranchs]
	@CompanyCode varchar(15), 
	@BranchCode varchar(15)
AS
BEGIN
	 SELECT EmployeeID, EmployeeName
	FROM gnMstEmployee 
	WHERE CompanyCode =  @CompanyCode 
	AND BranchCode = @BranchCode
	AND TitleCode IN  ('7','58')
	AND PersonnelStatus = '1'
	ORDER BY EmployeeName ASC
END
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryInvoice] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @InvDateFrom DateTime,
 @InvDateTo DateTime,
 @NoSOFrom varchar(100),
 @NoSOTo varchar(100),
 @CustomerFrom varchar(100),
 @CustomerTo varchar(100),
 @NoInvFrom varchar(100),
 @NoInvTo varchar(100),
 @NoSKPKFrom varchar(100),
 @NoSKPKTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT 
a.InvoiceNo, a.CustomerCode, b.Address1 + '' '' + b.Address2 + '' '' + b.Address3 + '' '' + b.Address4 as Address,
convert(varchar(20),a.InvoiceDate,106) as InvoiceDate, 
case pso.SalesType when ''0'' then ''W'' when ''1'' then ''D'' end as SalesType,
a.SONo, b.CustomerName, c.CustomerName AS BillTo, a.FakturPajakNo, isnull(pdn.DNNo,'''') as DNNo,
case when year(a.FakturPajakDate) = ''1900'' then '''' else convert(varchar(20),a.FakturPajakDate,106) end as FakturPajakDate, 
case when year(a.DueDate) = ''1900'' then '''' else convert(varchar(20),a.DueDate,106) end as DueDate, a.Remark, 
pso.SKPKNo, convert(varchar(20),pso.SODate,106) as SODate, pdo.DONo,convert(varchar(20),pdo.DODate,106) as DODate, pbpk.BPKNo,
convert(varchar(20),pbpk.BPKDate,106) as BPKDate, pso.RefferenceNo,
CASE
	WHEN a.Status = 0 THEN ''Open''
	WHEN a.Status = 1 THEN ''Printed''
	WHEN a.Status = 2 THEN ''Approved''
	WHEN a.Status = 3 THEN ''Deleted''
	WHEN a.Status = 9 THEN ''Finished''
	END as Status 
FROM omTrSalesInvoice a
LEFT JOIN GnMstCustomer b ON b.CompanyCode = a.CompanyCode AND b.CustomerCode = a.CustomerCode
LEFT JOIN GnMstCustomer c ON c.CompanyCode = a.CompanyCode AND c.CustomerCode = a.BillTo
LEFT JOIN omTrSalesSO pso ON a.CompanyCode = pso.CompanyCode AND a.BranchCode = pso.BranchCode AND a.SONo = pso.SONo
LEFT JOIN omTrSalesDO pdo ON a.CompanyCode = pdo.CompanyCode AND a.BranchCode = pdo.BranchCode AND a.SONo = pdo.SONo
LEFT JOIN omTrSalesBPK pbpk ON a.CompanyCode = pbpk.CompanyCode AND a.BranchCode = pbpk.BranchCode AND a.SONO = pbpk.SONo AND pdo.DONo = pbpk.DONo
LEFT JOIN omTrSalesDN pdn ON a.CompanyCode = pdn.CompanyCode AND a.BranchCode = pdn.BranchCode AND a.InvoiceNo = pdn.InvoiceNo
Where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if year(@InvDateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.InvoiceDate between ''' + convert(varchar(50),@InvDateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@InvDateTo) + ''''

if len(rtrim(@NoSOFrom)) > 0
   set @pQuery = @pQuery + ' and a.SONo between ''' + rtrim(@NoSOFrom) + '''' + ' and ' + '''' + rtrim(@NoSOTo) + ''''

if len(rtrim(@CustomerFrom)) > 0
   set @pQuery = @pQuery + ' and a.CustomerCode between ''' + rtrim(@CustomerFrom) + '''' + ' and ' + '''' + rtrim(@CustomerTo) + ''''

if len(rtrim(@NoInvFrom)) > 0
   set @pQuery = @pQuery + ' and a.InvoiceNo between ''' + rtrim(@NoInvFrom) + '''' + ' and ' + '''' + rtrim(@NoInvTo) + ''''

if len(rtrim(@NoSKPKFrom)) > 0
   set @pQuery = @pQuery + ' and pso.SKPKNo between ''' + rtrim(@NoSKPKFrom) + '''' + ' and ' + '''' + rtrim(@NoSKPKTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' + ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.InvoiceNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
CREATE procedure [dbo].[uspfn_spMstCompanyAccountDtl2] (@CompanyCode varchar(10) , @CompanyCodeTo varchar(10))
 as
SELECT [CompanyCode]
      ,[CompanyCodeTo]
      ,[TPGO]
      ,[TPGOName]
      ,[AccountNo]
      ,[AccountName]
FROM [sp_spMstCompanyAccountDtl]
where CompanyCode=@CompanyCode and CompanyCodeTo=@CompanyCodeTo
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryPerlengkapanAdjustent] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @PerlengkapanDateFrom DateTime,
 @PerlengkapanDateTo DateTime,
 @NoReffFrom varchar(100),
 @NoReffTo varchar(100),
 @NoAdjustmentFrom varchar(100),
 @NoAdjustmentTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT 
a.AdjustmentNo, 
convert(varchar(20),a.AdjustmentNo,106) as AdjustmentDate,
a.RefferenceNo,
case when year(a.RefferenceDate) = ''1900'' then '''' else convert(varchar(20),a.RefferenceDate,106) end as RefferenceDate,
CASE a.PerlengkapanType WHEN 1 THEN ''BPU'' WHEN 2 THEN ''Transfer'' WHEN 3 THEN ''Return'' ELSE a.PerlengkapanType END AS PerlengkapanType , a.Remark,
CASE ISNULL(a.Status, 0) WHEN 0 THEN ''Open'' WHEN 1 THEN ''Printed'' WHEN 2 THEN ''Deleted'' WHEN 3 THEN ''Canceled'' WHEN 9 THEN ''Finished'' END AS Status
FROM 
OmTrPurchasePerlengkapanAdjustment a
where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if year(@PerlengkapanDateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.PerlengkapanDate between ''' + convert(varchar(50),@PerlengkapanDateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@PerlengkapanDateTo) + ''''

if len(rtrim(@NoReffFrom)) > 0
   set @pQuery = @pQuery + ' and a.RefferenceNo between ''' + rtrim(@NoReffFrom) + '''' + ' and ' + '''' + rtrim(@NoReffTo) + ''''

if len(rtrim(@NoAdjustmentFrom)) > 0
   set @pQuery = @pQuery + ' and a.AdjustmentNo between ''' + rtrim(@NoAdjustmentFrom) + '''' + ' and ' + '''' + rtrim(@NoAdjustmentTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + ''''+ ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.AdjustmentNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
CREATE procedure [dbo].[uspfn_omSlsDoUpdateSOVin]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),  
 @DONo varchar(15) 
)  
AS  

DECLARE 
	@QRYTemp as varchar(max),
	@CompanyMD as varchar(15),
	@DBMD as varchar(15)
 
set @CompanyMD = (SELECT TOP 1 CompanyMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode) 
set @DBMD = (SELECT TOP 1 DbMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode)

begin
--exec uspfn_omSlsDoUpdateSOVin 6006410,600641001,'DOS/14/000025'

set @QRYTemp =
'select a.*,b.SONo,c.ServiceBookNo,c.KeyNo from OmTrSalesDODetail a inner join OmTrSalesDO b 
	on a.companyCode = b.companyCode and a.branchCode = b.branchCode and a.DONo = b.DONo
	inner join ' + @DBMD + '.dbo.OmMstVehicle c on a.chassisCode = c.chassisCode and a.chassisNo = c.chassisNo
where a.companyCode = ''' + @CompanyCode + '''
and a.branchCode = ''' + @BranchCode + ''' and a.DONo = ''' + @DONo + ''''
				
	exec (@QRYTemp);	 
end
GO
-- =============================================
-- Author:		SDMS - David
-- Create date: 5 Feb 2015
-- Description:	Menututup bulan service
-- =============================================
CREATE procedure [dbo].[uspfn_SvClosingMonth]
	@CompanyCode varchar(20),
	@BranchCode varchar(20),
	@FiscalYear int,
	@FiscalMonth int,
	@PeriodeNum int,
	@NextFiscalYear int,
	@NextPeriodeNum int,
	@ProfitCenterCode varchar(20),
	@Month int
AS
BEGIN

    update gnMstPeriode
   set StatusService = '2'
 where CompanyCode = @CompanyCode
   and BranchCode = @BranchCode
   and FiscalYear = @FiscalYear
   and FiscalMonth = @FiscalMonth
   and PeriodeNum = @PeriodeNum

update gnMstPeriode
   set StatusService = '1'
 where CompanyCode = @CompanyCode
   and BranchCode = @BranchCode
   and FiscalYear = @NextFiscalYear
   and PeriodeNum = @NextPeriodeNum
   and FiscalMonth = @FiscalMonth

update gnMstCoProfileService 
   set FiscalYear = @NextFiscalYear
      ,FiscalPeriod = @NextPeriodeNum
      ,PeriodBeg = isnull((
            select FromDate from gnMstPeriode
             where CompanyCode = @CompanyCode
               and BranchCode = @BranchCode
               and FiscalYear = @NextFiscalYear
               and PeriodeNum = @NextPeriodeNum
               and FiscalMonth = @FiscalMonth
           ),0)
      ,PeriodEnd = isnull((
            select EndDate from gnMstPeriode
             where CompanyCode = @CompanyCode
               and BranchCode = @BranchCode
               and FiscalYear = @NextFiscalYear
               and PeriodeNum = @NextPeriodeNum
               and FiscalMonth = @FiscalMonth
           ),0)
 where CompanyCode = @CompanyCode
   and BranchCode = @BranchCode

   IF (@Month = 12)
   BEGIN
   update gnMstDocument
   set DocumentYear = convert(int, @FiscalYear) + 1
      ,DocumentSequence = 0
      ,LastUpdateBy = 'closing_month'
      ,LastUpdateDate = GetDate()
 where CompanyCode = @CompanyCode
   and BranchCode = @BranchCode
   and ProfitCenterCode = @ProfitCenterCode
   and DocumentType <> 'LOT'
   END 
   
END
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryKaroseriTerima] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @KaroseriDateFrom DateTime,
 @KaroseriDateTo DateTime,
 @SalesModelCodeOldFrom varchar(100),
 @SalesModelCodeOldTo varchar(100),
 @SalesModelYearFrom varchar(100),
 @SalesModelYearTo varchar(100),
 @NoSPKKaroseriFrom varchar(100),
 @NoSPKKaroseriTo varchar(100),
 @NoKaroseriTerimaFrom varchar(100),
 @NoKaroseriTerimaTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT 
a.KaroseriTerimaNo, 
convert(varchar(20),a.KaroseriTerimaDate,106) as KaroseriTerimaDate,
a.RefferenceInvoiceNo,
case when year(a.RefferenceInvoiceDate) = ''1900'' then '''' else convert(varchar(20),a.RefferenceInvoiceDate,106) end as RefferenceInvoiceDate,
a.RefferenceFakturPajakNo, 
case when year(a.RefferenceFakturPajakDate) = ''1900'' then '''' else convert(varchar(20),a.RefferenceFakturPajakDate,106) end  as RefferenceFakturPajakDate,
b.SupplierName, a.SalesModelCodeOld, a.SalesModelYear, a.SalesModelCodeNew, a.Quantity, 
a.DPPMaterial, a.DPPFee, a.DPPOthers, a.PPn, a.PPh, a.Total, case when year(a.DueDate) = ''1900'' then '''' else convert(varchar(20),a.DueDate,106) end as DueDate, a.Remark, 
CASE ISNULL(a.Status, 0) WHEN 0 THEN ''Open'' WHEN 1 THEN ''Printed'' WHEN 2 THEN ''Closed'' WHEN 3 THEN ''Canceled'' WHEN 9 THEN ''Finished'' END AS Status
FROM 
OmTrPurchaseKaroseriTerima a
LEFT JOIN 
gnMstSupplier b 
ON a.CompanyCode = b.CompanyCode 
AND a.SupplierCode =  b.SupplierCode  
Where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if year(@KaroseriDateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.KaroseriSPKDate between ''' + convert(varchar(50),@KaroseriDateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@KaroseriDateTo) + ''''

if len(rtrim(@SalesModelCodeOldFrom)) > 0
   set @pQuery = @pQuery + ' and a.SalesModelCodeOld between ''' + rtrim(@SalesModelCodeOldFrom) + '''' + ' and ' + '''' + rtrim(@SalesModelCodeOldFrom) + ''''

if len(rtrim(@SalesModelYearFrom)) > 0
   set @pQuery = @pQuery + ' and a.SalesModelYear between ''' + rtrim(@SalesModelYearFrom) + '''' + ' and ' + '''' + rtrim(@SalesModelYearTo) + ''''

if len(rtrim(@NoSPKKaroseriFrom)) > 0
   set @pQuery = @pQuery + ' and a.KaroseriSPKNo between ''' + rtrim(@NoSPKKaroseriFrom) + '''' + ' and ' + '''' + rtrim(@NoSPKKaroseriTo) + ''''

if len(rtrim(@NoKaroseriTerimaFrom)) > 0
   set @pQuery = @pQuery + ' and a.KaroseriTerimaNo between ''' + rtrim(@NoKaroseriTerimaFrom) + '''' + ' and ' + '''' + rtrim(@NoKaroseriTerimaTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + ''''+ ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.KaroseriTerimaNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
CREATE procedure [dbo].[uspfn_omSlsDoBrowse]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15) 
)  
AS 

DECLARE 
	@QRYTemp as varchar(max),
	@CompanyMD as varchar(15),
	@DBMD as varchar(15)
 
set @CompanyMD = (SELECT TOP 1 CompanyMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode) 
set @DBMD = (SELECT TOP 1 DbMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode) 


BEGIN  
--exec uspfn_omSlsDoBrowse 6006410,600641001

 set @QRYTemp =  'SELECT Distinct a.DONo, a.DODate, d.SKPKNo, d.RefferenceNo, a.CustomerCode, c.CustomerName , a.ShipTo ,c.CustomerName as ShipToDsc,
            c.Address1 + '' '' + c.Address2 + '' '' + c.Address3 + '' '' + c.Address4 as Address,
            a.WareHouseCode, a.Expedition, a.SONo, f.CustomerName as ExpeditionDsc,a.Remark,
            CASE a.Status WHEN 0 THEN ''OPEN'' WHEN 1 THEN ''PRINT'' WHEN 2 THEN ''APPROVED'' WHEN 3 THEN ''CANCEL'' WHEN 9 THEN ''FINISH'' END as StatusDsc,a.Status
            , CASE ISNULL(b.SalesType, 0) WHEN 0 THEN ''Wholesales'' ELSE ''Direct'' END AS TypeSales, e.LookUpValueName as WrhDsc
            FROM omTrSalesDO a
            LEFT JOIN gnMstCustomerProfitCenter b ON a.CompanyCode = b.CompanyCode AND a.BranchCode = b.BranchCode AND a.CustomerCode = b.CustomerCode AND b.ProfitCenterCode = ''100''
            LEFT JOIN gnMstCustomer c ON a.CompanyCode = c.CompanyCode AND a.CustomerCode = c.CustomerCode
            LEFT JOIN omTrSalesSO d ON a.CompanyCode = d.CompanyCode AND a.BranchCode = d.BranchCode AND a.SONo = d.SONo      
            Left join ' + @DBMD + '.dbo.gnMstLookUpDtl e on a.WarehouseCode=e.LookUpValue and e.CodeID=''MPWH''
            LEFT JOIN gnMstCustomer f ON a.CompanyCode = c.CompanyCode AND a.Expedition = c.CustomerCode
            WHERE a.CompanyCode = ''' + @CompanyCode + '''
               AND a.BranchCode = ''' + @BranchCode + '''                             
            ORDER BY a.DONo DESC'

	exec (@QRYTemp);
end
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquirySPK] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @SPKDateFrom DateTime,
 @SPKDateTo DateTime,
 @NoSPKFrom varchar(100),
 @NoSPKTo varchar(100),
 @NoChassisFrom varchar(100),
 @NoChassisTo varchar(100),
 @SupplierCode varchar(100),
 @SupplierCodeTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT 
a.SPKNo, 
convert(varchar(20),a.SPKDate,106) as SPKDate, 
a.RefferenceNo, 
case when year(a.RefferenceDate) = ''1900'' then '''' else convert(varchar(20),a.RefferenceDate,106) end as RefferenceDate, 
b.SupplierName AS SupplierName, a.Remark, 
	CASE
	WHEN a.Status = 0 THEN ''Open''
	WHEN a.Status = 1 THEN ''Printed''
	WHEN a.Status = 2 THEN ''Approved''
	WHEN a.Status = 3 THEN ''Deleted''
	WHEN a.Status = 9 THEN ''Finished''
	END as Status 
FROM 
	omTrSalesSPK a
LEFT JOIN 
	gnMstSupplier b ON b.CompanyCode = a.CompanyCode AND b.SupplierCode = a.SupplierCode
LEFT JOIN omTrSalesSPKDetail c
	ON a.CompanyCode = c.CompanyCode
	AND a.BranchCode = c.BranchCode
	AND a.SPKNo = c.SPKNo
where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if year(@SPKDateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.SPKDate between ''' + convert(varchar(50),@SPKDateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@SPKDateTo) + ''''

if len(rtrim(@NoSPKFrom)) > 0
   set @pQuery = @pQuery + ' and a.SPKNo between ''' + rtrim(@NoSPKFrom) + '''' + ' and ' + '''' + rtrim(@NoSPKTo) + ''''

if len(rtrim(@NoChassisFrom)) > 0
   set @pQuery = @pQuery + ' and c.ChassisNo between ''' + rtrim(@NoChassisFrom) + '''' + ' and ' + '''' + rtrim(@NoChassisTo) + ''''

if len(rtrim(@SupplierCode)) > 0
   set @pQuery = @pQuery + ' and a.SupplierCode between ''' + rtrim(@SupplierCode) + '''' + ' and ' + '''' + rtrim(@SupplierCodeTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' + ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.SPKNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
CREATE PROCEDURE [dbo].[sp_helpdiagramdefinition]
	(
		@diagramname 	sysname,
		@owner_id	int	= null 		
	)
	WITH EXECUTE AS N'dbo'
	AS
	BEGIN
		set nocount on

		declare @theId 		int
		declare @IsDbo 		int
		declare @DiagId		int
		declare @UIDFound	int
	
		if(@diagramname is null)
		begin
			RAISERROR (N'E_INVALIDARG', 16, 1);
			return -1
		end
	
		execute as caller;
		select @theId = DATABASE_PRINCIPAL_ID();
		select @IsDbo = IS_MEMBER(N'db_owner');
		if(@owner_id is null)
			select @owner_id = @theId;
		revert; 
	
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname;
		if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId ))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1);
			return -3
		end

		select version, definition FROM dbo.sysdiagrams where diagram_id = @DiagId ; 
		return 0
	END
GO
EXEC sys.sp_addextendedproperty @name=N'microsoft_database_tools_support', @value=N'1' ,@level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'sp_helpdiagramdefinition'
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE procedure [dbo].[usprpt_SpCheckType]
	@Type varchar(50)
AS
BEGIN
	declare @Query varchar(MAX)
	set @Query='
	select LookUpValue,LookUpValueName  
	from GnMstLookUpDtl 
	where CodeID=''GTGO'' and LookUpValue in ('+@Type+')'

	print(@Query)
	exec(@Query)
END
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquirySalesReturnDetailModel] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @ReturnNo varchar(100)
)
AS
BEGIN

SELECT *, (SELECT z.SalesModelDesc
			FROM omMstModelYear z
			WHERE a.CompanyCode = z.CompanyCode
			AND a.SalesModelCode = z.SalesModelCode
			AND a.salesmodelyear = z.salesmodelyear)  AS salesModelDesc
FROM    omTrSalesReturnDetailModel a
INNER JOIN
	omTrSalesReturnVIN b
	ON a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
	AND a.BPKNo = b.BPKNo
	AND a.ReturnNo = b.ReturnNo
	AND a.SalesModelCode = b.SalesModelCode
	AND a.SalesModelYear = b.SalesModelYear
WHERE a.CompanyCode = @p_CompanyCode
	AND a.BranchCode = @p_BranchCode
	AND a.ReturnNo = @ReturnNo

END
GO
CREATE PROCEDURE [dbo].[sp_helpdiagrams]
	(
		@diagramname sysname = NULL,
		@owner_id int = NULL
	)
	WITH EXECUTE AS N'dbo'
	AS
	BEGIN
		DECLARE @user sysname
		DECLARE @dboLogin bit
		EXECUTE AS CALLER;
			SET @user = USER_NAME();
			SET @dboLogin = CONVERT(bit,IS_MEMBER('db_owner'));
		REVERT;
		SELECT
			[Database] = DB_NAME(),
			[Name] = name,
			[ID] = diagram_id,
			[Owner] = USER_NAME(principal_id),
			[OwnerID] = principal_id
		FROM
			sysdiagrams
		WHERE
			(@dboLogin = 1 OR USER_NAME(principal_id) = @user) AND
			(@diagramname IS NULL OR name = @diagramname) AND
			(@owner_id IS NULL OR principal_id = @owner_id)
		ORDER BY
			4, 5, 1
	END
GO
EXEC sys.sp_addextendedproperty @name=N'microsoft_database_tools_support', @value=N'1' ,@level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'sp_helpdiagrams'
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryStokKendaraan] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @year varchar(10),
 @Month varchar(10),
 @WarehouseCode varchar(100),
 @WarehouseCodeTo Varchar(100),
 @SalesModelCode Varchar(100),
 @SalesModelCodeTo Varchar(100),
 @SalesModelYear Varchar(100),
 @SalesModelYearTo Varchar(100),
 @ColourCode Varchar(100),
 @ColourCodeTo Varchar(100),
 @DB varchar(50)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT CONVERT(Varchar,a.Year) as Year
     , CASE WHEN a.Month = 1 THEN ''Januari''
            WHEN a.Month = 2 THEN ''Februari''
            WHEN a.Month = 3 THEN ''Maret'' 
            WHEN a.Month = 4 THEN ''April'' 
            WHEN a.Month = 5 THEN ''Mei'' 
            WHEN a.Month = 6 THEN ''Juni''
            WHEN a.Month = 7 THEN ''Juli'' 
            WHEN a.Month = 8 THEN ''Agustus'' 
            WHEN a.Month = 9 THEN ''September'' 
            WHEN a.Month = 10 THEN ''Oktober''
            WHEN a.Month = 11 THEN ''November'' 
            WHEN a.Month = 12 THEN ''Desember'' 
        END AS Month
     , (select top 1 RefferenceDesc1
          from '+@DB+'.dbo.omMstRefference
         where CompanyCode = a.CompanyCode
           and RefferenceType = ''WARE''
           and RefferenceCode = a.WarehouseCode
         ) as WareHouseName
     , a.SalesModelCode
     , b.SalesModelDesc
     , CONVERT(Varchar,a.SalesModelYear) as ModelYear
     , (c.RefferenceCode + '' - '' + c.RefferenceDesc1) as ColourName
     , a.BeginningAV
     , a.QtyIn
     , a.Alocation
     , a.QtyOut
     , a.EndingAV
  FROM '+@DB+'.dbo.OmTrInventQtyVehicle a 
 INNER JOIN '+@DB+'.dbo.omMstModel b
    ON a.CompanyCode = b.CompanyCode
   AND a.SalesModelCode = b.SalesModelCode 
 INNER JOIN '+@DB+'.dbo.omMstRefference c
    ON a.CompanyCode = c.CompanyCode  
   AND a.ColourCode = c.RefferenceCode                                       
WHERE 1 = 1
'

if len(rtrim(@year)) > 0
   set @pQuery = @pQuery + ' and a.Year = ''' + rtrim(@year) + ''''

if len(rtrim(@Month)) > 0
   set @pQuery = @pQuery + ' and a.Month = ''' + rtrim(@Month) + ''''

if len(rtrim(@WarehouseCode)) > 0
   set @pQuery = @pQuery + ' and a.WarehouseCode between ''' + rtrim(@WarehouseCode) + '''' + ' and ' + '''' + rtrim(@WarehouseCodeTo) + ''''

if len(rtrim(@SalesModelCode)) > 0
   set @pQuery = @pQuery + ' and a.SalesModelCode between ''' + rtrim(@SalesModelCode) + '''' + ' and ' + '''' + rtrim(@SalesModelCodeTo) + ''''

if len(rtrim(@SalesModelYear)) > 0
   set @pQuery = @pQuery + ' and a.SalesModelYear between ''' + rtrim(@SalesModelYear) + '''' + ' and ' + '''' + rtrim(@SalesModelYearTo) + ''''

if len(rtrim(@ColourCode)) > 0
   set @pQuery = @pQuery + ' and a.ColourCode between ''' + rtrim(@ColourCode) + '''' + ' and ' + '''' + rtrim(@ColourCodeTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' + ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.Year, a.Month, a.SalesModelCode '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
CREATE procedure [dbo].[uspfn_GenerateBPSLampiranNew]
	@CompanyCode	VARCHAR(MAX),
	@BranchCode		VARCHAR(MAX),
	@JobOrderNo		VARCHAR(MAX),
	@ProductType	VARCHAR(MAX),
	@CustomerCode	VARCHAR(MAX),
	@UserID			VARCHAR(MAX),
	@PickedBy		VARCHAR(MAX)
AS
BEGIN

/*
PSEUDOCODE PROCESS :
Line 38  : RE-CALCULATE AMOUNT DETAIL
Line 93  : RE-CALCULATE AMOUNT HEADER AND UPDATE STATUS
Line 140 : UPDATE SO SUPPLY AND STATUS HEADER 
Line 167 : UPDATE SUPPLY SLIP QTY SERVICE 
Line 237 : INSERT NEW SRV ITEM BASED PICKING LIST
Line 276 : INSERT BPS AND LAMPIRAN
Line 292 : INSERT BPS HEADER
Line 352 : INSERT BPS DETAIL
Line 395 : INSERT LAMPIRAN HEADER
Line 458 : INSERT LAMPIRAN DETAIL
Line 500 : UPDATE STOCK
Line 571 : UPDATE DEMAND CUST AND DEMAND ITEM
Line 611 : INSERT TO ITEM MOVEMENT
Line 650 : UPDATE TRANSDATE
*/

--DECLARE	@CompanyCode	VARCHAR(MAX),
--		@BranchCode		VARCHAR(MAX),
--		@JobOrderNo		VARCHAR(MAX),
--		@ProductType	VARCHAR(MAX),
--		@CustomerCode	VARCHAR(MAX),
--		@UserID			VARCHAR(MAX),
--		@PickedBy		VARCHAR(MAX)

--SET	@CompanyCode	= '6156401000'
--SET	@BranchCode		= '6156401001'
--SET	@JobOrderNo		= 'SPK/15/001666'
--SET	@ProductType	= '4W'
--SET	@CustomerCode	= '0032710'
--SET	@UserID			= 'ga'
--SET	@PickedBy		= '0004'
		
--exec uspfn_GenerateBPSLampiranNew '6006400001','6006400101','SPK/14/101625','4W','JKT-1852626','ga','00001'

--===============================================================================================================================
-- RE-CALCULATE AMOUNT DETAIL
--===============================================================================================================================
DECLARE @DefaultDate		DATETIME

SET @DefaultDate = '1900-01-01 00:00:00.000'

if object_id('#tmpSvSDMovement') is not null drop table #tmpSvSDMovement

DECLARE @DbMD AS VARCHAR(15)
SET @DbMD = (SELECT DbMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)

  declare @PurchaseDisc as decimal
  set @PurchaseDisc = (select isnull(DiscPct, 0) from gnMstSupplierProfitCenter   
       where CompanyCode = @CompanyCode   
       and BranchCode = @BranchCode  
       and SupplierCode = dbo.GetBranchMD(@CompanyCode,@BranchCode)
       and ProfitCenterCode = '300')  
         
   if (@PurchaseDisc = 0) raiserror ('Purchase Discount belum di-setting untuk Part tersebut!',16,1);   

SELECT * INTO #TempPickingSlipDtl FROM (
SELECT
	a.CompanyCode
	, a.BranchCode 
	, a.PickingSlipNo
	, a.PickingSlipDate
	, a.CustomerCode
	, a.TypeOfGoods
	, b.DocNo
	, b.PartNo
	, b.QtyPicked
	, b.QtyPicked * b.RetailPrice SalesAmt
	, Floor((b.QtyPicked * b.RetailPrice) * DiscPct/100) DiscAmt
	, (b.QtyPicked * b.RetailPrice) - Floor((b.QtyPicked * b.RetailPrice) * DiscPct/100) NetSalesAmt
FROM SpTrnSPickingHdr a WITH (NOLOCK, NOWAIT)
INNER JOIN SpTrnSPickingDtl b WITH (NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode 
	AND a.BranchCode = b.BranchCode AND a.PickingSlipNo = b.PickingSlipNo
WHERE 
	1 = 1
	AND a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND Status < 2
	AND b.DocNo IN (SELECT DocNo FROM SpTrnSordHdr WITH (NOLOCK, NOWAIT)
				WHERE 
					1 = 1
					AND CompanyCode =@CompanyCode
					AND BranchCode = @BranchCode
					AND UsageDocNo = @JobOrderNo
					AND Status = 4)
) #TempPickingSlipDtl

UPDATE SpTrnSPickingDtl
SET SalesAmt = b.SalesAmt 
	, DiscAmt = b.DiscAmt
	, NetSalesAmt = b.NetSalesAmt
	, TotSalesAmt = b.NetSalesAmt
	, QtyBill = b.QtyPicked
	, LastUpdateBy = @UserID
	, LastUpdateDate = GetDate()
FROM SpTrnSPickingDtl a, #TempPickingSlipDtl b
WHERE
	1 = 1
	AND a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
	AND a.PickingSlipNo = b.PickingSlipNo
	AND a.PartNo = b.PartNo

--===============================================================================================================================
-- RE-CALCULATE AMOUNT HEADER AND UPDATE STATUS
--===============================================================================================================================
SELECT * INTO #TempPickingSlipHdr FROM (
SELECT
	a.CompanyCode
	, a.BranchCode
	, a.PickingSlipNo	
	, SUM(b.QtyPicked) TotSalesQty
	, SUM(b.SalesAmt) TotSalesAmt
	, SUM(b.DiscAmt) TotDiscAmt
	, SUM(b.NetSalesAmt) TotDPPAmt
	, floor(SUM(b.NetSalesAmt) * (ISNULL((SELECT TaxPct FROM GnMstTax x WITH (NOLOCK, NOWAIT) WHERE x.CompanyCode = @CompanyCode AND x.TaxCode IN 
		(SELECT TaxCode FROM GnMstCustomerProfitCenter y WITH (NOLOCK, NOWAIT) WHERE y.CompanyCode = @CompanyCode AND y.BranchCode = @BranchCode
			AND y.ProfitCenterCode = '300' AND y.CustomerCode = @CustomerCode)),0)/100))
	  TotPPNAmt
FROM spTrnSPickingHdr a WITH (NOLOCK, NOWAIT)
LEFT JOIN spTrnSPickingDtl b WITH (NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode AND a.BranchCode = b.BranchCode AND a.PickingSlipNo = b.PickingSlipNo
WHERE
	1 = 1
	AND a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.PickingSlipNo IN (SELECT DISTINCT(PickingSlipNo) FROM #TempPickingSlipDtl WITH (NOLOCK, NOWAIT))
GROUP BY a.CompanyCode
	, a.BranchCode
	, a.PickingSlipNo	
) #TempPickingSlipHdr

UPDATE SpTrnSPickingHdr
SET TotSalesQty = b.TotSalesQty
	, TotSalesAmt = b.TotSalesAmt
	, TotDiscAmt = b.TotDiscAmt
	, TotDPPAmt = b.TotDPPAmt
	, TotPPNAmt = b.TotPPNAmt
	, TotFinalSalesAmt = b.TotDPPAmt + b.TotPPNAmt
	, Status = 2
	, PickedBy = @PickedBy
	, LastUpdateBy = @UserID
	, LastUpdateDate = GetDate()
FROM SpTrnSPickingHdr a, #TempPickingSlipHdr b
WHERE
	1 = 1
	AND a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
	AND a.PickingSlipNo = b.PickingSlipNo

--===============================================================================================================================
-- UPDATE SO SUPPLY AND STATUS HEADER 
--===============================================================================================================================
UPDATE SpTrnSOSupply
SET	Status = 2
	, QtyPicked = b.QtyPicked
	, QtyBill = b.QtyPicked
	, LastUpdateBy = @UserID
	, LastUpdateDate = GetDate()
FROM SpTrnSOSupply a, #TempPickingSlipDtl b
WHERE
	1 = 1
	AND a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
	AND a.DocNo = b.DocNo
	AND a.PartNo = b.PartNo

UPDATE SpTrnSORDHdr 
SET Status = 5
	, LastUpdateBy = @UserID
	, LastUpdateDate = GetDate()
WHERE
	1 = 1
	AND CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND DocNo IN (SELECT DISTINCT(DocNo) FROM #TempPickingSlipDtl)

--===============================================================================================================================
-- UPDATE SUPPLY SLIP QTY SERVICE 
--===============================================================================================================================
DECLARE @ServiceNo VARCHAR(MAX)

SET @ServiceNo = (SELECT ServiceNo FROM svTrnService WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
		AND ProductType = @ProductType AND JobOrderNo = @JobOrderNo)

SELECT * INTO #TempServiceItem FROM (
SELECT 
	a.CompanyCode
	, a.BranchCode
	, a.ProductType
	, a.ServiceNo
	, a.PartNo
	, a.PartSeq
	, a.DemandQty
	, a.SupplyQty
	, b.QtyBill
	, b.DocNo
	, c.CostPrice
	, a.RetailPrice
	, a.TypeOfGoods
	, a.BillType
	, a.DiscPct
FROM SvTrnSrvItem a WITH (NOLOCK, NOWAIT)
INNER JOIN SpTrnSPickingDtl b WITH (NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode AND a.BranchCode = b.BranchCode AND a.PartNo = b.PartNo AND a.SupplySlipNo = b.DocNo
INNER JOIN SpMstItemPrice c ON a.CompanyCode = c.CompanyCode AND a.BranchCode = c.BranchCode AND a.PartNo = c.PartNo
WHERE
	1 = 1
	AND a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.ProductType = @ProductType
	AND a.ServiceNo = @ServiceNo
	AND a.PartSeq IN (SELECT MAX(PartSeq) FROM SvTrnSrvItem WITH (NOLOCK, NOWAIT) WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode
		AND ProductType = @ProductType AND ServiceNo = a.ServiceNo AND PartNo = a.PartNo)
	AND a.SupplySlipNo = b .DocNo
) #TempServiceItem 

UPDATE svTrnSrvItem
SET SupplyQty = (CASE WHEN b.QtyBill > b.DemandQty 
				THEN 
					CASE WHEN b.DemandQty = 0 THEN b.QtyBill ELSE b.DemandQty END
				ELSE b.QtyBill END)
	, LastUpdateBy = @UserID
	, LastUpdateDate = Getdate()
FROM svTrnSrvItem a, #TempServiceItem b
WHERE
	1 = 1
	AND a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
	AND a.ProductType = b.ProductType
	AND a.ServiceNo = b.ServiceNo
	AND a.PartNo = b.PartNo
	AND a.PartSeq = b.PartSeq
	AND a.SupplySlipNo = b.DocNo

UPDATE svTrnSrvItem
SET CostPrice = b.CostPrice
	, LastUpdateBy = @UserID
	, LastUpdateDate = Getdate()
FROM svTrnSrvItem a, #TempServiceItem b
WHERE
	1 = 1
	AND a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
	AND a.ProductType = b.ProductType
	AND a.ServiceNo = b.ServiceNo
	AND a.PartNo = b.PartNo
	AND a.SupplySlipNo = b.DocNo

--===============================================================================================================================
-- INSERT NEW SRV ITEM BASED PICKING LIST
--===============================================================================================================================
INSERT INTO SvTrnSrvItem (CompanyCode, BranchCode, ProductType, ServiceNo, PartNo, PartSeq, DemandQty, SupplyQty, ReturnQty, CostPrice, RetailPrice, TypeOfGoods, BillType, SupplySlipNo, SupplySlipDate, SSReturnNo, SSReturnDate, CreatedBy, CreatedDate, LastupdateBy, LastupdateDate, DiscPct)
SELECT 
	a.CompanyCode
	, a.BranchCode
	, a.ProductType
	, a.ServiceNo
	, a.PartNo
	, a.PartSeq + 1
	, 0 DemandQty
	, a.QtyBill - a.DemandQty SupplyQty
	, 0 ReturnQty
	, a.CostPrice
	, a.RetailPrice
	, a.TypeOfGoods
	, a.BillType
	, a.DocNo SupplySlipNo
	, (SELECT DocDate FROM SpTrnSORDHdr WITH (NOLOCK, NOWAIT) WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode
		AND DocNo = a.DocNo) SupplySlipDate
	, NULL SSReturnNo
	, NULL SSReturnDate
	, @UserID CreatedBy
	, GetDate() CreatedDate
	, @UserID LastUpdateBy
	, GetDate() LastUpdateDate
	, a.DiscPct
FROM #TempServiceItem a WITH (NOLOCK, NOWAIT)
WHERE
	1 = 1
	AND a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.ProductType = @ProductType
	AND a.DemandQty < a.QtyBill
	AND a.QtyBill > 0
	AND a.DemandQty > 0

DROP TABLE #TempServiceItem 

--===============================================================================================================================
-- INSERT BPS AND LAMPIRAN
--===============================================================================================================================
DECLARE @PickingSlipNo	VARCHAR(MAX)
DECLARE	@TempBPSFNo		VARCHAR(MAX)
DECLARE	@TempLMPNo		VARCHAR(MAX)
DECLARE @MaxBPSFNo		INT
DECLARE @MaxLmpNo		INT

DECLARE db_cursor CURSOR FOR
SELECT DISTINCT PickingSlipNo FROM #TempPickingSlipHdr
OPEN db_cursor
FETCH NEXT FROM db_cursor INTO @PickingSlipNo

WHILE @@FETCH_STATUS = 0
BEGIN	

--===============================================================================================================================
-- INSERT BPS HEADER
--===============================================================================================================================
SET @MaxBPSFNo = ISNULL((SELECT DocumentSequence + 1 FROM GnMstDocument WHERE 
	CompanyCode = @CompanyCode
		AND BranchCode = @BranchCode
		AND DocumentType = 'BPF' 
		AND ProfitCenterCode = '300' 
		AND DocumentYear = YEAR(GetDate())),0)

SET @TempBPSFNo = ISNULL((SELECT 'BPF/' + RIGHT(YEAR(GETDATE()),2) + '/' + RIGHT(1000000 + CONVERT(VARCHAR, @MaxBPSFNo, 1), 6)),'BPF/YY/XXXXXX')
SELECT @TempBPSFNo
INSERT INTO SpTrnSBPSFHdr
SELECT 
	CompanyCode
	, BranchCode
	, @TempBPSFNo BPSFNo
	, GetDate() BPSFDate
	, PickingSlipNo
	, PickingSlipDate
	, TransType
	, SalesType
	, CustomerCode
	, CustomerCodeBill
	, CustomerCodeShip
	, TotSalesQty
	, TotSalesAmt
	, TotDiscAmt
	, TotDPPAmt
	, TotPPNAmt
	, TotFinalSalesAmt
	, '2' Status
	, 0 PrintSeq
	, TypeOfGoods
	, @UserID CreatedBy
	, GetDate() CreatedDate
	, @UserID LastUpdateBy
	, GetDate() LastUpdateDate
	, NULL isLocked
	, NULL LockingBy
	, NULL LockingDate
FROM SpTrnSPickingHdr WITH (NOLOCK, NOWAIT)
WHERE
	1 = 1
	AND CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND PickingSlipNo = @PickingSlipNo

UPDATE GnMstDocument
SET DocumentSequence = DocumentSequence + 1
	, LastUpdateDate = GetDate()
	, LastUpdateBy = @UserID
WHERE
	1 = 1
	AND CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND DocumentPrefix = 'BPF'
	AND ProfitCenterCode = '300'
	AND DocumentYear = Year(GetDate())

--===============================================================================================================================
-- INSERT BPS DETAIL
--===============================================================================================================================
INSERT INTO SpTrnSBPSFDtl
SELECT
	CompanyCode
	, BranchCode
	, @TempBPSFNo
	, WarehouseCode
	, PartNo
	, PartNoOriginal
	, DocNo
	, DocDate
	, ReferenceNo
	, ReferenceDate
	, LocationCode
	, QtyBill
	, RetailPriceInclTax
	, RetailPrice
	, CostPrice
	, DiscPct
	, SalesAmt
	, DiscAmt
	, NetSalesAmt
	, 0 PPNAmt
	, TotSalesAmt
	, ProductType
	, PartCategory 
	, MovingCode
	, ABCClass
	, '' ExPickingListNo
	, @DefaultDate ExPickingListDate
	, @UserID CreatedBy
	, GetDate() CreatedDate
	, @UserID LastUpdateBy
	, GetDate() LastUpdateDate
FROM SpTrnSPickingDtl WITH (NOLOCK, NOWAIT)
WHERE 
	1 = 1
	AND CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND PickingSlipNo = @PickingSlipNo

--===============================================================================================================================
-- INSERT LAMPIRAN HEADER
--===============================================================================================================================
SET @MaxLmpNo = ISNULL((SELECT DocumentSequence + 1 FROM GnMstDocument WHERE 
	CompanyCode = @CompanyCode
		AND BranchCode = @BranchCode
		AND DocumentType = 'LMP' 
		AND ProfitCenterCode = '300' 
		AND DocumentYear = YEAR(GetDate())),0)

SET @TempLmpNo = ISNULL((SELECT 'LMP/' + RIGHT(YEAR(GETDATE()),2) +'/' + RIGHT(1000000 + CONVERT(VARCHAR, @MaxLmpNo, 1), 6)),'LMP/YY/XXXXXX')

INSERT INTO SpTrnSLmpHdr
SELECT
	CompanyCode
	, BranchCode
	, @TempLmpNo LmpNo	
	, GetDate() LmpDate
	, @TempBPSFNo BPSFNo
	, (SELECT BPSFDate FROM SpTrnSBPSFHdr WITH (NOLOCK, NOWAIT) WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode AND BPSFNo = @TempBPSFNo)
		BPSFDate
	, PickingSlipNo
	, PickingSlipDate
	, TransType
	, CustomerCode
	, CustomerCodeBill
	, CustomerCodeShip
	, TotSalesQty
	, TotSalesAmt
	, TotDiscAmt
	, TotDPPAmt
	, TotPPNAmt
	, TotFinalSalesAmt
	, CONVERT(BIT, 0) isPKP
	, '0' Status
	, 0 PrintSeq
	, TypeOfGoods
	, @UserID CreatedBy
	, GetDate() CreatedDate
	, @UserID LastUpdateBy
	, GetDate() LastUpdateDate
	, NULL IsLocked
	, NULL LockingBy
	, NULL LockingDate
FROM SpTrnSPickingHdr WITH (NOLOCK, NOWAIT)
WHERE 
	1 = 1
	AND CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND PickingSlipNo = @PickingSlipNo

UPDATE GnMstDocument
SET DocumentSequence = DocumentSequence + 1
	, LastUpdateDate = GetDate()
	, LastUpdateBy = @UserID
WHERE
	1 = 1
	AND CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND DocumentPrefix = 'LMP'
	AND ProfitCenterCode = '300'
	AND DocumentYear = Year(GetDate())

--===============================================================================================================================
-- INSERT LAMPIRAN DETAIL
--===============================================================================================================================
INSERT INTO SpTrnSLmpDtl
SELECT
	a.CompanyCode
	, a.BranchCode
	, @TempLmpNo LmpNo
	, a.WarehouseCode
	, a.PartNo
	, a.PartNoOriginal
	, a.DocNo
	, a.DocDate
	, a.ReferenceNo
	, a.ReferenceDate
	, a.LocationCode
	, a.QtyBill
	, a.RetailPriceInclTax
	, a.RetailPrice
	, ISNULL((SELECT CostPrice FROM SpMstItemPrice WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND PartNo = a.PartNo),0) CostPrice
	, a.DiscPct
	, a.SalesAmt
	, a.DiscAmt
	, a.NetSalesAmt
	, 0 PPNAmt
	, a.TotSalesAmt
	, a.ProductType
	, a.PartCategory 
	, a.MovingCode
	, a.ABCClass
	, @UserID CreatedBy
	, GetDate() CreatedDate
	, @UserID LastUpdateBy
	, GetDate() LastUpdateDate
FROM SpTrnSPickingDtl a WITH (NOLOCK, NOWAIT)
WHERE 
	1 = 1
	AND a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.PickingSlipNo = @PickingSlipNo
	AND a.QtyPicked > 0

--===============================================================================================================================
-- UPDATE STOCK
--===============================================================================================================================

--===============================================================================================================================
-- VALIDATION QTY
--===============================================================================================================================
	DECLARE @Onhand_SRValid NUMERIC(18,2)	
	DECLARE @Allocation_SRValid NUMERIC(18,2)
	DECLARE @errmsg VARCHAR(MAX)
	DECLARE @CompanyMD AS VARCHAR(15)
	DECLARE @BranchMD AS VARCHAR(15)
	DECLARE @WarehouseMD AS VARCHAR(15)

	SET @CompanyMD = (SELECT CompanyMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)
	SET @BranchMD = (SELECT BranchMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)
	SET @WarehouseMD = (SELECT WarehouseMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)

declare @validString varchar(max)

declare @valid_2 table(
PartNo varchar(15),
QtyValidSR NUMERIC(18,2),
QtyValidOnhand NUMERIC(18,2)
)
    set @validString ='SELECT a.PartNo
		, a.AllocationSR - b.QtyBill QtyValidSR
		, a.Onhand - b.QtyBill QtyValidOnhand
	FROM '+ @DbMD +'..SpMstItems a, SpTrnSPickingDtl b
	WHERE 1 = 1
		AND a.CompanyCode = '''+ @CompanyMD +'''
		AND a.BranchCode = '''+ @BranchMD+'''
		AND b.PickingSlipNo = '''+@PickingSlipNo+'''
		--AND a.CompanyCode = b.CompanyCode
		--AND a.BranchCode = b.BranchCode
		AND a.PartNo = b.PartNo'
	
	--print(@validString)
	insert into @valid_2 exec(@validString)

select * from @valid_2

	SET @Allocation_SRValid = ISNULL((SELECT TOP 1 QtyValidSR FROM @valid_2 WHERE QtyValidSR < 0),0)
	SET @Onhand_SRValid = ISNULL((SELECT TOP 1 QtyValidOnhand FROM @valid_2 WHERE QtyValidOnhand < 0),0)
	select @Allocation_SRValid
	select @Onhand_SRValid

	IF (@Onhand_SRValid < 0 OR @Allocation_SRValid < 0)
	BEGIN
		SET @errmsg = 'PEMBUATAN DOKUMEN LAMPIRAN GAGAL ! ' + char(13) + char(13) + 'Error Message: Terdapat part dengan quantity Onhand atau alokasi kurang dari nol !'
		
		CLOSE db_cursor
		DEALLOCATE db_cursor 
		
		DROP TABLE #TempPickingSlipDtl
		DROP TABLE #TempPickingSlipHdr
		
		RAISERROR (@errmsg,16,1);
		
		RETURN
	END
--===============================================================================================================================

--DECLARE @DbMD AS VARCHAR(15)
--SET @DbMD = (SELECT DbMD FROM gnMstCompanyMapping WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode)

DECLARE @Query AS VARCHAR(MAX)
SET @Query = 
'UPDATE '+@DbMD+'..SpMstItems
SET
	AllocationSR = AllocationSR - b.QtySupply
	, Onhand = Onhand - b.QtyBill
	, LastUpdateBy = ' + '''' + @UserID + '''' +'
	, LastUpdateDate = GetDate()
	, LastSalesDate = GetDate()
FROM ' + @DbMD + '..SpMstItems a, SpTrnSPickingDtl b
WHERE
	1 = 1
	AND a.CompanyCode = ' + ''''+@CompanyMD+'''' + '
	AND a.BranchCode = ' + ''''+@BranchMD +''''+ '
	AND b.PickingSlipNo = ' + ''''+@PickingSlipNo+'''' + '
	--AND a.CompanyCode = b.CompanyCode
	--AND a.BranchCode = b.BranchCode
	AND a.PartNo = b.PartNo
UPDATE '+ @DbMD +'..SpMstItemLoc
SET
	AllocationSR = AllocationSR - b.QtySupply
	, Onhand = Onhand - b.QtyBill
	, LastUpdateBy = ' + '''' + @UserID + '''' +'
	, LastUpdateDate = GetDate()
FROM ' + @DbMD + '..SpMstItemLoc a, SpTrnSPickingDtl b
WHERE
	1 = 1
	AND a.CompanyCode = ' + ''''+@CompanyMD+'''' + '
	AND a.BranchCode = ' + ''''+@BranchMD +''''+ '
	AND a.WarehouseCode = ' + ''''+@WarehouseMD +''''+ '
	AND b.PickingSlipNo = ' + ''''+@PickingSlipNo+'''' + '
	--AND a.CompanyCode = b.CompanyCode
	--AND a.BranchCode = b.BranchCode
	AND a.PartNo = b.PartNo'

EXEC(@query)
	--print(@query)
--===============================================================================================================================
-- UPDATE DEMAND CUST AND DEMAND ITEM
--===============================================================================================================================
UPDATE SpHstDemandCust
SET SalesFreq = SalesFreq + 1
	, SalesQty = SalesQty + b.QtyBill
	, LastUpdateBy = @UserID 
	, LastUpdateDate = GetDate()
FROM SpHstDemandCust a, SpTrnSPickingDtl b
WHERE
	1 = 1
	AND a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND b.PickingSlipNo = @PickingSlipNo
	AND a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
	AND a.Year = Year(b.DocDate)
	AND a.Month = Month(b.DocDate)
	AND a.CustomerCode IN (SELECT CustomerCode FROM SpTrnSPickingHdr WHERE CompanyCode = @CompanyCode AND BranchCode = BranchCode
							AND PickingSlipNo = @PickingSlipNo)
	AND a.PartNo = b.PartNo
	

UPDATE SpHstDemandItem
SET SalesFreq = SalesFreq + 1
	, SalesQty = SalesQty + b.QtyBill
	, LastUpdateBy = @UserID 
	, LastUpdateDate = GetDate()
FROM SpHstDemandItem a, SpTrnSPickingDtl b
WHERE
	1 = 1
	AND a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND b.PickingSlipNo = @PickingSlipNo
	AND a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
	AND a.Year = Year(b.DocDate)
	AND a.Month = Month(b.DocDate)
	AND a.PartNo = b.PartNo
--
----=============================================================================================================================
---- INSERT TO ITEM MOVEMENT
----=============================================================================================================================
INSERT INTO SpTrnIMovement
SELECT
	@CompanyCode CompanyCode
	, @BranchCode BranchCode
	, a.LmpNo DocNo
	, (SELECT LmPDate FROM SpTrnSLmpHdr WITH (NOLOCK, NOWAIT) WHERE CompanyCode = @CompanyCode 
		AND BranchCode = @BranchCode AND LmpNo = a.LmpNo) 
	  DocDate
	, dateadd(s,ROW_NUMBER() OVER(Order by a.PartNo),getdate()) CreatedDate 
	, '00' WarehouseCode
	, LocationCode 
	, a.PartNo
	, 'OUT' SignCode
	, 'LAMPIRAN' SubSignCode
	, a.QtyBill
	, a.RetailPrice
	, a.CostPrice
	, a.ABCClass
	, a.MovingCode
	, a.ProductType
	, a.PartCategory
	, @UserID CreatedBy
FROM SpTrnSLmpDtl a WITH (NOLOCK, NOWAIT)
WHERE
	1 = 1
	AND CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND LmpNo IN (SELECT LmpNo FROM SpTrnSLmpHdr WITH (NOLOCK, NOWAIT) WHERE CompanyCode = @CompanyCode 
				AND BranchCode = @BranchCode AND PickingSlipNo = @PickingSlipNo)

--===============================================================================================================================
-- INSERT INTO svSDMovement
--===============================================================================================================================
declare @md bit
set @md = (select case WHEN EXISTS(select * from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode and CompanyMD = @CompanyCode and BranchMD = @BranchCode) then cast(1 as bit) ELSE cast(0 as bit) END)

 if(@md = 0)
 begin
	set @Query = '
	insert into ' + @DbMD + '..svSDMovement (CompanyCode, BranchCode, DocNo, DocDate, PartNo, PartSeq
	, WarehouseCode, QtyOrder, Qty, DiscPct, CostPrice, RetailPrice
	, TypeOfGoods, CompanyMD, BranchMD, WarehouseMD, RetailPriceInclTaxMD, RetailPriceMD
	, CostPriceMD, QtyFlag, ProductType, ProfitCenterCode, Status, ProcessStatus
	, ProcessDate, CreatedBy, CreatedDate, LastUpdateBy, LastUpdateDate)  
	select h.CompanyCode, h.BranchCode, h.LmpNo, h.LmpDate, d.PartNo, ROW_NUMBER() OVER(Order by d.LmpNo)
	,d.WarehouseCode, d.QtyBill, d.QtyBill, d.DiscPct
	,isnull(((select RetailPrice from spTrnSLmpDtl
		where CompanyCode = ''' + @CompanyCode + '''  and BranchCode = ''' + @BranchCode  + '''
		and ProductType = ''' + @ProductType  + ''' and LmpNo = ''' + @TempLmpNo + ''' and PartNo = d.PartNo) / 1.1 * 
		((100 - isnull((select isnull(DiscPct, 0) from gnMstSupplierProfitCenter   
			where CompanyCode = ''' + @CompanyCode + ''' and BranchCode = ''' + @BranchCode  + ''' and SupplierCode = dbo.GetBranchMD(''' + @CompanyCode + ''', ''' + @BranchCode  + ''') 
			and ProfitCenterCode = ''300''),0)) * 0.01)),0) CostPrice
	, d.RetailPrice
	,h.TypeOfGoods, ''' + @CompanyMD + ''', ''' + @BranchMD + ''', ''' + @WarehouseMD + ''', d.RetailPriceInclTax, d.RetailPrice, 
	d.CostPrice,''x'', d.ProductType,''300'', ''0'',''0'',''' + convert(varchar, GETDATE()) + ''',''' + @UserID + ''',''' +
	  convert(varchar, GETDATE()) + ''',''' +  @UserID + ''',''' +  convert(varchar, GETDATE()) + '''
	 from spTrnSLmpDtl d inner join spTrnSLmpHdr h on h.LmpNo = d.LmpNo  
	  where 1 = 1   
		and d.CompanyCode = ''' + @CompanyCode + ''' 
		and d.BranchCode  = ''' + @BranchCode  + '''
		and d.ProductType = ''' + @ProductType  + '''
		and d.LmpNo = ''' + @TempLmpNo + '''';
	
	exec(@Query);
	
end

FETCH NEXT FROM db_cursor INTO @PickingSlipNo
END
CLOSE db_cursor
DEALLOCATE db_cursor 

--===============================================================================================================================
-- UPDATE TRANSDATE
--===============================================================================================================================

update gnMstCoProfileSpare
set TransDate=getdate()
	, LastUpdateBy=@UserID
	, LastUpdateDate=getdate()
where CompanyCode = @CompanyCode AND BranchCode = @BranchCode


--===============================================================================================================================
-- DROP SECTION HEADER
--===============================================================================================================================
DROP TABLE #TempPickingSlipDtl
DROP TABLE #TempPickingSlipHdr
end

--rollback tran
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryStokPerlengkapan] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @Status varchar(10),
 @Year varchar(10),
 @Month varchar(10),
 @PerlengkapanCode varchar(100),
 @PerlengkapanCodeTo Varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT CONVERT(Varchar,a.Year) as Year, 
CASE WHEN a.Month = 1 THEN ''Januari'' 
	WHEN a.Month = 2 THEN ''Februari''
	WHEN a.Month = 3 THEN ''Maret'' 
	WHEN a.Month = 4 THEN ''April'' 
	WHEN a.Month = 5 THEN ''Mei'' 
	WHEN a.Month = 6 THEN ''Juni''
	WHEN a.Month = 7 THEN ''Juli'' 
	WHEN a.Month = 8 THEN ''Agustus'' 
	WHEN a.Month = 9 THEN ''September'' 
	WHEN a.Month = 10 THEN ''Oktober''
	WHEN a.Month = 11 THEN ''November'' 
	WHEN a.Month = 12 THEN ''Desember'' 
END AS Month
, a.PerlengkapanCode, b.PerlengkapanName, a.QuantityBeginning, a.QuantityIn, 
a.QuantityOut, a.QuantityEnding, CASE WHEN b.Status = 0 THEN ''Not Active'' WHEN b.Status = 1 THEN ''Active'' END AS Status 
FROM OMTrInventQtyPerlengkapan a 
INNER JOIN OMMstPerlengkapan b
ON a.CompanyCode = b.CompanyCode 
AND a.BranchCode = b.BranchCode
AND a.PerlengkapanCode = b.PerlengkapanCode

WHERE 1 = 1
'
if len(rtrim(@Status)) > 0
   set @pQuery = @pQuery + ' and b.Status = ''' + rtrim(@Status) + ''''

if len(rtrim(@Year)) > 0
   set @pQuery = @pQuery + ' and a.Year = ''' + rtrim(@year) + ''''

if len(rtrim(@Month)) > 0
   set @pQuery = @pQuery + ' and a.Month = ''' + rtrim(@Month) + ''''

if len(rtrim(@PerlengkapanCode)) > 0
   set @pQuery = @pQuery + ' and a.PerlengkapanCode between ''' + rtrim(@PerlengkapanCode) + '''' + ' and ' + '''' + rtrim(@PerlengkapanCodeTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' + ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.Year, a.Month, a.PerlengkapanCode '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
-- ===================================================
-- Query Activation : 
-- usprpt_SvRpCrm002V2 '6006406','6006405','20110706','REMINDER',3,0
-- ===================================================

CREATE procedure [dbo].[usprpt_SvRpCrm002V3]
	@CompanyCode	Varchar(15),
	@BranchCode		Varchar(15),
	@DateParam		Datetime,
	@OptionType		Varchar(100), 
	@Range			int, 
	@Interval		int
	
AS
BEGIN
-- SET NOCOUNT ON added to prevent extra result sets from
-- interfering with SELECT statements.
SET NOCOUNT ON;

IF (@OptionType = 'REMINDER')
BEGIN
select ROW_NUMBER()OVER(order BY a.PoliceRegNo) as No, * from (
	select distinct 
		  case when b.LastServiceDate is null then 'New' else case when (convert(varchar, b.LastServiceDate, 112) = '19000101') then 'NEW' else 'Walk In' end end KategoriPelanggan
		 , b.BasicModel typeA
		 , b.PoliceRegNo
		 , case when b.TransmissionType is null then 'MT' else case when b.TransmissionType = ' ' then 'MT' else b.TransmissionType end end TM
		 , b.ProductionYear ProdYear
		 , b.EngineCode
		 , b.EngineNo
		 , b.ChassisCode
		 , b.ChassisNo
		 , c.CustomerName
		 , c.PhoneNo
		 , c.OfficePhoneNo
		 , c.HPNo
		 , case when (convert(varchar, b.LastServiceDate, 112) = '19000101') then null else b.LastServiceDate end VisitDate
		 , case when (convert(varchar, c.BirthDate, 112) = '19000101') then null else c.BirthDate end BirthDate
		 , case(c.Gender) when 'M' then 'Pria' else 'Wanita' end Gender
		 , isnull(c.Address1, '')+' '+isnull(c.Address2, '')+' '+isnull(c.Address3, '')+' '+isnull(c.Address4, '') Address
		 , case when b.ContactName is null then c.CustomerName else b.ContactName end ContactName
		 , case when b.ContactAddress is null then isnull(c.Address1, '')+' '+isnull(c.Address2, '')+' '+isnull(c.Address3, '')+' '+isnull(c.Address4, '') else b.ContactAddress end ContactAddress
		 , case when b.ContactPhone is null then c.PhoneNo else b.ContactPhone end ContactPhone
		 , b.RemainderDescription LastRemark
		 , ISNULL((SELECT TOP 1 CompanyName FROM gnMstCoProfile WHERE CompanyCode = a.CompanyCode and BranchCode = a.BranchCode) ,'') CompanyName
		 , YEAR(getdate()) PeriodYear
		 , DateName( month , DateAdd( month , month(GetDate()) , 0 ) - 1 ) PeriodMonth 
		 , c.Address1
		 , c.Address2
		 , c.Address3
		 , c.Address4
	  from svTrnService a
	  left join SvMstCustomerVehicle b	on a.Companycode = b.CompanyCode 
			and a.ChassisCode = b.ChassisCode 
			and a.ChassisNo = b.ChassisNo
	  left join GnMstCustomer c on a.CompanyCode = c.CompanyCode
			and a.CustomerCode = c.CustomerCode
	  left join svTrnDailyRetention d on d.CompanyCode = a.CompanyCode
			and d.BranchCode = a.BranchCode and d.PeriodYear = year(a.JobOrderDate)
			and d.PeriodMonth = month(a.JobOrderDate) and d.CustomerCode = a.CustomerCode
	  left join gnMstLookupDtl e on e.CompanyCode = a.CompanyCode
			and e.CodeID = 'CIRS'
			and e.LookupValue = d.VisitInitial
	  left join gnMstLookUpDtl f on b.CompanyCode = a.CompanyCode
			and f.CodeId = 'CCRS'
			and f.LookUpValue = d.CustomerCategory
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode	= @BranchCode
	   ) a
END
ELSE
BEGIN
select ROW_NUMBER()OVER(order BY b.PoliceRegNo) as No, * from (
	select distinct 
		case when b.LastServiceDate is null then 'New' else case when (convert(varchar, b.LastServiceDate, 112) = '19000101') then 'NEW' else 'Walk In' end end KategoriPelanggan
		 , b.BasicModel typeA
		 , b.PoliceRegNo
		 , case when b.TransmissionType is null then 'MT' else case when b.TransmissionType = ' ' then 'MT' else b.TransmissionType end end TM 
		 , b.ProductionYear ProdYear
		 , b.EngineCode
		 , b.EngineNo
		 , b.ChassisCode
		 , b.ChassisNo
		 , c.CustomerName
		 , c.PhoneNo
		 , c.OfficePhoneNo
		 , c.HPNo
		 , case when (convert(varchar, b.LastServiceDate, 112) = '19000101') then null else b.LastServiceDate end VisitDate
		 , case when (convert(varchar, c.BirthDate, 112) = '19000101') then null else c.BirthDate end BirthDate
		 , case(c.Gender) when 'M' then 'Pria' else 'Wanita' end Gender
		 , isnull(c.Address1, '')+' '+isnull(c.Address2, '')+' '+isnull(c.Address3, '')+' '+isnull(c.Address4, '') Address
		 , case when b.ContactName is null then c.CustomerName else b.ContactName end ContactName
		 , case when b.ContactAddress is null then isnull(c.Address1, '')+' '+isnull(c.Address2, '')+' '+isnull(c.Address3, '')+' '+isnull(c.Address4, '') else b.ContactAddress end ContactAddress
		 , case when b.ContactPhone is null then c.PhoneNo else b.ContactPhone end ContactPhone
		 , b.RemainderDescription LastRemark
		 , ISNULL((SELECT TOP 1 CompanyName FROM gnMstCoProfile WHERE CompanyCode = a.CompanyCode and BranchCode = a.BranchCode) ,'') CompanyName
		 , YEAR(getdate()) PeriodYear
		 , DateName( month , DateAdd( month , month(GetDate()) , 0 ) - 1 ) PeriodMonth
		 , c.Address1
		 , c.Address2
		 , c.Address3
		 , c.Address4
	  from svTrnService a
	  left join SvMstCustomerVehicle b	on a.Companycode = b.CompanyCode 
			and a.ChassisCode = b.ChassisCode 
			and a.ChassisNo = b.ChassisNo
	  left join GnMstCustomer c on a.CompanyCode = c.CompanyCode
			and a.CustomerCode = c.CustomerCode
	  left join svTrnDailyRetention d on d.CompanyCode = a.CompanyCode
			and d.BranchCode = a.BranchCode and d.PeriodYear = year(a.JobOrderDate)
			and d.PeriodMonth = month(a.JobOrderDate) and d.CustomerCode = a.CustomerCode
	  left join gnMstLookupDtl e on e.CompanyCode = a.CompanyCode
			and e.CodeID = 'CIRS'
			and e.LookupValue = d.VisitInitial
	  left join gnMstLookUpDtl f on b.CompanyCode = a.CompanyCode
			and f.CodeId = 'CCRS'
			and f.LookUpValue = d.CustomerCategory
	 where 1 = 1
	   and a.CompanyCode = @CompanyCode
	   and a.BranchCode	= @BranchCode
	   ) b
END
END
GO
CREATE PROCEDURE [dbo].[sp_creatediagram]
	(
		@diagramname 	sysname,
		@owner_id		int	= null, 	
		@version 		int,
		@definition 	varbinary(max)
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
	
		declare @theId int
		declare @retval int
		declare @IsDbo	int
		declare @userName sysname
		if(@version is null or @diagramname is null)
		begin
			RAISERROR (N'E_INVALIDARG', 16, 1);
			return -1
		end
	
		execute as caller;
		select @theId = DATABASE_PRINCIPAL_ID(); 
		select @IsDbo = IS_MEMBER(N'db_owner');
		revert; 
		
		if @owner_id is null
		begin
			select @owner_id = @theId;
		end
		else
		begin
			if @theId <> @owner_id
			begin
				if @IsDbo = 0
				begin
					RAISERROR (N'E_INVALIDARG', 16, 1);
					return -1
				end
				select @theId = @owner_id
			end
		end
		-- next 2 line only for test, will be removed after define name unique
		if EXISTS(select diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @diagramname)
		begin
			RAISERROR ('The name is already used.', 16, 1);
			return -2
		end
	
		insert into dbo.sysdiagrams(name, principal_id , version, definition)
				VALUES(@diagramname, @theId, @version, @definition) ;
		
		select @retval = @@IDENTITY 
		return @retval
	END
GO
EXEC sys.sp_addextendedproperty @name=N'microsoft_database_tools_support', @value=N'1' ,@level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'sp_creatediagram'
GO

CREATE procedure [dbo].[uspfn_spSelectPickingSlipLmp] @CompanyCode varchar(15), @BranchCode varchar(15), 
@ProductType varchar(4), @JobOrderNo varchar(25)
as
SELECT * INTO #t1 FROM (
                SELECT
                    DISTINCT c.DocNo, c.DocDate, d.PickingSlipNo, e.PartNo, e.PartNo PartNoOri, e.QtySupply, 
                    e.QtyPicked, e.QtyBill, d.Status, f.LookUpValueName TransTypeDesc, c.TransType, g.LmpNo,
                    d.PickedBy
                FROM
                    svTrnService a
                LEFT JOIN svTrnSrvItem b ON b.CompanyCode = a.CompanyCode AND b.BranchCode = a.BranchCode 
	                AND b.ProductType = a.ProductType AND b.ServiceNo=a.ServiceNo
                LEFT JOIN spTrnSOrdHdr c ON c.CompanyCode = a.CompanyCode AND c.BranchCode = a.BranchCode 
	                AND c.DocNo = b.SupplySlipNo
                LEFT JOIN spTrnSPickingHdr d ON d.CompanyCode = a.CompanyCode AND d.BranchCode = a.BranchCode 
	                AND d.PickingSlipNo = c.ExPickingSlipNo
                LEFT JOIN spTrnSPickingDtl e ON e.CompanyCode = a.CompanyCode AND e.BranchCode = a.BranchCode 
	                AND e.PickingSlipNo = d.PickingSlipNo
                LEFT JOIN gnMstLookUpDtl f ON f.CompanyCode = a.CompanyCode AND f.CodeId = 'TTSR' 
                    AND f.LookUpValue = c.TransType
                LEFT JOIN spTrnSLmpHdr g ON g.CompanyCode = a.CompanyCode AND g.BranchCode = a.BranchCode 
                    AND g.PickingSlipNo = d.PickingSlipNo
                WHERE 
                    a.CompanyCode     = @CompanyCode
                    AND a.BranchCode  = @BranchCode
                    AND a.ProductType = @ProductType
                    AND a.jobOrderNo  = @JobOrderNo
                    AND b.SupplySlipNo <> ''
                    AND b.PartSeq = (SELECT MAX(PartSeq) FROM SvTrnSrvItem WHERE CompanyCode = @CompanyCode AND BranchCode = @BranchCode
		                   AND ProductType = @ProductType AND ServiceNo = a.ServiceNo AND PartNo = b.PartNo)
                    AND d.Status <= 2
            )#t1
            SELECT Row_number() OVER(ORDER BY DocNo) No, * FROM #t1
            DROP TABLE #t1
GO
CREATE procedure [dbo].[uspfn_TaxUpdateTotal]
	@CompanyCode nvarchar(25),
	@BranchCode nvarchar(25),
	@ProductType nvarchar(2),
	@Period datetime 

  as
  begin

update gnTaxPPN
set PPNStd= (
                isnull((	select	case when PPNStd > 0 then 0 else PPNStd end PPNStd
			                from	gnTaxPPN
			                where	CompanyCode= a.CompanyCode and BranchCode= a.BranchCode
					                and ProductType= a.ProductType
					                and PeriodYear = year(dateadd(month,-1,@Period))
					                and PeriodMonth = month(dateadd(month,-1,@Period)) 
					                and TaxType= '5'),0) +
                isnull((	select	sum(PPNStd)
							from	gnTaxPPN 
							where	CompanyCode= a.CompanyCode and BranchCode= a.BranchCode
					                and ProductType= a.ProductType
					                and PeriodYear = year(@Period)
					                and PeriodMonth = month(@Period) 
									and TaxType in ('1','2')),0)-
                isnull((	select	sum(PPNStd) 
							from	gnTaxPPN 
							where	CompanyCode= a.CompanyCode and BranchCode= a.BranchCode
					                and ProductType= a.ProductType
					                and PeriodYear = year(@Period)
					                and PeriodMonth = month(@Period) 
									and TaxType in ('3','4')),0)
            )
,PPNSdh= (
                isnull((	select	case when PPNSdh > 0 then 0 else PPNSdh end PPNSdh
			                from	gnTaxPPN
			                where	CompanyCode= a.CompanyCode and BranchCode= a.BranchCode
					                and ProductType= a.ProductType
					                and PeriodYear = year(dateadd(month,-1,@Period))
					                and PeriodMonth = month(dateadd(month,-1,@Period)) 
					                and TaxType= '5'),0) +
                isnull((	select	sum(PPNSdh)
							from	gnTaxPPN 
							where	CompanyCode= a.CompanyCode and BranchCode= a.BranchCode
					                and ProductType= a.ProductType
					                and PeriodYear = year(@Period)
					                and PeriodMonth = month(@Period) 
									and TaxType in ('1','2')),0)-
                isnull((	select	sum(PPNSdh) 
							from	gnTaxPPN 
							where	CompanyCode= a.CompanyCode and BranchCode= a.BranchCode
					                and ProductType= a.ProductType
					                and PeriodYear = year(@Period)
					                and PeriodMonth = month(@Period) 
									and TaxType in ('3','4')),0)
            )
from gnTaxPPN a
where
    CompanyCode= @CompanyCode
	AND BranchCode = case @BranchCode when '' then BranchCode else @BranchCode end 
    and ProductType= @ProductType and PeriodYear = year(@Period)
    and PeriodMonth = month(@Period) and TaxType = '5'
	end
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquirySalesOrder] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @SODateFrom DateTime,
 @SODateTo DateTime,
 @NoSOFrom varchar(100),
 @NoSOTo varchar(100),
 @CustomerCodeFrom varchar(100),
 @CustomerCodeTo varchar(100),
 @SalesmanFrom varchar(100),
 @SalesmanTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT 
a.SONo, 
convert(varchar(20),a.SODate,106) as SODate, 
a.RefferenceNo, a.CustomerCode,  case a.SalesType when ''0'' then ''W'' when ''1'' then ''D'' end as SalesType,
case when year(a.RefferenceDate) = ''1900'' then '''' else convert(varchar(20),a.RefferenceDate,106) end as RefferenceDate, 
b.CustomerName, b.Address1 + '' '' + b.Address2 + '' '' + b.Address3 + '' '' + b.Address4 as Address, 
c.EmployeeName AS SalesmanName, d.RefferenceDesc1 AS WareHouseName, 
e.CustomerName AS BillTo, f.CustomerName AS ShipTo, g.RefferenceDesc1 AS GroupPriceName, a.Remark, 
CASE
WHEN a.Status = 0 THEN ''Open''
WHEN a.Status = 1 THEN ''Printed''
WHEN a.Status = 2 THEN ''Approved''
WHEN a.Status = 3 THEN ''Canceled''
WHEN a.Status = 4 THEN ''Rejected''
WHEN a.Status = 9 THEN ''Finished''
END as Status 
FROM 
	omTrSalesSO a
LEFT JOIN 
	GnMstCustomer b ON b.CompanyCode = a.CompanyCode AND b.CustomerCode = a.CustomerCode
LEFT JOIN 
	GnMstEmployee c ON c.CompanyCode = a.CompanyCode AND c.BranchCode = a.BranchCode AND c.EmployeeID = a.Salesman
LEFT JOIN 
	OmMstRefference d ON d.CompanyCode = a.CompanyCode AND d.RefferenceCode = a.WareHouseCode AND d.RefferenceType = ''WARE''
LEFT JOIN 
	GnMstCustomer e ON e.CompanyCode = a.CompanyCode AND e.CustomerCode = a.BillTo
LEFT JOIN 
	GnMstCustomer f ON f.CompanyCode = a.CompanyCode AND f.CustomerCode = a.ShipTo
LEFT JOIN 
	OmMstRefference g ON g.CompanyCode = a.CompanyCode AND g.RefferenceCode = a.GroupPriceCode AND g.RefferenceType = ''GRPR''
Where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if year(@SODateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.SODate between ''' + convert(varchar(50),@SODateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@SODateTo) + ''''

if len(rtrim(@NoSOFrom)) > 0
   set @pQuery = @pQuery + ' and a.SONo between ''' + rtrim(@NoSOFrom) + '''' + ' and ' + '''' + rtrim(@NoSOTo) + ''''

if len(rtrim(@CustomerCodeFrom)) > 0
   set @pQuery = @pQuery + ' and a.CustomerCode between ''' + rtrim(@CustomerCodeFrom) + '''' + ' and ' + '''' + rtrim(@CustomerCodeTo) + ''''

if len(rtrim(@SalesmanFrom)) > 0
   set @pQuery = @pQuery + ' and a.Salesman between ''' + rtrim(@SalesmanFrom) + '''' + ' and ' + '''' + rtrim(@SalesmanTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + ''''+ ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.SONo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
CREATE procedure [dbo].[uspfn_omSlsBPKLkpMdlCode]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),  
 @DONo varchar(15) 
)  
AS  
BEGIN  
--exec uspfn_omSlsDoLkpMdlCode 6006410,600641001,''
SELECT DISTINCT  
	a.CompanyCode
	,a.SalesModelCode
	,a.SalesModelDesc
	,a.FakturPolisiDesc
	,a.EngineCode
	,a.PpnBmCodeBuy
	,a.PpnBmPctBuy
	,a.PpnBmCodeSell
	,a.PpnBmPctSell
	,a.PpnBmCodePrincipal
	,a.PpnBmPctPrincipal
	,a.Remark
	,a.BasicModel
	,a.TechnicalModelCode
	,a.ProductType
	,a.TransmissionType
	,a.IsChassis
	,a.IsCbu
	,a.SMCModelCode
	,a.GroupCode
	,a.TypeCode
	,a.CylinderCapacity
	,a.fuel
	,a.ModelPrincipal
	,a.Specification
	,a.ModelLine
	,a.Status
	,a.CreatedBy
	,a.CreatedDate
	,a.LastUpdateBy
	,a.LastUpdateDate
	,a.IsLocked
	,a.LockedBy
	,a.LockedDate
	,a.MarketModelCode
	,a.GroupMarketModel
	,a.ColumnMarketModel
FROM omMstModel a
INNER JOIN OmTrSalesDODetail b
ON b.CompanyCode = a.CompanyCode
AND b.SalesModelCode = a.SalesModelCode
WHERE a.CompanyCode = @CompanyCode
AND b.BranchCode = @BranchCode
AND b.DONo = @DONo
AND b.StatusBPK = '0'
ORDER BY a.SalesModelCode ASC
end
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryPurchaseReturn] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @ReturnDateFrom DateTime,
 @ReturnDateTo DateTime,
 @HPPNoFrom varchar(100),
 @HPPNoTo varchar(100),
 @NoReturnFrom varchar(100),
 @NoReturnTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'
SELECT DISTINCT
a.ReturnNo, 
convert(varchar(20),a.ReturnDate,106) as ReturnDate, 
a.RefferenceNo, 
case when year(a.RefferenceDate) = ''1900'' then '''' else convert(varchar(20),a.RefferenceDate,106) end as RefferenceDate, 
a.HPPNo, a.RefferenceFakturPajakNo, a.Remark, 
CASE WHEN a.Status = 0 THEN ''Open''
WHEN a.Status = 1 THEN ''Printed''
WHEN a.Status = 2 THEN ''Approved''
WHEN a.Status = 3 THEN ''Canceled''
WHEN a.Status = 9 THEN ''Finished''
END  AS Status
FROM 
omTrPurchaseReturn a
where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if year(@ReturnDateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.ReturnDate between ''' + convert(varchar(50),@ReturnDateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@ReturnDateTo) + ''''

if len(rtrim(@HPPNoFrom)) > 0
   set @pQuery = @pQuery + ' and a.HPPNo between ''' + rtrim(@HPPNoFrom) + '''' + ' and ' + '''' + rtrim(@HPPNoTo) + ''''

if len(rtrim(@NoReturnFrom)) > 0
   set @pQuery = @pQuery + ' and a.ReturnNo between ''' + rtrim(@NoReturnFrom) + '''' + ' and ' + '''' + rtrim(@NoReturnTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' + ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.ReturnNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
CREATE PROCEDURE [dbo].[sp_upgraddiagrams]
	AS
	BEGIN
		IF OBJECT_ID(N'dbo.sysdiagrams') IS NOT NULL
			return 0;
	
		CREATE TABLE dbo.sysdiagrams
		(
			name sysname NOT NULL,
			principal_id int NOT NULL,	-- we may change it to varbinary(85)
			diagram_id int PRIMARY KEY IDENTITY,
			version int,
	
			definition varbinary(max)
			CONSTRAINT UK_principal_name UNIQUE
			(
				principal_id,
				name
			)
		);


		/* Add this if we need to have some form of extended properties for diagrams */
		/*
		IF OBJECT_ID(N'dbo.sysdiagram_properties') IS NULL
		BEGIN
			CREATE TABLE dbo.sysdiagram_properties
			(
				diagram_id int,
				name sysname,
				value varbinary(max) NOT NULL
			)
		END
		*/

		IF OBJECT_ID(N'dbo.dtproperties') IS NOT NULL
		begin
			insert into dbo.sysdiagrams
			(
				[name],
				[principal_id],
				[version],
				[definition]
			)
			select	 
				convert(sysname, dgnm.[uvalue]),
				DATABASE_PRINCIPAL_ID(N'dbo'),			-- will change to the sid of sa
				0,							-- zero for old format, dgdef.[version],
				dgdef.[lvalue]
			from dbo.[dtproperties] dgnm
				inner join dbo.[dtproperties] dggd on dggd.[property] = 'DtgSchemaGUID' and dggd.[objectid] = dgnm.[objectid]	
				inner join dbo.[dtproperties] dgdef on dgdef.[property] = 'DtgSchemaDATA' and dgdef.[objectid] = dgnm.[objectid]
				
			where dgnm.[property] = 'DtgSchemaNAME' and dggd.[uvalue] like N'_EA3E6268-D998-11CE-9454-00AA00A3F36E_' 
			return 2;
		end
		return 1;
	END
GO
EXEC sys.sp_addextendedproperty @name=N'microsoft_database_tools_support', @value=N'1' ,@level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'sp_upgraddiagrams'
GO

create procedure [dbo].[usprpt_SvRpTrn010A]      
 @CompanyCode varchar(20),       
 @BranchCode varchar(20),      
 @ProductType varchar(5),      
 @PoliceRegNo varchar(max),      
 @ChassisCode varchar(max),      
 @ChassisNo varchar(max),      
 @BasicModel varchar(max),      
 @JobOrderDate datetime      
       
AS      
BEGIN      
 SET NOCOUNT ON;      
      
 select @JobOrderDate as StartServiceDate, data.*      
   
 from      
 (      
  select vehcl.PoliceRegNo      
    , vehcl.ChassisNo       
    , vehcl.ChassisCode      
    , vehcl.EngineNo      
    , vehcl.EngineCode       
    , vehcl.DealerCode + ' - ' + dealer.CustomerName Dealer      
    , vehcl.CustomerCode + ' - ' + cust.CustomerName Customer      
    , vehcl.isActive      
    , vehcl.BasicModel      
    , vehcl.TransmissionType      
    , vehcl.LastServiceOdometer      
    , vehcl.LastServiceDate      
    , vehcl.FakturPolisiDate as FakturPajakDate      
    , vehcl.ProductionYear      
    , colourRef.RefferenceDesc1 Colour      
--    , srv.JobOrderNo      
    , inv.JobOrderNo      
    , inv.JobOrderDate       
    , inv.InvoiceNo      
    , inv.InvoiceDate      
    , inv.Odometer      
    , inv.ServiceRequestDesc      
    , inv.FPJNo      
    , inv.FPJDate      
    , invTask.OperationNo Kode      
    , mstTask.Description      
    ,case invMech.MechanicId when (      
     select top 1 mechanic.MechanicID      
     from svTrnInvMechanic mechanic      
     where       
      mechanic.CompanyCode = invTask.CompanyCode      
      and mechanic.BranchCode = invTask.BranchCode      
      and mechanic.ProductType = invTask.ProductType      
      and mechanic.InvoiceNo = invTask.InvoiceNo      
      and mechanic.OperationNo = invTask.OperationNo      
    ) then invTask.OperationHour else 0 end Qty      
    ,case invMech.MechanicId when (      
     select top 1 mechanic.MechanicID      
     from svTrnInvMechanic mechanic      
     where       
      mechanic.CompanyCode = invTask.CompanyCode      
      and mechanic.BranchCode = invTask.BranchCode      
      and mechanic.ProductType = invTask.ProductType      
      and mechanic.InvoiceNo = invTask.InvoiceNo      
      and mechanic.OperationNo = invTask.OperationNo      
    ) then invTask.OperationCost else 0 end Amt      
--    , invTask.OperationHour Qty      
--    , invTask.OperationCost Amt      
    , emp.EmployeeName MechanicID      
  from svMstCustomerVehicle vehcl with(nolock, nowait)      
    left join gnMstCustomer dealer with(nolock, nowait) on vehcl.CompanyCode = dealer.CompanyCode      
     and vehcl.DealerCode = dealer.CustomerCode      
    left join gnMstCustomer cust with(nolock, nowait) on vehcl.CompanyCode = cust.CompanyCode      
     and vehcl.CustomerCode = cust.CustomerCode      
    left join svTrnInvoice inv with(nolock, nowait) on vehcl.CompanyCode = inv.CompanyCode       
     and vehcl.PoliceRegNo = inv.PoliceRegNo      
     and vehcl.CustomerCode = inv.CustomerCode      
     and vehcl.ChassisCode = inv.ChassisCode      
     and vehcl.ChassisNo = inv.ChassisNo       
    left join svTrnService srv with(nolock, nowait) on vehcl.CompanyCode = srv.CompanyCode       
     and vehcl.PoliceRegNo = srv.PoliceRegNo      
     and vehcl.CustomerCode = srv.CustomerCode      
     and inv.JobOrderNo = srv.JobOrderNo      
    inner join svTrnInvTask invTask with(nolock, nowait) on inv.CompanyCode = invTask.CompanyCode      
     and inv.BranchCode = invTask.BranchCode      
     and inv.ProductType = invTask.ProductType      
     and inv.InvoiceNo = invTask.InvoiceNo      
    left join svTrnInvMechanic invMech with(nolock, nowait) on invTask.CompanyCode = invMech.CompanyCode      
     and invTask.BranchCode = invMech.BranchCode      
     and invTask.ProductType = invMech.ProductType      
     and invTask.InvoiceNo = invMech.InvoiceNo      
     and invTask.OperationNo = invMech.OperationNo      
    left join GnMstEmployee emp with(nolock, nowait) on invMech.CompanyCode = emp.CompanyCode      
     and invMech.BranchCode = emp.BranchCode      
     and invMech.MechanicID = emp.EmployeeID      
    left join svMstTask mstTask with(nolock, nowait) on invTask.CompanyCode = mstTask.CompanyCode      
     and invTask.ProductType = mstTask.ProductType            
     and invTask.OperationNo = mstTask.OperationNo       
     and srv.JobType = mstTask.JobType       
     and srv.BasicModel = mstTask.BasicModel       
    left join omMstRefference colourRef with(nolock, nowait) on vehcl.CompanyCode = colourRef.CompanyCode       
     and vehcl.ColourCode = colourRef.RefferenceCode      
     and colourRef.RefferenceType = 'COLO'       
  where vehcl.CompanyCode = @CompanyCode          
   and inv.JobOrderDate >= @JobOrderDate          
   and inv.BranchCode = @BranchCode      
   and inv.ProductType = @ProductType       
  union all      
  select vehcl.PoliceRegNo      
    , vehcl.ChassisNo       
    , vehcl.ChassisCode      
    , vehcl.EngineNo      
    , vehcl.EngineCode      
    , vehcl.DealerCode + ' - ' + dealer.CustomerName Dealer      
    , vehcl.CustomerCode + ' - ' + cust.CustomerName Customer      
    , vehcl.isActive      
    , vehcl.BasicModel      
    , vehcl.TransmissionType      
    , vehcl.LastServiceOdometer      
    , vehcl.LastServiceDate      
    , vehcl.FakturPolisiDate as FakturPajakDate      
    , vehcl.ProductionYear      
    , colourRef.RefferenceDesc1 Colour      
--    , srv.JobOrderNo      
    , inv.JobOrderNo      
    , inv.JobOrderDate      
    , inv.InvoiceNo      
    , inv.InvoiceDate      
    , inv.Odometer      
    , inv.ServiceRequestDesc      
    , inv.FPJNo      
    , inv.FPJDate      
    , invItem.PartNo Kode      
    , itemInfo.PartName [Description]      
    , isnull(invItem.SupplyQty,0) - isnull(invItem.ReturnQty,0) Qty      
    , (isnull(invItem.SupplyQty,0) - isnull(invItem.ReturnQty,0)) * isnull(invItem.RetailPrice,0) Amt      
    , '' MechanicID      
  from svMstCustomerVehicle vehcl with(nolock, nowait)      
    left join gnMstCustomer dealer with(nolock, nowait) on vehcl.CompanyCode = dealer.CompanyCode      
     and vehcl.DealerCode = dealer.CustomerCode      
    left join gnMstCustomer cust with(nolock, nowait) on vehcl.CompanyCode = cust.CompanyCode      
     and vehcl.CustomerCode = cust.CustomerCode      
    left join svTrnInvoice inv with(nolock, nowait) on vehcl.CompanyCode = inv.CompanyCode       
     and vehcl.PoliceRegNo = inv.PoliceRegNo      
     and vehcl.CustomerCode = inv.CustomerCode      
     and vehcl.ChassisCode = inv.ChassisCode      
     and vehcl.ChassisNo = inv.ChassisNo           
--    left join svTrnService srv with(nolock, nowait) on vehcl.CompanyCode = srv.CompanyCode       
--     and vehcl.PoliceRegNo = srv.PoliceRegNo      
--     and vehcl.CustomerCode = srv.CustomerCode      
--     and inv.JobOrderNo = srv.JobOrderNo      
    inner join svTrnInvItem invItem with(nolock, nowait) on inv.CompanyCode = invItem.CompanyCode      
     and inv.BranchCode = invItem.BranchCode       
     and inv.ProductType = invItem.ProductType       
     and inv.InvoiceNo = invItem.InvoiceNo      
    left join spMstItemInfo itemInfo with(nolock, nowait) on invItem.CompanyCode = itemInfo.CompanyCode      
     and invItem.PartNo = itemInfo.PartNo      
    left join omMstRefference colourRef with(nolock, nowait) on vehcl.CompanyCode = colourRef.CompanyCode       
     and vehcl.ColourCode = colourRef.RefferenceCode      
     and colourRef.RefferenceType = 'COLO'      
  where vehcl.CompanyCode = @CompanyCode      
    and inv.BranchCode = @BranchCode      
    and inv.ProductType = @ProductType      
    and inv.JobOrderDate >= @JobOrderDate      
      
 ) data      
 where PoliceRegNo=@PoliceRegNo 
 and ChassisCode= @ChassisCode 
 and ChassisNo=@ChassisNo 
 and BasicModel=@BasicModel
    
END
GO
CREATE procedure [dbo].[uspfn_omSoLkp] 
(
	@CompanyCode varchar(25),
	@BranchCode varchar(25)
)
as
 
 -- exec uspfn_omSoLkp '6159401000','6159401001'
 
 declare @DbMD as varchar(15)  
 declare @Sql as varchar(max) 
 declare @ssql as varchar(max) 
 
 set @DbMD = (select DbMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)  
 


 set @ssql='select * from gnMstCompanyMapping '

set @Sql= 'SELECT a.CompanyCode, a.BranchCode,
                a.SONo, a.SODate, a.SalesType, a.CustomerCode, a.TOPCode, a.Installment, a.FinalPaymentDate,
                a.TOPDays, a.BillTo, a.ShipTo, a.ProspectNo, a.SKPKNo, a.Salesman, a.WareHouseCode, a.isLeasing, 
                a.LeasingCo, a.GroupPriceCode, a.Insurance, a.PaymentType, a.PrePaymentAmt, a.PrePaymentBy, 
                a.CommissionBy, a.CommissionAmt, a.PONo, a.ContractNo, a.Remark, a.Status,
                a.SalesCoordinator, a.SalesHead, a.BranchManager, a.RefferenceNo,
                CASE convert(varchar, a.RefferenceDate, 111) when convert(varchar, ''1900/01/01'') 
                then '''' else convert(varchar, a.RefferenceDate, 111) end as RefferenceDates, 
                CASE convert(varchar, a.RefferenceDate, 111) when convert(varchar, ''1900/01/01'') 
                then ''undefined'' else convert(varchar, a.RefferenceDate, 111) end as RefferenceDate, 
                CASE convert(varchar, a.RequestDate, 111) when convert(varchar, ''1900/01/01'') 
                then ''undefined'' else convert(varchar, a.RequestDate, 111) end as RequestDate,
                CASE convert(varchar, a.PrePaymentDate, 111) when convert(varchar, ''1900/01/01'') 
                then ''undefined'' else convert(varchar, a.PrePaymentDate, 111) end as PrePaymentDate,
                e.Address1 + '' '' + e.Address2 + '' '' + e.Address3 + '' '' + e.Address4 as Address,
                case when year(a.RefferenceDate) <> 1900 then convert(bit,1) else convert(bit,0) end isC1,
                case when a.SKPKNo <> '''' then convert(bit,1) else convert(bit,0) end isC2,
                case when year(a.PrePaymentDate) <> 1900 then convert(bit,1) else convert(bit,0) end isC3,
                case when year(a.RequestDate) <> 1900 then convert(bit,1) else convert(bit,0) end isC4,
				(SELECT b.CustomerName
                        FROM gnMstCustomer b
                        WHERE a.CompanyCode = b.CompanyCode
						AND a.CustomerCode = b.CustomerCode)  
						AS CustomerName,
				(SELECT c.EmployeeName
                        FROM gnMstEmployee c
                        WHERE a.CompanyCode = c.CompanyCode AND a.BranchCode = c.BranchCode
					    AND a.Salesman = c.EmployeeID) as SalesmanName,
				(SELECT b.CustomerName
                        FROM gnMstCustomer b
                        WHERE a.CompanyCode = b.CompanyCode
						AND a.Shipto = b.CustomerCode)  
						AS ShipName,
                (SELECT b.CustomerName
                        FROM gnMstCustomer b
                        WHERE a.CompanyCode = b.CompanyCode
						AND a.LeasingCo = b.CustomerCode)  
						AS LeasingCoName,
				(SELECT c.EmployeeName
                        FROM gnMstEmployee c
                        WHERE a.CompanyCode = c.CompanyCode AND a.BranchCode = c.BranchCode
					    AND a.PrePaymentby = c.EmployeeID) as PrePaymentName,
				(SELECT d.RefferenceDesc1
                        FROM omMstRefference d
                        WHERE a.CompanyCode = d.CompanyCode
						AND d.RefferenceType = ''GRPR'' 
                        AND d.RefferenceCode = a.GroupPriceCode) AS GroupPriceName,
				(SELECT b.CustomerName
                        FROM gnMstCustomer b
                        WHERE a.CompanyCode = b.CompanyCode
						AND a.CustomerCode = b.CustomerCode)  
						AS BillName,
				(SELECT b.lookupvaluename
                        FROM '+@DbMD+'..gnMstLookUpDtl b
                        WHERE a.WareHouseCode = b.LookUpValue
						AND a.WareHouseCode = b.LookUpValue and CodeID =''MPWH'')  
						AS WareHouseName,
                (a.CustomerCode
                    + '' || ''
                    + (SELECT b.CustomerName
                        FROM gnMstCustomer b
                        WHERE a.CompanyCode = b.CompanyCode
						AND a.CustomerCode = b.CustomerCode))  
						AS Customer, 
                (a.Salesman
                    + '' || ''
                    + (SELECT c.EmployeeName
                        FROM gnMstEmployee c
                        WHERE a.CompanyCode = c.CompanyCode AND a.BranchCode = c.BranchCode
					    AND a.Salesman = c.EmployeeID))  AS Sales, 
                (a.GroupPriceCode
                    + '' || ''
                    + (SELECT d.RefferenceDesc1
                        FROM omMstRefference d
                        WHERE a.CompanyCode = d.CompanyCode
						AND d.RefferenceType = ''GRPR'' 
                        AND d.RefferenceCode = a.GroupPriceCode))  AS GroupPrice, 
                CASE a.Status when 0 then ''OPEN''
                                when 1 then ''PRINTED''
                                when 2 then ''APPROVED''
                                when 3 then ''DELETED''
                                when 4 then ''REJECTED''
                                when 9 then ''FINISHED'' END as Stat
                , CASE ISNULL(a.SalesType, 0) WHEN 0 THEN ''Wholesales'' ELSE ''Direct'' END AS TypeSales
                ,(select distinct x.TipeKendaraan
                    from pmKDP x
	                    left join gnMstEmployee b on x.CompanyCode=b.CompanyCode and x.BranchCode=b.BranchCode
		                    and x.EmployeeID=b.EmployeeID
	                    left join omTrSalesSO c on c.CompanyCode = x.CompanyCode 
		                    and c.BranchCode = x.BranchCode
		                    and c.ProspectNo = x.InquiryNumber
	                    left join omTrSalesInvoice d on d.CompanyCode = x.CompanyCode
		                    and d.BranchCode = x.BranchCode
		                    and d.SONo = c.SONo
	                    left join omTrSalesReturn e on e.CompanyCode = x.CompanyCode
		                    and e.BranchCode = x.BranchCode
		                    and e.InvoiceNo = d.InvoiceNo
                    where x.InquiryNumber=a.ProspectNo) as VehicleType
                FROM omTrSalesSO a
                INNER JOIN gnMstCustomer e
                ON a.CompanyCode = e.CompanyCode AND a.CustomerCode = e.CustomerCode
				order by a.SONo desc
				'
--print @Sql

exec (@Sql)
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE procedure [dbo].[usprpt_OmRpSalRgs033D]
	(
	@companycode varchar(max),
	@branchcode varchar(max),
	@period1 varchar(max),
	@period2 varchar(max),
	@ID int,
	@tipe varchar(1)
	)
AS
BEGIN
	
	if(@tipe='A')
		begin
			--table 1--
			insert into TempDailySales1
			select @ID, CompanyCode Company, BranchCode Branch, BranchName 
			from gnmstorganizationdtl where companycode = @companycode order by BranchCode;

			--table 2--
			insert into TempDailySales2
			select @ID ,a.CompanyCode Company
							, a.branchcode Branch
							, ltrim(isnull(c.salesmodeldesc,'')) Model
							, isnull(count(a.invoiceno),0) Nilai
						from omtrsalesinvoicevin a
						inner join omtrsalesinvoice b on b.companycode = a.companycode 
							and b.branchcode = a.branchcode
							and b.invoiceno = a.invoiceno 
						left join ommstmodel c on c.companycode = a.companycode 
							and c.salesmodelcode = a.salesmodelcode	
						where a.companycode = @companycode
							and b.status in (2,5)
							and convert(varchar, b.invoicedate, 112) between @period1 and @period2
						group by a.CompanyCode, a.BranchCode, ltrim(isnull(c.salesmodeldesc,''))
						union all
						select @ID,d.CompanyCode Company
							, e.branchcode Branch
							, ltrim(isnull(c.salesmodeldesc,'')) Model
							, isnull(sum(e.quantity),0)*-1 Nilai
						from omtrsalesreturn d
						left join omtrsalesreturndetailmodel e on d.companycode = e.companycode 
							and d.branchcode = e.branchcode
							and d.returnno = e.returnno 
						left join ommstmodel c on c.companycode = e.companycode 
							and c.salesmodelcode = e.salesmodelcode	
						where d.companycode =  @companycode
							and d.status in (2,5)
							and convert(varchar, d.returndate, 112) between @period1 and @period2
						group by d.CompanyCode, e.BranchCode, ltrim(isnull(c.salesmodeldesc,'')) ;
			end
	else
		begin
			--table 1--
			insert into TempDailySales1
			select @ID, CompanyCode Company, BranchCode Branch, BranchName 
			from gnmstorganizationdtl where companycode = @companycode order by BranchCode;

			--table 2--
			insert into TempDailySales2
			select @ID,a.CompanyCode Company
                        , a.branchcode Branch
                        , ltrim(a.salesmodelcode) Model
                        , isnull(count(a.invoiceno),0) Nilai
                    from omtrsalesinvoicevin a
                    inner join omtrsalesinvoice b on b.companycode = a.companycode 
                        and b.branchcode = a.branchcode
                        and b.invoiceno = a.invoiceno 
                    left join ommstmodel c on c.companycode = a.companycode 
                        and c.salesmodelcode = a.salesmodelcode	
                    where a.companycode = @companycode
                        and b.status in (2,5)
                        and convert(varchar, b.invoicedate, 112)  between @period1 and @period2
                    group by a.CompanyCode, a.BranchCode, ltrim(a.salesmodelcode)
                    union all
                    select @ID , d.CompanyCode Company
                        , e.branchcode Branch
                        , ltrim(e.salesmodelcode) Model
                        , isnull(sum(e.quantity),0)*-1 Nilai
                    from omtrsalesreturn d
                    left join omtrsalesreturndetailmodel e on d.companycode = e.companycode 
                        and d.branchcode = e.branchcode
                        and d.returnno = e.returnno 
                    left join ommstmodel c on c.companycode = e.companycode 
                        and c.salesmodelcode = e.salesmodelcode	
                    where d.companycode = @companycode
                        and d.status in (2,5)
                        and convert(varchar, d.returndate, 112) between @period1 and @period2
                    group by d.CompanyCode, e.BranchCode, ltrim(e.salesmodelcode)  ;
		end

	-- TABLE I --
	select companygovname company, isnull(address1,'-') addr1, isnull(address2,'-') addr2, isnull(address3,'-') addr3, phoneno telp 
	from gnmstcoprofile where companycode = @companycode and branchcode = @branchcode

	-- TABLE II --
	select * into #tBranch from (
	select distinct companycode company, branchcode branch from gnmstorganizationdtl where companycode = @companycode
	union all
	select company, branch from TempDailySales1 where ID=@ID) #tBranch
	
	select * from #tBranch order by company, branch 
	
	declare @tabModel AS table
	(
		company varchar(50),
		branch varchar(50),
		model varchar(max),
		nilai int
	)
	
	if (@tipe ='A')
	begin
		insert into @tabModel 
			select a.CompanyCode company
				, a.branchcode branch
				, ltrim(isnull(c.salesmodeldesc,'')) model
				, isnull(count(a.invoiceno),0) nilai
			from omtrsalesinvoicevin a
			inner join omtrsalesinvoice b on b.companycode = a.companycode 
				and b.branchcode = a.branchcode
				and b.invoiceno = a.invoiceno 
			left join ommstmodel c on c.companycode = a.companycode 
				and c.salesmodelcode = a.salesmodelcode	
			where a.companycode = @companycode
				and b.status in (2,5)
				and convert(varchar, b.invoicedate, 112) between @period1 and @period2
			group by a.CompanyCode, a.BranchCode, ltrim(isnull(c.salesmodeldesc,''))
			union all
			select d.CompanyCode company
				, e.branchcode branch
				, ltrim(isnull(c.salesmodeldesc,'')) model
				, isnull(sum(e.quantity),0)*-1 nilai
			from omtrsalesreturn d
			left join omtrsalesreturndetailmodel e on d.companycode = e.companycode 
				and d.branchcode = e.branchcode
				and d.returnno = e.returnno 
			left join ommstmodel c on c.companycode = e.companycode 
				and c.salesmodelcode = e.salesmodelcode	
			where d.companycode = @companycode
				and d.status in (2,5)
				and convert(varchar, d.returndate, 112) between @period1 and @period2
			group by d.CompanyCode, e.BranchCode, ltrim(isnull(c.salesmodeldesc,''))
				
		insert into @tabModel
			select company, branch, model, nilai from TempDailySales2 where ID=@ID		
	end
	else
	begin
		insert into @tabModel 
			select a.CompanyCode company
				, a.branchcode branch
				, ltrim(a.salesmodelcode) model
				, isnull(count(a.invoiceno),0) nilai
			from omtrsalesinvoicevin a
			inner join omtrsalesinvoice b on b.companycode = a.companycode 
				and b.branchcode = a.branchcode
				and b.invoiceno = a.invoiceno 
			left join ommstmodel c on c.companycode = a.companycode 
				and c.salesmodelcode = a.salesmodelcode	
			where a.companycode = @companycode
				and b.status in (2,5)
				and convert(varchar, b.invoicedate, 112) between @period1 and @period2
			group by a.CompanyCode, a.BranchCode, ltrim(a.salesmodelcode)
			union all
			select d.CompanyCode company
				, e.branchcode branch
				, ltrim(e.salesmodelcode) model
				, isnull(sum(e.quantity),0)*-1 nilai
			from omtrsalesreturn d
			left join omtrsalesreturndetailmodel e on d.companycode = e.companycode 
				and d.branchcode = e.branchcode
				and d.returnno = e.returnno 
			left join ommstmodel c on c.companycode = e.companycode 
				and c.salesmodelcode = e.salesmodelcode	
			where d.companycode = @companycode
				and d.status in (2,5)
				and convert(varchar, d.returndate, 112) between @period1 and @period2
			group by d.CompanyCode, e.BranchCode, ltrim(e.salesmodelcode)
	
		insert into @tabModel
			select company, branch, model, nilai from TempDailySales2 where ID=@ID
	end
	
	select * into #tModel from (
		select * from @tabModel 
	) #tModel	
	
	-- Per Branch --
	----------------
	declare @1 varchar(max)
	declare @2 int
	declare @seq int
	declare @columns varchar(max)
	
	declare @colResult varchar(max)
	declare @columnsResult2 varchar(max)
	
	declare @columns2 varchar(max)
	declare @columns3 varchar(max)
	declare @columns4 varchar(max)
	declare @query varchar(max)

	set @columns = ''
	set @columns2 = ''
	set @columns3 = ''
	set @columns4 = ''

	set @2 = (select count(*) from #tBranch)
	set @seq = 1

	declare data cursor for
		select distinct branch from #tBranch
	open data
	fetch next from data into @1
	while @@fetch_status = 0 
	begin
		set @columns = @columns+'['+@1+']'	
		set @columns2 = @columns2+'isnull(['+@1+'],0) ['+@1+']'
		set @columns3 = @columns3+'isnull(['+@1+'],0)'
		set @columns4 = @columns4+'isnull(a.['+@1+'],0)'

		set @seq = @seq+1
		if (@seq <= @2)
		begin
			set @columns = @columns+','
			set @columns2 = @columns2+', '
			set @columns3 = @columns3+'+'
			set @columns4 = @columns4+'+'
		end	 
		fetch next from data into @1
	end
	close data
	deallocate data;

	--set @columns2 = @columns3
	set @columns2 = @columns3+' AS GRAND TOTAL'+','+@columns2
	
	-- Per Company --
	-----------------
	declare @columnsSub varchar(max)
	declare @columnsSubDesc varchar(max)
	declare @columnsSub2 varchar(max)
	
	set @columnsSub = ''
	set @columnsSubDesc = ''
	set @columnsSub2 = ''
	
	set @2 = (select count( distinct company) from #tBranch)
	set @seq = 1

	declare dataCom cursor for
		select distinct company from #tBranch
	open dataCom
	
	fetch next from dataCom into @1
	while @@fetch_status = 0 
	begin
		set @columnsSub = @columnsSub+'['+@1+']'	
		set @columnsSubDesc = @columnsSubDesc+'['+@1+'] as Total ('+@1+')'	
		set @columnsSub2 = @columnsSub2+'isnull(['+@1+'],0) ['+@1+']'

		set @seq = @seq+1
		if (@seq <= @2)
		begin
			set @columnsSub = @columnsSub+', '
			set @columnsSubDesc = @columnsSubDesc+', '
			set @columnsSub2 = @columnsSub2+', '
		end	 
		fetch next from dataCom into @1
	end
	close dataCom
	deallocate dataCom
	
	declare data1 cursor for
		select distinct company from #tBranch order by company
	
	declare @var1 varchar(max)
	declare @var2 varchar(max)
	set @colResult=''
	
	open data1
	fetch next from data1 into @var1
	while @@fetch_status=0
	begin
		declare @tot int
		set @tot = (select count(branch) from #tBranch where company=@var1)		
		set @seq=1
		
		declare data2 cursor for
			select branch from #tBranch where company=@var1 order by branch			
		open data2
		fetch next from data2 into @var2
		while @@fetch_status=0
		begin
			set @colResult = @colResult+'a.['+@var2+']'
			
			set @seq=@seq+1			
			if (@seq<=@tot)
				set @colresult=@colresult+','
			else
				set @colresult=@colresult+',b.['+@var1+'] as TOTAL ['+@var1+'],'
				
			fetch next from data2 into @var2
		end
		close data2
		deallocate data2		
		fetch next from data1 into @var1
	end
	
	close data1
	deallocate data1
	
	set @colResult = (select left(@colResult,len(@colResult)-1))
	
	-- TABLE III --	
	set @query = '
	select * into #tbl1 from (
	select model, '''+@columns2+null+'''
	from (
		select branch, model, sum(nilai) nilai
		from (
			select * from #tModel
		) x
		group by branch, model
	)p pivot
	(
		sum(nilai) for branch in ('''+@columns+null+''')
	)AS pvt 
	)#tbl1	
	
	select * into #tbl2 from (
	select model, '''+@columnsSub2+'''
	from (
		select company, model, sum(nilai) nilai
		from (
			select * from #tModel
		) x
		group by company, model 
	)p pivot
	(
		sum(nilai) for company in ('''+@columnsSub+''')
	) AS pvt 
	)#tbl2
	
	select a.model, '''+@columns4+''' as ''GRAND TOTAL'''+', '''+@colResult+'''
	from #tbl1 a
	left join #tbl2 b on a.model=b.model	
	
	drop table #tbl1
	drop table #tbl2
	'
	print (@query)
	exec (@query)
	
	-- Table IV --
	select branchcode+' : '+branchname keterangan from gnmstorganizationdtl 
		where companycode = @companycode
	union
	select Branch+' : '+BranchName keterangan from TempDailySales1 

	-- Table V -- Total Per Branch
	set @query = 'select '''+@columns2+null+'''
	from (
		select branch, sum(nilai) nilai
		from (
			select * from #tModel
		) x
		group by branch
	)p pivot
	(
	sum(nilai) for branch in ('''+@columns+null+''')
	) AS pvt '
	print (@query)
	exec (@query)
	
	-- Table VI --
	select company, sum(nilai) nilai from #tModel group by company order by company
	
	drop table #tBranch
	drop table #tModel
	
	delete TempDailySales1 where ID=@ID
	delete TempDailySales2 where ID=@ID

END
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquirySalesReturn] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @ReturnDateFrom DateTime,
 @ReturnDateTo DateTime,
 @NoInvFrom varchar(100),
 @NoInvTo varchar(100),
 @NoReturnFrom varchar(100),
 @NoReturnTo varchar(100),
 @CustomerFrom varchar(100),
 @CustomerTo varchar(100),
 @WarehouseFrom varchar(100),
 @WarehouseFromTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT 
a.ReturnNo, b.CustomerCode, b.Address1 + '' '' + b.Address2 + '' '' + b.Address3 + '' '' + b.Address4 as Address,
convert(varchar(20),a.ReturnDate,106) as ReturnDate, 
a.ReferenceNo, 
case when year(a.ReferenceDate) = ''1900'' then '''' else convert(varchar(20),a.ReferenceDate,106) end as ReferenceDate, 
a.InvoiceNo, 
case when year(a.InvoiceDate) = ''1900'' then '''' else convert(varchar(20),a.InvoiceDate,106) end as InvoiceDate, 
b.CustomerName, a.FakturPajakNo, 
case when year(a.FakturPajakDate) = ''1900'' then '''' else convert(varchar(20),a.FakturPajakDate,106) end as FakturPajakDate, 
c.RefferenceDesc1 AS WareHouseName, a.Remark, 
CASE
WHEN a.Status = 0 THEN ''Open''
WHEN a.Status = 1 THEN ''Printed''
WHEN a.Status = 2 THEN ''Approved''
WHEN a.Status = 3 THEN ''Deleted''
WHEN a.Status = 9 THEN ''Finished''
END as Status 
FROM 
	omTrSalesReturn a
LEFT JOIN 
	GnMstCustomer b ON b.CompanyCode = a.CompanyCode AND b.CustomerCode = a.CustomerCode
LEFT JOIN 
	OmMstRefference c ON c.CompanyCode = a.CompanyCode AND c.RefferenceCode = a.WareHouseCode AND c.RefferenceType = ''WARE''
Where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if year(@ReturnDateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.ReturnDate between ''' + convert(varchar(50),@ReturnDateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@ReturnDateTo) + ''''

if len(rtrim(@NoInvFrom)) > 0
   set @pQuery = @pQuery + ' and a.InvoiceNo between ''' + rtrim(@NoInvFrom) + '''' + ' and ' + '''' + rtrim(@NoInvTo) + ''''

if len(rtrim(@NoReturnFrom)) > 0
   set @pQuery = @pQuery + ' and a.ReturnNo between ''' + rtrim(@NoReturnFrom) + '''' + ' and ' + '''' + rtrim(@NoReturnTo) + ''''

if len(rtrim(@CustomerFrom)) > 0
   set @pQuery = @pQuery + ' and a.CustomerCode between ''' + rtrim(@CustomerFrom) + '''' + ' and ' + '''' + rtrim(@CustomerTo) + ''''

if len(rtrim(@WarehouseFrom)) > 0
   set @pQuery = @pQuery + ' and a.WareHouseCode between ''' + rtrim(@WarehouseFrom) + '''' + ' and ' + '''' + rtrim(@WarehouseFrom) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' + ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.InvoiceNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquirySalesReq] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @Jenis varchar(10),
 @PermohonanDateFrom DateTime,
 @PermohonanDateTo DateTime,
 @NoPermohonanFrom varchar(100),
 @NoPermohonanTo varchar(100),
 @CustomerCode varchar(100),
 @CustomerCodeTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT a.ReqNo,convert(varchar(20),a.ReqDate,106) as ReqDate, a.ReffNo, case when year(a.ReffDate) = ''1900'' then '''' else convert(varchar(20),a.ReffDate,106) end as ReffDate, 
b.CustomerName AS SubDealerName, CASE ISNULL(StatusFaktur, ''0'') WHEN ''0'' THEN ''NON FAKTUR'' WHEN ''1'' THEN ''FAKTUR'' END AS StatusFaktur,
a.Remark, 
CASE
	WHEN a.Status = 0 THEN ''Open''
	WHEN a.Status = 1 THEN ''Printed''
	WHEN a.Status = 2 THEN ''Approved''
	WHEN a.Status = 3 THEN ''Deleted''
	WHEN a.Status = 9 THEN ''Finished''
	END as Status 
FROM omTrSalesReq a
LEFT JOIN gnMstCustomer b ON b.CompanyCode = a.CompanyCode AND b.CustomerCode = a.SubDealerCode
where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if len(rtrim(@Jenis)) > 0
   set @pQuery = @pQuery + ' and a.StatusFaktur = ''' + rtrim(@Jenis) + ''''

if year(@PermohonanDateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.ReqDate between ''' + convert(varchar(50),@PermohonanDateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@PermohonanDateTo) + ''''

if len(rtrim(@NoPermohonanFrom)) > 0
   set @pQuery = @pQuery + ' and a.ReqNo between ''' + rtrim(@NoPermohonanFrom) + '''' + ' and ' + '''' + rtrim(@NoPermohonanTO) + ''''

if len(rtrim(@CustomerCode)) > 0
   set @pQuery = @pQuery + ' and a.SubDealerCode between ''' + rtrim(@CustomerCode) + '''' + ' and ' + '''' + rtrim(@CustomerCodeTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' + ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.ReqNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE procedure [dbo].[usprpt_OmRpSalRgs033C] 
	@companycode varchar(max),
	@branchcode varchar(max),
	@period1 varchar(max),
	@period2 varchar(max),
	@tipe varchar(1)
AS
BEGIN
	declare @1 varchar(max)
	declare @2 int
	declare @seq int
	declare @columns varchar(max)
	declare @columns2 varchar(max)
	declare @columns3 varchar(max)
	declare @query varchar(max)

	-- TABLE I --
	select companygovname company, isnull(address1,'-') addr1, isnull(address2,'-') addr2, isnull(address3,'-') addr3, phoneno telp 
	from gnmstcoprofile where companycode = @companycode and branchcode = @branchcode

	-- TABLE II --
	select distinct convert(varchar, right(branchcode,2)) code from gnmstorganizationdtl where companycode = @companycode
	
	if(@tipe='A')

	begin
	-- TABLE III --

	--declare @1 varchar(max)
	--declare @2 int
	--declare @seq int
	--declare @columns varchar(max)
	--declare @columns2 varchar(max)
	--declare @columns3 varchar(max)
	--declare @query varchar(max)

	set @columns = ''
	set @columns2 = ''
	set @columns3 = ''

	set @2 = (select count(*) from gnmstorganizationdtl)
	set @seq = 1

	declare data cursor for
		select distinct cast(right(branchcode,2) as varchar) code from gnmstorganizationdtl
	open data
	fetch next from data into @1
	while @@fetch_status = 0 
	begin
		set @columns = @columns+'['+@1+']'	
		set @columns2 = @columns2+'isnull(['+@1+'],0) ['+@1+']'
		set @columns3 = @columns3+'isnull(['+@1+'],0)'

		set @seq = @seq+1
		if (@seq <= @2)
		begin
			set @columns = @columns+', '
			set @columns2 = @columns2+', '
			set @columns3 = @columns3+'+'
		end
	 
		fetch next from data into @1
	end
	close data
	deallocate data

	set @columns2 = @columns2+', '+@columns3+' as Total'

	set @query = '
	select model, '+@columns2+'
	from (
		select code,model,sum(nilai) nilai
		from (
			select cast(right(a.branchcode,2) as varchar) code
				, ltrim(c.salesmodeldesc) model
				, isnull(count(a.invoiceno),0) nilai
			from omtrsalesinvoicevin a
			inner join omtrsalesinvoice b on b.companycode = a.companycode 
				and b.branchcode = a.branchcode
				and b.invoiceno = a.invoiceno 
			left join ommstmodel c on c.companycode = a.companycode 
				and c.salesmodelcode = a.salesmodelcode	
			where a.companycode = '''+@companycode+''' 
				and b.status in (2,5)
				and convert(varchar, b.invoicedate, 112) between '''+@period1+''' and '''+@period2+'''
			group by a.BranchCode, ltrim(c.salesmodeldesc)
			union ALL
			select cast(right(e.branchcode,2) as varchar) code
				, ltrim(c.salesmodeldesc) model
				, isnull(sum(e.quantity),0)*-1 nilai
			from omtrsalesreturn d
			left join omtrsalesreturndetailmodel e on d.companycode = e.companycode 
				and d.branchcode = e.branchcode
				and d.returnno = e.returnno 
			left join ommstmodel c on c.companycode = e.companycode 
				and c.salesmodelcode = e.salesmodelcode	
			where d.companycode = '''+@companycode+''' 
				and d.status in (2,5)
				and convert(varchar, d.returndate, 112) between '''+@period1+''' and '''+@period2+'''
			group by e.BranchCode, ltrim(c.salesmodeldesc)
		) x
		group by code,model
	)p pivot
	(
	sum(nilai) for code in ('+@columns+')
	) as pvt 
	'
	print (@query)
	exec (@query)
	end
	
	else
	begin
		-- TABLE III --
	--declare @1 varchar(max)
	--declare @2 int
	--declare @seq int
	--declare @columns varchar(max)
	--declare @columns2 varchar(max)
	--declare @columns3 varchar(max)
	--declare @query varchar(max)

	set @columns = ''
	set @columns2 = ''
	set @columns3 = ''

	set @2 = (select count(*) from gnmstorganizationdtl)
	set @seq = 1

	declare data cursor for
		select distinct cast(right(branchcode,2) as varchar) code from gnmstorganizationdtl
	open data
	fetch next from data into @1
	while @@fetch_status = 0 
	begin
		set @columns = @columns+'['+@1+']'	
		set @columns2 = @columns2+'isnull(['+@1+'],0) ['+@1+']'
		set @columns3 = @columns3+'isnull(['+@1+'],0)'

		set @seq = @seq+1
		if (@seq <= @2)
		begin
			set @columns = @columns+', '
			set @columns2 = @columns2+', '
			set @columns3 = @columns3+'+'
		end
	 
		fetch next from data into @1
	end
	close data
	deallocate data

	set @columns2 = @columns2+', '+@columns3+' as Total'

	set @query = '
	select model, '+@columns2+'
	from (
		select code,model,sum(nilai) nilai
		from (
			select cast(right(a.branchcode,2) as varchar) code
				, ltrim(a.salesmodelcode) model
				, isnull(count(a.invoiceno),0) nilai
			from omtrsalesinvoicevin a
			inner join omtrsalesinvoice b on b.companycode = a.companycode 
				and b.branchcode = a.branchcode
				and b.invoiceno = a.invoiceno 
			left join ommstmodel c on c.companycode = a.companycode 
				and c.salesmodelcode = a.salesmodelcode	
			where a.companycode = '''+@companycode+''' 
				and b.status in (2,5)
				and convert(varchar, b.invoicedate, 112) between '''+@period1+''' and '''+@period2+'''
			group by a.BranchCode, a.salesmodelcode
			union
			select cast(right(e.branchcode,2) as varchar) code
				, ltrim(e.salesmodelcode) model
				, isnull(sum(e.quantity),0)*-1 nilai
			from omtrsalesreturn d
			left join omtrsalesreturndetailmodel e on d.companycode = e.companycode 
				and d.branchcode = e.branchcode
				and d.returnno = e.returnno 
			left join ommstmodel c on c.companycode = e.companycode 
				and c.salesmodelcode = e.salesmodelcode	
			where d.companycode = '''+@companycode+''' 
				and d.status in (2,5)
				and convert(varchar, d.returndate, 112) between '''+@period1+''' and '''+@period2+'''
			group by e.BranchCode, e.salesmodelcode
		) x
		group by code,model
	)p pivot
	(
	sum(nilai) for code in ('+@columns+')
	) as pvt 
	'
	print (@query)
	exec (@query) 
	end
	
	
	-- Table IV --
	select distinct cast(right(branchcode,2) as varchar)+' : '+branchname keterangan from gnmstorganizationdtl 
		where companycode = @companycode

	-- Table V -- Total Per Branch
	set @query = '
	select '+@columns2+'
	from (
		select code,sum(nilai) nilai
		from (
			select cast(right(a.branchcode,2) as varchar) code
				, ltrim(c.salesmodeldesc) model
				, isnull(count(a.invoiceno),0) nilai
			from omtrsalesinvoicevin a
			inner join omtrsalesinvoice b on b.companycode = a.companycode 
				and b.branchcode = a.branchcode
				and b.invoiceno = a.invoiceno 
			left join ommstmodel c on c.companycode = a.companycode 
				and c.salesmodelcode = a.salesmodelcode	
			where a.companycode = '''+@companycode+''' 
				and b.status in (2,5)
				and convert(varchar, b.invoicedate, 112) between '''+@period1+''' and '''+@period2+'''
			group by a.BranchCode, a.salesmodelcode, c.salesmodeldesc
			union ALL
			select cast(right(e.branchcode,2) as varchar) code
				, ltrim(c.salesmodeldesc) model
				, isnull(sum(e.quantity),0)*-1 nilai
			from omtrsalesreturn d
			left join omtrsalesreturndetailmodel e on d.companycode = e.companycode 
				and d.branchcode = e.branchcode
				and d.returnno = e.returnno 
			left join ommstmodel c on c.companycode = e.companycode 
				and c.salesmodelcode = e.salesmodelcode	
			where d.companycode = '''+@companycode+''' 
				and d.status in (2,5)
				and convert(varchar, d.returndate, 112) between '''+@period1+''' and '''+@period2+'''
			group by e.BranchCode, e.salesmodelcode, c.salesmodeldesc
		) x
		group by code
	)p pivot
	(
	sum(nilai) for code in ('+@columns+')
	) as pvt 
	'
	print (@query)
	exec (@query)
END
GO
CREATE procedure [dbo].[uspfn_SpcekvalidTrnPOrderBalance]
@CompanyCode varchar(15),
@BranchCode varchar(15) ,
@TypeOfGoods varchar(15) ,
@POSNo varchar(15)
AS    
	SELECT 
		DISTINCT a.POSNo
	FROM 
		spTrnPOrderBalance a 
	INNER JOIN gnMstSupplier b 
	   ON b.SupplierCode = a.SupplierCode 
	  AND b.CompanyCode  = a.CompanyCode 
	WHERE a.OrderQty > a.Received
	  AND a.CompanyCode = @CompanyCode
	  AND a.BranchCode  = @BranchCode
	  AND a.TypeOfGoods = @TypeOfGoods
	  AND a.POSNo       = @POSNo
	ORDER BY POSNo DESC
GO
CREATE procedure [dbo].[uspfn_omSlsReturnLkpSlsMdlCd]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),
 @InvoiceNo varchar(15)
)  
AS  
BEGIN  
 SELECT * 
                  FROM omMstModel a, omTrSalesInvoiceModel b
                 WHERE a.CompanyCode = b.CompanyCode
                       AND a.SalesModelCode = b.SalesModelCode
                       AND a.CompanyCode = @CompanyCode
                       AND b.BranchCode = @BranchCode
                       AND b.InvoiceNo = @InvoiceNo
                       AND (b.Quantity - b.QuantityReturn) > 0        
                
END
GO
CREATE procedure [dbo].[sp_EntryHPPBrowse] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@TypeOfGoods varchar(10),
@PeriodBeg varchar(30),
@PeriodEnd varchar(30))


as

SELECT a.*, c.DNSupplierNo,
    d.SupplierName,b.BinningNo, b.BinningDate, b.SupplierCode, 
	(
		select LookUpValueName
		from gnMstLookUpDtl
		where CompanyCode=a.CompanyCode and CodeID='STAT' and LookUpValue=a.Status
	) StatusStr
FROM 
    SpTrnPHPP a WITH(NoLock,NoWait)
LEFT JOIN SpTrnPRcvHdr b ON b.CompanyCode = a.CompanyCOde AND b.BranchCode = a.BranchCode
    AND b.WRSNo = a. WRSNo
LEFT JOIN SpTrnPBinnHdr c ON c.CompanyCode = a.CompanyCode AND c.BranchCode = a.BranchCode
    AND c.BinningNo = b.BinningNo 
LEFT JOIN gnMstSupplier d ON d.CompanyCode = a.CompanyCode AND d.SupplierCode = c.SupplierCode
WHERE a.CompanyCode=@CompanyCode
      AND a.BranchCode=@BranchCode
      AND a.TypeOfGoods=@TypeOfGoods
      AND Convert(Varchar, a.HPPDate, 112) between @PeriodBeg and @PeriodEnd
      ORDER BY a.HPPNO DESC
GO
CREATE procedure [dbo].[uspfn_SelectFakturRetur]
@CompanyCode as varchar(15),
@BranchCode as varchar(15),
@TypeOfGoods as varchar(15)
as 
begin
--set @CompanyCode = '6006406'
--set @BranchCode = '6006401'
--set	@FPJNo = 'FPJ/14/000487'
--set	@TypeOfGoods = '5'
--set	@ProductType = '4W'
	select a.FpjNo
    , a.FpjDate
    , a.CustomerCode
    , isnull((
			select CustomerName from gnMstCustomer
			 where CompanyCode = a.CompanyCode and CustomerCode = a.CustomerCode
			), '') as CustomerName  
	 from spTrnSFpjHdr a, gnMstCoProfileSpare b
	where 1 = 1
	  and b.CompanyCode = a.CompanyCode
	  and b.BranchCode = a.BranchCode
	  and a.CompanyCode = @CompanyCode
	  and a.BranchCode  = @BranchCode 
	  and a.TypeOfGoods = @TypeOfGoods 
end
GO
CREATE procedure [dbo].[uspfn_omSlsReturnLkpMdlYear]     
(    
 @CompanyCode varchar(15),    
 @BranchCode varchar(15),    
 @InvoiceNo varchar(15),  
 @SalesModelCode varchar(20)  
)    
AS   
begin  
SELECT a.SalesModelCode, a.SalesModelYear, a.SalesModelDesc, a.ChassisCode, b.BPKNo, b.
                       BeforeDiscDPP, b.AfterDiscDPP, b.AfterDiscPPn, b.AfterDiscPPnBM, b.
                       OthersDPP, b.OthersPPn, b.DiscExcludePPn 
                  FROM omMstModelYear a, omTrSalesInvoiceModel b
                 WHERE a.CompanyCode = b.companyCode
                       AND a.SalesModelCode = b.salesModelCode
                       AND a.SalesModelYear = b.salesModelYear
                       AND b.companyCode = @CompanyCode
                       AND b.branchCode = @BranchCode
                       AND b.invoiceNo = @InvoiceNo
                       AND b.salesModelCode = @SalesModelCode
                       AND (b.quantity - b.quantityReturn) > 0
                ORDER BY a.SalesModelYear ASC         
end
GO
CREATE procedure [dbo].[sp_GetMaxQtyBinning]  (  
@CompanyCode varchar(10),
@BranchCode varchar(10),
@DocNo varchar(20),
@SupplierCode varchar(10),
--@CustomerCode varchar(10),
@PartNo varchar(20),
@BinningNo varchar(20),
@Opt varchar(10)
)
 as 
 
IF @Opt = 'P'
BEGIN
 
SELECT 
OrderQty, ReceivedQty
FROM
(
SELECT ISNULL(SUM(OnOrder),0) AS OrderQty
FROM SpTrnPOrderBalance with(nolock, nowait)
WHERE CompanyCode=@CompanyCode
AND BranchCode=@BranchCode
AND POSNo=@DocNo
AND SupplierCode=@SupplierCode
AND PartNo=@PartNo	                
) AS PO,
(
SELECT ISNULL(SUM(ReceivedQty),0) AS ReceivedQty
FROM spTrnPBinnDtl
INNER JOIN spTrnPBinnHdr ON spTrnPBinnDtl.CompanyCode = spTrnPBinnHdr.CompanyCode
AND spTrnPBinnDtl.BranchCode = spTrnPBinnHdr.BranchCode
AND spTrnPBinnDtl.BinningNo = spTrnPBinnHdr.BinningNo
WHERE spTrnPBinnDtl.CompanyCode = @CompanyCode 
AND spTrnPBinnDtl.BranchCode = @BranchCode AND DocNo = @DocNo AND PartNo = @PartNo
AND spTrnPBinnDtl.BinningNo NOT IN(@BinningNo) AND Status IN ('0', '1')
GROUP BY DocNo
) AS BINN            
END

ELSE 
BEGIN
SELECT 
OrderQty, ReceivedQty
FROM(
SELECT ISNULL(SUM(a.QtyBill),0) OrderQty
FROM SpTrnSBPSFDtl a with(nolock, nowait)
INNER JOIN SpTrnSBPSFHdr b ON b.CompanyCode = a.CompanyCode AND b.BranchCode = a.BranchCode AND b.BPSFNo = a.BPSFNo
WHERE a.CompanyCode = @CompanyCode
AND a.BranchCode = @BranchCode
AND a.BPSFNo = @DocNo
AND b.CustomerCode = @SupplierCode
AND a.PartNo = @PartNo                
) AS PO,
(
SELECT ISNULL(SUM(ReceivedQty),0) AS ReceivedQty
FROM spTrnPBinnDtl
INNER JOIN spTrnPBinnHdr ON spTrnPBinnDtl.CompanyCode = spTrnPBinnHdr.CompanyCode
AND spTrnPBinnDtl.BranchCode = spTrnPBinnHdr.BranchCode
AND spTrnPBinnDtl.BinningNo = spTrnPBinnHdr.BinningNo
WHERE spTrnPBinnDtl.CompanyCode = @CompanyCode 
AND spTrnPBinnDtl.BranchCode = @BranchCode AND DocNo = @DocNo AND PartNo = @PartNo	         
AND spTrnPBinnDtl.BinningNo NOT IN(@BinningNo)
) AS BINN  
END
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquirDataKendaraan] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @WarehouseCode varchar(100),
 @WarehouseCodeTo varchar(100),
 @SalesModelCode varchar(100),
 @SalesModelCodeTo varchar(100),
 @SalesModelYear varchar(100),
 @SalesModelYearTo varchar(100),
 @ChassisCode varchar(100),
 @ChassisCodeTo varchar(100),
 @ChassisNo varchar(100),
 @ChassisNoTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

select a.salesModelCode, (select b.SalesModelDesc from OmMstModel b
where a.CompanyCode = b.CompanyCode and a.SalesModelCode = b.SalesModelCode) as SalesModelDesc,
a.salesModelYear, a.chassisCode, convert(varchar, a.chassisNo) as chassisNo, a.engineCode, 
convert(varchar, a.engineNo) as engineNo,
CASE a.Status 
WHEN 0 THEN ''Ready''
WHEN 1 THEN ''Karoseri''
WHEN 2 THEN ''Return''
WHEN 3 THEN ''Order''
WHEN 4 THEN ''DO''
WHEN 5 THEN ''BPK''
WHEN 6 THEN ''Sales''
WHEN 7 THEN ''Transfer''
END as Status,
case a.isActive when 1 then ''Ya'' else ''Tidak'' end as isActive
from ommstvehicle a
Where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if len(rtrim(@WarehouseCode)) > 0
   set @pQuery = @pQuery + ' and a.WarehouseCode between ''' + rtrim(@WarehouseCode) + '''' + ' and ' + '''' + rtrim(@WarehouseCodeTo) + ''''

if len(rtrim(@SalesModelCode)) > 0
   set @pQuery = @pQuery + ' and a.SalesModelCode between ''' + rtrim(@SalesModelCode) + '''' + ' and ' + '''' + rtrim(@SalesModelCodeTo) + ''''

if len(rtrim(@SalesModelYear)) > 0
   set @pQuery = @pQuery + ' and a.SalesModelYear between ''' + rtrim(@SalesModelYear) + '''' + ' and ' + '''' + rtrim(@SalesModelYearTo) + ''''

if len(rtrim(@ChassisCode)) > 0
   set @pQuery = @pQuery + ' and a.ChassisCode between ''' + rtrim(@ChassisCode) + '''' + ' and ' + '''' + rtrim(@ChassisCodeTo) + ''''

if len(rtrim(@ChassisNo)) > 0
   set @pQuery = @pQuery + ' and a.ChassisNo between ''' + rtrim(@ChassisNo) + '''' + ' and ' + '''' + rtrim(@ChassisNoTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' 
set @pQuery = @pQuery + ' ORDER BY a.SalesModelCode '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
create procedure [dbo].[uspfn_HrListAtpmIdSVID]
	@LastUpdatedDate datetime,
	@Segment int
as

begin
	select top (@Segment)
	       a.*
	  from HrEmployeeService a
     where a.UpdatedDate is not null
	   and a.UpdatedDate > @LastUpdatedDate
	 order by a.UpdatedDate asc

end
GO
CREATE procedure [dbo].[uspfn_PostingTaxIn]
	@CompanyCode nvarchar(25),
	@BranchCode nvarchar(25),
	@ProductType nvarchar(2),
	@PeriodYear int,
	@PeriodMonth int,
	@LastSeqNo int,
	@UserId varchar(max)
  
  as
  begin

SELECT * INTO #1 FROM (
SELECT BranchCode, TaxNo, SupplierCode FROM gnTaxIn WITH(NOLOCK, NOWAIT)
WHERE CompanyCode = @CompanyCode 
    AND BranchCode = case @BranchCode when '' then BranchCode else @BranchCode end 
    AND ProductType = @ProductType 
	AND PeriodYear = @PeriodYear 
    AND PeriodMonth = @PeriodMonth
UNION
SELECT BranchCode, TaxNo, SupplierCode FROM gnTaxInHistory WITH(NOLOCK, NOWAIT)
WHERE CompanyCode = @CompanyCode 
    AND BranchCode = case @BranchCode when '' then BranchCode else @BranchCode end 
    AND ProductType = @ProductType 
	AND PeriodYear = @PeriodYear 
    AND PeriodMonth = @PeriodMonth 
    AND IsDeleted = '1'
) Temp

/* AMBIL SEMUA DATA HPP SPARE */
select * into #t_1 from (
select b.SupplierCode, a.* 
from spTrnPHpp a
left join spTrnPRcvHdr b on b.CompanyCode = a.CompanyCode 
	and b.BranchCode = a.BranchCode
	and b.WRSNo = a.WRSNo
where
	a.CompanyCode	 = @CompanyCode
	and a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end 
	and a.YearTax	 = @PeriodYear
	and a.MonthTax	 = @PeriodMonth
)#t_1 

/* AMBIL SEMUA DATA BTT OTHER (AP) */
select * into #t_2 from (
select a.* 
from apTrnBTTOtherHdr a
where 
	a.CompanyCode = @CompanyCode
	and a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end 
	and a.FPJNo <> ''
	and SUBSTRING(a.FPJPeriod, 1, 4) = @PeriodYear
    and RIGHT(a.FPJPeriod, 2) = @PeriodMonth
)#t_2 

/* DATA HPP SPARE YANG MEMILIKI SUPPLIER DAN TAXNO YANG SAMA DENGAN BTT OTHER (NILAI DIJUMLAHKAN) */
SELECT * INTO #t_3 FROM (
SELECT
  a.CompanyCode
, a.BranchCode
, d.ProductType
, a.YearTax PeriodYear
, a.MonthTax PeriodMonth
, '300' ProfitCenter
, a.TypeOfGoods
, 'B' TaxCode
, '2' TransactionCode
, '1' StatusCode
, '1' DocumentCode
, 'F' DocumentType
, b.SupplierCode
, c.SupplierGovName SupplierName
, c.IsPKP
, c.NPWPNo NPWP
, a.ReferenceNo FPJNo
, a.ReferenceDate FPJDate
, a.HPPNo + ' (' + a.ReferenceNo + ')' ReferenceNo
, a.WRSDate ReferenceDate
, a.TaxNo TaxNo
, a.TaxDate TaxDate
, a.DueDate SubmissionDate
, ISNULL((ISNULL(a.TotNetPurchAmt, 0) + ISNULL(a.DiffNetPurchAmt, 0)) + g.DppAmt,0) DPPAmt
, ISNULL((ISNULL(a.TotTaxAmt, 0) + ISNULL(a.DiffTaxAmt, 0)) + g.PPNAmt, 0) PPNAmt
, ISNULL(0 + g.PPNBmAmt, 0) PPNBmAmt
, 'PEMBELIAN SPARE PART' Description
, ISNULL(ISNULL(b.TotItem, 0)+(SELECT COUNT(*) FROM apTrnBTTOtherDtl WHERE CompanyCode = a.CompanyCode 
							AND BranchCode = a.BranchCode AND BTTNo = g.BTTNo), 0) Quantity	
FROM
	spTrnPHPP a	WITH(NOLOCK, NOWAIT)
	LEFT JOIN spTrnPRcvHdr b WITH(NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
		AND a.BranchCode = b.BranchCode
		AND a.WRSNo = b.WRSNo
	LEFT JOIN gnMstSupplier c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
		AND b.SupplierCode = c.SupplierCode
	LEFT JOIN gnMstCoProfile d WITH(NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
		AND a.BranchCode = d.BranchCode
    INNER JOIN gnMstSupplierProfitCenter e WITH(NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
	    AND a.BranchCode = e.BranchCode
        AND b.SupplierCode = e.SupplierCode
    INNER JOIN gnMstTax f WITH(NOLOCK, NOWAIT) ON a.CompanyCode = f.CompanyCode
        AND e.TaxCode = f.TaxCode
	INNER JOIN #t_2 g on g.BranchCode = a.BranchCode AND g.SupplierCode = b.SupplierCode
		AND g.FPJNo = a.TaxNo
WHERE
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end 
	AND ProductType = @ProductType
	AND a.YearTax = @PeriodYear
	AND a.MonthTax = @PeriodMonth
	AND a.Status = '2'
    AND e.ProfitCenterCode = '300'
    AND f.TaxPct > 0
) #t_3

-----------------------------------------------------------


SELECT * INTO #TaxIn FROM (
-- SALES : PURCHASE
SELECT
  a.CompanyCode
, a.BranchCode
, e.ProductType
, YEAR(a.LockingDate) PeriodYear
, MONTH(a.LockingDate) PeriodMonth
, '100' ProfitCenter
, NULL TypeOfGoods
, 'B' TaxCode
, '2' TransactionCode
, '1' StatusCode
, '1' DocumentCode
, 'F' DocumentType
, a.SupplierCode 
, d.SupplierGovName SupplierName
, d.IsPKP 
, d.NPWPNo NPWP
, a.RefferenceFakturPajakNo FPJNo
, a.RefferenceFakturPajakDate FPJDate
, a.HPPNo + ' (' + a.RefferenceInvoiceNo + ')' ReferenceNo
, a.RefferenceInvoiceDate ReferenceDate
, a.RefferenceFakturPajakNo TaxNo
, a.RefferenceFakturPajakDate TaxDate
, a.DueDate SubmissionDate
, ISNULL((SELECT SUM(Quantity * (AfterDiscDPP + OthersDPP)) FROM omTrPurchaseHPPDetailModel 
	WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND HPPNo = a.HPPNo ), 0) DPPAmt
, ISNULL((SELECT SUM(Quantity * (AfterDiscPPn + OthersPPn)) FROM omTrPurchaseHPPDetailModel 
	WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND HPPNo = a.HPPNo ), 0) PPNAmt
, ISNULL((SELECT SUM(Quantity * AfterDiscPPnBM) FROM omTrPurchaseHPPDetailModel 
	WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND HPPNo = a.HPPNo ), 0) PPNBmAmt
, (SELECT TOP 1 SalesModelCode + ', NO. CHS. ' + CONVERT(VARCHAR, ChassisNo) FROM omTrPurchaseHPPSubDetail 
	WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND HPPNo = a.HPPNo) Description
, (SELECT COUNT(HPPSeq) FROM omTrPurchaseHPPSubDetail c 
	LEFT JOIN omTrPurchaseHPPDetailModel b ON c.CompanyCode = b.CompanyCode AND c.BranchCode = b.BranchCode 
	AND c.HPPNo = b.HPPNo AND c.BPUNo = b.BPUNo
	WHERE c.CompanyCode = a.CompanyCode AND c.BranchCode = a.BranchCode AND c.HPPNo = a.HPPNo) Quantity
FROM
	omTrPurchaseHPP a WITH(NOLOCK, NOWAIT)
	LEFT JOIN gnMstSupplier d WITH(NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
		AND a.SupplierCode = d.SupplierCode
	LEFT JOIN gnMstCoProfile e WITH(NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
		AND a.BranchCode = e.BranchCode
    INNER JOIN gnMstSupplierProfitCenter f WITH(NOLOCK, NOWAIT) ON a.CompanyCode = f.CompanyCode
	    AND a.BranchCode = f.BranchCode
        AND a.SupplierCode = f.SupplierCode
    INNER JOIN gnMstTax g WITH(NOLOCK, NOWAIT) ON a.CompanyCode = g.CompanyCode
        AND f.TaxCode = g.TaxCode
WHERE
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end 
	AND ProductType = @ProductType
	AND YEAR(a.LockingDate) = @PeriodYear
	AND MONTH(a.LockingDate) = @PeriodMonth
	AND a.Status NOT IN ('3')
    AND f.ProfitCenterCode = '100'
    AND g.TaxPct > 0
-------------------------------------------------------------------------------------
UNION
-- SALES : KAROSERI
SELECT
  a.CompanyCode
, a.BranchCode
, ProductType
, YEAR(a.LockingDate) PeriodYear
, MONTH(a.LockingDate) PeriodMonth
, '100' ProfitCenter
, NULL TypeOfGoods
, 'B' TaxCode
, '2' TransactionCode
, '1' StatusCode
, '1' DocumentCode
, 'F' DocumentType
, a.SupplierCode
, b.SupplierGovName SupplierName
, b.IsPKP
, b.NPWPNo NPWP
, a.RefferenceFakturPajakNo FPJNo
, a.RefferenceFakturPajakDate FPJDate
, a.KaroseriTerimaNo + ' (' + a.RefferenceInvoiceNo + ')' ReferenceNo
, a.RefferenceInvoiceDate ReferenceDate
, a.RefferenceFakturPajakNo TaxNo
, a.RefferenceFakturPajakDate TaxDate
, a.DueDate SubmissionDate
, ISNULL(a.Quantity, 0) * (ISNULL(a.DPPMaterial, 0) + ISNULL(a.DPPFee, 0) + ISNULL(a.DPPOthers, 0)) DPPAmt
, ISNULL(a.Quantity, 0) * ISNULL(a.PPn, 0) PPNAmt
, 0 PPNBmAmt
, a.KaroseriSPKNo Description
, ISNULL(a.Quantity, 0) Quantity
FROM
	omTrPurchaseKaroseriTerima a WITH(NOLOCK, NOWAIT)
	LEFT JOIN gnMstSupplier b WITH(NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
		AND a.SupplierCode = b.SupplierCode
	LEFT JOIN gnMstCoProfile c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
		AND a.BranchCode = c.BranchCode
    INNER JOIN gnMstSupplierProfitCenter d WITH(NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
	    AND a.BranchCode = d.BranchCode
        AND a.SupplierCode = d.SupplierCode
    INNER JOIN gnMstTax e WITH(NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
        AND d.TaxCode = e.TaxCode
WHERE
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end 
	AND ProductType = @ProductType
	AND YEAR(a.LockingDate) = @PeriodYear
	AND MONTH(a.LockingDate) = @PeriodMonth
	AND a.Status NOT IN ('3')
    AND d.ProfitCenterCode = '100'
    AND e.TaxPct > 0
-----------------------------------------------------------------------------------------
UNION
-- SALES : PURCHASE RETURN
SELECT
  a.CompanyCode
, a.BranchCode
, d.ProductType
, YEAR(ReturnDate) PeriodYear
, MONTH(ReturnDate) PeriodMonth
, '100' ProfitCenter
, NULL TypeOfGoods
, 'B' TaxCode
, '2' TransactionCode
, '1' StatusCode
, '1' DocumentCode
, 'R' DocumentType
, c.SupplierCode SupplierCode
, c.SupplierGovName SupplierName
, c.IsPKP IsPKP
, c.NPWPNo NPWP
, replace(a.RefferenceNo,substring(a.RefferenceNo,1,1),'9') FPJNo
, a.RefferenceDate FPJDate
, a.ReturnNo + ' (' + a.RefferenceNo + ')' ReferenceNo
, a.RefferenceDate ReferenceDate
, replace(a.RefferenceNo,substring(a.RefferenceNo,1,1),'9') TaxNo  
, a.RefferenceDate TaxDate
, a.ReturnDate SubmissionDate
, ISNULL((SELECT SUM(Quantity * (AfterDiscDPP + OthersDPP))FROM omTrPurchaseReturnDetailModel 
	WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND ReturnNo = a.ReturnNo), 0) * -1 DPPAmt
, ISNULL((SELECT SUM(Quantity * (AfterDiscPPn + OthersPPn))FROM omTrPurchaseReturnDetailModel 
	WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND ReturnNo = a.ReturnNo), 0) * -1 PPNAmt
, ISNULL((SELECT SUM(Quantity * AfterDiscPPnBM)FROM omTrPurchaseReturnDetailModel 
	WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND ReturnNo = a.ReturnNo), 0) * -1 PPNBmAmt
, a.ReturnNo Description
, ISNULL((SELECT SUM(Quantity)FROM omTrPurchaseReturnDetailModel 
	WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND ReturnNo = a.ReturnNo), 0) * -1 Quantity
FROM
	omTrPurchaseReturn a WITH(NOLOCK, NOWAIT)
	LEFT JOIN omTrPurchaseHPP b WITH(NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
		AND a.BranchCode = b.BranchCode
		AND a.HPPNo = b.HPPNo
	LEFT JOIN gnMstSupplier c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
		AND b.SupplierCode = c.SupplierCode
	LEFT JOIN gnMstCoProfile d WITH(NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
		AND a.BranchCode = d.BranchCode
    INNER JOIN gnMstSupplierProfitCenter e WITH(NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
	    AND a.BranchCode = e.BranchCode
        AND b.SupplierCode = e.SupplierCode
    INNER JOIN gnMstTax f WITH(NOLOCK, NOWAIT) ON a.CompanyCode = f.CompanyCode
        AND e.TaxCode = f.TaxCode
WHERE
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end 
	AND ProductType = @ProductType
	AND YEAR(ReturnDate) = @PeriodYear
	AND MONTH(ReturnDate) = @PeriodMonth
	AND a.Status NOT IN ('3')
    AND e.ProfitCenterCode = '100'
    AND f.TaxPct > 0
---------------------------------------------------------------------------------------
UNION
-- SERVICE
SELECT
  a.CompanyCode
, a.BranchCode
, a.ProductType
, YEAR(RecDate) PeriodYear
, MONTH(RecDate) PeriodMonth
, '200' ProfitCenter
, NULL TypeOfGoods
, 'B' TaxCode
, '2' TransactionCode
, '1' StatusCode
, '1' DocumentCode
, 'F' DocumentType
, a.SupplierCode SupplierCode
, b.SupplierGovName SupplierName
, b.IsPKP IsPKP
, b.NPWPNo NPWP
, a.FPJNo FPJNo
, a.FPJDate FPJDate
, a.PONo + ' (' + a.JobOrderNo + ')' ReferenceNo
, a.JobOrderDate RefferenceDate
, a.FPJGovNo TaxNo
, a.FPJDate TaxDate
, a.DueDate SubmissionDate
, ISNULL(a.DPPAmt, 0) DPPAmt
, ISNULL(a.PPnAmt, 0) PPNAmt
, 0 PPNBmAmt
, a.RecNo Description
, 1 Quantity
FROM
	svTrnPOSubCon a	WITH(NOLOCK, NOWAIT)
	LEFT JOIN gnMstSupplier b WITH(NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
		AND a.SupplierCode = b.SupplierCode
    INNER JOIN gnMstSupplierProfitCenter c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
	    AND a.BranchCode = c.BranchCode
        AND a.SupplierCode = c.SupplierCode
    INNER JOIN gnMstTax d WITH(NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
        AND c.TaxCode = d.TaxCode
WHERE
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end 
	AND a.ProductType = @ProductType
	AND YEAR(RecDate) = @PeriodYear
	AND MONTH(RecDate) = @PeriodMonth
    AND c.ProfitCenterCode = '200'
    AND d.TaxPct > 0
---------------------------------------------------------------------------------------
UNION 
-- SPAREPART
SELECT
  a.CompanyCode
, a.BranchCode
, d.ProductType
, a.YearTax PeriodYear
, a.MonthTax PeriodMonth
, '300' ProfitCenter
, a.TypeOfGoods
, 'B' TaxCode
, '2' TransactionCode
, '1' StatusCode
, '1' DocumentCode
, 'F' DocumentType
, b.SupplierCode
, c.SupplierGovName SupplierName
, c.IsPKP
, c.NPWPNo NPWP
, a.ReferenceNo FPJNo
, a.ReferenceDate FPJDate
, a.HPPNo + ' (' + a.ReferenceNo + ')' ReferenceNo
, a.WRSDate ReferenceDate
, a.TaxNo TaxNo
, a.TaxDate TaxDate
, a.DueDate SubmissionDate
, ISNULL(a.TotNetPurchAmt, 0) + ISNULL(a.DiffNetPurchAmt, 0) DPPAmt
, ISNULL(a.TotTaxAmt, 0) + ISNULL(a.DiffTaxAmt, 0) PPNAmt
, 0 PPNBmAmt
, 'PEMB. S`PART' Description
, ISNULL(b.TotItem, 0) Quantity	
FROM
	spTrnPHPP a	WITH(NOLOCK, NOWAIT)
	LEFT JOIN spTrnPRcvHdr b WITH(NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
		AND a.BranchCode = b.BranchCode
		AND a.WRSNo = b.WRSNo
	LEFT JOIN gnMstSupplier c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
		AND b.SupplierCode = c.SupplierCode
	LEFT JOIN gnMstCoProfile d WITH(NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
		AND a.BranchCode = d.BranchCode
    INNER JOIN gnMstSupplierProfitCenter e WITH(NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
	    AND a.BranchCode = e.BranchCode
        AND b.SupplierCode = e.SupplierCode
    INNER JOIN gnMstTax f WITH(NOLOCK, NOWAIT) ON a.CompanyCode = f.CompanyCode
        AND e.TaxCode = f.TaxCode
WHERE
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end 
	AND ProductType = @ProductType
	AND a.YearTax = @PeriodYear
	AND a.MonthTax = @PeriodMonth
	AND a.Status = '2'
    AND e.ProfitCenterCode = '300'
    AND f.TaxPct > 0
    AND a.BranchCode+'-'+b.SupplierCode+'-'+a.TaxNo NOT IN (SELECT BranchCode+'-'+SupplierCode+'-'+TaxNo FROM #t_3)
-------------------------------------------------------------------------------
UNION
-- FINANCE
SELECT
  a.CompanyCode
, a.BranchCode
, c.ProductType
, SUBSTRING(a.FPJPeriod, 1, 4) PeriodYear
, RIGHT(a.FPJPeriod, 2) PeriodMonth
, '000' ProfitCenter
, NULL TypeOfGoods
, 'B' TaxCode
, '2' TransactionCode
, '1' StatusCode
, '1' DocumentCode
, 'F' DocumentType
, a.SupplierCode
, b.SupplierGovName SupplierName
, b.IsPKP
, b.NPWPNo NPWP
, a.FPJNo
, a.FPJDate
, a.BTTNo + ' (' + a.ReffNo + ')' ReferenceNo
, a.ReffDate ReferenceDate
, a.FPJNo TaxNo
, a.FPJDate TaxDate
, a.DueDate SubmissionDate
, a.DPPAmt
, a.PPNAmt
, a.PPnBMAmt
, (SELECT TOP 1 Description FROM apTrnBTTOtherDtl WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND BTTNo = a.BTTNo) Description
, (SELECT COUNT(*) FROM apTrnBTTOtherDtl WHERE CompanyCode = a.CompanyCode AND BranchCode = a.BranchCode AND BTTNo = a.BTTNo) Quantity	
FROM
    apTrnBTTOtherHdr a	WITH(NOLOCK, NOWAIT)    
    LEFT JOIN gnMstSupplier b WITH(NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
	    AND a.SupplierCode = b.SupplierCode
    LEFT JOIN gnMstCoProfile c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
	    AND a.BranchCode = c.BranchCode
    INNER JOIN gnMstSupplierProfitCenter d WITH(NOLOCK, NOWAIT) ON a.CompanyCode = d.CompanyCode
	    AND a.BranchCode = d.BranchCode
        AND a.SupplierCode = d.SupplierCode
    INNER JOIN gnMstTax e WITH(NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
        AND d.TaxCode = e.TaxCode
WHERE
    a.CompanyCode = @CompanyCode
    AND a.BranchCode = case @BranchCode when '' then a.BranchCode else @BranchCode end 
    AND ProductType = @ProductType
    AND SUBSTRING(a.FPJPeriod, 1, 4) = @PeriodYear
    AND RIGHT(a.FPJPeriod, 2) = @PeriodMonth
    AND a.Category = 'INV'
    AND d.ProfitCenterCode = '000'
    AND e.TaxPct > 0
    AND a.BranchCode+'-'+b.SupplierCode+'-'+a.FPJNo NOT IN (SELECT BranchCode+'-'+SupplierCode+'-'+TaxNo FROM #t_3)
-------------------------------------------------------------------------------
UNION
-- SPARE PART DAN BTT YANG MEMILIKI SUPPLIER DAN TAXNO YANG SAMA
SELECT * FROM #t_3
) #TaxIn

select ROW_NUMBER() OVER(ORDER BY #TaxIn2.BranchCode ASC, #TaxIn2.ProfitCenter ASC, #TaxIn2.TaxNo ASC) + @LastSeqNo SeqNo, * into #TaxIn2 from(
select 
	q1.CompanyCode
	, q1.BranchCode
	, q1.ProductType
	, q1.PeriodYear
	, q1.PeriodMonth
	, q1.ProfitCenter
	, ISNULL((SELECT TOP 1 TypeOfGoods FROM #TaxIn WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo),'') TypeOfGoods
	, q1.TaxCode
	, q1.TransactionCode
	, q1.StatusCode
	, q1.DocumentCode
	, q1.DocumentType
	, q1.SupplierCode
	, q1.SupplierName
	, q1.IsPKP
	, q1.NPWP
	, (SELECT TOP 1 FPJNo FROM #TaxIn WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo) FPJNo
	, (SELECT TOP 1 FPJDate FROM #TaxIn WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo) FPJDate
	, (SELECT TOP 1 ReferenceNo FROM #TaxIn WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo) ReferenceNo
	, (SELECT TOP 1 ReferenceDate FROM #TaxIn WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo) ReferenceDate
	, q1.TaxNo
	, (SELECT TOP 1 TaxDate FROM #TaxIn WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo) TaxDate
	, (SELECT TOP 1 SubmissionDate FROM #TaxIn WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo) SubmissionDate
	, sum(q1.DPPAmt) DPPAmt
	, sum(q1.PPNAmt) PPNAmt
	, sum(q1.PPnBMAmt) PPnBMAmt
	, (SELECT TOP 1 Description FROM #TaxIn WHERE CompanyCode = q1.CompanyCode AND BranchCode = q1.BranchCode AND 
		ProductType = q1.ProductType AND PeriodYear = q1.PeriodYear AND PeriodMonth = q1.PeriodMonth AND 
		SupplierCode = q1.SupplierCode AND TaxNo = q1.TaxNo) Description
	, sum(q1.Quantity) Quantity
from #TaxIn q1
group by
	q1.CompanyCode
	, q1.BranchCode
	, q1.ProductType
	, q1.PeriodYear
	, q1.PeriodMonth
	, q1.ProfitCenter
	, q1.TaxCode
	, q1.TransactionCode
	, q1.StatusCode
	, q1.DocumentCode
	, q1.DocumentType
	, q1.SupplierCode
	, q1.SupplierName
	, q1.IsPKP
	, q1.NPWP
	, q1.TaxNo
) #TaxIn2
WHERE 
    #TaxIn2.BranchCode+'-'+#TaxIn2.TaxNo+'-'+#TaxIn2.SupplierCode 
        NOT IN (SELECT BranchCode+'-'+TaxNo+'-'+SupplierCode FROM #1)

INSERT INTO gnTaxIn SELECT CompanyCode, BranchCode, ProductType, PeriodYear, PeriodMonth, SeqNo, ProfitCenter, 
    TypeOfGoods, TaxCode, TransactionCode, StatusCode, DocumentCode, DocumentType, SupplierCode, SupplierName, 
    IsPKP, NPWP, FPJNo, FPJDate, ReferenceNo, ReferenceDate, TaxNo, TaxDate, SubmissionDate, DPPAmt, PPNAmt, 
    PPNBmAmt, Description, Quantity, 0 IsLocked, null LockingBy, null LockingDate, @UserId CreatedBy, 
    GETDATE() CreatedDate, @UserId LastupdateBy, GETDATE() LastupdateDate
    FROM #TaxIn2

DROP TABLE #1
DROP TABLE #TaxIn
DROP TABLE #TaxIn2
DROP TABLE #t_1
DROP TABLE #t_2
DROP TABLE #t_3
END
GO
CREATE procedure [dbo].[uspfn_PenjualFPLookup]
	@CompanyCode as varchar(15)
	,@BranchCode as varchar(15)
	,@ProfitCenterCode as varchar(15)
	,@CustomerCode as varchar(15)
as

declare @isBranch int
set @isBranch=(select isBranch from gnMstOrganizationDtl where CompanyCode=@CompanyCode and BranchCode=@BranchCode)

select a.CustomerCode, a.CustomerName,
       a.Address1+' '+a.Address2+' '+a.Address3+' '+a.Address4 as Address,
       c.LookUpValueName as ProfitCenter
from gnMstCustomer a 
	inner join gnMstCustomerProfitCenter b on 
		b.CustomerCode= b.CustomerCode and b.CustomerCode=a.CustomerCode
	inner join gnMstLookUpDtl c on c.CompanyCode= a.CompanyCode
		and c.LookupValue= b.ProfitCenterCode
		and c.CodeID= 'PFCN'
where a.CompanyCode=@CompanyCode
	and b.BranchCode=@BranchCode
	and b.ProfitCenterCode= @ProfitCenterCode
	and b.isBlackList=0
	and a.Status = 1
	and b.SalesType = '0' 
	and a.CustomerCode= (case when @isBranch=1 then @BranchCode else @CustomerCode end)
order by a.CustomerCode
GO
CREATE procedure [dbo].[sp_gnMstSupplierView]  (  @CompanyCode varchar(10) ,@BranchCode varchar(10))
as
select 
CompanyCode,
SupplierCode,
BranchCode,
ProfitCenterCode,
SupplierName,
Alamat,
Address1,
Address2,
Address3,
Address4,
Phone,
DiscPct,
[Status],
ProfitCenterName,
TOPDays,
CityCode,
CityName
from gnMstSupplierView
where CompanyCode=@CompanyCode and   BranchCode=@BranchCode
GO
CREATE procedure [dbo].[uspfn_omSlsPrlgkpnOutLkpMdlDtl]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),
 @SalesModelCode varchar(20) 
 )  
AS  
BEGIN       
 SELECT DISTINCT a.PerlengkapanCode, a.PerlengkapanName,b.Remark,b.Quantity
            FROM OmMstPerlengkapan a
            INNER JOIN omMstModelPerlengkapan b ON
	            a.CompanyCode = b.CompanyCode
	            AND a.BranchCode = b.BranchCode
	            AND a.PerlengkapanCode = b.PerlengkapanCode
	            AND a.Status = '1'
	            AND b.salesModelCode = @SalesModelCode
            INNER JOIN omTrInventQtyPerlengkapan c
	            ON a.companyCode = c.companyCode
	            AND a.branchCode = c.branchCode
	            AND a.perlengkapanCode = c.perlengkapanCode
            WHERE a.CompanyCode = @CompanyCode
	            AND a.BranchCode = @BranchCode
	            --AND c.Year = year(getdate())
	            --AND c.Month = month(getdate())
                AND c.QuantityEnding > 0
            ORDER BY a.PerlengkapanCode ASC            
END
GO
CREATE procedure [dbo].[sp_EdpPartNo_Pembelian]  (  
@CompanyCode varchar(10),
@BranchCode varchar(10),
@DocNo varchar(20)
--@BinningNo varchar(20),
--@Opt varchar(10)
)
 as 
 
--SELECT DISTINCT a.POSNo, a.PartNo, c.PartName, CASE when e.ReceiveQty is null then a.OnOrder else a.OrderQty-e.ReceiveQty end as ReminQty,
--d.PurchasePrice, a.DiscPct, 
--a.OnOrder as MaxReceived
--from spTrnPOrderBalance a 
--LEFT JOIN spTrnPBinnDtl b ON
--a.CompanyCode = b.CompanyCode
--and a.BranchCode = b.BranchCode
--and a.POSNo = b.DocNo
--AND a.PartNo = b.PartNo
--LEFT JOIN spMstItemInfo c ON
--a.CompanyCode = c.CompanyCode
--and a.PartNo = c.PartNo
--LEFT JOIN SpMstItemPrice d ON
--a.CompanyCode = d.CompanyCode
--and a.BranchCode = d.BranchCode
--AND a.PartNo = d.PartNo LEFT JOIN
--(SELECT PartNo, DocNo, sum(ReceivedQty) as ReceiveQty from spTrnPBinnDtl WHERE CompanyCode = @CompanyCode
--AND BranchCode = @BranchCode
--and DocNo = @DocNo GROUP BY PartNo, DocNo) e
--ON a.PartNo = e.PartNo
--AND a.POSNo = e.DocNo
--where
--a.CompanyCode = @CompanyCode
--AND a.BranchCode = @BranchCode
--and a.POSNo = @DocNo

SELECT c.PartNo, c.PartName, c.PurchasePrice, c.DiscPct, SUM(c.OnOrder) AS MaxReceived
FROM
(
    SELECT
     a.PartNo
    ,b.PartName 
    ,ISNULL((SELECT round(x.PurchasePrice + (x.PurchasePrice * (select (TaxPct/100) from gnMstTax
where TaxCode = (select ParaValue from gnMstLookUpDtl where CodeID = 'BINS' and SeqNo = 3))),0)
FROM SpMstItemPrice x where x.CompanyCode = a.CompanyCode AND
     x.BranchCode = a.BranchCode AND x.PartNo = a.PartNo),0) AS PurchasePrice
    ,a.OnOrder
    ,a.DiscPct
    FROM spTrnPOrderBalance a 
    INNER JOIN spMstItemInfo b
       ON b.CompanyCode = a.CompanyCode
      AND b.PartNo      = a.PartNo
      WHERE a.CompanyCode = @CompanyCode
      AND a.BranchCode  = @BranchCode
      AND a.PosNo       = @DocNo      
) c
GROUP BY c.PartNo, c.PartName, c.PurchasePrice, c.DiscPct
HAVING sum(c.OnOrder) > 0
GO
CREATE procedure [dbo].[sp_EdpDocNoBrowse] (  

@CompanyCode varchar(10) ,
@BranchCode varchar(10),
@TypeOfGoods varchar(10),
@ProductType varchar(10),
@SupplierCode varchar(30))


as

SELECT 
 a.POSNo
,a.PosDate
,a.SupplierCode
FROM SpTrnPOrderBalance a with(nolock, nowait)
INNER JOIN SpTrnPPOSHdr b ON b.POSNo = a.POSNo AND b.CompanyCode = a.CompanyCode AND b.BranchCode = a.BranchCode
WHERE a.OnOrder > 0
  AND a.CompanyCode=@CompanyCode
  AND a.BranchCode=@BranchCode
  AND a.TypeOfGoods=@TypeOfGoods
  AND b.ProductType=@ProductType
  AND a.SupplierCode=@SupplierCode
  --and b.Status = 2
GROUP BY  a.POSNo, a.PosDate, a.SupplierCode 
ORDER BY  a.POSNo DESC
GO
CREATE procedure [dbo].[uspfn_SalesModelCode4PO] 
 @DB varchar(50),
 @CompanyCode varchar(50),
 @BranchCode varchar(50),
 @SupplierCode varchar(50)

 as

 declare @sqlstr varchar(max)

 set @sqlstr = 'select a.SalesModelCode, b.SalesModelDesc 
from omMstPricelistBuy a
inner join  '+@DB+'.dbo.omMstModel b
	on a.SalesModelCode = b.SalesModelCode
where a.CompanyCode = '''+ @CompanyCode +'''
 and a.BranchCode = '''+ @BranchCode +'''
 and a.SupplierCode = '''+ @SupplierCode +'''
 and b.Status = ''1'''

 --select @sqlstr
 exec (@sqlstr)
GO
CREATE procedure [dbo].[uspfn_omSlsPrlgkpnOutDtl]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15),
 @PerlengkapanNo varchar(15),
 @SalesModelCode varchar(15)
 )  
AS  
BEGIN  
	SELECT 
		a.PerlengkapanNo, 
		b.PerlengkapanName, 
		a.SalesModelCode,  
		a.PerlengkapanCode,  
		a.QuantityStd,  
		a.Quantity,  
		a.Remark        	
	FROM OmTrSalesPerlengkapanOutDetail a
	LEFT JOIN OmMstPerlengkapan b
	ON a.CompanyCode = b.CompanyCode
	AND a.Branchcode = b.BranchCode
	AND a.PerlengkapanCode = b.PerlengkapanCode
	where a.CompanyCode = @CompanyCode
	and a.BranchCode = @BranchCode
	and a.PerlengkapanNo = @PerlengkapanNo and a.SalesModelCode = @SalesModelCode
	ORDER BY a.PerlengkapanCode ASC         
END
GO
CREATE procedure [dbo].[uspfn_GetPINVDData]
 @CompanyCode varchar(15),
 @BranchCode varchar(15),
 @DNNo varchar(15),
 @SupplierCode varchar(15),
 @TypeOfGoods varchar(2),
 @PPN bit
as 
begin
SELECT  row_number () OVER (ORDER BY a.CreatedDate) AS NoUrut,
a.CompanyCode,
a.BranchCode,
a.OrderNo AS DocNo,
a.DeliveryNo,
(
  SELECT TOP 1 DeliveryDate 
    FROM spUtlPINVDHdr d
  WHERE d.CompanyCode=a.CompanyCode AND
    d.BranchCode=a.BranchCode AND
    d.DealerCode=a.DealerCode AND
    d.DeliveryNo=a.DeliveryNo AND
	d.TypeOfGoods = a.typeOfGoods
) AS DeliveryDate,
(
  SELECT TOP 1 d.InvoiceNo 
    FROM spUtlPINVDHdr d
  WHERE d.CompanyCode=a.CompanyCode AND
    d.BranchCode=a.BranchCode AND
    d.DealerCode=a.DealerCode AND
    d.DeliveryNo=a.DeliveryNo AND
	d.TypeOfGoods = a.TypeOfGoods
) AS InvoiceNo,
a.PartNoShip as PartNo,
(
    SELECT PartName 
    FROM spMstItemInfo e
    WHERE e.CompanyCode=a.CompanyCode AND
                e.PartNo=a.PartNoShip
) AS NmPart
,
case when @PPN = 0 then a.PurchasePrice
else round(a.PurchasePrice + (a.PurchasePrice * (select (TaxPct/100) from gnMstTax
where TaxCode = (select ParaValue from gnMstLookUpDtl where CodeID = 'BINS' and SeqNo = 3))),0) end PurchasePrice
,a.DiscPct,a.QtyShipped AS ReceivedQty
,isnull(a.CaseNumber,'-') AS BoxNo,
--,'-' AS BoxNo,
a.SupplierCode,
(
  SELECT CostPrice FROM spMstItemPrice f
  WHERE f.CompanyCode=a.CompanyCode AND
        f.BranchCode=a.BranchCode AND
        f.PartNo=a.PartNoShip
) AS CostPrice, a.ProductType
FROM spUtlPINVDDtl a, spTrnPPOSDtl b
WHERE 
    a.CompanyCode=b.CompanyCode AND
    a.BranchCode=b.BranchCode AND
    a.OrderNo=b.POSNo AND
    a.PartNo=b.PartNo AND
    a.CompanyCode = @CompanyCode AND
    a.BranchCode = @BranchCode AND
    a.DeliveryNo = @DNNo AND
    a.SupplierCode = @SupplierCode AND
    a.Status IN ('0','1') AND
	a.TypeOfGoods = @TypeOfGoods
end
GO
CREATE procedure [dbo].[uspfn_omSlsReturnLkpInvoice]   
(  
 @CompanyCode varchar(15),  
 @BranchCode varchar(15)
)  
AS  
BEGIN  
	SELECT 
			a.CompanyCode,a.BranchCode	,a.InvoiceNo	,a.InvoiceDate	,a.SONo	,a.CustomerCode	,			
			a.BillTo	,a.FakturPajakNo	
			,a.FakturPajakDate	,a.DueDate	,a.isStandard	,a.Remark	,a.Status,b.CustomerName,
			b.Address1 + ' ' + b.Address2 + ' ' + b.Address3 + ' ' + b.Address4 as Address,			
			c.SalesType, CASE ISNULL(c.SalesType, 0) WHEN 0 THEN 'Wholesales' ELSE 'Direct' END AS SalesTypeDsc
	FROM 
			omTrSalesInvoice a
			LEFT JOIN gnMstCustomer b
			ON a.CompanyCode = b.CompanyCode AND a.CustomerCode = b.CustomerCode
			LEFT JOIN gnMstCustomerProfitCenter c
			ON a.CompanyCode = c.CompanyCode AND a.BranchCode = c.BranchCode AND a.CustomerCode = c.CustomerCode AND c.ProfitCenterCode = '100'                  
			
	WHERE
			a.CompanyCode = @CompanyCode AND a.BranchCode = @BranchCode
			AND a.Status IN ('2', '5')
			AND a.FakturPajakNo != '' 
	ORDER BY 
			a.InvoiceNo ASC                
END
GO
CREATE procedure [dbo].[sp_EdpTransNo] (  

@CompanyCode varchar(10),
@BranchCode varchar(10),
@TypeOfGoods varchar(10),
@LampiranNo varchar(10)
)


as

SELECT * INTO #t1 FROM ( 
SELECT
    a.LampiranNo
    , a.DealerCode as SupplierCode
    , ISNULL(b.SupplierName, '') as SupplierName
    , ISNULL(c.TypeOfGoods, '') TypeofGoods
FROM spUtlStockTrfHdr a
LEFT JOIN GnMstSupplier b ON b.CompanyCode = a.CompanyCode 
    AND b.SupplierCode = a.DealerCode
LEFT JOIN SpTrnSLmpHdr c ON c.CompanyCode = a.CompanyCode 
    AND c.BranchCode = a.DealerCode
    AND c.LmpNo = a.LampiranNo
WHERE a.CompanyCode = @CompanyCode
  AND a.BranchCode = @BranchCode
  AND a.Status in ('0','1') ) #t1
  
SELECT * FROM #t1 WHERE TypeofGoods = @TypeOfGoods
    AND LampiranNo = CASE @LampiranNo WHEN '' THEN LampiranNo ELSE @LampiranNo END

DROP TABLE #t1
GO
CREATE procedure [dbo].[uspfn_GetPartNoSuppliedWeb]   
(  
--DECLARE
@CompanyCode as varchar(15),
@BranchCode as varchar(15),
@ProductType as varchar(15),
@JobOrderNo as varchar(15),
@DocNo as varchar(15)

--set @CompanyCode = '6006406'
--set @BranchCode = '6006400'
--set	@ProductType = '4W'
--set	@JobOrderNo = 'SPK/12/000002'
--set @DocNo = 'SSS/12/000010'

)  
AS  

begin

declare @md bit
declare @dbMD varchar(25)
declare @CompanyMD varchar(25)

set @md = (select case WHEN EXISTS(select * from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode and CompanyMD = @CompanyCode and BranchMD = @BranchCode) then cast(1 as bit) ELSE cast(0 as bit) END)

if(@md = 1)
BEGIN

SELECT 
DISTINCT(a.CompanyCode) 
	, a.BranchCode
	, a.ProductType
	, ServiceNo
    , SupplySlipDate
	, a.PartNo
	, c.RetailPrice
	, c.CostPrice
    , TypeOfGoods
    , BillType
	, SUM(QtyOrder) QtyOrder
    , QtySupply
    , DiscPct
FROM
(
SELECT
	DISTINCT(a.CompanyCode) 
	, a.BranchCode
	, a.ProductType
	, a.ServiceNo
    , c.DocDate SupplySlipDate
	, a.PartNo
	, a.RetailPrice
	, f.CostPrice
    , a.TypeOfGoods
    , a.BillType
	, Item.QtyOrder	
    , ISNULL(e.QtySupply,0) QtySupply
    , a.DiscPct
FROM
	SvTrnSrvItem a WITH (NOLOCK, NOWAIT)
	LEFT JOIN SvTrnService b WITH (NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
		AND a.BranchCode = b.BranchCode
		AND a.ProductType = b.ProductType
		AND a.ServiceNo = b.ServiceNo
	LEFT JOIN (SELECT CompanyCode, BranchCode, ProductType, ServiceNo, PartNo, RetailPrice,
				SUM(ISNULL(DemandQty, 0) - ISNULL(SupplyQty, 0)) QtyOrder
				FROM SvTrnSrvItem 
				GROUP BY CompanyCode, BranchCode, ProductType, ServiceNo, PartNo, RetailPrice) Item ON
		Item.CompanyCode = a.CompanyCode AND Item.BranchCode = a.BranchCode AND Item.ProductType =
			a.ProductType AND Item.ServiceNo = a.ServiceNo AND Item.PartNo = a.PartNo and Item.RetailPrice = a.RetailPrice
	LEFT JOIN SpTrnSORDHdr c WITH (NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
		AND a.BranchCode = c.BranchCode
		AND b.JobOrderNo = c.UsageDocNo
	LEFT JOIN SpTrnSOSupply e WITH (NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
		AND a.BranchCode = e.BranchCode
		AND c.DocNo = e.DocNo
		AND a.PartNo = e.PartNo
    INNER JOIN gnMstCompanyMapping cm WITH(NOLOCK, NOWAIT) ON cm.CompanyCode = a.CompanyCode
    LEFT JOIN SpMstItemPrice f WITH(NOLOCK, NOWAIT) ON cm.CompanyMD = f.CompanyCode
		AND a.BranchCode = f.BranchCode
		AND a.PartNo = f.PartNo
WHERE
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.ProductType = @ProductType
	AND Item.QtyOrder > 0
    AND c.DocNo = @DocNo
	AND JobOrderNo = @JobOrderNo
    AND a.RetailPrice = Item.RetailPrice
)a
LEFT JOIN SpMstItemPrice c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
		AND a.BranchCode = c.BranchCode
		AND a.PartNo = c.PartNo
GROUP BY
a.CompanyCode
	, a.BranchCode
	, a.ProductType
	, ServiceNo
    , SupplySlipDate
	, a.PartNo
	, c.RetailPrice
	, c.CostPrice
    , TypeOfGoods
    , BillType
    , QtySupply
    , DiscPct

END
ELSE
BEGIN

set @dbMD = (select DISTINCT dbmd from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)

--set @CompanyMD = (select DISTINCT CompanyMD from gnMstCompanyMapping where CompanyCode = @CompanyCode and BranchCode = @BranchCode)
--select @CompanyMD
declare @query varchar(max)

if(isnull(cast(@dbMD as varchar(max)),'') = '')
BEGIN

SELECT 
DISTINCT(a.CompanyCode) 
	, a.BranchCode
	, a.ProductType
	, ServiceNo
    , SupplySlipDate
	, a.PartNo
	, c.RetailPrice
	, c.CostPrice
    , TypeOfGoods
    , BillType
	, SUM(QtyOrder) QtyOrder
    , QtySupply
    , DiscPct
FROM
(
SELECT
	DISTINCT(a.CompanyCode) 
	, a.BranchCode
	, a.ProductType
	, a.ServiceNo
    , c.DocDate SupplySlipDate
	, a.PartNo
	, a.RetailPrice
	, f.CostPrice
    , a.TypeOfGoods
    , a.BillType
	, Item.QtyOrder	
    , ISNULL(e.QtySupply,0) QtySupply
    , a.DiscPct
FROM
	SvTrnSrvItem a WITH (NOLOCK, NOWAIT)
	LEFT JOIN SvTrnService b WITH (NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
		AND a.BranchCode = b.BranchCode
		AND a.ProductType = b.ProductType
		AND a.ServiceNo = b.ServiceNo
	LEFT JOIN (SELECT CompanyCode, BranchCode, ProductType, ServiceNo, PartNo, RetailPrice,
				SUM(ISNULL(DemandQty, 0) - ISNULL(SupplyQty, 0)) QtyOrder
				FROM SvTrnSrvItem 
				GROUP BY CompanyCode, BranchCode, ProductType, ServiceNo, PartNo, RetailPrice) Item ON
		Item.CompanyCode = a.CompanyCode AND Item.BranchCode = a.BranchCode AND Item.ProductType =
			a.ProductType AND Item.ServiceNo = a.ServiceNo AND Item.PartNo = a.PartNo and Item.RetailPrice = a.RetailPrice
	LEFT JOIN SpTrnSORDHdr c WITH (NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
		AND a.BranchCode = c.BranchCode
		AND b.JobOrderNo = c.UsageDocNo
	LEFT JOIN SpTrnSOSupply e WITH (NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
		AND a.BranchCode = e.BranchCode
		AND c.DocNo = e.DocNo
		AND a.PartNo = e.PartNo
    LEFT JOIN SpMstItemPrice f WITH(NOLOCK, NOWAIT) ON a.CompanyCode = f.CompanyCode
		AND a.BranchCode = f.BranchCode
		AND a.PartNo = f.PartNo
WHERE
	a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.ProductType = @ProductType
	AND Item.QtyOrder > 0
    AND c.DocNo = @DocNo
	AND JobOrderNo = @JobOrderNo
    AND a.RetailPrice = Item.RetailPrice
)a
LEFT JOIN SpMstItemPrice c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
		AND a.BranchCode = c.BranchCode
		AND a.PartNo = c.PartNo
GROUP BY
a.CompanyCode
	, a.BranchCode
	, a.ProductType
	, ServiceNo
    , SupplySlipDate
	, a.PartNo
	, c.RetailPrice
	, c.CostPrice
    , TypeOfGoods
    , BillType
    , QtySupply
    , DiscPct

END
ELSE
BEGIN

set @query = '
SELECT 
DISTINCT(a.CompanyCode) 
	, a.BranchCode
	, a.ProductType
	, ServiceNo
    , SupplySlipDate
	, a.PartNo
	, c.RetailPrice
	, c.CostPrice
    , TypeOfGoods
    , BillType
	, SUM(QtyOrder) QtyOrder
    , QtySupply
    , DiscPct
FROM
(
SELECT
	DISTINCT(a.CompanyCode) 
	, a.BranchCode
	, a.ProductType
	, a.ServiceNo
    , c.DocDate SupplySlipDate
	, a.PartNo
	, a.RetailPrice
	, f.CostPrice
    , a.TypeOfGoods
    , a.BillType
	, Item.QtyOrder	
    , ISNULL(e.QtySupply,0) QtySupply
    , a.DiscPct
FROM
	SvTrnSrvItem a WITH (NOLOCK, NOWAIT)
	LEFT JOIN SvTrnService b WITH (NOLOCK, NOWAIT) ON a.CompanyCode = b.CompanyCode
		AND a.BranchCode = b.BranchCode
		AND a.ProductType = b.ProductType
		AND a.ServiceNo = b.ServiceNo
	LEFT JOIN (SELECT CompanyCode, BranchCode, ProductType, ServiceNo, PartNo, RetailPrice,
				SUM(ISNULL(DemandQty, 0) - ISNULL(SupplyQty, 0)) QtyOrder
				FROM SvTrnSrvItem 
				GROUP BY CompanyCode, BranchCode, ProductType, ServiceNo, PartNo, RetailPrice) Item ON
		Item.CompanyCode = a.CompanyCode AND Item.BranchCode = a.BranchCode AND Item.ProductType =
			a.ProductType AND Item.ServiceNo = a.ServiceNo AND Item.PartNo = a.PartNo and Item.RetailPrice = a.RetailPrice
	LEFT JOIN SpTrnSORDHdr c WITH (NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
		AND a.BranchCode = c.BranchCode
		AND b.JobOrderNo = c.UsageDocNo
	LEFT JOIN SpTrnSOSupply e WITH (NOLOCK, NOWAIT) ON a.CompanyCode = e.CompanyCode
		AND a.BranchCode = e.BranchCode
		AND c.DocNo = e.DocNo
		AND a.PartNo = e.PartNo
    INNER JOIN gnMstCompanyMapping cm WITH(NOLOCK, NOWAIT) ON cm.CompanyCode = a.CompanyCode
    LEFT JOIN '+@dbMD+'..SpMstItemPrice f WITH(NOLOCK, NOWAIT) ON cm.CompanyMD = f.CompanyCode
		AND a.BranchCode = f.BranchCode
		AND a.PartNo = f.PartNo
WHERE
	a.CompanyCode = '+@CompanyCode+'
	AND a.BranchCode = '+@BranchCode+'
	AND a.ProductType = '+@ProductType+'
	AND Item.QtyOrder > 0
    AND c.DocNo = '+@DocNo+'
	AND JobOrderNo = '+@JobOrderNo+'
    AND a.RetailPrice = Item.RetailPrice
)a
LEFT JOIN SpMstItemPrice c WITH(NOLOCK, NOWAIT) ON a.CompanyCode = c.CompanyCode
		AND a.BranchCode = c.BranchCode
		AND a.PartNo = c.PartNo
GROUP BY
a.CompanyCode
	, a.BranchCode
	, a.ProductType
	, ServiceNo
    , SupplySlipDate
	, a.PartNo
	, c.RetailPrice
	, c.CostPrice
    , TypeOfGoods
    , BillType
    , QtySupply
    , DiscPct
'
EXEC(@query)
print(@query)
				
		END	 
	END
end
GO
CREATE procedure [dbo].[uspfn_omSlsReturnBrowse]
(    
 @CompanyCode varchar(15),    
 @BranchCode varchar(15)   
)    
AS    
BEGIN    
--exec uspfn_omSlsReturnBrowse 6006410,600641001  
SELECT 
		a.CompanyCode ,
		a.BranchCode ,
		a.ReturnNo ,
		a.ReturnDate ,
		a.ReferenceNo ,
		a.ReferenceDate ,
		a.InvoiceNo ,
		a.InvoiceDate ,
		a.CustomerCode ,
		a.FakturPajakNo ,
		a.FakturPajakDate ,
		a.WareHouseCode ,
		a.Remark ,
		a.Status ,
		a.WareHouseCode,
		b.CustomerName, 
		b.Address1 + ' ' + b.Address2 + ' ' + b.Address3 + ' ' + b.Address4 as Address,
		(
			SELECT 
					c.RefferenceDesc1
			FROM 
					omMstRefference c
			WHERE 
					a.WareHouseCode = c.RefferenceCode
		)  AS WarehouseName, 
		CASE
			WHEN a.Status = '0' THEN 'OPEN'
			WHEN a.Status = '1' THEN 'PRINTED'
			WHEN a.Status = '2' THEN 'APPROVED'
			WHEN a.Status = '3' THEN 'DELETED'
			WHEN a.Status = '5' THEN 'POSTED'
			WHEN a.Status = '9' THEN 'FINISHED'
		END  AS StatusDsc
		, CASE ISNULL(c.SalesType, 0) WHEN 0 THEN 'Wholesales' ELSE 'Direct' END AS SalesTypeDsc
		,c.SalesType
FROM 
		omTrSalesReturn a
		LEFT JOIN gnMstCustomer b ON a.CompanyCode = b.CompanyCode AND a.CustomerCode = b.CustomerCode
		LEFT JOIN gnMstCustomerProfitCenter c ON a.CompanyCode = c.CompanyCode AND a.BranchCode = c.BranchCode AND a.CustomerCode = c.CustomerCode AND c.ProfitCenterCode = '100'
WHERE 
		a.CompanyCode = @CompanyCode
		AND a.BranchCode = @BranchCode
order by 
		a.ReturnNo desc
End
GO
CREATE procedure [dbo].[sp_EdpPelangganBrowse] (  

@CompanyCode varchar(10),
@BranchCode varchar(10),
@ProfitCenter varchar(30))


as

SELECT a.CustomerCode, a.CustomerName,
       a.Address1+' '+a.Address2+' '+a.Address3+' '+a.Address4 as Address,
       c.LookUpValueName as ProfitCenter
  FROM gnMstCustomer a with(nolock, nowait)
    INNER JOIN gnMstCustomerProfitCenter b with(nolock, nowait) ON 
        a.CompanyCode = b.CompanyCode 
        AND b.BranchCode = @BranchCode
        AND b.ProfitCenterCode = @ProfitCenter
        AND b.CustomerCode = a.CustomerCode
        AND b.isBlackList=0
    INNER JOIN gnMstLookUpDtl c ON c.CompanyCode= a.CompanyCode
         AND c.LookupValue= b.ProfitCenterCode
         AND c.CodeID= 'PFCN'
 WHERE  a.CompanyCode=@CompanyCode
    AND a.status = 1   
    ORDER BY a.CustomerCode
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE procedure [dbo].[uspfn_spGetDataOutstandingBO]
	(
	@CompanyCode varchar(50),
	@BranchCode varchar(50),
	@CustCode varchar(50),
	@TransType varchar(50),
	@TypeOfGoods varchar(50),
	@SalesType varchar(50),
	@ProductType varchar(50)
	)
AS
BEGIN
	SELECT 
		Convert(bit, 0) chkSelect 
		, spTrnSORDDtl.DocNo
		, CONVERT(NUMERIC(18,2),0) AS QtyBOProc
		, spTrnSORDHdr.DocDate
		, spTrnSORDDtl.PartNo
		, CONVERT(NUMERIC(18,2)
		, ISNULL(spTrnSORDDtl.QtyBO, 0)) AS QtyBO
		, CONVERT(NUMERIC(18,2)
		, ISNULL(spTrnSORDDtl.QtyBoSupply, 0)) AS QtyBoSupply
		, CONVERT(NUMERIC(18,2), ISNULL(spTrnSORDDtl.QtyBO, 0)) - CONVERT(NUMERIC(18,2), ISNULL(spTrnSORDDtl.QtyBoSupply, 0)) - CONVERT(NUMERIC(18,2), ISNULL(spTrnSORDDtl.QtyBOCancel, 0)) AS QtyBOOts
		, CONVERT(NUMERIC(18,2), ISNULL(spTrnSORDDtl.QtyBOCancel, 0)) AS QtyBOCancel
		, spTrnSORDDtl.PartNoOriginal 
	FROM spTrnSORDDtl 
	INNER JOIN spTrnSORDHdr ON spTrnSORDDtl.DocNo = spTrnSORDHdr.DocNo AND spTrnSORDHdr.CustomerCode=@CustCode AND
				spTrnSORDHdr.TransType = @TransType AND spTrnSORDHdr.SalesType = @SalesType AND spTrnSORDHdr.Status >= 2 AND
				spTrnSORDHdr.TypeOfGoods = @TypeOfGoods AND spTrnSORDHdr.CompanyCode=@CompanyCode AND spTrnSORDHdr.BranchCode = @BranchCode
    WHERE 
	ISNULL(spTrnSORDDtl.QtyBO, 0) -  ISNULL(spTrnSORDDtl.QtyBOSupply, 0) - ISNULL(spTrnSORDDtl.QtyBOCancel, 0) > 0 
	AND spTrnSORDDtl.CompanyCode=@CompanyCode AND spTrnSORDDtl.BranchCode = @BranchCode AND spTrnSORDDtl.ProductType = @ProductType  
	ORDER BY spTrnSORDHdr.DocDate DESC 
END
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryDeliveryOrderDetail] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @NoDO varchar(15)
)
AS
BEGIN

SELECT a.SalesModelCode, a.SalesModelYear, b.SalesModelDesc, 
a.ChassisCode, Convert(varchar,a.ChassisNo) as ChassisNo, 
a.EngineCode, Convert(varchar,a.EngineNo) as EngineNo, 
a.ColourCode, c.RefferenceDesc1 as ColourName, a.Remark, a.DOSeq
FROM   omTrSalesDODetail a	   
LEFT JOIN
omMstModelYear b
ON a.CompanyCode = b.CompanyCode
AND a.SalesModelCode = b.SalesModelCode
AND a.SalesModelYear = b.SalesModelYear      
AND a.ChassisCode = b.ChassisCode	   
LEFT JOIN
omMstRefference c
ON a.CompanyCode = c.CompanyCode
AND a.ColourCode = c.RefferenceCode
AND c.RefferenceType = 'COLO'
WHERE a.CompanyCode= @p_CompanyCode 
AND a.BranchCode= @p_BranchCode  
AND a.DONo= @NoDO
ORDER BY a.ChassisNo ASC

END
GO
CREATE procedure [dbo].[sp_updateOmMstVehicleSO]
	@companyCode varchar(25),
	@BranchCode varchar(25),
	@ChassisCode varchar(25),
	@ChassisNo varchar(25),
	@SONO varchar(25),
	@userId varchar(25)
as

begin
	declare @CountSOVin int;
	declare @CountSOModel int;
	declare @dbMD varchar(25), @sqlStr varchar(max);
	
	--set @Month = (select FiscalPeriod from gnMstCoProfileSales where companycode=@companyCode and BranchCode=@BranchCode)
	set @dbMD =(select TOP 1 dbMD from gnMstCompanyMapping where CompanyCode=@companyCode and BranchCode=@BranchCode)
	
	set @sqlStr = '
		if exists (select * from '+ @dbMD +'.dbo.omMstVehicle where ChassisCode = '''+@ChassisCode+''' and ChassisNo = '''+@ChassisNo+''')
		begin
			update '+ @dbMD +'.dbo.omMstVehicle
			set status=3, SONo = '''+@SONO+''', LastUpdateBy = '''+@userId+''', LastUpdateDate =getdate()
			where ChassisCode = '''+@ChassisCode+''' and ChassisNo= '''+@ChassisNo+'''

			select convert(bit, 1) as Status
		end
		else select convert(bit, 0) as Status
	'
	
	--if exists (select * from BAT_UAT.dbo.omMstVehicle where ChassisCode = @ChassisCode and ChassisNo =@ChassisNo)
	--begin
		--update BAT_UAT.dbo.omMstVehicle
		--set status=3, SONo = @SONO, LastUpdateBy = @userId, LastUpdateDate =getdate()
		--where ChassisCode = @ChassisCode and ChassisNo=@ChassisNo

		--select convert(bit, 1) as Status
	--end
	--else select convert(bit, 0) as Status
	--select	@sqlStr
	exec(@sqlStr)
end
GO
-- =============================================
-- Author:		David L.
-- Create date: 22 Sep 2014
-- Description:	Get Customer For Report Register 011 
--              (Report Register Penjualan Per Pelanggan (Tunai&Kredit))
-- =============================================
CREATE procedure [dbo].[uspfn_spCustRptRgs011] 
	@CompanyCode varchar(15),
	@BranchCode varchar(15),
	@DateFrom datetime,
	@DateTo datetime,
	@PartType varchar(2),
	@PaymentCode nchar(1)
AS
BEGIN
	declare @TOPC varchar(15)
	set @TOPC = 'TOPC'

	if(@PaymentCode = '0')
	begin	
	SELECT DISTINCT
			    a.CustomerCode,
			    UPPER(b.CustomerName) CustomerName
		      FROM 
			    SpTrnSFPJHdr a,
			    GnMstCustomer b,
			    (
				    SELECT 
					    row_number()OVER(ORDER BY SpTrnSFPJHdr.customerCode)rowNum,
					    SpTrnSFPJHdr.customerCode 
				    FROM 
					    SpTrnSFPJHdr 
					    left join gnMstLookupDtl on SpTrnSFPJHdr.CompanyCode = gnMstLookupDtl.CompanyCode
						    AND gnMstLookupDtl.CodeId = @TOPC
				    WHERE
					    SpTrnSFPJHdr.CompanyCode	= @CompanyCode
					    AND SpTrnSFPJHdr.BranchCode = @BranchCode
					    AND convert(varchar,SpTrnSFPJHdr.FPJDate, 112) 
						    BETWEEN convert(varchar, convert(datetime, @DateFrom), 112) 
						    AND convert(varchar, convert(datetime, @DateTo), 112)
					    AND gnMstLookupDtl.ParaValue = 0
				    GROUP BY customerCode
			    )c,
			    gnMstLookupDtl d	
		     WHERE 
			    a.CompanyCode		= b.CompanyCode
			    AND a.CustomerCode	= b.CustomerCode
			    AND a.CustomerCode	= c.CustomerCode
			    AND a.CompanyCode	= @CompanyCode
			    AND a.BranchCode	= @BranchCode
			    AND convert(varchar, a.FPJDate, 112) 
					    BETWEEN convert(varchar, convert(datetime, @DateFrom), 112) 
					    AND convert(varchar, convert(datetime, @DateTo), 112)
			    AND a.CompanyCode	= d.CompanyCode
			    AND d.CodeId		= @TOPC
			    AND a.TOPCode		= d.LookupValue	
			    AND d.ParaValue     = 0 			 		
                AND (CASE WHEN @PartType = '' THEN '' ELSE a.TypeOfGoods END) = @PartType
		     ORDER BY CustomerCode
	end
	else if(@PaymentCode = '1')
	begin 
	SELECT DISTINCT
			    a.CustomerCode,
			    UPPER(b.CustomerName) CustomerName
		      FROM 
			    SpTrnSFPJHdr a,
			    GnMstCustomer b,
			    (
				    SELECT 
					    row_number()OVER(ORDER BY SpTrnSFPJHdr.customerCode)rowNum,
					    SpTrnSFPJHdr.customerCode 
				    FROM 
					    SpTrnSFPJHdr 
					    left join gnMstLookupDtl on SpTrnSFPJHdr.CompanyCode = gnMstLookupDtl.CompanyCode
						    AND gnMstLookupDtl.CodeId = @TOPC
				    WHERE
					    SpTrnSFPJHdr.CompanyCode	= @CompanyCode
					    AND SpTrnSFPJHdr.BranchCode = @BranchCode
					    AND convert(varchar,SpTrnSFPJHdr.FPJDate, 112) 
						    BETWEEN convert(varchar, convert(datetime, @DateFrom), 112) 
						    AND convert(varchar, convert(datetime, @DateTo), 112)
					    AND gnMstLookupDtl.ParaValue = 0
				    GROUP BY customerCode
			    )c,
			    gnMstLookupDtl d	
		     WHERE 
			    a.CompanyCode		= b.CompanyCode
			    AND a.CustomerCode	= b.CustomerCode
			    AND a.CustomerCode	= c.CustomerCode
			    AND a.CompanyCode	= @CompanyCode
			    AND a.BranchCode	= @BranchCode
			    AND convert(varchar, a.FPJDate, 112) 
					    BETWEEN convert(varchar, convert(datetime, @DateFrom), 112) 
					    AND convert(varchar, convert(datetime, @DateTo), 112)
			    AND a.CompanyCode	= d.CompanyCode
			    AND d.CodeId		= @TOPC
			    AND a.TOPCode		= d.LookupValue	
			    AND d.ParaValue     > 0 			 		
                AND (CASE WHEN @PartType = '' THEN '' ELSE a.TypeOfGoods END) = @PartType
		     ORDER BY CustomerCode
	end
	else
	begin
	SELECT DISTINCT
			    a.CustomerCode,
			    UPPER(b.CustomerName) CustomerName
		      FROM 
			    SpTrnSFPJHdr a,
			    GnMstCustomer b,
			    (
				    SELECT 
					    row_number()OVER(ORDER BY SpTrnSFPJHdr.customerCode)rowNum,
					    SpTrnSFPJHdr.customerCode 
				    FROM 
					    SpTrnSFPJHdr 
					    left join gnMstLookupDtl on SpTrnSFPJHdr.CompanyCode = gnMstLookupDtl.CompanyCode
						    AND gnMstLookupDtl.CodeId = @TOPC
				    WHERE
					    SpTrnSFPJHdr.CompanyCode	= @CompanyCode
					    AND SpTrnSFPJHdr.BranchCode = @BranchCode
					    AND convert(varchar,SpTrnSFPJHdr.FPJDate, 112) 
						    BETWEEN convert(varchar, convert(datetime, @DateFrom), 112) 
						    AND convert(varchar, convert(datetime, @DateTo), 112)
					    AND gnMstLookupDtl.ParaValue = 0
				    GROUP BY customerCode
			    )c,
			    gnMstLookupDtl d	
		     WHERE 
			    a.CompanyCode		= b.CompanyCode
			    AND a.CustomerCode	= b.CustomerCode
			    AND a.CustomerCode	= c.CustomerCode
			    AND a.CompanyCode	= @CompanyCode
			    AND a.BranchCode	= @BranchCode
			    AND convert(varchar, a.FPJDate, 112) 
					    BETWEEN convert(varchar, convert(datetime, @DateFrom), 112) 
					    AND convert(varchar, convert(datetime, @DateTo), 112)
			    AND a.CompanyCode	= d.CompanyCode
			    AND d.CodeId		= @TOPC
			    AND a.TOPCode		= d.LookupValue	
                AND (CASE WHEN @PartType = '' THEN '' ELSE a.TypeOfGoods END) = @PartType
		     ORDER BY CustomerCode
	end
END
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryDeliveryOrder] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @SODateFrom DateTime,
 @SODateTo DateTime,
 @NoSOFrom varchar(100),
 @NoSOTo varchar(100),
 @NoDOFrom varchar(100),
 @NoDOTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT a.DONo, convert(varchar(20),a.DODate,106) as DODate, a.SONo, a.CustomerCode, b.CustomerName, 
b.CustomerName, b.Address1 + '' '' + b.Address2 + '' '' + b.Address3 + '' '' + b.Address4 as Address,
c.SupplierName AS Expedition, case pso.SalesType when ''0'' then ''W'' when ''1'' then ''D'' end as SalesType,
d.RefferenceDesc1 AS WareHouseName, e.CustomerName AS ShipTo, 
a.Remark, 
CASE
WHEN a.Status = 0 THEN ''Open''
WHEN a.Status = 1 THEN ''Printed''
WHEN a.Status = 2 THEN ''Approved''
WHEN a.Status = 3 THEN ''Canceled''
WHEN a.Status = 9 THEN ''Finished''
END as Status 
FROM omTrSalesDO a
LEFT JOIN GnMstCustomer b ON b.CompanyCode = a.CompanyCode AND b.CustomerCode = a.CustomerCode
LEFT JOIN GnMstSupplier c ON c.CompanyCode = a.CompanyCode AND c.SupplierCode = a.Expedition
LEFT JOIN OmMstRefference d ON d.CompanyCode = a.CompanyCode AND d.RefferenceCode = a.WareHouseCode AND d.RefferenceType = ''WARE''
LEFT JOIN GnMstCustomer e ON e.CompanyCode = a.CompanyCode AND e.CustomerCode = a.ShipTo
LEFT JOIN omTrSalesSO pso ON a.CompanyCode = pso.CompanyCode AND a.BranchCode = pso.BranchCode AND a.SONo = pso.SONo
Where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if year(@SODateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.DODate between ''' + convert(varchar(50),@SODateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@SODateTo) + ''''

if len(rtrim(@NoSOFrom)) > 0
   set @pQuery = @pQuery + ' and a.SONo between ''' + rtrim(@NoSOFrom) + '''' + ' and ' + '''' + rtrim(@NoSOTo) + ''''

if len(rtrim(@NoDOFrom)) > 0
   set @pQuery = @pQuery + ' and a.DONo between ''' + rtrim(@NoDOFrom) + '''' + ' and ' + '''' + rtrim(@NoDOTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' + ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.DONo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
CREATE procedure [dbo].[uspfn_GetVehicleInfo_New]  
 @CompanyCode  varchar(20),  
 @BranchCode   varchar(20),  
 @ProductType  varchar(10),  
 @PoliceRegNo  varchar(20),  
 @ChassisCode  varchar(20),  
 @ChassisNo    varchar(10),  
 @BasicModel   varchar(20),  
 @JobOrderDate varchar(20),
 @CustomerCode varchar(20),
 @IsAllBranch  bit = 1
 
as  
  
select * into #t1 from (  
select 0 TaskPartSeq  
     , a.BranchCode  
     , a.JobOrderNo  
     , a.JobOrderDate  
     , d.InvoiceNo  
     , d.InvoiceDate  
     , d.FPJNo  
     , d.FPJDate  
     , a.JobType + ' - ' + e.Description JobType  
     , a.Odometer  
     , c.MechanicId+' - '+  
  (  
  select EmployeeName   
  from gnMstEmployee   
  where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and EmployeeID=c.MechanicId  
  ) MechanicId  
     , a.ForemanId  
     , b.OperationNo  
     , isnull(b.OperationHour, 0) as OperationQty  
     , convert(decimal, isnull(b.OperationCost, 0) * isnull(b.OperationHour, 0) * 1.0) as OperationAmt  
     , convert(decimal, isnull(b.OperationCost, 0) * isnull(b.OperationHour, 0) * 1.1) as TotalSrvAmount  
     , isnull(b.SharingTask, 0) SharingTask  
     , case when f.Description is null then (select TOP 1 Description   
    from svMstTask   
     where BasicModel = a.BasicModel  
      and OperationNo = b.OperationNo) else f.Description end Description  
    , isnull(g.EmployeeName, '') NameSA  
    , isnull(h.EmployeeName, '') NameForeman  
    , b.CreatedDate
    , d.Remarks
 from svTrnService a with(nolock, nowait)  
 left join svTrnSrvTask b with(nolock, nowait)  
   on b.CompanyCode = a.CompanyCode  
  and b.BranchCode  = a.BranchCode  
  and b.ProductType = a.ProductType  
  and b.ServiceNo   = a.ServiceNo  
 left join svTrnSrvMechanic c with(nolock, nowait)  
   on c.CompanyCode = b.CompanyCode  
  and c.BranchCode  = b.BranchCode  
  and c.ProductType = b.ProductType  
  and c.ServiceNo   = b.ServiceNo  
  and c.OperationNo = b.OperationNo  
 left join svTrnInvoice d with(nolock, nowait)  
   on d.CompanyCode = a.CompanyCode  
  and d.BranchCode  = a.BranchCode  
  and d.InvoiceNo   = a.InvoiceNo  
 left join svMstRefferenceService e with(nolock, nowait)  
   on e.CompanyCode    = a.CompanyCode  
  and e.RefferenceCode = a.jobType  
  and e.ProductType    = a.ProductType  
  and e.RefferenceType = 'JOBSTYPE'  
 left join svMstTask f with(nolock, nowait)  
   on f.CompanyCode = b.CompanyCode  
  and f.ProductType = b.ProductType  
  and f.OperationNo = b.OperationNo   
  and f.JobType     = a.JobType  
  and f.BasicModel  = a.BasicModel  
 left join gnMstEmployee g on g.CompanyCode = a.CompanyCode  
  and g.BranchCode = a.BranchCode   
  and g.EmployeeId = a.ForemanID  
 left join gnMstEmployee h on h.CompanyCode = a.CompanyCode  
  and h.BranchCode = a.BranchCode   
  and h.EmployeeId = a.MechanicID  
where a.JobOrderNo <> ''  
  and a.CompanyCode = @CompanyCode  
  and a.BranchCode  = @BranchCode  
  and a.ProductType = @ProductType  
  and a.ChassisCode = @ChassisCode  
  and a.ChassisNo   = @ChassisNo  
  and convert(varchar, a.JobOrderDate, 112) >= @JobOrderDate  
  and a.CustomerCode = @CustomerCode
) #t1  
  
--declare @t_spk_task as table(JobOrderNo varchar(20), OperationNo varchar(20))  
  
--insert into @t_spk_task   
--select a.JobOrderNo  
--  , isnull((  
--  select top 1 OperationNo from #t1  
--      where JobOrderNo = a.JobOrderNo  
--      order by CreatedDate   
--     ), '') OperationNo  
--  from #t1 a group by a.JobOrderNo  
  
insert into #t1  
select 1 TaskPartSeq  
     , a.BranchCode  
     , a.JobOrderNo  
     , a.JobOrderDate  
     , d.InvoiceNo  
     , d.InvoiceDate  
     , d.FPJNo  
     , d.FPJDate  
     , a.JobType + ' - ' + e.Description JobType  
     , a.Odometer  
     , ''  
     , ''  
     , b.PartNo  
     , (isnull(b.DemandQty,0) - isnull(b.ReturnQty,0)) as OperationQty  
     , convert(int, (isnull(b.DemandQty,0) - isnull(b.ReturnQty,0)) * isnull(b.RetailPrice,0) * 1.0) as OperationAmt  
     , convert(int, (isnull(b.DemandQty,0) - isnull(b.ReturnQty,0)) * isnull(b.RetailPrice,0) * 1.1)
     , 1  
     , f.PartName  
     , isnull(g.EmployeeName, '') NameSA  
     , isnull(h.EmployeeName, '') NameForeman  
     , b.CreatedDate
     , d.Remarks 
  from svTrnService a with(nolock, nowait)  
  left join svTrnSrvItem b with(nolock, nowait)  
    on b.CompanyCode = a.CompanyCode  
   and b.BranchCode  = a.BranchCode  
   and b.ProductType = a.ProductType  
   and b.ServiceNo   = a.ServiceNo  
  left join svTrnInvoice d with(nolock, nowait)  
    on d.CompanyCode = a.CompanyCode  
   and d.BranchCode  = a.BranchCode  
   and d.InvoiceNo   = a.InvoiceNo  
  left join svMstRefferenceService e with(nolock, nowait)  
    on e.CompanyCode    = a.CompanyCode  
   and e.RefferenceCode = a.jobType  
   and e.ProductType    = a.ProductType  
   and e.RefferenceType = 'JOBSTYPE'  
  left join spMstItemInfo f with(nolock, nowait)  
    on f.CompanyCode = b.CompanyCode  
   and f.PartNo      = b.PartNo   
  left join gnMstEmployee g on g.CompanyCode = a.CompanyCode  
   and g.BranchCode = a.BranchCode   
   and g.EmployeeId = a.ForemanID  
  left join gnMstEmployee h on h.CompanyCode = a.CompanyCode  
   and h.BranchCode = a.BranchCode   
   and h.EmployeeId = a.MechanicID  
 where a.JobOrderNo <> ''  
   and a.CompanyCode = @CompanyCode  
   and a.BranchCode  = @BranchCode  
   and a.ProductType = @ProductType  
   and a.ChassisCode = @ChassisCode  
   and a.ChassisNo   = @ChassisNo  
   and convert(varchar, a.JobOrderDate, 112) >= @JobOrderDate  
   and a.CustomerCode = @CustomerCode
;with x as (  
select a.JobOrderNo, a.OperationNo, a.TotalSrvAmount, b.TotalSrvAmount TotalSrvAmountNew
  from #t1 a  
  left join svTrnService b  
    on b.CompanyCode = @CompanyCode  
   and b.BranchCode  = @BranchCode  
   and b.ProductType = @ProductType  
   and b.JobOrderNo  = a.JobOrderNo  
)  
update x set TotalSrvAmount = TotalSrvAmountNew  

select a.BranchCode  
     , a.JobOrderNo  
     , SUM(a.OperationAmt)  TotalSrvAmount
     , (CAST(a.Remarks AS varchar(max)))
from #t1 a
where OperationQty > 0
group BY a.BranchCode, a.JobOrderNo, TotalSrvAmount, (CAST(a.Remarks AS varchar(max)))
order by a.JobOrderNo
  
drop table #t1
GO
CREATE procedure [dbo].[uspfn_GetVehicleInfo_SubNew]  
 @CompanyCode  varchar(20),  
 @BranchCode   varchar(20),  
 @ProductType  varchar(10),  
 @PoliceRegNo  varchar(20),  
 @ChassisCode  varchar(20),  
 @ChassisNo    varchar(10),  
 @BasicModel   varchar(20),  
 @JobOrderDate varchar(20),
 @CustomerCode varchar(20),
 @IsAllBranch  bit = 1,
 @JobOrderNo   varchar(20)
 
as  
  
select * into #t1 from (  
select 0 TaskPartSeq  
     , a.BranchCode  
     , a.JobOrderNo  
     , a.JobOrderDate  
     , d.InvoiceNo  
     , d.InvoiceDate  
     , d.FPJNo  
     , d.FPJDate  
     , a.JobType + ' - ' + e.Description JobType  
     , a.Odometer  
     , c.MechanicId+' - '+  
  (  
  select EmployeeName   
  from gnMstEmployee   
  where CompanyCode=a.CompanyCode and BranchCode=a.BranchCode and EmployeeID=c.MechanicId  
  ) MechanicId  
     , a.ForemanId  
     , b.OperationNo  
     , isnull(b.OperationHour, 0) as OperationQty  
     , convert(decimal, isnull(b.OperationCost, 0) * isnull(b.OperationHour, 0) * 1.0) as OperationAmt  
     , convert(decimal, isnull(b.OperationCost, 0) * isnull(b.OperationHour, 0) * 1.1) as TotalSrvAmount  
     , isnull(b.SharingTask, 0) SharingTask  
     , case when f.Description is null then (select TOP 1 Description   
    from svMstTask   
     where BasicModel = a.BasicModel  
      and OperationNo = b.OperationNo) else f.Description end Description  
    , isnull(g.EmployeeName, '') NameSA  
    , isnull(h.EmployeeName, '') NameForeman  
    , b.CreatedDate  
 from svTrnService a with(nolock, nowait)  
 left join svTrnSrvTask b with(nolock, nowait)  
   on b.CompanyCode = a.CompanyCode  
  and b.BranchCode  = a.BranchCode  
  and b.ProductType = a.ProductType  
  and b.ServiceNo   = a.ServiceNo  
 left join svTrnSrvMechanic c with(nolock, nowait)  
   on c.CompanyCode = b.CompanyCode  
  and c.BranchCode  = b.BranchCode  
  and c.ProductType = b.ProductType  
  and c.ServiceNo   = b.ServiceNo  
  and c.OperationNo = b.OperationNo  
 left join svTrnInvoice d with(nolock, nowait)  
   on d.CompanyCode = a.CompanyCode  
  and d.BranchCode  = a.BranchCode  
  and d.InvoiceNo   = a.InvoiceNo  
 left join svMstRefferenceService e with(nolock, nowait)  
   on e.CompanyCode    = a.CompanyCode  
  and e.RefferenceCode = a.jobType  
  and e.ProductType    = a.ProductType  
  and e.RefferenceType = 'JOBSTYPE'  
 left join svMstTask f with(nolock, nowait)  
   on f.CompanyCode = b.CompanyCode  
  and f.ProductType = b.ProductType  
  and f.OperationNo = b.OperationNo   
  and f.JobType     = a.JobType  
  and f.BasicModel  = a.BasicModel  
 left join gnMstEmployee g on g.CompanyCode = a.CompanyCode  
  and g.BranchCode = a.BranchCode   
  and g.EmployeeId = a.ForemanID  
 left join gnMstEmployee h on h.CompanyCode = a.CompanyCode  
  and h.BranchCode = a.BranchCode   
  and h.EmployeeId = a.MechanicID  
where a.JobOrderNo <> ''  
  and a.CompanyCode = @CompanyCode  
  and a.BranchCode  = @BranchCode  
  and a.ProductType = @ProductType  
  and a.ChassisCode = @ChassisCode  
  and a.ChassisNo   = @ChassisNo  
  and convert(varchar, a.JobOrderDate, 112) >= @JobOrderDate  
  and a.CustomerCode = @CustomerCode
  and a.JobOrderNo = @JobOrderNo
) #t1  
  
--declare @t_spk_task as table(JobOrderNo varchar(20), OperationNo varchar(20))  
  
--insert into @t_spk_task   
--select a.JobOrderNo  
--  , isnull((  
--  select top 1 OperationNo from #t1  
--      where JobOrderNo = a.JobOrderNo  
--      order by CreatedDate   
--     ), '') OperationNo  
--  from #t1 a group by a.JobOrderNo  
  
insert into #t1  
select 1 TaskPartSeq  
     , a.BranchCode  
     , a.JobOrderNo  
     , a.JobOrderDate  
     , d.InvoiceNo  
     , d.InvoiceDate  
     , d.FPJNo  
     , d.FPJDate  
     , a.JobType + ' - ' + e.Description JobType  
     , a.Odometer  
     , ''  
     , ''  
     , b.PartNo  
     , (isnull(b.DemandQty,0) - isnull(b.ReturnQty,0)) as OperationQty  
     , convert(int, (isnull(b.DemandQty,0) - isnull(b.ReturnQty,0)) * isnull(b.RetailPrice,0) * 1.0) as OperationAmt  
     , convert(int, (isnull(b.DemandQty,0) - isnull(b.ReturnQty,0)) * isnull(b.RetailPrice,0) * 1.1)
     , 1  
     , f.PartName  
     , isnull(g.EmployeeName, '') NameSA  
     , isnull(h.EmployeeName, '') NameForeman  
     , b.CreatedDate  
  from svTrnService a with(nolock, nowait)  
  left join svTrnSrvItem b with(nolock, nowait)  
    on b.CompanyCode = a.CompanyCode  
   and b.BranchCode  = a.BranchCode  
   and b.ProductType = a.ProductType  
   and b.ServiceNo   = a.ServiceNo  
  left join svTrnInvoice d with(nolock, nowait)  
    on d.CompanyCode = a.CompanyCode  
   and d.BranchCode  = a.BranchCode  
   and d.InvoiceNo   = a.InvoiceNo  
  left join svMstRefferenceService e with(nolock, nowait)  
    on e.CompanyCode    = a.CompanyCode  
   and e.RefferenceCode = a.jobType  
   and e.ProductType    = a.ProductType  
   and e.RefferenceType = 'JOBSTYPE'  
  left join spMstItemInfo f with(nolock, nowait)  
    on f.CompanyCode = b.CompanyCode  
   and f.PartNo      = b.PartNo   
  left join gnMstEmployee g on g.CompanyCode = a.CompanyCode  
   and g.BranchCode = a.BranchCode   
   and g.EmployeeId = a.ForemanID  
  left join gnMstEmployee h on h.CompanyCode = a.CompanyCode  
   and h.BranchCode = a.BranchCode   
   and h.EmployeeId = a.MechanicID  
 where a.JobOrderNo <> ''  
   and a.CompanyCode = @CompanyCode  
   and a.BranchCode  = @BranchCode  
   and a.ProductType = @ProductType  
   and a.ChassisCode = @ChassisCode  
   and a.ChassisNo   = @ChassisNo  
   and convert(varchar, a.JobOrderDate, 112) >= @JobOrderDate  
   and a.CustomerCode = @CustomerCode
   and a.JobOrderNo = @JobOrderNo
;with x as (  
select a.JobOrderNo, a.OperationNo, a.TotalSrvAmount, b.TotalSrvAmount TotalSrvAmountNew  
  from #t1 a  
  left join svTrnService b  
    on b.CompanyCode = @CompanyCode  
   and b.BranchCode  = @BranchCode  
   and b.ProductType = @ProductType  
   and b.JobOrderNo  = a.JobOrderNo  
)  
update x set TotalSrvAmount = TotalSrvAmountNew  
  
select *  
from #t1 
where OperationQty > 0
order by JobOrderNo, TaskPartSeq, CreatedDate
  
drop table #t1
GO
CREATE procedure [dbo].[uspfn_GenerateReturnServiceWeb]
	@CompanyCode	VARCHAR(MAX),
	@BranchCode		VARCHAR(MAX),
	@ProductType	VARCHAR(MAX),
	@InvoiceNo		VARCHAR(MAX),
	@ReturnNo		VARCHAR(MAX),
	@UserID			VARCHAR(MAX),
	@PartNo			VARCHAR(MAX)
	
AS
BEGIN

DECLARE @ReturnDate DATETIME SET @ReturnDate = GetDate()

--DECLARE 	@CompanyCode	VARCHAR(MAX),
--			@BranchCode		VARCHAR(MAX),
--			@ProductType	VARCHAR(MAX),
--			@InvoiceNo		VARCHAR(MAX),
--			@ReturnNo		VARCHAR(MAX),
--			@UserID			VARCHAR(MAX)

--SET	@CompanyCode	= '6006406'
--SET	@BranchCode		= '6006401'
--SET	@ProductType	= '4W'
--SET	@InvoiceNo		= 'INC/12/001002'
--SET	@ReturnNo		= 'RTN/12/000003'
--SET	@UserID			= 'sa'

-- ============================================================================================================================
-- INITIALIZE DATA SOURCE BY INVOICE SERVICE
-- ============================================================================================================================
SELECT * INTO #InvoicePart FROM (
SELECT
	a.CompanyCode
	, a.BranchCode
	, CustomerCode
	, isPKP
	, FpjNo
	, FpjDate 
	, a.InvoiceNo
	, a.InvoiceDate
	, JobOrderNo
	, JobOrderDate
	, TypeOfGoods
	, PartNo
	, PartsDiscPct
	, MaterialDiscPct 
	, PPNpct
	, SupplyQty
	, CostPrice
	, RetailPrice
	, b.DiscPct
FROM svTrnInvoice a
INNER JOIN svTrnInvItem b  ON a.CompanyCode = b.CompanyCode AND a.BranchCode = b.BranchCode AND a.InvoiceNo = b.InvoiceNo
WHERE a.CompanyCode = @CompanyCode
	AND a.BranchCode = @BranchCode
	AND a.ProductType = @ProductType
	AND a.InvoiceNo = @InvoiceNo 
	AND b.PartNo = @PartNo
	) #InvoicePart

-- ============================================================================================================================
-- INSERT HEADER RETUR SERVICE SPAREPART HEADER
-- ============================================================================================================================
if not exists (select InvoiceNo from spTrnSRturSrvHdr where CompanyCode = @CompanyCode and BranchCode = @BranchCode and InvoiceNo = @InvoiceNo)
begin
	INSERT INTO [spTrnSRturSrvHdr](
		[CompanyCode] 
		,[BranchCode]
		,[ReturnNo] 
		,[ReturnDate] 
		,[CustomerCode] 
		,[InvoiceNo] 
		,[InvoiceDate] 
		,[FPJNo] 
		,[FPJDate] 
		,[ReferenceNo] 
		,[ReferenceDate] 
		,[TotReturQty] 
		,[TotReturAmt] 
		,[TotDiscAmt]
		,[TotDPPAmt] 
		,[TotPPNAmt] 
		,[TotFinalReturAmt] 
		,[TotCostAmt] 
		,[isPKP] 
		,[NPWPNo] 
		,[PrintSeq] 
		,[Status] 
		,[CreatedBy] 
		,[CreatedDate] 
		,[LastUpdateBy] 
		,[LastUpdateDate] ) 
	SELECT TOP 1 CompanyCode
		, BranchCode
		, @ReturnNo ReturnNo
		, @ReturnDate ReturnDate
		, a.CustomerCode
		, a.InvoiceNo
		, a.InvoiceDate
		, a.FpjNo
		, a.FpjDate
		, a.JobOrderNo
		, a.JobOrderDate
		, 0
		, 0
		, 0
		, 0
		, 0
		, 0
		, 0
		, isPKP
		, (SELECT NPWPNo FROM GNMstCustomer WHERE CompanyCode = a.CompanyCode AND CustomerCode = a.CustomerCode) NPWPNo
		, 0 PrintSeq
		, 2 Status
		, @UserId CreatedBy
		, GetDate() CreatedDate
		, @UserId LastUpdateBy
		, GetDate() LastUpdateDate
		FROM #InvoicePart a 
END
-- ============================================================================================================================
-- INSERT RETURN SERVICE SPAREPART DETAIL PART
-- ============================================================================================================================
INSERT INTO [spTrnSRturSrvDtl]
   ([CompanyCode]
   ,[BranchCode]
   ,[ReturnNo]
   ,[PartNo]
   ,[PartNoOriginal]
   ,[WarehouseCode]
   ,[DocNo]
   ,[ReturnDate]
   ,[QtyReturn]
   ,[RetailPriceInclTax]
   ,[RetailPrice]
   ,[CostPrice]
   ,[DiscPct]
   ,[ReturAmt]
   ,[DiscAmt]
   ,[NetReturAmt]
   ,[PPNAmt]
   ,[TotReturAmt]
   ,[CostAmt]
   ,[LocationCode]
   ,[ProductType]
   ,[PartCategory]
   ,[MovingCode]
   ,[ABCClass]
   ,[TypeOfGoods]
   ,[CreatedBy]
   ,[CreatedDate])
SELECT a.CompanyCode
, a.BranchCode
, @ReturnNo ReturnNo
, a.PartNo
, a.PartNo
, '00' WarehouseCode
, a.JobOrderNo DocNo
, @ReturnDate ReturnDate
, a.SupplyQty QtyReturn
, a.RetailPrice * 1.1 RetailPriceInclTax
, a.RetailPrice
, a.CostPrice
, a.DiscPct
, a.RetailPrice * a.SupplyQty ReturAmt
, FLOOR((a.RetailPrice * a.SupplyQty) * (a.DiscPct /100)) DiscAmt
, (a.RetailPrice * a.SupplyQty) - FLOOR((a.RetailPrice * a.SupplyQty) * (a.MaterialDiscPct /100)) NetReturAmt
, FLOOR((a.RetailPrice * a.SupplyQty) * (PPNPct / 100)) PPNAmt
, (a.RetailPrice * a.SupplyQty) - FLOOR((a.RetailPrice * a.SupplyQty) * (a.MaterialDiscPct /100))
			+ FLOOR((a.RetailPrice * a.SupplyQty) * (PPNPct / 100)) TotReturAmt
, a.CostPrice * a.SupplyQty CostAmt
, (
	SELECT LocationCode 
	FROM SpMstItemLoc 
	WHERE CompanyCode = a.CompanyCode 
		AND BranchCode = a.BranchCode 
		AND PartNo = a.PartNo 
	AND WarehouseCode = '00') LocationCode
, @ProductType ProductType
, (
	SELECT PartCategory 
	FROM SpMstItems 
	WHERE CompanyCode = a.CompanyCode 
		AND BranchCode = a.BranchCode 
		AND PartNo = a.PartNo) PartCategory
, (
	SELECT MovingCode 
	FROM SpMstItems 
	WHERE CompanyCode = a.CompanyCode 
		AND BranchCode = a.BranchCode 
		AND PartNo = a.PartNo) MovingCode
, (
	SELECT ABCClass 
	FROM SpMstItems 
	WHERE CompanyCode = a.CompanyCode 
		AND BranchCode = a.BranchCode 
		AND PartNo = a.PartNo) ABCClass
, a.TypeOfGoods
, @UserID CreatedBy
, GetDate() CreatedDate
FROM #InvoicePart a 

-- ============================================================================================================================
-- UPDATE RETURN SERVICE SPAREPART HEADER AMOUNT AND QUANTITY
-- ============================================================================================================================
SELECT * INTO #TempAmtHeader FROM (
SELECT 
	CompanyCode
	, BranchCode	
	, ReturnNo
	, SUM(QtyReturn) TotReturnQty
	, SUM(ReturAmt) TotReturAmt
	, SUM(DiscAmt) TotDiscAmt
	, SUM(NetReturAmt) TotDPPAmt
	, SUM(NetReturAmt * 10 /100) TotPPNAmt
	, SUM(CostAmt) TotCostAmt 	
FROM SpTrnSRturSrvDtl
WHERE CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND ReturnNo = @ReturnNo
GROUP BY CompanyCode, BranchCode, ReturnNo
) #TempAmtHeader


UPDATE spTrnSRturSrvHdr
SET TotReturQty = b.TotReturnQty
	, TotReturAmt = b.TotReturAmt
	, TotDiscAmt = b.TotDiscAmt
	, TotDPPAmt = b.TotDPPAmt
	, TotPPNAmt = b.TotPPNAmt
	, TotFinalReturAmt = b.TotDPPAmt + b.TotPPNAmt
	, TotCostAmt = b.TotCostAmt
FROM spTrnSRturSrvHdr a, #TempAmtHeader b
WHERE a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
	AND a.ReturnNo = b.ReturnNo

DROP TABLE #TempAmtHeader
-- ============================================================================================================================
-- INITIALIZE DATABASE MAIN DEALER
-- ============================================================================================================================
DECLARE @CompanyMD varchar(15), @BranchMD varchar(15),  @DBMD varchar(15)

set @CompanyMD = (SELECT CompanyMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode)
set @BranchMD = (SELECT BranchMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode)  
set @DBMD = (SELECT DbMD FROM gnMstCompanyMapping WHERE CompanyCode=@CompanyCode AND BranchCode=@BranchCode)

-- ============================================================================================================================
-- AVERAGE COST PRICE (UPDATE MASTER ITEM PRICE AND HISTORY)
-- ============================================================================================================================
DECLARE @Query1 varchar(MAX)

set @Query1 = 'SELECT * INTO #TempAvgPrice FROM ( 
SELECT
	a.CompanyCode
	, a.BranchCode
	, a.PartNo
	, ROUND((((b.OnHand * c.CostPrice) + ((a.QtyReturn * a.CostPrice) * (1-(a.DiscPct/100)))) 
		/ (a.QtyReturn + b.OnHand)),2,2  )AvgCost 
	, c.CostPrice
FROM SpTrnSRturSrvDtl a
	LEFT JOIN '+@DBMD+'..SpMstItems b ON a.PartNo = b.PartNo
	LEFT JOIN '+@DBMD+'..SpMstItemPrice c ON a.PartNo = c.PartNo
WHERE a.CompanyCode = '''+@CompanyCode+'''
	AND a.BranchCode = '''+@BranchCode+'''
	AND a.ReturnNo = '''+@ReturnNo+''' ) #TempAvgPrice

INSERT INTO '+@DBMD+'..[spHstItemPrice]
       ([CompanyCode]
       ,[BranchCode]
       ,[PartNo]
       ,[UpdateDate]
       ,[RetailPrice]
       ,[RetailPriceInclTax]
       ,[PurchasePrice]
       ,[CostPrice]
       ,[Discount]
       ,[OldRetailPrice]
       ,[OldPurchasePrice]
       ,[OldCostPirce]
       ,[OldDiscount]
       ,[LastPurchaseUpdate]
       ,[LastRetailPriceUpdate]
       ,[CreatedBy]
       ,[CreatedDate]
       ,[LastUpdateBy]
       ,[LastUpdateDate])
SELECT a.CompanyCode
	, a.BranchCode
	, a.PartNo
	, DATEADD(ss,row_number() over (order by a.PartNo ASC), GetDate()) UpdateDate
	, a.RetailPrice 
	, a.RetailPriceInclTax
	, a.PurchasePrice
	, b.AvgCost CostPrice
	, ISNULL((
		SELECT TOP 1 Discount 
		FROM SpHstItemPrice 
		WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode
			AND PartNo = a.PartNo
		ORDER BY UpdateDate DESC
		),0) Discount
	, a.RetailPrice OldRetailPrice
	, a.PurchasePrice OldPurchasePrice
	, a.CostPrice OldCostPrice
	, ISNULL((
		SELECT TOP 1 Discount 
		FROM SpHstItemPrice 
		WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode
			AND PartNo = a.PartNo
		ORDER BY UpdateDate DESC
		),0) Discount
	, ISNULL((
		SELECT TOP 1 LastPurchaseUpdate 
		FROM SpHstItemPrice 
		WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode
			AND PartNo = a.PartNo
		ORDER BY UpdateDate DESC
		), NULL)LastPurchaseUpdate
	, ISNULL((
		SELECT TOP 1 LastRetailPriceUpdate 
		FROM SpHstItemPrice 
		WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode
			AND PartNo = a.PartNo
		ORDER BY UpdateDate DESC
		), NULL) LastRetailPriceUpdate 
	, '''+@UserID+''' CreatedBy
	, GetDate() CreatedDate
	, '''+@UserID+''' LastUpdateBy
	, GetDate() LastUpdateDate
FROM '+@DBMD+'..spMstItemPrice a
	INNER JOIN #TempAvgPrice b ON a.CompanyCode = b.CompanyCode 
		AND a.BranchCode = b.BranchCode 
		AND a.PartNo = b.PartNo

UPDATE '+@DBMD+'..SpMstItemPrice
SET CostPrice = b.AvgCost
	, LastUpdateBy = '''+@UserID+'''
	, LastUpdateDate = GetDate()
FROM '+@DBMD+'..SpMstItemPrice a, #TempAvgPrice b
WHERE a.CompanyCode = b.CompanyCode
	AND a.BranchCode = b.BranchCode
	AND a.PartNo = b.PartNo
DROP TABLE #TempAvgPrice'

Print (@Query1)
EXEC (@Query1)

-- ============================================================================================================================
-- UPDATE STOCK AND MOVEMENT
-- ============================================================================================================================
DECLARE @Query2 varchar(max)

set @Query2 = 'UPDATE '+@DBMD+'..SpMstItems
SET Onhand = Onhand + b.QtyReturn
	, LastUpdateBy = '''+@UserID+'''
	, LastUpdateDate = GetDate()
FROM '+@DBMD+'..SpMstItems a, SpTrnSRturSrvDtl b
WHERE a.PartNo = b.PartNo
	AND b.CompanyCode = '''+@CompanyCode+'''
	AND b.BranchCode = '''+@BranchCode+'''
	AND b.ReturnNo = '''+@ReturnNo+'''	


UPDATE '+@DBMD+'..SpMstItemLoc
SET Onhand = Onhand + b.QtyReturn
	, LastUpdateBy = '''+@UserID+'''
	, LastUpdateDate = GetDate()
FROM '+@DBMD+'..SpMstItemLoc a, SpTrnSRturSrvDtl b
WHERE a.PartNo = b.PartNo
	AND a.WarehouseCode = ''00''
	AND b.CompanyCode = '''+@CompanyCode+'''
	AND b.BranchCode = '''+@BranchCode+'''
	AND b.ReturnNo = '''+@ReturnNo+''''	

Print(@Query2)
Exec(@Query2)

INSERT INTO [spTrnIMovement]
       ([CompanyCode]
       ,[BranchCode]
       ,[DocNo]
       ,[DocDate]
       ,[CreatedDate]
       ,[WarehouseCode]
       ,[LocationCode]
       ,[PartNo]
       ,[SignCode]
       ,[SubSignCode]
       ,[Qty]
       ,[Price]
       ,[CostPrice]
       ,[ABCClass]
       ,[MovingCode]
       ,[ProductType]
       ,[PartCategory]
       ,[CreatedBy])
SELECT a.CompanyCode
	, a.BranchCode
	, a.ReturnNo DocNo
	, (
		SELECT ReturnDate 
		FROM SpTrnSRturSrvHdr 
		WHERE CompanyCode = a.CompanyCode 
			AND BranchCode = a.BranchCode 
			AND ReturnNo = a.ReturnNo
	  ) DocDate
	, DATEADD(ss,row_number() over (order by a.PartNo ASC), GetDate()) CreatedDate
	, '00' WarehouseCode
	, (
		SELECT LocationCode
		FROM SpMstItemLoc 
		WHERE CompanyCode = a.CompanyCode
			AND BranchCode = a.BranchCode
			AND WarehouseCode = '00'
			AND PartNo = a.PartNo
	  ) LocationCode
	, a.PartNo
	, 'IN' SignCode
	, 'RSRV' SubSignCode
	, a.QtyReturn Qty
	, a.RetailPrice Price
	, a.CostPrice 
	, a.ABCClass
	, a.MovingCode
	, @ProductType ProductType
	, a.PartCategory
	, @UserID CreatedBy
FROM SpTrnSRturSrvDtl a 
WHERE CompanyCode = @CompanyCode
	AND BranchCode = @BranchCode
	AND ReturnNo = @ReturnNo 

-- UPDATE RETURN QTY --
update a
set a.ReturnQty = b.supplyqty
from svTrnInvItem a
inner join #InvoicePart b on b.companycode=a.companycode
	and b.branchcode=a.branchcode
	and b.invoiceno=a.invoiceno 
	and b.partno=a.partno
where producttype=@ProductType

DROP TABLE #InvoicePart

-- SET STATUS HEADER RETUR SERVICE SPAREPART IF PART EXISTS--
IF EXISTS (SELECT a.* FROM SvTrnInvItem a
				WHERE a.CompanyCode = @CompanyCode AND a.BranchCode = @BranchCode
					AND a.InvoiceNo = @InvoiceNo AND a.PartNo NOT IN (SELECT PartNo FROM spTrnSRturSrvHdr z
                					INNER JOIN spTrnSRturSrvDtl y
                						ON z.CompanyCode = y.CompanyCode AND z.BranchCode = y.BranchCode AND z.ReturnNo = y.ReturnNo
                					WHERE y.CompanyCode = @CompanyCode AND y.BranchCode = @BranchCode AND z.InvoiceNo = @InvoiceNo))
BEGIN
	Update spTrnSRturSrvHdr
	Set Status = '1'
	WHERE CompanyCode = @CompanyCode 
	AND BranchCode = @BranchCode
	AND InvoiceNo = @InvoiceNo
END
ELSE 
BEGIN
	Update spTrnSRturSrvHdr
	Set Status = '2'
	WHERE CompanyCode = @CompanyCode 
	AND BranchCode = @BranchCode
	AND InvoiceNo = @InvoiceNo
END              					
END
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryHPP] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @HPPDateFrom DateTime,
 @HPPDateTo DateTime,
 @refNoFrom varchar(100),
 @refNoTo varchar(100),
 @HPPNoFrom varchar(100),
 @HPPNoTo varchar(100),
 @PONoFrom varchar(100),
 @PONoTo varchar(100),
 @supplierCodeFrom varchar(100),
 @supplierCodeTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'
SELECT a.HPPNo, convert(varchar(20),a.HPPDate,106) as HPPDate, a.PONo, a.RefferenceInvoiceNo, convert(varchar(20),a.RefferenceInvoiceDate,106) as RefferenceInvoiceDate,
a.RefferenceFakturPajakNo, convert(varchar(20),a.RefferenceFakturPajakDate,106) as RefferenceFakturPajakDate, a.SupplierCode, 
(select z.SupplierName from gnMstSupplier z where a.CompanyCode = z.CompanyCode and
a.SupplierCode = z.SupplierCode) as SupplierName,
a.BillTo, convert(varchar(20),a.DueDate,106) as DueDate, a.Remark, CASE
WHEN a.Status = 0 THEN ''Open''
WHEN a.Status = 1 THEN ''Printed''
WHEN a.Status = 2 THEN ''Approved''
WHEN a.Status = 3 THEN ''Canceled''
WHEN a.Status = 9 THEN ''Finished''
END  AS Status
FROM omTrPurchaseHPP a
where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if year(@HPPDateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.HPPDate between ''' + convert(varchar(50),@HPPDateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@HPPDateTo) + ''''

if len(rtrim(@refNoFrom)) > 0
   set @pQuery = @pQuery + ' and a.RefferenceInvoiceNo between ''' + rtrim(@refNoFrom) + '''' + ' and ' + '''' + rtrim(@refNoTo) + ''''

if len(rtrim(@HPPNoFrom)) > 0
   set @pQuery = @pQuery + ' and a.HPPNo between ''' + rtrim(@HPPNoFrom) + '''' + ' and ' + '''' + rtrim(@HPPNoTo) + ''''

if len(rtrim(@PONoFrom)) > 0
   set @pQuery = @pQuery + ' and a.PONo between ''' + rtrim(@PONoFrom) + '''' + ' and ' + '''' + rtrim(@PONoTo) + ''''

if len(rtrim(@supplierCodeFrom)) > 0
   set @pQuery = @pQuery + ' and a.SupplierCode between ''' + rtrim(@supplierCodeFrom) + '''' + ' and ' + '''' + rtrim(@supplierCodeTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' + ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.HPPNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
CREATE procedure [dbo].[uspfn_spGetPickingListByNo]        
@CompanyCode varchar(15),          
@BranchCode varchar(15),
@TypeOfGoods varchar(10),          
@ProductType varchar(4),   
@ProfitCenterCode varchar(5),          
@PickingListNo varchar(15)          

as          
SELECT * FROM          
(          
    SELECT           
    a.PickingSlipNo,           
    a.PickingSlipDate,           
    a.InvoiceNo,           
    a.InvoiceDate,          
    (          
        SELECT TOP 1 PRODUCTTYPE FROM spTrnSInvoiceDtl          
        WHERE a.CompanyCode = spTrnSInvoiceDtl.CompanyCode          
        AND a.BranchCode = spTrnSInvoiceDtl.BranchCode          
        AND a.InvoiceNo = spTrnSInvoiceDtl.InvoiceNo          
    ) AS ProductType,      
    a.TotDPPAmt,      
    a.TotPPNAmt,      
    a.TotFinalSalesAmt,      
    b.CustomerCode,      
    b.CustomerName,      
    b.Address1,      
    b.Address2,      
    b.Address3,      
    b.Address4,    
    a.TransType,    
    a.CustomerCodeShip,    
    a.CustomerCodeBill,    
    a.TotSalesAmt,    
    a.TotSalesQty,  
    c.TOPCode,  
    d.ParaValue as TOPDays      
FROM           
    spTrnSInvoiceHdr a         
left JOIN gnMstCustomer b      
on a.CompanyCode = b.CompanyCode      
AND a.CustomerCode = b.CustomerCode     
LEFT join gnMstCustomerDealerProfitCenter c  
ON c.CompanyCode = b.CompanyCode  
and c.BranchCode = a.BranchCode  
AND c.CustomerCode = b.CustomerCode  
and c.ProfitCenterCode = @ProfitCenterCode  
LEFT JOIN gnMstLookUpDtl d  
on d.CompanyCode = a.CompanyCode  
AND d.CodeID = 'TOPC'  
and d.LookUpValue  = c.TOPCode  
WHERE a.CompanyCode = @CompanyCode  
  AND a.BranchCode  = @BranchCode          
    AND a.TypeOfGoods       = @TypeOfGoods          
    AND a.Status        = 0           
) A          
WHERE A.ProductType = @ProductType AND A.PickingSlipNo=@PickingListNo
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE procedure [dbo].[uspfn_spGetEmployeeAllBranchs]
	@CompanyCode varchar(15)
AS
BEGIN
	SELECT EmployeeID, EmployeeName
	FROM gnMstEmployee 
	WHERE CompanyCode = @CompanyCode
	AND TitleCode IN ('7','58')
	AND PersonnelStatus = '1'
	ORDER BY EmployeeName ASC
END
GO
CREATE procedure [dbo].[uspfn_SelectLMPDtl] @CompanyCode varchar(15), @BranchCode varchar(15), @LmpNo varchar(15)  
as  
SELECT     
	row_number () OVER (ORDER BY spTrnSLmpDtl.CreatedDate ASC) AS NoUrut,
	spTrnSLmpDtl.PartNo,
	spTrnSLmpDtl.PartNoOriginal,
	spTrnSLmpDtl.DocNo, 
	CONVERT(VARCHAR, spTrnSLmpDtl.DocDate, 106) AS DocDate, 
	spTrnSLmpDtl.ReferenceNo, 
	spTrnSLmpDtl.QtyBill
	FROM spTrnSLmpDtl
	WHERE
	spTrnSLmpDtl.CompanyCode = @CompanyCode AND
	spTrnSLmpDtl.BranchCode = @BranchCode AND
	spTrnSLmpDtl.LmpNo = @LmpNo
GO
CREATE procedure [dbo].[uspfn_OmTrSalesSoVinSend]   
 @LastUpdateDate datetime,  
 @Segment int  
as  
  
select * into #t1 from (  
select top (@Segment) *
  from omTrSalesSOVin  
 where LastUpdateDate is not null  
   and LastUpdateDate > @LastUpdateDate  
 order by LastUpdateDate asc )#t1  
  
select * from #t1  
  
  drop table #t1
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryBPK] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @SODateFrom DateTime,
 @SODateTo DateTime,
 @NoSOFrom varchar(100),
 @NoSOTo varchar(100),
 @NoDOFrom varchar(100),
 @NoDOTo varchar(100),
 @NoBPKFrom varchar(100),
 @NoBPKTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT a.BPKNo, convert(varchar(20),a.BPKDate,106) as BPKDate, a.SONo, a.DONo, b.CustomerName, 
a.CustomerCode, b.Address1 + '' '' + b.Address2 + '' '' + b.Address3 + '' '' + b.Address4 as Address,
c.SupplierName AS Expedition, case pso.SalesType when ''0'' then ''W'' when ''1'' then ''D'' end as SalesType,
d.RefferenceDesc1 AS WareHouseName, e.CustomerName AS ShipTo, 
a.Remark, 
CASE
	WHEN a.Status = 0 THEN ''Open''
	WHEN a.Status = 1 THEN ''Printed''
	WHEN a.Status = 2 THEN ''Approved''
	WHEN a.Status = 3 THEN ''Canceled''
	WHEN a.Status = 9 THEN ''Finished''
END as Status 
FROM omTrSalesBPK a
LEFT JOIN GnMstCustomer b ON b.CompanyCode = a.CompanyCode AND b.CustomerCode = a.CustomerCode
LEFT JOIN GnMstSupplier c ON c.CompanyCode = a.CompanyCode AND c.SupplierCode = a.Expedition
LEFT JOIN OmMstRefference d ON d.CompanyCode = a.CompanyCode AND d.RefferenceCode = a.WareHouseCode AND d.RefferenceType = ''WARE''
LEFT JOIN GnMstCustomer e ON e.CompanyCode = a.CompanyCode AND e.CustomerCode = a.ShipTo
LEFT JOIN omTrSalesSO pso ON a.CompanyCode = pso.CompanyCode AND a.BranchCode = pso.BranchCode AND a.SONo = pso.SONo
Where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if year(@SODateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.BPKDate between ''' + convert(varchar(50),@SODateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@SODateTo) + ''''

if len(rtrim(@NoSOFrom)) > 0
   set @pQuery = @pQuery + ' and a.SONo between ''' + rtrim(@NoSOFrom) + '''' + ' and ' + '''' + rtrim(@NoSOTo) + ''''

if len(rtrim(@NoDOFrom)) > 0
   set @pQuery = @pQuery + ' and a.DONo between ''' + rtrim(@NoDOFrom) + '''' + ' and ' + '''' + rtrim(@NoDOTo) + ''''

if len(rtrim(@NoBPKFrom)) > 0
   set @pQuery = @pQuery + ' and a.BPKNo between ''' + rtrim(@NoBPKFrom) + '''' + ' and ' + '''' + rtrim(@NoBPKTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' + ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.BPKNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
CREATE procedure [dbo].[uspfn_Select4NoPartOrderBalance] @CompanyCode varchar(15),
@BranchCode varchar(15), @PosNo varchar(20)
as
SELECT 
	a.POSNo, a.PartNo, b.PartName, CAST(a.OrderQty as decimal(18,2)) as OrderQty, 
	a.OnOrder, a.Intransit, a.Received,a.DiscPct, a.PurchasePrice, 
	Convert(varchar(10),a.SeqNo) SeqNo, a.SupplierCode, a.OnOrder, a.PartNoOriginal, 
	a.TypeOfGoods 
FROM 
	spTrnPOrderBalance a 
INNER JOIN spMstItemInfo b
   ON b.PartNo      = a.PartNo
  AND b.CompanyCode = a.CompanyCode
WHERE a.CompanyCode = @CompanyCode
  AND a.BranchCode  = @BranchCode
  AND a.PosNo    like @PosNo
ORDER BY a.POSNo DESC, a.SeqNo
GO
--declare @CompanyCode varchar(20)
--declare @BranchCode  varchar(20)
--declare @TypeJournal  varchar(20)
--declare @DocNo   varchar(20)

--set @CompanyCode = '6558201'
--set @BranchCode  = '655820100'
--set @TypeJournal = 'invoice'
--set @DocNo       = 'IVU/13/001280'

-- =============================================
-- Author:		<xxxxxx>
-- Create date: <xxxxxx>
-- Description:	<Get Journal>
-- Last Update By:	<yo - 29 Nov 2013>
-- =============================================

CREATE procedure [dbo].[uspfn_SelectInventory4All]
	@CompanyCode varchar(20),
	@BranchCode  varchar(20),
	@Status		varchar(50),
	@StartDate	smalldatetime,
	@EndDate	smalldatetime
as 

select convert(bit, (case Status when '5' then '1' else '0' end)) as IsSelected
     , case isnull(Status, 0) when '5' then 'Posted' else 'UnPosted' end as Status
	 , CompanyCode
	 , BranchCode
	 , 'TRANSFEROUT' as TypeJournal
	 , TransferOutNo as DocNo
	 , TransferOutDate as DocDate
	 , ReferenceNo as ReffNo
	 , BranchCodeFrom + '-' + WareHouseCodeFrom as BranchCodeFrom
	 , BranchCodeTo + '-' + WareHouseCodeTo as BranchCodeTo
  from omTrInventTransferOut
 where 1 = 1
   and CompanyCode = @CompanyCode
   and BranchCode  = @BranchCode
   and Status      = @Status
   and BranchCodeFrom <> BranchCodeTo
   and TransferOutDate between @StartDate and @EndDate
UNION
select convert(bit, (case Status when '5' then '1' else '0' end)) as IsSelected
     , case isnull(Status, 0) when '5' then 'Posted' else 'UnPosted' end as Status
	 , CompanyCode
	 , BranchCode
	 , 'TRANSFERIN' as TypeJournal
	 , TransferInNo as DocNo
	 , TransferInDate as DocDate
	 , ReferenceNo as ReffNo
	 , BranchCodeFrom + '-' + WareHouseCodeFrom as BranchCodeFrom
	 , BranchCodeTo + '-' + WareHouseCodeTo as BranchCodeTo
  from omTrInventTransferIn
 where 1 = 1
   and CompanyCode = @CompanyCode
   and BranchCode  = @BranchCode
   and Status      = @Status
   and BranchCodeFrom <> BranchCodeTo
   and TransferInDate between @StartDate and @EndDate
UNION
select convert(bit, (case Status when '5' then '1' else '0' end)) as IsSelected
     , case isnull(Status, 0) when '5' then 'Posted' else 'UnPosted' end as Status
	 , CompanyCode
	 , BranchCode
	 , 'TRANSFEROUTMULTIBRANCH' as TypeJournal
	 , TransferOutNo as DocNo
	 , TransferOutDate as DocDate
	 , ReferenceNo as ReffNo
	 , BranchCodeFrom + '-' + WareHouseCodeFrom as BranchCodeFrom
	 , BranchCodeTo + '-' + WareHouseCodeTo as BranchCodeTo
  from omTrInventTransferOutMultiBranch
 where 1 = 1
   and CompanyCode = @CompanyCode
   and BranchCode  = @BranchCode
   and Status      = @Status
   and BranchCodeFrom <> BranchCodeTo
   and convert(varchar, TransferOutDate, 112) between @StartDate and @EndDate
UNION
select convert(bit, (case Status when '5' then '1' else '0' end)) as IsSelected
     , case isnull(Status, 0) when '5' then 'Posted' else 'UnPosted' end as Status
	 , CompanyCode
	 , BranchCode
	 , 'TRANSFERINMULTIBRANCH' as TypeJournal
	 , TransferInNo as DocNo
	 , TransferInDate as DocDate
	 , ReferenceNo as ReffNo
	 , BranchCodeFrom + '-' + WareHouseCodeFrom as BranchCodeFrom
	 , BranchCodeTo + '-' + WareHouseCodeTo as BranchCodeTo
  from omTrInventTransferInMultiBranch
 where 1 = 1
   and CompanyCode = @CompanyCode
   and BranchCode  = @BranchCode
   and Status      = @Status
   and BranchCodeFrom <> BranchCodeTo
   and TransferInDate between @StartDate and @EndDate
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryBPKDetail] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @NoBPK varchar(15)
)
AS
BEGIN

SELECT a.SalesModelCode, a.SalesModelYear, b.SalesModelDesc, 
	a.ChassisCode, Convert(varchar,a.ChassisNo) as ChassisNo, 
	a.EngineCode, Convert(varchar,a.EngineNo) as EngineNo, 
	a.ColourCode, c.RefferenceDesc1 as ColourName, a.Remark, a.StatusPDI,
	a.BPKSeq
FROM   omTrSalesBPKDetail a	   
	LEFT JOIN
	omMstModelYear b
	ON a.CompanyCode = b.CompanyCode
	AND a.SalesModelCode = b.SalesModelCode      
	AND a.ChassisCode = b.ChassisCode
	AND a.SalesModelYear = b.SalesModelYear	   
	LEFT JOIN
	omMstRefference c
	ON a.CompanyCode = c.CompanyCode
	AND a.ColourCode = c.RefferenceCode
	AND c.RefferenceType = 'COLO'
WHERE a.CompanyCode= @p_CompanyCode 
	AND a.BranchCode= @p_BranchCode 
	AND a.BPKNo= @NoBPK
ORDER BY a.ChassisNo ASC

END
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryDebetNote] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @InvDateFrom DateTime,
 @InvDateTo DateTime,
 @NoSOFrom varchar(100),
 @NoSOTo varchar(100),
 @CustomerFrom varchar(100),
 @CustomerTo varchar(100),
 @NoInvFrom varchar(100),
 @NoInvtTo varchar(100),
 @NoSKPKFrom varchar(100),
 @NoSKPKTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'

SELECT 
a.DNNo as InvoiceNo, a.CustomerCode, b.Address1 + '' '' + b.Address2 + '' '' + b.Address3 + '' '' + b.Address4 as Address,
convert(varchar(20),a.DNDate,106) as InvoiceDate, 
case pso.SalesType when ''0'' then ''W'' when ''1'' then ''D'' end as Type,
a.SONo, b.CustomerName, c.CustomerName AS BillTo, a.InvoiceNo as InvNo, 
case when year(a.DueDate) = ''1900'' then '''' else convert(varchar(20),a.DueDate,106) end as DueDate, a.Remark, 
pso.SKPKNo, convert(varchar(20),pso.SODate,106) as SODate, pdo.DONo,convert(varchar(20),pdo.DODate,106) as DODate, pbpk.BPKNo,
convert(varchar(20),pbpk.BPKDate,106) as BPKDate, pso.RefferenceNo,
CASE
	WHEN a.Status = 0 THEN ''Open''
	WHEN a.Status = 1 THEN ''Printed''
	WHEN a.Status = 2 THEN ''Approved''
	WHEN a.Status = 3 THEN ''Deleted''
	WHEN a.Status = 9 THEN ''Finished''
END as Status 
FROM omTrSalesDN a
LEFT JOIN GnMstCustomer b ON b.CompanyCode = a.CompanyCode AND b.CustomerCode = a.CustomerCode
LEFT JOIN GnMstCustomer c ON c.CompanyCode = a.CompanyCode AND c.CustomerCode = a.BillTo
LEFT JOIN omTrSalesSO pso ON a.CompanyCode = pso.CompanyCode AND a.BranchCode = pso.BranchCode AND a.SONo = pso.SONo
LEFT JOIN omTrSalesDO pdo ON a.CompanyCode = pdo.CompanyCode AND a.BranchCode = pdo.BranchCode AND a.SONo = pdo.SONo
LEFT JOIN omTrSalesBPK pbpk ON a.CompanyCode = pbpk.CompanyCode AND a.BranchCode = pbpk.BranchCode AND a.SONO = pbpk.SONo AND pdo.DONo = pbpk.DONo
Where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if year(@InvDateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.DNDate between ''' + convert(varchar(50),@InvDateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@InvDateTo) + ''''

if len(rtrim(@NoSOFrom)) > 0
   set @pQuery = @pQuery + ' and a.SONo between ''' + rtrim(@NoSOFrom) + '''' + ' and ' + '''' + rtrim(@NoSOTo) + ''''

if len(rtrim(@CustomerFrom)) > 0
   set @pQuery = @pQuery + ' and a.CustomerCode between ''' + rtrim(@CustomerFrom) + '''' + ' and ' + '''' + rtrim(@CustomerTo) + ''''

if len(rtrim(@NoInvFrom)) > 0
   set @pQuery = @pQuery + ' and a.DNNo between ''' + rtrim(@NoInvFrom) + '''' + ' and ' + '''' + rtrim(@NoInvFrom) + ''''

if len(rtrim(@NoSKPKFrom)) > 0
   set @pQuery = @pQuery + ' and pso.SKPKNo between ''' + rtrim(@NoSKPKFrom) + '''' + ' and ' + '''' + rtrim(@NoSKPKTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.DNNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO

CREATE procedure [dbo].[uspfn_spGetFPJLookUpByNo]        
@CompanyCode varchar(15),        
@BranchCode  varchar(15),        
@TypeOfGoods varchar(4),        
@IsPKPOnly  varchar(2),
@NoFPJ	varchar(20)        
as        
SELECT         
    TOP 100 a. FPJNo        
    , a.FPJDate        
    , a.PickingSlipNo        
    , a.PickingSlipDate        
    , a.InvoiceNo        
    , a.InvoiceDate        
    , (SELECT CustomerName FROM gnMstCustomer WHERE CompanyCode = a.CompanyCode AND CustomerCode = a.CustomerCode) CustomerName        
    , a.CustomerCode       
    , a.TOPCode      
    , a.TOPDays      
    , a.TotSalesQty      
    , a.TotSalesAmt      
    , a.TotDiscAmt      
    , a.TotDPPAmt      
    , a.TotPPNAmt      
    , a.TotFinalSalesAmt      
    , a.TransType      
    , a.CustomerCodeBill      
    , a.CustomerCodeShip  
    , a.Status  
    , a.FPJGovNo  
    , a.FPJSignature      
    , c.CustomerCode CustomerCodeTagih      
    , b.CustomerName CustomerNameTagih    
    , b.Address1 Address1Tagih    
    , b.Address2 Address2Tagih    
    , b.Address3 Address3Tagih      
    , b.Address4 Address4Tagih     
    , c.CustomerName       
    , c.Address1       
    , c.Address2       
    , c.Address3     
    , c.Address4     
FROM             
    spTrnSFPJHdr a        
    join SpTrnSFPJInfo b      
    on a.CompanyCode = b.CompanyCode      
    and a.BranchCode = b.BranchCode      
    and a.FPJNo = b.FPJNo      
    join gnMstCustomer c      
    on a.CompanyCode = b.CompanyCode      
    and a.CustomerCode = c.CustomerCode      
WHERE             
    a.CompanyCode = @CompanyCode        
    AND a.BranchCode = @BranchCode        
 AND ((CASE WHEN @IsPKPOnly = 1 THEN a.IsPKP END) = 1 OR (CASE WHEN @IsPKPOnly = 0 THEN a.IsPKP END) = a.IsPKP)        
 AND ((CASE WHEN @TypeOfGoods = '%' THEN a.TypeOfGoods END) = a.TypeOfGoods OR (CASE WHEN @TypeOfGoods <> '%' THEN a.TypeOfGoods END) = @TypeOfGoods)        
 AND a.FPJNo = @NoFPJ
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- =============================================
CREATE procedure [dbo].[sp_InquiryBPU] 
(
 @p_CompanyCode varchar(15),
 @p_BranchCode varchar(15),
 @p_Status varchar(2),
 @BPUType varchar(2),
 @BPUDateFrom DateTime,
 @BPUDateTo DateTime,
 @PONoFrom varchar(100),
 @PONoTo varchar(100),
 @NoRefDOFrom varchar(100),
 @NoRefDOTo varchar(100),
 @NoRefSJFrom varchar(100),
 @NoRefSJTo varchar(100),
 @NoBPUFrom varchar(100),
 @NoBPUTo varchar(100)
)
AS
BEGIN

declare @pQuery varchar(max)
set @pQuery =
'
SELECT 
case when a.BPUType = ''0'' then ''DO'' 
when a.BPUType = ''1'' then ''SJ''
when a.BPUType = ''2'' then ''DO & SJ'' 
when a.BPUType = ''3'' then ''SJ Booking''
end as BPUType, a.BPUNo,
convert(varchar(20),a.BPUDate,106) as BPUDate,
a.RefferenceDONo, 
convert(varchar(20),a.RefferenceDODate,106) as RefferenceDODate, 
a.RefferenceSJNo, 
case when year(a.RefferenceSJDate) = ''1900'' then '''' else convert(varchar(20),a.RefferenceSJDate,106) end as RefferenceSJDate, 
a.SupplierCode, 
(SELECT z.SupplierName FROM gnMstSupplier z 
WHERE z.CompanyCode = a.CompanyCode
AND z.SupplierCode = a.SupplierCode)  AS SupplierName, 
a.ShipTo, a.Expedition, 
(SELECT x.SupplierName
FROM gnMstSupplier x
WHERE x.CompanyCode = a.CompanyCode
AND x.SupplierCode = a.Expedition)  AS ExpeditionName, 
a.WarehouseCode, 
(SELECT y.RefferenceDesc1
FROM omMstRefference y
WHERE y.CompanyCode = a.CompanyCode
AND y.RefferenceCode = a.WarehouseCode
AND y.RefferenceType = ''WARE'')  AS WareHouseName, 
a.Remark, 
CASE WHEN a.Status = 0 THEN ''Open''
WHEN a.Status = 1 THEN ''Printed''
WHEN a.Status = 2 THEN ''Approved''
WHEN a.Status = 3 THEN ''Canceled''
WHEN a.Status = 9 THEN ''Finished''
END  AS Status
FROM omTrPurchaseBPU a
where 1=1
'

if len(rtrim(@p_Status)) > 0
   set @pQuery = @pQuery + ' and a.Status = ''' + rtrim(@p_Status) + ''''

if len(rtrim(@BPUType)) > 0
   set @pQuery = @pQuery + ' and a.BPUType = ''' + rtrim(@BPUType) + ''''

if year(@BPUDateFrom) <> '1900'
   set @pQuery = @pQuery + ' and a.BPUDate between ''' + convert(varchar(50),@BPUDateFrom) + '''' + ' and ' + '''' + convert(varchar(50),@BPUDateTo) + ''''

if len(rtrim(@PONoFrom)) > 0
   set @pQuery = @pQuery + ' and a.PONo between ''' + rtrim(@PONoFrom) + '''' + ' and ' + '''' + rtrim(@PONoTo) + ''''

if len(rtrim(@NoRefDOFrom)) > 0
   set @pQuery = @pQuery + ' and a.RefferenceDONo between ''' + rtrim(@NoRefDOFrom) + '''' + ' and ' + '''' + rtrim(@NoRefDOTo) + ''''

if len(rtrim(@NoRefSJFrom)) > 0
   set @pQuery = @pQuery + ' and a.RefferenceSJNo between ''' + rtrim(@NoRefSJFrom) + '''' + ' and ' + '''' + rtrim(@NoRefSJTo) + ''''

if len(rtrim(@NoBPUFrom)) > 0
   set @pQuery = @pQuery + ' and a.BPUNo between ''' + rtrim(@NoBPUFrom) + '''' + ' and ' + '''' + rtrim(@NoBPUTo) + ''''

set @pQuery = @pQuery + ' and a.CompanyCode = ''' + rtrim(@p_CompanyCode) + '''' + ' and a.BranchCode = ''' + rtrim(@p_BranchCode) + ''''
set @pQuery = @pQuery + ' ORDER BY a.BPUNo '

print(@pQuery)
exec(@pQuery)
END
--------------------------------------------------- BATAS ----------------------------------------------------------
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE procedure [dbo].[uspfn_spCheckOutsQty]
	(
		@CompanyCode varchar(50),
		@BranchCode varchar(50),
		@CustCode varchar(50),
		@TransType varchar(50),
		@SalesType varchar(50),
		@PartNoOri varchar(50)

	)
AS
BEGIN
	SELECT 
		spTrnSORDDtl.DocNo, 
		CONVERT(varchar,spTrnSORDHdr.DocDate, 106) AS DocDate,
		spTrnSORDDtl.PartNo,
		CONVERT(NUMERIC(18,2), 
		ISNULL(spTrnSORDDtl.QtyBO, 0)) AS QtyBO, 
		CONVERT(NUMERIC(18,2), ISNULL(spTrnSORDDtl.QtyBoSupply, 0)) AS QtyBoSupply,
		CONVERT(NUMERIC(18,2), ISNULL(spTrnSORDDtl.QtyBO, 0)) - CONVERT(NUMERIC(18,2), ISNULL(spTrnSORDDtl.QtyBoSupply, 0)) - CONVERT(NUMERIC(18,2), ISNULL(spTrnSORDDtl.QtyBOCancel, 0)) AS QtyBOOts,
		CONVERT(NUMERIC(18,2), ISNULL(spTrnSORDDtl.QtyBOCancel, 0)) AS QtyBOCancel, 
		spTrnSORDDtl.PartNoOriginal 
	FROM spTrnSORDDtl 
	INNER JOIN spTrnSORDHdr ON spTrnSORDDtl.DocNo = spTrnSORDHdr.DocNo 
				AND spTrnSORDHdr.CustomerCode=@CustCode AND  spTrnSORDHdr.TransType = @TransType 
				AND spTrnSORDHdr.SalesType = @SalesType AND spTrnSORDHdr.Status >= 2 
				AND spTrnSORDHdr.CompanyCode=@CompanyCode AND spTrnSORDHdr.BranchCode = @BranchCode
	WHERE 
	ISNULL(spTrnSORDDtl.QtyBO, 0) - ISNULL(spTrnSORDDtl.QtyBOSupply, 0) - ISNULL(spTrnSORDDtl.QtyBOCancel, 0) > 0 
	AND spTrnSORDDtl.CompanyCode=@CompanyCode AND spTrnSORDDtl.BranchCode = @BranchCode AND spTrnSORDDtl.PartNoOriginal = @PartNoOri  
	ORDER BY spTrnSORDHdr.DocDate DESC 
END
GO
