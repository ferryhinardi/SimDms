//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SimDms.Common.TransOutService.cs {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ITransOutService", Namespace="http://tempuri.org/")]
    public partial class TransOutService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorld2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOmTransOutNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOmTransOutNo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalesModelCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalesModelYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalesVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTransferOutDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTransferOutDetail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasterVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVehicleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalesModel1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalesModel2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWareHouse1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWareHouse2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLookUpDtl1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLookUpDtl2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportLabaRugi1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportLabaRugi2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLaporanStok1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLaporanStok2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLaporanDailySalesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLaporanDailySales2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TransOutService() {
            this.Url = global::SimDms.Common.Properties.Settings.Default.SimDms_Common_TransOutService_cs_TransOutService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorld2CompletedEventHandler HelloWorld2Completed;
        
        /// <remarks/>
        public event GetOmTransOutNoCompletedEventHandler GetOmTransOutNoCompleted;
        
        /// <remarks/>
        public event GetOmTransOutNo2CompletedEventHandler GetOmTransOutNo2Completed;
        
        /// <remarks/>
        public event GetSalesModelCodeCompletedEventHandler GetSalesModelCodeCompleted;
        
        /// <remarks/>
        public event GetSalesModelYearCompletedEventHandler GetSalesModelYearCompleted;
        
        /// <remarks/>
        public event GetSalesVehicleCompletedEventHandler GetSalesVehicleCompleted;
        
        /// <remarks/>
        public event GetInfoVehicleCompletedEventHandler GetInfoVehicleCompleted;
        
        /// <remarks/>
        public event GetCompanyAccountCompletedEventHandler GetCompanyAccountCompleted;
        
        /// <remarks/>
        public event UpdateTransferOutDetailCompletedEventHandler UpdateTransferOutDetailCompleted;
        
        /// <remarks/>
        public event UpdateTransferOutDetail2CompletedEventHandler UpdateTransferOutDetail2Completed;
        
        /// <remarks/>
        public event GetMasterVehicleCompletedEventHandler GetMasterVehicleCompleted;
        
        /// <remarks/>
        public event UpdateVehicleCompletedEventHandler UpdateVehicleCompleted;
        
        /// <remarks/>
        public event GetSalesModel1CompletedEventHandler GetSalesModel1Completed;
        
        /// <remarks/>
        public event GetSalesModel2CompletedEventHandler GetSalesModel2Completed;
        
        /// <remarks/>
        public event GetOrganizationDetailCompletedEventHandler GetOrganizationDetailCompleted;
        
        /// <remarks/>
        public event GetWareHouse1CompletedEventHandler GetWareHouse1Completed;
        
        /// <remarks/>
        public event GetWareHouse2CompletedEventHandler GetWareHouse2Completed;
        
        /// <remarks/>
        public event GetLookUpDtl1CompletedEventHandler GetLookUpDtl1Completed;
        
        /// <remarks/>
        public event GetLookUpDtl2CompletedEventHandler GetLookUpDtl2Completed;
        
        /// <remarks/>
        public event GetReportLabaRugi1CompletedEventHandler GetReportLabaRugi1Completed;
        
        /// <remarks/>
        public event GetReportLabaRugi2CompletedEventHandler GetReportLabaRugi2Completed;
        
        /// <remarks/>
        public event GetLaporanStok1CompletedEventHandler GetLaporanStok1Completed;
        
        /// <remarks/>
        public event GetLaporanStok2CompletedEventHandler GetLaporanStok2Completed;
        
        /// <remarks/>
        public event GetLaporanDailySalesCompletedEventHandler GetLaporanDailySalesCompleted;
        
        /// <remarks/>
        public event GetLaporanDailySales2CompletedEventHandler GetLaporanDailySales2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/HelloWorld2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HelloWorld2() {
            object[] results = this.Invoke("HelloWorld2", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorld2Async() {
            this.HelloWorld2Async(null);
        }
        
        /// <remarks/>
        public void HelloWorld2Async(object userState) {
            if ((this.HelloWorld2OperationCompleted == null)) {
                this.HelloWorld2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorld2OperationCompleted);
            }
            this.InvokeAsync("HelloWorld2", new object[0], this.HelloWorld2OperationCompleted, userState);
        }
        
        private void OnHelloWorld2OperationCompleted(object arg) {
            if ((this.HelloWorld2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorld2Completed(this, new HelloWorld2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetOmTransOutNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
        public OmTransferOut[] GetOmTransOutNo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string branchCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companyCodeTo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string branchCodeTo) {
            object[] results = this.Invoke("GetOmTransOutNo", new object[] {
                        companyCode,
                        branchCode,
                        companyCodeTo,
                        branchCodeTo});
            return ((OmTransferOut[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOmTransOutNoAsync(string companyCode, string branchCode, string companyCodeTo, string branchCodeTo) {
            this.GetOmTransOutNoAsync(companyCode, branchCode, companyCodeTo, branchCodeTo, null);
        }
        
        /// <remarks/>
        public void GetOmTransOutNoAsync(string companyCode, string branchCode, string companyCodeTo, string branchCodeTo, object userState) {
            if ((this.GetOmTransOutNoOperationCompleted == null)) {
                this.GetOmTransOutNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOmTransOutNoOperationCompleted);
            }
            this.InvokeAsync("GetOmTransOutNo", new object[] {
                        companyCode,
                        branchCode,
                        companyCodeTo,
                        branchCodeTo}, this.GetOmTransOutNoOperationCompleted, userState);
        }
        
        private void OnGetOmTransOutNoOperationCompleted(object arg) {
            if ((this.GetOmTransOutNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOmTransOutNoCompleted(this, new GetOmTransOutNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetOmTransOutNo2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
        public OmTransferOut[] GetOmTransOutNo2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string branchCode) {
            object[] results = this.Invoke("GetOmTransOutNo2", new object[] {
                        companyCode,
                        branchCode});
            return ((OmTransferOut[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOmTransOutNo2Async(string companyCode, string branchCode) {
            this.GetOmTransOutNo2Async(companyCode, branchCode, null);
        }
        
        /// <remarks/>
        public void GetOmTransOutNo2Async(string companyCode, string branchCode, object userState) {
            if ((this.GetOmTransOutNo2OperationCompleted == null)) {
                this.GetOmTransOutNo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOmTransOutNo2OperationCompleted);
            }
            this.InvokeAsync("GetOmTransOutNo2", new object[] {
                        companyCode,
                        branchCode}, this.GetOmTransOutNo2OperationCompleted, userState);
        }
        
        private void OnGetOmTransOutNo2OperationCompleted(object arg) {
            if ((this.GetOmTransOutNo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOmTransOutNo2Completed(this, new GetOmTransOutNo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetSalesModelCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
        public SalesModel[] GetSalesModelCode([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string transferOutNo) {
            object[] results = this.Invoke("GetSalesModelCode", new object[] {
                        companyCode,
                        transferOutNo});
            return ((SalesModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSalesModelCodeAsync(string companyCode, string transferOutNo) {
            this.GetSalesModelCodeAsync(companyCode, transferOutNo, null);
        }
        
        /// <remarks/>
        public void GetSalesModelCodeAsync(string companyCode, string transferOutNo, object userState) {
            if ((this.GetSalesModelCodeOperationCompleted == null)) {
                this.GetSalesModelCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesModelCodeOperationCompleted);
            }
            this.InvokeAsync("GetSalesModelCode", new object[] {
                        companyCode,
                        transferOutNo}, this.GetSalesModelCodeOperationCompleted, userState);
        }
        
        private void OnGetSalesModelCodeOperationCompleted(object arg) {
            if ((this.GetSalesModelCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesModelCodeCompleted(this, new GetSalesModelCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetSalesModelYear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
        public SalesModelYear[] GetSalesModelYear([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string transferOutNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string modelCode) {
            object[] results = this.Invoke("GetSalesModelYear", new object[] {
                        companyCode,
                        transferOutNo,
                        modelCode});
            return ((SalesModelYear[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSalesModelYearAsync(string companyCode, string transferOutNo, string modelCode) {
            this.GetSalesModelYearAsync(companyCode, transferOutNo, modelCode, null);
        }
        
        /// <remarks/>
        public void GetSalesModelYearAsync(string companyCode, string transferOutNo, string modelCode, object userState) {
            if ((this.GetSalesModelYearOperationCompleted == null)) {
                this.GetSalesModelYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesModelYearOperationCompleted);
            }
            this.InvokeAsync("GetSalesModelYear", new object[] {
                        companyCode,
                        transferOutNo,
                        modelCode}, this.GetSalesModelYearOperationCompleted, userState);
        }
        
        private void OnGetSalesModelYearOperationCompleted(object arg) {
            if ((this.GetSalesModelYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesModelYearCompleted(this, new GetSalesModelYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetSalesVehicle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
        public SalesVehicle[] GetSalesVehicle([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string transferOutNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string modelCode, decimal modelYear, [System.Xml.Serialization.XmlIgnoreAttribute()] bool modelYearSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string chassisCode) {
            object[] results = this.Invoke("GetSalesVehicle", new object[] {
                        companyCode,
                        transferOutNo,
                        modelCode,
                        modelYear,
                        modelYearSpecified,
                        chassisCode});
            return ((SalesVehicle[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSalesVehicleAsync(string companyCode, string transferOutNo, string modelCode, decimal modelYear, bool modelYearSpecified, string chassisCode) {
            this.GetSalesVehicleAsync(companyCode, transferOutNo, modelCode, modelYear, modelYearSpecified, chassisCode, null);
        }
        
        /// <remarks/>
        public void GetSalesVehicleAsync(string companyCode, string transferOutNo, string modelCode, decimal modelYear, bool modelYearSpecified, string chassisCode, object userState) {
            if ((this.GetSalesVehicleOperationCompleted == null)) {
                this.GetSalesVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesVehicleOperationCompleted);
            }
            this.InvokeAsync("GetSalesVehicle", new object[] {
                        companyCode,
                        transferOutNo,
                        modelCode,
                        modelYear,
                        modelYearSpecified,
                        chassisCode}, this.GetSalesVehicleOperationCompleted, userState);
        }
        
        private void OnGetSalesVehicleOperationCompleted(object arg) {
            if ((this.GetSalesVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesVehicleCompleted(this, new GetSalesVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetInfoVehicle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SalesVehicle GetInfoVehicle([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companycode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string chassisCode, int chassisNo, [System.Xml.Serialization.XmlIgnoreAttribute()] bool chassisNoSpecified) {
            object[] results = this.Invoke("GetInfoVehicle", new object[] {
                        companycode,
                        chassisCode,
                        chassisNo,
                        chassisNoSpecified});
            return ((SalesVehicle)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoVehicleAsync(string companycode, string chassisCode, int chassisNo, bool chassisNoSpecified) {
            this.GetInfoVehicleAsync(companycode, chassisCode, chassisNo, chassisNoSpecified, null);
        }
        
        /// <remarks/>
        public void GetInfoVehicleAsync(string companycode, string chassisCode, int chassisNo, bool chassisNoSpecified, object userState) {
            if ((this.GetInfoVehicleOperationCompleted == null)) {
                this.GetInfoVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoVehicleOperationCompleted);
            }
            this.InvokeAsync("GetInfoVehicle", new object[] {
                        companycode,
                        chassisCode,
                        chassisNo,
                        chassisNoSpecified}, this.GetInfoVehicleOperationCompleted, userState);
        }
        
        private void OnGetInfoVehicleOperationCompleted(object arg) {
            if ((this.GetInfoVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoVehicleCompleted(this, new GetInfoVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetCompanyAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
        public CompanyAccount[] GetCompanyAccount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string compCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string compCodeTo) {
            object[] results = this.Invoke("GetCompanyAccount", new object[] {
                        compCode,
                        compCodeTo});
            return ((CompanyAccount[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyAccountAsync(string compCode, string compCodeTo) {
            this.GetCompanyAccountAsync(compCode, compCodeTo, null);
        }
        
        /// <remarks/>
        public void GetCompanyAccountAsync(string compCode, string compCodeTo, object userState) {
            if ((this.GetCompanyAccountOperationCompleted == null)) {
                this.GetCompanyAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyAccountOperationCompleted);
            }
            this.InvokeAsync("GetCompanyAccount", new object[] {
                        compCode,
                        compCodeTo}, this.GetCompanyAccountOperationCompleted, userState);
        }
        
        private void OnGetCompanyAccountOperationCompleted(object arg) {
            if ((this.GetCompanyAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyAccountCompleted(this, new GetCompanyAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/UpdateTransferOutDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateTransferOutDetail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string branchCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string transferOut, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string salesModelCode, decimal salesModelYear, [System.Xml.Serialization.XmlIgnoreAttribute()] bool salesModelYearSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string chassisCode, decimal chassisNo, [System.Xml.Serialization.XmlIgnoreAttribute()] bool chassisNoSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, bool isDelete, [System.Xml.Serialization.XmlIgnoreAttribute()] bool isDeleteSpecified) {
            this.Invoke("UpdateTransferOutDetail", new object[] {
                        companyCode,
                        branchCode,
                        transferOut,
                        salesModelCode,
                        salesModelYear,
                        salesModelYearSpecified,
                        chassisCode,
                        chassisNo,
                        chassisNoSpecified,
                        userId,
                        isDelete,
                        isDeleteSpecified});
        }
        
        /// <remarks/>
        public void UpdateTransferOutDetailAsync(string companyCode, string branchCode, string transferOut, string salesModelCode, decimal salesModelYear, bool salesModelYearSpecified, string chassisCode, decimal chassisNo, bool chassisNoSpecified, string userId, bool isDelete, bool isDeleteSpecified) {
            this.UpdateTransferOutDetailAsync(companyCode, branchCode, transferOut, salesModelCode, salesModelYear, salesModelYearSpecified, chassisCode, chassisNo, chassisNoSpecified, userId, isDelete, isDeleteSpecified, null);
        }
        
        /// <remarks/>
        public void UpdateTransferOutDetailAsync(string companyCode, string branchCode, string transferOut, string salesModelCode, decimal salesModelYear, bool salesModelYearSpecified, string chassisCode, decimal chassisNo, bool chassisNoSpecified, string userId, bool isDelete, bool isDeleteSpecified, object userState) {
            if ((this.UpdateTransferOutDetailOperationCompleted == null)) {
                this.UpdateTransferOutDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTransferOutDetailOperationCompleted);
            }
            this.InvokeAsync("UpdateTransferOutDetail", new object[] {
                        companyCode,
                        branchCode,
                        transferOut,
                        salesModelCode,
                        salesModelYear,
                        salesModelYearSpecified,
                        chassisCode,
                        chassisNo,
                        chassisNoSpecified,
                        userId,
                        isDelete,
                        isDeleteSpecified}, this.UpdateTransferOutDetailOperationCompleted, userState);
        }
        
        private void OnUpdateTransferOutDetailOperationCompleted(object arg) {
            if ((this.UpdateTransferOutDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTransferOutDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/UpdateTransferOutDetail2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateTransferOutDetail2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string branchCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string transferOut, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId) {
            this.Invoke("UpdateTransferOutDetail2", new object[] {
                        companyCode,
                        branchCode,
                        transferOut,
                        userId});
        }
        
        /// <remarks/>
        public void UpdateTransferOutDetail2Async(string companyCode, string branchCode, string transferOut, string userId) {
            this.UpdateTransferOutDetail2Async(companyCode, branchCode, transferOut, userId, null);
        }
        
        /// <remarks/>
        public void UpdateTransferOutDetail2Async(string companyCode, string branchCode, string transferOut, string userId, object userState) {
            if ((this.UpdateTransferOutDetail2OperationCompleted == null)) {
                this.UpdateTransferOutDetail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTransferOutDetail2OperationCompleted);
            }
            this.InvokeAsync("UpdateTransferOutDetail2", new object[] {
                        companyCode,
                        branchCode,
                        transferOut,
                        userId}, this.UpdateTransferOutDetail2OperationCompleted, userState);
        }
        
        private void OnUpdateTransferOutDetail2OperationCompleted(object arg) {
            if ((this.UpdateTransferOutDetail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTransferOutDetail2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetMasterVehicle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
        public SalesVehicle[] GetMasterVehicle([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string branchCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string chassisCode, decimal chassisNo, [System.Xml.Serialization.XmlIgnoreAttribute()] bool chassisNoSpecified) {
            object[] results = this.Invoke("GetMasterVehicle", new object[] {
                        companyCode,
                        branchCode,
                        chassisCode,
                        chassisNo,
                        chassisNoSpecified});
            return ((SalesVehicle[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMasterVehicleAsync(string companyCode, string branchCode, string chassisCode, decimal chassisNo, bool chassisNoSpecified) {
            this.GetMasterVehicleAsync(companyCode, branchCode, chassisCode, chassisNo, chassisNoSpecified, null);
        }
        
        /// <remarks/>
        public void GetMasterVehicleAsync(string companyCode, string branchCode, string chassisCode, decimal chassisNo, bool chassisNoSpecified, object userState) {
            if ((this.GetMasterVehicleOperationCompleted == null)) {
                this.GetMasterVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasterVehicleOperationCompleted);
            }
            this.InvokeAsync("GetMasterVehicle", new object[] {
                        companyCode,
                        branchCode,
                        chassisCode,
                        chassisNo,
                        chassisNoSpecified}, this.GetMasterVehicleOperationCompleted, userState);
        }
        
        private void OnGetMasterVehicleOperationCompleted(object arg) {
            if ((this.GetMasterVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasterVehicleCompleted(this, new GetMasterVehicleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/UpdateVehicle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateVehicle([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companyCodeFrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string chassisCode, decimal chassisNo, [System.Xml.Serialization.XmlIgnoreAttribute()] bool chassisNoSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string transferInNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId) {
            this.Invoke("UpdateVehicle", new object[] {
                        companyCodeFrom,
                        chassisCode,
                        chassisNo,
                        chassisNoSpecified,
                        transferInNo,
                        userId});
        }
        
        /// <remarks/>
        public void UpdateVehicleAsync(string companyCodeFrom, string chassisCode, decimal chassisNo, bool chassisNoSpecified, string transferInNo, string userId) {
            this.UpdateVehicleAsync(companyCodeFrom, chassisCode, chassisNo, chassisNoSpecified, transferInNo, userId, null);
        }
        
        /// <remarks/>
        public void UpdateVehicleAsync(string companyCodeFrom, string chassisCode, decimal chassisNo, bool chassisNoSpecified, string transferInNo, string userId, object userState) {
            if ((this.UpdateVehicleOperationCompleted == null)) {
                this.UpdateVehicleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleOperationCompleted);
            }
            this.InvokeAsync("UpdateVehicle", new object[] {
                        companyCodeFrom,
                        chassisCode,
                        chassisNo,
                        chassisNoSpecified,
                        transferInNo,
                        userId}, this.UpdateVehicleOperationCompleted, userState);
        }
        
        private void OnUpdateVehicleOperationCompleted(object arg) {
            if ((this.UpdateVehicleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVehicleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetSalesModel1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
        public SalesModel[] GetSalesModel1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string compCode) {
            object[] results = this.Invoke("GetSalesModel1", new object[] {
                        compCode});
            return ((SalesModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSalesModel1Async(string compCode) {
            this.GetSalesModel1Async(compCode, null);
        }
        
        /// <remarks/>
        public void GetSalesModel1Async(string compCode, object userState) {
            if ((this.GetSalesModel1OperationCompleted == null)) {
                this.GetSalesModel1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesModel1OperationCompleted);
            }
            this.InvokeAsync("GetSalesModel1", new object[] {
                        compCode}, this.GetSalesModel1OperationCompleted, userState);
        }
        
        private void OnGetSalesModel1OperationCompleted(object arg) {
            if ((this.GetSalesModel1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesModel1Completed(this, new GetSalesModel1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetSalesModel2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
        public SalesModel[] GetSalesModel2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string compCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string modelCode) {
            object[] results = this.Invoke("GetSalesModel2", new object[] {
                        compCode,
                        modelCode});
            return ((SalesModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSalesModel2Async(string compCode, string modelCode) {
            this.GetSalesModel2Async(compCode, modelCode, null);
        }
        
        /// <remarks/>
        public void GetSalesModel2Async(string compCode, string modelCode, object userState) {
            if ((this.GetSalesModel2OperationCompleted == null)) {
                this.GetSalesModel2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesModel2OperationCompleted);
            }
            this.InvokeAsync("GetSalesModel2", new object[] {
                        compCode,
                        modelCode}, this.GetSalesModel2OperationCompleted, userState);
        }
        
        private void OnGetSalesModel2OperationCompleted(object arg) {
            if ((this.GetSalesModel2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesModel2Completed(this, new GetSalesModel2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetOrganizationDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
        public Organization[] GetOrganizationDetail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companyCode) {
            object[] results = this.Invoke("GetOrganizationDetail", new object[] {
                        companyCode});
            return ((Organization[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationDetailAsync(string companyCode) {
            this.GetOrganizationDetailAsync(companyCode, null);
        }
        
        /// <remarks/>
        public void GetOrganizationDetailAsync(string companyCode, object userState) {
            if ((this.GetOrganizationDetailOperationCompleted == null)) {
                this.GetOrganizationDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationDetailOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationDetail", new object[] {
                        companyCode}, this.GetOrganizationDetailOperationCompleted, userState);
        }
        
        private void OnGetOrganizationDetailOperationCompleted(object arg) {
            if ((this.GetOrganizationDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationDetailCompleted(this, new GetOrganizationDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetWareHouse1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
        public Refference[] GetWareHouse1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companyCode) {
            object[] results = this.Invoke("GetWareHouse1", new object[] {
                        companyCode});
            return ((Refference[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWareHouse1Async(string companyCode) {
            this.GetWareHouse1Async(companyCode, null);
        }
        
        /// <remarks/>
        public void GetWareHouse1Async(string companyCode, object userState) {
            if ((this.GetWareHouse1OperationCompleted == null)) {
                this.GetWareHouse1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWareHouse1OperationCompleted);
            }
            this.InvokeAsync("GetWareHouse1", new object[] {
                        companyCode}, this.GetWareHouse1OperationCompleted, userState);
        }
        
        private void OnGetWareHouse1OperationCompleted(object arg) {
            if ((this.GetWareHouse1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWareHouse1Completed(this, new GetWareHouse1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetWareHouse2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
        public Refference[] GetWareHouse2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string refCode) {
            object[] results = this.Invoke("GetWareHouse2", new object[] {
                        companyCode,
                        refCode});
            return ((Refference[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWareHouse2Async(string companyCode, string refCode) {
            this.GetWareHouse2Async(companyCode, refCode, null);
        }
        
        /// <remarks/>
        public void GetWareHouse2Async(string companyCode, string refCode, object userState) {
            if ((this.GetWareHouse2OperationCompleted == null)) {
                this.GetWareHouse2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWareHouse2OperationCompleted);
            }
            this.InvokeAsync("GetWareHouse2", new object[] {
                        companyCode,
                        refCode}, this.GetWareHouse2OperationCompleted, userState);
        }
        
        private void OnGetWareHouse2OperationCompleted(object arg) {
            if ((this.GetWareHouse2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWareHouse2Completed(this, new GetWareHouse2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetLookUpDtl1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
        public LookUp[] GetLookUpDtl1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string compCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string codeId) {
            object[] results = this.Invoke("GetLookUpDtl1", new object[] {
                        compCode,
                        codeId});
            return ((LookUp[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLookUpDtl1Async(string compCode, string codeId) {
            this.GetLookUpDtl1Async(compCode, codeId, null);
        }
        
        /// <remarks/>
        public void GetLookUpDtl1Async(string compCode, string codeId, object userState) {
            if ((this.GetLookUpDtl1OperationCompleted == null)) {
                this.GetLookUpDtl1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLookUpDtl1OperationCompleted);
            }
            this.InvokeAsync("GetLookUpDtl1", new object[] {
                        compCode,
                        codeId}, this.GetLookUpDtl1OperationCompleted, userState);
        }
        
        private void OnGetLookUpDtl1OperationCompleted(object arg) {
            if ((this.GetLookUpDtl1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLookUpDtl1Completed(this, new GetLookUpDtl1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetLookUpDtl2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
        public LookUp[] GetLookUpDtl2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string compCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string codeId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lookupvalue) {
            object[] results = this.Invoke("GetLookUpDtl2", new object[] {
                        compCode,
                        codeId,
                        lookupvalue});
            return ((LookUp[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLookUpDtl2Async(string compCode, string codeId, string lookupvalue) {
            this.GetLookUpDtl2Async(compCode, codeId, lookupvalue, null);
        }
        
        /// <remarks/>
        public void GetLookUpDtl2Async(string compCode, string codeId, string lookupvalue, object userState) {
            if ((this.GetLookUpDtl2OperationCompleted == null)) {
                this.GetLookUpDtl2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLookUpDtl2OperationCompleted);
            }
            this.InvokeAsync("GetLookUpDtl2", new object[] {
                        compCode,
                        codeId,
                        lookupvalue}, this.GetLookUpDtl2OperationCompleted, userState);
        }
        
        private void OnGetLookUpDtl2OperationCompleted(object arg) {
            if ((this.GetLookUpDtl2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLookUpDtl2Completed(this, new GetLookUpDtl2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetReportLabaRugi1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetReportLabaRugi1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string branchCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> dateStart, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool dateStartSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> dateEnd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool dateEndSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string salesType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string salesFrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string salesTo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string param, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pDok) {
            object[] results = this.Invoke("GetReportLabaRugi1", new object[] {
                        companyCode,
                        branchCode,
                        dateStart,
                        dateStartSpecified,
                        dateEnd,
                        dateEndSpecified,
                        salesType,
                        salesFrom,
                        salesTo,
                        param,
                        pDok});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportLabaRugi1Async(string companyCode, string branchCode, System.Nullable<System.DateTime> dateStart, bool dateStartSpecified, System.Nullable<System.DateTime> dateEnd, bool dateEndSpecified, string salesType, string salesFrom, string salesTo, string param, string pDok) {
            this.GetReportLabaRugi1Async(companyCode, branchCode, dateStart, dateStartSpecified, dateEnd, dateEndSpecified, salesType, salesFrom, salesTo, param, pDok, null);
        }
        
        /// <remarks/>
        public void GetReportLabaRugi1Async(string companyCode, string branchCode, System.Nullable<System.DateTime> dateStart, bool dateStartSpecified, System.Nullable<System.DateTime> dateEnd, bool dateEndSpecified, string salesType, string salesFrom, string salesTo, string param, string pDok, object userState) {
            if ((this.GetReportLabaRugi1OperationCompleted == null)) {
                this.GetReportLabaRugi1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportLabaRugi1OperationCompleted);
            }
            this.InvokeAsync("GetReportLabaRugi1", new object[] {
                        companyCode,
                        branchCode,
                        dateStart,
                        dateStartSpecified,
                        dateEnd,
                        dateEndSpecified,
                        salesType,
                        salesFrom,
                        salesTo,
                        param,
                        pDok}, this.GetReportLabaRugi1OperationCompleted, userState);
        }
        
        private void OnGetReportLabaRugi1OperationCompleted(object arg) {
            if ((this.GetReportLabaRugi1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportLabaRugi1Completed(this, new GetReportLabaRugi1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetReportLabaRugi2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetReportLabaRugi2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string companyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string branchCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> dateStart, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool dateStartSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> dateEnd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool dateEndSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string salesType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string salesFrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string salesTo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string param) {
            object[] results = this.Invoke("GetReportLabaRugi2", new object[] {
                        companyCode,
                        branchCode,
                        dateStart,
                        dateStartSpecified,
                        dateEnd,
                        dateEndSpecified,
                        salesType,
                        salesFrom,
                        salesTo,
                        param});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportLabaRugi2Async(string companyCode, string branchCode, System.Nullable<System.DateTime> dateStart, bool dateStartSpecified, System.Nullable<System.DateTime> dateEnd, bool dateEndSpecified, string salesType, string salesFrom, string salesTo, string param) {
            this.GetReportLabaRugi2Async(companyCode, branchCode, dateStart, dateStartSpecified, dateEnd, dateEndSpecified, salesType, salesFrom, salesTo, param, null);
        }
        
        /// <remarks/>
        public void GetReportLabaRugi2Async(string companyCode, string branchCode, System.Nullable<System.DateTime> dateStart, bool dateStartSpecified, System.Nullable<System.DateTime> dateEnd, bool dateEndSpecified, string salesType, string salesFrom, string salesTo, string param, object userState) {
            if ((this.GetReportLabaRugi2OperationCompleted == null)) {
                this.GetReportLabaRugi2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportLabaRugi2OperationCompleted);
            }
            this.InvokeAsync("GetReportLabaRugi2", new object[] {
                        companyCode,
                        branchCode,
                        dateStart,
                        dateStartSpecified,
                        dateEnd,
                        dateEndSpecified,
                        salesType,
                        salesFrom,
                        salesTo,
                        param}, this.GetReportLabaRugi2OperationCompleted, userState);
        }
        
        private void OnGetReportLabaRugi2OperationCompleted(object arg) {
            if ((this.GetReportLabaRugi2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportLabaRugi2Completed(this, new GetReportLabaRugi2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetLaporanStok1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetLaporanStok1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CompanyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string BranchCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dtpFrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string WHCodeFrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string WHCodeTo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CodeFrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CodeTo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pDok, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sortBy) {
            object[] results = this.Invoke("GetLaporanStok1", new object[] {
                        CompanyCode,
                        BranchCode,
                        dtpFrom,
                        WHCodeFrom,
                        WHCodeTo,
                        CodeFrom,
                        CodeTo,
                        pDok,
                        sortBy});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLaporanStok1Async(string CompanyCode, string BranchCode, string dtpFrom, string WHCodeFrom, string WHCodeTo, string CodeFrom, string CodeTo, string pDok, string sortBy) {
            this.GetLaporanStok1Async(CompanyCode, BranchCode, dtpFrom, WHCodeFrom, WHCodeTo, CodeFrom, CodeTo, pDok, sortBy, null);
        }
        
        /// <remarks/>
        public void GetLaporanStok1Async(string CompanyCode, string BranchCode, string dtpFrom, string WHCodeFrom, string WHCodeTo, string CodeFrom, string CodeTo, string pDok, string sortBy, object userState) {
            if ((this.GetLaporanStok1OperationCompleted == null)) {
                this.GetLaporanStok1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLaporanStok1OperationCompleted);
            }
            this.InvokeAsync("GetLaporanStok1", new object[] {
                        CompanyCode,
                        BranchCode,
                        dtpFrom,
                        WHCodeFrom,
                        WHCodeTo,
                        CodeFrom,
                        CodeTo,
                        pDok,
                        sortBy}, this.GetLaporanStok1OperationCompleted, userState);
        }
        
        private void OnGetLaporanStok1OperationCompleted(object arg) {
            if ((this.GetLaporanStok1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLaporanStok1Completed(this, new GetLaporanStok1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetLaporanStok2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetLaporanStok2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CompanyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string BranchCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dtpFrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string WHCodeFrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string WHCodeTo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CodeFrom, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CodeTo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pDok, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sortBy) {
            object[] results = this.Invoke("GetLaporanStok2", new object[] {
                        CompanyCode,
                        BranchCode,
                        dtpFrom,
                        WHCodeFrom,
                        WHCodeTo,
                        CodeFrom,
                        CodeTo,
                        pDok,
                        sortBy});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLaporanStok2Async(string CompanyCode, string BranchCode, string dtpFrom, string WHCodeFrom, string WHCodeTo, string CodeFrom, string CodeTo, string pDok, string sortBy) {
            this.GetLaporanStok2Async(CompanyCode, BranchCode, dtpFrom, WHCodeFrom, WHCodeTo, CodeFrom, CodeTo, pDok, sortBy, null);
        }
        
        /// <remarks/>
        public void GetLaporanStok2Async(string CompanyCode, string BranchCode, string dtpFrom, string WHCodeFrom, string WHCodeTo, string CodeFrom, string CodeTo, string pDok, string sortBy, object userState) {
            if ((this.GetLaporanStok2OperationCompleted == null)) {
                this.GetLaporanStok2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLaporanStok2OperationCompleted);
            }
            this.InvokeAsync("GetLaporanStok2", new object[] {
                        CompanyCode,
                        BranchCode,
                        dtpFrom,
                        WHCodeFrom,
                        WHCodeTo,
                        CodeFrom,
                        CodeTo,
                        pDok,
                        sortBy}, this.GetLaporanStok2OperationCompleted, userState);
        }
        
        private void OnGetLaporanStok2OperationCompleted(object arg) {
            if ((this.GetLaporanStok2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLaporanStok2Completed(this, new GetLaporanStok2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetLaporanDailySales", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetLaporanDailySales([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string company, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string period1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string period2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string tipe) {
            object[] results = this.Invoke("GetLaporanDailySales", new object[] {
                        company,
                        period1,
                        period2,
                        tipe});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLaporanDailySalesAsync(string company, string period1, string period2, string tipe) {
            this.GetLaporanDailySalesAsync(company, period1, period2, tipe, null);
        }
        
        /// <remarks/>
        public void GetLaporanDailySalesAsync(string company, string period1, string period2, string tipe, object userState) {
            if ((this.GetLaporanDailySalesOperationCompleted == null)) {
                this.GetLaporanDailySalesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLaporanDailySalesOperationCompleted);
            }
            this.InvokeAsync("GetLaporanDailySales", new object[] {
                        company,
                        period1,
                        period2,
                        tipe}, this.GetLaporanDailySalesOperationCompleted, userState);
        }
        
        private void OnGetLaporanDailySalesOperationCompleted(object arg) {
            if ((this.GetLaporanDailySalesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLaporanDailySalesCompleted(this, new GetLaporanDailySalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITransOutService/GetLaporanDailySales2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetLaporanDailySales2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string company, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string period1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string period2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string tipe) {
            object[] results = this.Invoke("GetLaporanDailySales2", new object[] {
                        company,
                        period1,
                        period2,
                        tipe});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLaporanDailySales2Async(string company, string period1, string period2, string tipe) {
            this.GetLaporanDailySales2Async(company, period1, period2, tipe, null);
        }
        
        /// <remarks/>
        public void GetLaporanDailySales2Async(string company, string period1, string period2, string tipe, object userState) {
            if ((this.GetLaporanDailySales2OperationCompleted == null)) {
                this.GetLaporanDailySales2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLaporanDailySales2OperationCompleted);
            }
            this.InvokeAsync("GetLaporanDailySales2", new object[] {
                        company,
                        period1,
                        period2,
                        tipe}, this.GetLaporanDailySales2OperationCompleted, userState);
        }
        
        private void OnGetLaporanDailySales2OperationCompleted(object arg) {
            if ((this.GetLaporanDailySales2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLaporanDailySales2Completed(this, new GetLaporanDailySales2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
    public partial class OmTransferOut {
        
        private string branchFromField;
        
        private string branchToField;
        
        private string branchToDescField;
        
        private string companyFromField;
        
        private string companyToField;
        
        private System.DateTime transferOutDateField;
        
        private bool transferOutDateFieldSpecified;
        
        private string transferOutNoField;
        
        private string warehouseFromField;
        
        private string warehouseToField;
        
        private string warehouseToDescField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchFrom {
            get {
                return this.branchFromField;
            }
            set {
                this.branchFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchTo {
            get {
                return this.branchToField;
            }
            set {
                this.branchToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchToDesc {
            get {
                return this.branchToDescField;
            }
            set {
                this.branchToDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CompanyFrom {
            get {
                return this.companyFromField;
            }
            set {
                this.companyFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CompanyTo {
            get {
                return this.companyToField;
            }
            set {
                this.companyToField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TransferOutDate {
            get {
                return this.transferOutDateField;
            }
            set {
                this.transferOutDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransferOutDateSpecified {
            get {
                return this.transferOutDateFieldSpecified;
            }
            set {
                this.transferOutDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TransferOutNo {
            get {
                return this.transferOutNoField;
            }
            set {
                this.transferOutNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string WarehouseFrom {
            get {
                return this.warehouseFromField;
            }
            set {
                this.warehouseFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string WarehouseTo {
            get {
                return this.warehouseToField;
            }
            set {
                this.warehouseToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string WarehouseToDesc {
            get {
                return this.warehouseToDescField;
            }
            set {
                this.warehouseToDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
    public partial class LookUp {
        
        private string lookupValueField;
        
        private string lookupValueNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LookupValue {
            get {
                return this.lookupValueField;
            }
            set {
                this.lookupValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LookupValueName {
            get {
                return this.lookupValueNameField;
            }
            set {
                this.lookupValueNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
    public partial class Refference {
        
        private string refferenceCodeField;
        
        private string refferenceDesc1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RefferenceCode {
            get {
                return this.refferenceCodeField;
            }
            set {
                this.refferenceCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RefferenceDesc1 {
            get {
                return this.refferenceDesc1Field;
            }
            set {
                this.refferenceDesc1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
    public partial class Organization {
        
        private string branchCodeField;
        
        private string branchNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchName {
            get {
                return this.branchNameField;
            }
            set {
                this.branchNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
    public partial class CompanyAccount {
        
        private string accInterCompanyField;
        
        private string accInterCompanyDescField;
        
        private string branchToField;
        
        private string branchToDescField;
        
        private string companyToField;
        
        private string companyToDescField;
        
        private string warehouseToField;
        
        private string warehouseToDescField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccInterCompany {
            get {
                return this.accInterCompanyField;
            }
            set {
                this.accInterCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccInterCompanyDesc {
            get {
                return this.accInterCompanyDescField;
            }
            set {
                this.accInterCompanyDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchTo {
            get {
                return this.branchToField;
            }
            set {
                this.branchToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchToDesc {
            get {
                return this.branchToDescField;
            }
            set {
                this.branchToDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CompanyTo {
            get {
                return this.companyToField;
            }
            set {
                this.companyToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CompanyToDesc {
            get {
                return this.companyToDescField;
            }
            set {
                this.companyToDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string WarehouseTo {
            get {
                return this.warehouseToField;
            }
            set {
                this.warehouseToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string WarehouseToDesc {
            get {
                return this.warehouseToDescField;
            }
            set {
                this.warehouseToDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
    public partial class SalesVehicle {
        
        private decimal cOGSKaroseriField;
        
        private bool cOGSKaroseriFieldSpecified;
        
        private decimal cOGSOtherField;
        
        private bool cOGSOtherFieldSpecified;
        
        private decimal cOGSUnitField;
        
        private bool cOGSUnitFieldSpecified;
        
        private string chassisCodeField;
        
        private decimal chassisNoField;
        
        private bool chassisNoFieldSpecified;
        
        private string colourCodeField;
        
        private string colourNameField;
        
        private string engineCodeField;
        
        private decimal engineNoField;
        
        private bool engineNoFieldSpecified;
        
        private System.DateTime suzukiDODateField;
        
        private bool suzukiDODateFieldSpecified;
        
        private string suzukiDONoField;
        
        private System.DateTime suzukiSJDateField;
        
        private bool suzukiSJDateFieldSpecified;
        
        private string suzukiSJNoField;
        
        /// <remarks/>
        public decimal COGSKaroseri {
            get {
                return this.cOGSKaroseriField;
            }
            set {
                this.cOGSKaroseriField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool COGSKaroseriSpecified {
            get {
                return this.cOGSKaroseriFieldSpecified;
            }
            set {
                this.cOGSKaroseriFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal COGSOther {
            get {
                return this.cOGSOtherField;
            }
            set {
                this.cOGSOtherField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool COGSOtherSpecified {
            get {
                return this.cOGSOtherFieldSpecified;
            }
            set {
                this.cOGSOtherFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal COGSUnit {
            get {
                return this.cOGSUnitField;
            }
            set {
                this.cOGSUnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool COGSUnitSpecified {
            get {
                return this.cOGSUnitFieldSpecified;
            }
            set {
                this.cOGSUnitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ChassisCode {
            get {
                return this.chassisCodeField;
            }
            set {
                this.chassisCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal ChassisNo {
            get {
                return this.chassisNoField;
            }
            set {
                this.chassisNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChassisNoSpecified {
            get {
                return this.chassisNoFieldSpecified;
            }
            set {
                this.chassisNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ColourCode {
            get {
                return this.colourCodeField;
            }
            set {
                this.colourCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ColourName {
            get {
                return this.colourNameField;
            }
            set {
                this.colourNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EngineCode {
            get {
                return this.engineCodeField;
            }
            set {
                this.engineCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal EngineNo {
            get {
                return this.engineNoField;
            }
            set {
                this.engineNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EngineNoSpecified {
            get {
                return this.engineNoFieldSpecified;
            }
            set {
                this.engineNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SuzukiDODate {
            get {
                return this.suzukiDODateField;
            }
            set {
                this.suzukiDODateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuzukiDODateSpecified {
            get {
                return this.suzukiDODateFieldSpecified;
            }
            set {
                this.suzukiDODateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SuzukiDONo {
            get {
                return this.suzukiDONoField;
            }
            set {
                this.suzukiDONoField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SuzukiSJDate {
            get {
                return this.suzukiSJDateField;
            }
            set {
                this.suzukiSJDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuzukiSJDateSpecified {
            get {
                return this.suzukiSJDateFieldSpecified;
            }
            set {
                this.suzukiSJDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SuzukiSJNo {
            get {
                return this.suzukiSJNoField;
            }
            set {
                this.suzukiSJNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
    public partial class SalesModelYear {
        
        private string chassisCodeField;
        
        private decimal modelYearField;
        
        private bool modelYearFieldSpecified;
        
        private string salesModelDescField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ChassisCode {
            get {
                return this.chassisCodeField;
            }
            set {
                this.chassisCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal ModelYear {
            get {
                return this.modelYearField;
            }
            set {
                this.modelYearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModelYearSpecified {
            get {
                return this.modelYearFieldSpecified;
            }
            set {
                this.modelYearFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SalesModelDesc {
            get {
                return this.salesModelDescField;
            }
            set {
                this.salesModelDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/SdmsWcf.Models")]
    public partial class SalesModel {
        
        private string engineCodeField;
        
        private string salesModelCodeField;
        
        private string salesModelDescField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EngineCode {
            get {
                return this.engineCodeField;
            }
            set {
                this.engineCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SalesModelCode {
            get {
                return this.salesModelCodeField;
            }
            set {
                this.salesModelCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SalesModelDesc {
            get {
                return this.salesModelDescField;
            }
            set {
                this.salesModelDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void HelloWorld2CompletedEventHandler(object sender, HelloWorld2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorld2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorld2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOmTransOutNoCompletedEventHandler(object sender, GetOmTransOutNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOmTransOutNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOmTransOutNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OmTransferOut[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OmTransferOut[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOmTransOutNo2CompletedEventHandler(object sender, GetOmTransOutNo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOmTransOutNo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOmTransOutNo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OmTransferOut[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OmTransferOut[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSalesModelCodeCompletedEventHandler(object sender, GetSalesModelCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesModelCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesModelCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSalesModelYearCompletedEventHandler(object sender, GetSalesModelYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesModelYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesModelYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesModelYear[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesModelYear[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSalesVehicleCompletedEventHandler(object sender, GetSalesVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesVehicle[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesVehicle[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetInfoVehicleCompletedEventHandler(object sender, GetInfoVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesVehicle Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesVehicle)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCompanyAccountCompletedEventHandler(object sender, GetCompanyAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompanyAccount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanyAccount[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateTransferOutDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateTransferOutDetail2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMasterVehicleCompletedEventHandler(object sender, GetMasterVehicleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasterVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasterVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesVehicle[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesVehicle[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateVehicleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSalesModel1CompletedEventHandler(object sender, GetSalesModel1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesModel1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesModel1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSalesModel2CompletedEventHandler(object sender, GetSalesModel2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesModel2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesModel2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOrganizationDetailCompletedEventHandler(object sender, GetOrganizationDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Organization[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Organization[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetWareHouse1CompletedEventHandler(object sender, GetWareHouse1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWareHouse1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWareHouse1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Refference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Refference[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetWareHouse2CompletedEventHandler(object sender, GetWareHouse2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWareHouse2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWareHouse2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Refference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Refference[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLookUpDtl1CompletedEventHandler(object sender, GetLookUpDtl1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLookUpDtl1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLookUpDtl1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LookUp[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LookUp[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLookUpDtl2CompletedEventHandler(object sender, GetLookUpDtl2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLookUpDtl2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLookUpDtl2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LookUp[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LookUp[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetReportLabaRugi1CompletedEventHandler(object sender, GetReportLabaRugi1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportLabaRugi1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportLabaRugi1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetReportLabaRugi2CompletedEventHandler(object sender, GetReportLabaRugi2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportLabaRugi2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportLabaRugi2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLaporanStok1CompletedEventHandler(object sender, GetLaporanStok1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLaporanStok1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLaporanStok1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLaporanStok2CompletedEventHandler(object sender, GetLaporanStok2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLaporanStok2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLaporanStok2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLaporanDailySalesCompletedEventHandler(object sender, GetLaporanDailySalesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLaporanDailySalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLaporanDailySalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLaporanDailySales2CompletedEventHandler(object sender, GetLaporanDailySales2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLaporanDailySales2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLaporanDailySales2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591