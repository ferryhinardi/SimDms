using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading;
using System.Web;

namespace SimDms.DataWarehouse.Helpers
{
    class OmRpSalRgs040Xcl
    {
        #region Properties
        private string seq, seq2, area, dealer, outlet, modelCategory, colorCategory, marketModel, year;
        private int rowIndex = 0;
        private int indentTitleDesc = 6;
        private int marketModelCount = 1;
        private int dealerWidth, outletWidth, modelWidth, colorWidth, totalDetailWidth;

        private decimal janType, febType, marType, aprType, mayType, junType, julType, augType, sepType, octType, novType, decType, totalType;
        private decimal janSubTtl, febSubTtl, marSubTtl, aprSubTtl, maySubTtl, junSubTtl, julSubTtl, augSubTtl, sepSubTtl, octSubTtl, novSubTtl, decSubTtl, totalSubTtl;
        private decimal janGT, febGT, marGT, aprGT, mayGT, junGT, julGT, augGT, sepGT, octGT, novGT, decGT, totalGT, avgGT;
        private decimal janJabodetabek, febJabodetabek, marJabodetabek, aprJabodetabek, mayJabodetabek, junJabodetabek, julJabodetabek, augJabodetabek, sepJabodetabek, octJabodetabek, novJabodetabek, decJabodetabek, totalJabodetabek;

        private decimal janAVG, febAVG, marAVG, aprAVG, mayAVG, junAVG, julAVG, augAVG, sepAVG, octAVG, novAVG, decAVG, totalAVG;

        private int totalRow = 0, totalRowDtl = 0, beforeRowType = 0;
        private int totalAVGRow = 0, TotalAVGOutletRow = 0, TotalAVGAreaRow = 0, TotalAVGDealerRow = 0, totalAVGGTRow = 0, TotalAVGAreaRowJBDTK = 0;
        private int totalDealer = 0, totalOutlet = 0, spaceTotal = 0, spaceTotalDealer = 0, totalColour = 0, totalDealerGT = 1;
        private bool dealerStat = false;

        private DataSet ds = new DataSet();
        Dictionary<int, string> parameter = new Dictionary<int, string>();
        private StringBuilder sbSaveCurrentState;
        string fileName;
        decimal totalMonth = 0;
        decimal averageMonth = 0;
        decimal averageDealer = 0;
        decimal averageArea = 0;
        decimal averageMonthGT = 0;
        int currentYear = 0;
        DataTable dt0 = new DataTable();
        DataTable dt1 = new DataTable();
        StringBuilder sb = new StringBuilder();
        ExcelFileWriter excelReport = new ExcelFileWriter(0);
        #endregion

        public OmRpSalRgs040Xcl(DataSet dataSet, Dictionary<int, string> param, string flName)
        {
            ds = dataSet;
            parameter = param;
            fileName = flName;
        }



        public void CreateReport(string pserver)
        {
             dt0 = ds.Tables[0]; 
             dt1 = ds.Tables[1]; 

            seq = dt0.Rows[0]["Seq"].ToString();
            seq2 = dt0.Rows[0]["Seq2"].ToString();
            area = parameter[9].ToString() == "1" ? dt0.Rows[0]["Area"].ToString() : "";
            dealer = parameter[10].ToString() == "1" ? dt0.Rows[0]["CompanyName"].ToString() : "";
            outlet = parameter[11].ToString() == "1" ? dt0.Rows[0]["BranchName"].ToString() : "";
            modelCategory = dt0.Columns.Contains("ModelCatagory") == true ? dt0.Rows[0]["ModelCatagory"].ToString() : "";
            marketModel = parameter[12].ToString() == "1" ? dt0.Rows[0]["MarketModel"].ToString() : "";
            colorCategory = parameter[13].ToString() == "1" ? dt0.Rows[0]["ColourName"].ToString() : "";
            year = dt0.Rows[0]["Year"].ToString();
            currentYear = Convert.ToInt32(dt0.Rows[0]["Year"].ToString());

            sb = new StringBuilder();
            sb.Append(parameter[11].ToString() == "1" ? "Outlet" : "");
            sb.Append((parameter[12].ToString() == "1" && parameter[14].ToString() == "") ? ", Type" : "");
            sb.Append(parameter[13].ToString() == "1" ? " & Colour" : "");
            sb.Append(parameter[14].ToString() != "" ? " & Type : " + parameter[14].ToString() : "");
            if (sb.Length != 0)
                sb.Append(" - ");
            sb.Append(parameter[16].ToString() + " " + parameter[15].ToString());

            string title = sb.ToString().StartsWith(",") ? sb.ToString().Remove(0, 1) : sb.ToString();

            //Pemetaan ukuran column
            dealerWidth = parameter[10].ToString() == "1" ? 1 : 0;
            outletWidth = parameter[11].ToString() == "1" ? 1 : 0;
            modelWidth = (parameter[12].ToString() == "1" && parameter[14].ToString() == "") ? 1 : 0;
            colorWidth = parameter[13].ToString() == "1" ? 1 : 0;

            totalDetailWidth = dealerWidth + outletWidth + modelWidth + colorWidth;

             excelReport = new ExcelFileWriter(fileName, currentYear.ToString(), "OmRpSalRgs045",pserver);
            CreateHeader(excelReport, rowIndex, totalDetailWidth, title, currentYear.ToString());
            marketModelCount = 1;
            foreach (DataRow row in dt0.Rows)
            {
                if (row["Seq"].ToString() == "9")
                    break;

                decimal averageQty = decimal.Parse(row["AVG"].ToString());

                totalMonth = (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                    && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 :
                    (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) == currentYear
                    && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) :
                    (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                    && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) == currentYear) ? Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) :
                    Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) + 1;

                /* Penjelasan case di bawah terjadi pada saat apilkasi pertama kali di jalankan*/
                if (year == row["Year"].ToString()
                    && seq == row["seq"].ToString()
                    && seq2 == row["seq2"].ToString()
                    && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
                    && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
                    && outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
                    && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
                    && marketModel == (parameter[12] == "1" ? row["MarketModel"].ToString() : "")
                    && colorCategory == (parameter[13] == "1" ? row["ColourName"].ToString() : ""))
                {
                    //marketModelCount = marketModelCount == 1 ? 4 : 6;
                    satu(row);
                   
                }

                /* Penjelasan case di bawah terjadi pada saat nama dealer berubah dan data dari database memberikan nilai total per dealer :
                 * 1.Biasanya pada opsi Area dan dealer True
                 * 2.Perpindahan dari column Seq = 2, Seq2 = 1 ke Seq = 1, Seq2 = 1
                 */
                else if (year == row["Year"].ToString()
                    && seq != row["seq"].ToString()
                    && seq2 == row["seq2"].ToString()
                    && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
                    && dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
                    && outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
                    && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
                    && marketModel == (parameter[12] == "1" ? row["MarketModel"].ToString() : "")
                    && colorCategory == (parameter[13] == "1" ? row["ColourName"].ToString() : ""))
                {
                    dua(row);
                }
                /* Penjelasan case di bawah terjadi pada saat nama outlet berubah :
                 * 1.Biasanya pada opsi Area ,dealer dan outlet = True*/
                else if (year == row["Year"].ToString()
                 && seq != row["seq"].ToString()
                 && seq2 == row["seq2"].ToString()
                 && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
                 && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
                 && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
                 && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
                 && marketModel == (parameter[12] == "1" ? row["MarketModel"].ToString() : "")
                 && colorCategory == (parameter[13] == "1" ? row["ColourName"].ToString() : ""))
                {
                    tiga(row);
                }
                /* Penjelasan case di bawah terjadi pada saat nama outlet berubah dan nama Dealer berubah:
                 * 1.Biasanya pada opsi Area ,dealer dan outlet = True dan ketika berganti dealer*/
                else if (year == row["Year"].ToString()
       && seq != row["seq"].ToString()
       && seq2 == row["seq2"].ToString()
       && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
       && dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
       && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
       && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
       && marketModel == (parameter[12] == "1" ? row["MarketModel"].ToString() : "")
       && colorCategory == (parameter[13] == "1" ? row["ColourName"].ToString() : ""))
                {
                    empat(row);
                }
                /* Penjelasan case di bawah terjadi pada saat market Model dan Model Category berubah :
                 * 1.Biasanya pada opsi Area, dealer, outlet dan model = True
                 * 2.Biasanya pada opsi Area, dealer,outlet,model dan colour = True*/
                else if (year == row["Year"].ToString()
                && seq == row["seq"].ToString()
                && seq2 == row["seq2"].ToString()
        && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
        && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
        && outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
        && modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
        && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    lima(row);
                }
                /* Penjelasan case di bawah terjadi pada saat market Model ,model Catagory dan outlet berubah :
                 * 1.Biasanya pada opsi Area, dealer, outlet dan model = True*/
                else if (year == row["Year"].ToString()
               && seq == row["seq"].ToString()
               && seq2 == row["seq2"].ToString()
               && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
               && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
               && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
               && modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
               && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    enam(row);
                }
                else if (year == row["Year"].ToString()
               && seq == row["seq"].ToString()
          && seq2 == row["seq2"].ToString()
          && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
          && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
          && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
          && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
          && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    tujuh(row);
                }
                #region Seven Extension
                /* Penjelasan case di bawah terjadi pada saat seluruh outlet sudah ditampilkan untuk 1 dealer dan ingin mulain memasukkan total per dealer
                 * ingin menampilkan total per dealer di bagian atasberubah :
                 * 1.Biasanya pada opsi Area, dealer, outlet dan model = True
                 * 2.Biasanya pada opsi Area, dealer, outlet,model dan colour= True*/
                else if (year == row["Year"].ToString()
                  && seq != row["seq"].ToString()
                && seq2 == row["seq2"].ToString()
                && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
                && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
                && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
                && modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
                && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    delapan(row);
                }
                else if (year == row["Year"].ToString()
                       && seq != row["seq"].ToString()
                && seq2 == row["seq2"].ToString()
                && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
                && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
                && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
                && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
                && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    sembilan(row);
                }
                else if (year == row["Year"].ToString()
          && seq != row["seq"].ToString()
   && seq2 == row["seq2"].ToString()
   && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
   && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
   && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
   && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
   && marketModel == (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    sepuluh(row);
                }
                else if (year == row["Year"].ToString()
               && seq != row["seq"].ToString()
        && seq2 == row["seq2"].ToString()
        && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
        && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
        && outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
        && modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
        && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    sebelas(row);
                }
                else if (year == row["Year"].ToString()
          && seq != row["seq"].ToString()
   && seq2 == row["seq2"].ToString()
   && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
   && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
   && outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
   && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
   && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    duabelas(row);
                }

                #endregion

                /* Penjelasan case di bawah terjadi pada saat seluruh outlet sudah ditampilkan untuk 1 dealer dan ingin mulain memasukkan total per dealer
                 * ingin menampilkan total per dealer di bagian atasberubah :
                 * 1.Biasanya pada opsi Area, dealer, outlet dan model = True*/
                else if (year == row["Year"].ToString()
          && seq != row["seq"].ToString()
  && seq2 == row["seq2"].ToString()
  && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
  && dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
  && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
  && modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
  && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    tigabelas(row);
                }
                /* Penjelasan case di bawah terjadi pada saat seluruh outlet sudah ditampilkan untuk 1 dealer dan ingin mulain memasukkan total per dealer
             * ingin menampilkan total per dealer di bagian atasberubah :
             * 1.Biasanya pada opsi Area, dealer, outlet dan model = True*/
                else if (year == row["Year"].ToString()
          && seq != row["seq"].ToString()
  && seq2 == row["seq2"].ToString()
  && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
  && dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
  && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
  && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
  && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Eight Extensions
                    if (parameter[5].ToString() == "ALL")
                    {
                        decimal average = 0;
                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalType / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalType / averageArea;
                        else
                            average = totalType / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else
                            //Untuk masukkin total per Category
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janType / totalAVGRow;
                        febAVG = febType / totalAVGRow;
                        marAVG = marType / totalAVGRow;
                        aprAVG = aprType / totalAVGRow;
                        mayAVG = mayType / totalAVGRow;
                        junAVG = junType / totalAVGRow;
                        julAVG = julType / totalAVGRow;
                        augAVG = augType / totalAVGRow;
                        sepAVG = sepType / totalAVGRow;
                        octAVG = octType / totalAVGRow;
                        novAVG = novType / totalAVGRow;
                        decAVG = decType / totalAVGRow;
                        totalAVG = totalType / TotalAVGOutletRow;
                        decimal avg = 0;
                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalSubTtl / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalSubTtl / averageArea;
                        else
                            average = totalSubTtl / totalMonth;

                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else
                            //Total Per Outlet
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                        excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;


                        janAVG = janSubTtl / TotalAVGOutletRow;
                        febAVG = febSubTtl / TotalAVGOutletRow;
                        marAVG = marSubTtl / TotalAVGOutletRow;
                        aprAVG = aprSubTtl / TotalAVGOutletRow;
                        mayAVG = maySubTtl / TotalAVGOutletRow;
                        junAVG = junSubTtl / TotalAVGOutletRow;
                        julAVG = julSubTtl / TotalAVGOutletRow;
                        augAVG = augSubTtl / TotalAVGOutletRow;
                        sepAVG = sepSubTtl / TotalAVGOutletRow;
                        octAVG = octSubTtl / TotalAVGOutletRow;
                        novAVG = novSubTtl / TotalAVGOutletRow;
                        decAVG = decSubTtl / TotalAVGOutletRow;
                        totalAVG = totalSubTtl / TotalAVGOutletRow;
                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                        janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                        TotalAVGOutletRow = 0;
                        totalAVGRow = 0;
                        totalRowDtl = 0;
                        spaceTotal = 0;

                        excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL", 0 + dealerWidth, beforeRowType + marketModelCount, outletWidth, ExcelCellStyle.LeftBorderedTop);
                    }

                    totalRow = 0;
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    dealer = row["CompanyName"].ToString();
                    outlet = row["BranchName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                /* Penjelasan case di bawah terjadi pada saat seluruh outlet sudah ditampilkan untuk 1 dealer dan ingin mulain memasukkan total per dealer
* ingin menampilkan total per dealer di bagian atasberubah :
* 1.Biasanya pada opsi Area, dealer, outlet dan model = True*/
                else if (year == row["Year"].ToString()
     && seq != row["seq"].ToString()
&& seq2 == row["seq2"].ToString()
&& area == (parameter[9] == "1" ? row["Area"].ToString() : "")
&& dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
&& outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
&& modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
&& marketModel == (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Eight Extensions
                    if (parameter[5].ToString() == "ALL")
                    {
                        decimal average = 0;
                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalType / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalType / averageArea;
                        else
                            average = totalType / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else
                            //Untuk masukkin total per Category
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janType / totalAVGRow;
                        febAVG = febType / totalAVGRow;
                        marAVG = marType / totalAVGRow;
                        aprAVG = aprType / totalAVGRow;
                        mayAVG = mayType / totalAVGRow;
                        junAVG = junType / totalAVGRow;
                        julAVG = julType / totalAVGRow;
                        augAVG = augType / totalAVGRow;
                        sepAVG = sepType / totalAVGRow;
                        octAVG = octType / totalAVGRow;
                        novAVG = novType / totalAVGRow;
                        decAVG = decType / totalAVGRow;
                        totalAVG = totalType / TotalAVGOutletRow;
                        decimal avg = 0;
                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalSubTtl / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalSubTtl / averageArea;
                        else
                            average = totalSubTtl / totalMonth;

                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else
                            //Total Per Outlet
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                        excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;


                        janAVG = janSubTtl / TotalAVGOutletRow;
                        febAVG = febSubTtl / TotalAVGOutletRow;
                        marAVG = marSubTtl / TotalAVGOutletRow;
                        aprAVG = aprSubTtl / TotalAVGOutletRow;
                        mayAVG = maySubTtl / TotalAVGOutletRow;
                        junAVG = junSubTtl / TotalAVGOutletRow;
                        julAVG = julSubTtl / TotalAVGOutletRow;
                        augAVG = augSubTtl / TotalAVGOutletRow;
                        sepAVG = sepSubTtl / TotalAVGOutletRow;
                        octAVG = octSubTtl / TotalAVGOutletRow;
                        novAVG = novSubTtl / TotalAVGOutletRow;
                        decAVG = decSubTtl / TotalAVGOutletRow;
                        totalAVG = totalSubTtl / TotalAVGOutletRow;
                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                        janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                        TotalAVGOutletRow = 0;
                        totalAVGRow = 0;
                        totalRowDtl = 0;
                        spaceTotal = 0;

                        excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL", 0 + dealerWidth, beforeRowType + marketModelCount, outletWidth, ExcelCellStyle.LeftBorderedTop);
                    }

                    totalRow = 0;
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    dealer = row["CompanyName"].ToString();
                    outlet = row["BranchName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                /* Penjelasan case di bawah terjadi pada saat seluruh ModelType sudah ditampilkan dan ingin menampilkan total per dealer:
                 * 1.Biasanya pada opsi Area, dealer dan model = True
                 */
                else if (year == row["Year"].ToString()
               && seq != row["seq"].ToString()
  && seq2 == row["seq2"].ToString()
  && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
  && dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
  && outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
  && modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
  && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Nine
                    decimal average = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalType / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalType / averageArea;
                    else
                        average = totalType / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / TotalAVGOutletRow;

                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalSubTtl / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageArea;
                    else
                        average = totalSubTtl / totalMonth;

                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageArea;
                    //else
                    //    average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    //Untuk masukkin nama Area
                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                    TotalAVGOutletRow = 0;
                    totalRowDtl = 0;
                    totalAVGRow = 0;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                    if (parameter[13] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    dealer = row["CompanyName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                else if (year == row["Year"].ToString()
          && seq != row["seq"].ToString()
&& seq2 == row["seq2"].ToString()
&& area == (parameter[9] == "1" ? row["Area"].ToString() : "")
&& dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
&& outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
&& modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
&& marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Nine
                    decimal average = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalType / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalType / averageArea;
                    else
                        average = totalType / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / TotalAVGOutletRow;

                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalSubTtl / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageArea;
                    else
                        average = totalSubTtl / totalMonth;

                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageArea;
                    //else
                    //    average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    //Untuk masukkin nama Area
                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                    TotalAVGOutletRow = 0;
                    totalRowDtl = 0;
                    totalAVGRow = 0;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                    if (parameter[13] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    dealer = row["CompanyName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                else if (year == row["Year"].ToString()
     && seq != row["seq"].ToString()
&& seq2 == row["seq2"].ToString()
&& area == (parameter[9] == "1" ? row["Area"].ToString() : "")
&& dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
&& outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
&& modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
&& marketModel == (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Nine
                    decimal average = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalType / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalType / averageArea;
                    else
                        average = totalType / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / TotalAVGOutletRow;

                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalSubTtl / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageArea;
                    else
                        average = totalSubTtl / totalMonth;

                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageArea;
                    //else
                    //    average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    //Untuk masukkin nama Area
                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                    TotalAVGOutletRow = 0;
                    totalRowDtl = 0;
                    totalAVGRow = 0;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                    if (parameter[13] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    dealer = row["CompanyName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                else if (year == row["Year"].ToString()
               && seq == row["seq"].ToString()
&& seq2 == row["seq2"].ToString()
&& area == (parameter[9] == "1" ? row["Area"].ToString() : "")
&& dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
&& outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
&& modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
&& marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Nine Extends
                    decimal average = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalType / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalType / averageArea;
                    else
                        average = totalType / totalMonth;
                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / totalAVGRow;
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalAVG / averageArea;
                    else
                        average = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalSubTtl / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageArea;
                    else
                        average = totalSubTtl / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageArea;
                    //else
                    //    average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;


                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalAVG / averageArea;
                    else
                        average = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    //Untuk masukkin nama Area
                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                    totalRowDtl = 0;
                    totalAVGRow = 0;
                    TotalAVGOutletRow = 0;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                    if (parameter[13] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    dealer = row["CompanyName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                else if (year == row["Year"].ToString()
               && seq == row["seq"].ToString()
&& seq2 == row["seq2"].ToString()
&& area == (parameter[9] == "1" ? row["Area"].ToString() : "")
&& dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
&& outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
&& modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
&& marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Nine Extends
                    decimal average = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalType / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalType / averageArea;
                    else
                        average = totalType / totalMonth;
                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / totalAVGRow;
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalAVG / averageArea;
                    else
                        average = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalSubTtl / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageArea;
                    else
                        average = totalSubTtl / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageArea;
                    //else
                    //    average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;


                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalAVG / averageArea;
                    else
                        average = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    //Untuk masukkin nama Area
                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                    totalRowDtl = 0;
                    totalAVGRow = 0;
                    TotalAVGOutletRow = 0;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                    if (parameter[13] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    dealer = row["CompanyName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                /* Penjelasan case di bawah terjadi pada saat Market model kendaraan berubah:
                 * 1.Biasanya pada opsi Area, dealer, model dan colour = True
                 */
                else if (year == row["Year"].ToString()
&& seq == row["seq"].ToString()
&& seq2 == row["seq2"].ToString()
&& area == (parameter[9] == "1" ? row["Area"].ToString() : "")
&& dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
&& outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
&& modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
&& marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    #region Ten
                    if (parameter[13] == "1" && parameter[11] == "0")
                    {

                        //Untuk masukkin nama Area
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());

                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        totalColour = 0;
                        colorCategory = row["ColourName"].ToString();
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        totalColour = 0;
                        colorCategory = row["ColourName"].ToString();

                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    marketModel = row["MarketModel"].ToString();
                    #endregion
                }

                else if (year == row["Year"].ToString()
               && area != (parameter[9] == "1" ? row["Area"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Eleventh
                    if (parameter[14] != "")
                    {
                        if (parameter[4].ToString() == "ALL" && parameter[6].ToString() == "ALL" && parameter[8].ToString() == "ALL" && area == "_JABODETABEK" && parameter[11] == "0")
                        {
                            if (parameter[5].ToString() == "ALL")
                            {
                                decimal avg = 0;
                                excelReport.SetCellValue("SUB TOTAL " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.BrownTotal);

                                if (parameter[11].ToString() == "1")
                                    avg = totalJabodetabek / averageArea;
                                else
                                    avg = totalJabodetabek / averageMonth;
                                excelReport.SetCellValue(janJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janJabodetabek < Convert.ToInt32(avg) && janJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(febJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febJabodetabek < Convert.ToInt32(avg) && febJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(marJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marJabodetabek < Convert.ToInt32(avg) && marJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(aprJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprJabodetabek < Convert.ToInt32(avg) && aprJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(mayJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayJabodetabek < Convert.ToInt32(avg) && mayJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(junJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junJabodetabek < Convert.ToInt32(avg) && junJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(julJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julJabodetabek < Convert.ToInt32(avg) && julJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(augJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augJabodetabek < Convert.ToInt32(avg) && augJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(sepJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepJabodetabek < Convert.ToInt32(avg) && sepJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(octJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octJabodetabek < Convert.ToInt32(avg) && octJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(novJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novJabodetabek < Convert.ToInt32(avg) && novJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(decJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decJabodetabek < Convert.ToInt32(avg) && decJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(totalJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(avg.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);

                                rowIndex++;
                            }
                        }
                        averageMonth = 0;
                        averageArea = 0;
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                        {
                            excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandard);
                        }

                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    }
                    else if (parameter[12] == "1")
                    {
                        decimal average = 0;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalType / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalType / averageArea;
                        else
                            average = totalType / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else
                            //Untuk masukkin total per Category
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janType / totalAVGRow;
                        febAVG = febType / totalAVGRow;
                        marAVG = marType / totalAVGRow;
                        aprAVG = aprType / totalAVGRow;
                        mayAVG = mayType / totalAVGRow;
                        junAVG = junType / totalAVGRow;
                        julAVG = julType / totalAVGRow;
                        augAVG = augType / totalAVGRow;
                        sepAVG = sepType / totalAVGRow;
                        octAVG = octType / totalAVGRow;
                        novAVG = novType / totalAVGRow;
                        decAVG = decType / totalAVGRow;
                        totalAVG = totalType / totalAVGRow;
                        decimal avg = 0;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        average = totalSubTtl / totalMonth;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalSubTtl / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalSubTtl / averageArea;
                        else
                            average = totalSubTtl / totalMonth;


                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else
                            //Total Per Outlet
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                        excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janSubTtl / TotalAVGOutletRow;
                        febAVG = febSubTtl / TotalAVGOutletRow;
                        marAVG = marSubTtl / TotalAVGOutletRow;
                        aprAVG = aprSubTtl / TotalAVGOutletRow;
                        mayAVG = maySubTtl / TotalAVGOutletRow;
                        junAVG = junSubTtl / TotalAVGOutletRow;
                        julAVG = julSubTtl / TotalAVGOutletRow;
                        augAVG = augSubTtl / TotalAVGOutletRow;
                        sepAVG = sepSubTtl / TotalAVGOutletRow;
                        octAVG = octSubTtl / TotalAVGOutletRow;
                        novAVG = novSubTtl / TotalAVGOutletRow;
                        decAVG = decSubTtl / TotalAVGOutletRow;
                        totalAVG = totalSubTtl / TotalAVGOutletRow;
                        avg = 0;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                        janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                        totalRowDtl = 0;
                        TotalAVGOutletRow = 0;
                        spaceTotal = 0;
                        totalAVGRow = 0;
                        totalRow = 0;

                        if (parameter[11] == "1")
                        {
                            excelReport.RemoveRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString());
                            excelReport.RemoveRestorePoint(RestorePoint.TotalTableRestorePoint.ToString());
                            if (parameter[5].ToString() == "ALL")
                            {
                                if (area != "_JABODETABEK")
                                    excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);
                                else
                                    excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL DEALER " + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);


                                if (parameter[2].ToString() == "ALL" && parameter[4].ToString() == "ALL" && parameter[6].ToString() == "ALL" && area == "_JABODETABEK")
                                {
                                    excelReport.SetCellValue("TOTAL " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.YellowTotal);

                                    if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        average = totalJabodetabek / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        average = totalJabodetabek / averageArea;
                                    else
                                        average = totalJabodetabek / totalMonth;

                                    excelReport.SetCellValue(janJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janJabodetabek < Convert.ToInt32(average) && janJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(febJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febJabodetabek < Convert.ToInt32(average) && febJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(marJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marJabodetabek < Convert.ToInt32(average) && marJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(aprJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprJabodetabek < Convert.ToInt32(average) && aprJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(mayJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayJabodetabek < Convert.ToInt32(average) && mayJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(junJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junJabodetabek < Convert.ToInt32(average) && junJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(julJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julJabodetabek < Convert.ToInt32(average) && julJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(augJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augJabodetabek < Convert.ToInt32(average) && augJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(sepJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepJabodetabek < Convert.ToInt32(average) && sepJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(octJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octJabodetabek < Convert.ToInt32(average) && octJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(novJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novJabodetabek < Convert.ToInt32(average) && novJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(decJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decJabodetabek < Convert.ToInt32(average) && decJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(totalJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);

                                    rowIndex++;

                                    janAVG = janJabodetabek / 2;
                                    febAVG = febJabodetabek / 2;
                                    marAVG = marJabodetabek / 2;
                                    aprAVG = aprJabodetabek / 2;
                                    mayAVG = mayJabodetabek / 2;
                                    junAVG = junJabodetabek / 2;
                                    julAVG = julJabodetabek / 2;
                                    augAVG = augJabodetabek / 2;
                                    sepAVG = sepJabodetabek / 2;
                                    octAVG = octJabodetabek / 2;
                                    novAVG = novJabodetabek / 2;
                                    decAVG = decJabodetabek / 2;
                                    totalAVG = totalJabodetabek / 2;

                                    if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        avg = totalAVG / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        avg = totalAVG / averageArea;
                                    else
                                        avg = totalAVG / totalMonth;

                                    excelReport.SetCellValue("AVG " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    rowIndex++;
                                }
                            }
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                        }
                        else
                        {
                            if (parameter[5].ToString() == "ALL")
                            {
                                if (area != "_JABODETABEK")
                                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);
                                else
                                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), "TOTAL DEALER " + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                                if (parameter[2].ToString() == "ALL" && parameter[4].ToString() == "ALL" && parameter[6].ToString() == "ALL" && area == "_JABODETABEK")
                                {
                                    excelReport.SetCellValue("SUB TOTAL " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.YellowTotal);

                                    if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        average = totalJabodetabek / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        average = totalJabodetabek / averageArea;
                                    else
                                        average = totalJabodetabek / totalMonth;

                                    excelReport.SetCellValue(janJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janJabodetabek < Convert.ToInt32(average) && janJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(febJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febJabodetabek < Convert.ToInt32(average) && febJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(marJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marJabodetabek < Convert.ToInt32(average) && marJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(aprJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprJabodetabek < Convert.ToInt32(average) && aprJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(mayJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayJabodetabek < Convert.ToInt32(average) && mayJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(junJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junJabodetabek < Convert.ToInt32(average) && junJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(julJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julJabodetabek < Convert.ToInt32(average) && julJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(augJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augJabodetabek < Convert.ToInt32(average) && augJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(sepJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepJabodetabek < Convert.ToInt32(average) && sepJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(octJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octJabodetabek < Convert.ToInt32(average) && octJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(novJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novJabodetabek < Convert.ToInt32(average) && novJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(decJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decJabodetabek < Convert.ToInt32(average) && decJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(totalJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);

                                    rowIndex++;

                                    janAVG = janJabodetabek / 2;
                                    febAVG = febJabodetabek / 2;
                                    marAVG = marJabodetabek / 2;
                                    aprAVG = aprJabodetabek / 2;
                                    mayAVG = mayJabodetabek / 2;
                                    junAVG = junJabodetabek / 2;
                                    julAVG = julJabodetabek / 2;
                                    augAVG = augJabodetabek / 2;
                                    sepAVG = sepJabodetabek / 2;
                                    octAVG = octJabodetabek / 2;
                                    novAVG = novJabodetabek / 2;
                                    decAVG = decJabodetabek / 2;
                                    totalAVG = totalJabodetabek / 2;

                                    if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        avg = totalAVG / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        avg = totalAVG / averageArea;
                                    else
                                        avg = totalAVG / totalMonth;

                                    excelReport.SetCellValue("AVG " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    rowIndex++;
                                }
                            }
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                        }

                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                            colorCategory = row["ColourName"].ToString();
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                            colorCategory = row["ColourName"].ToString();
                        }
                        else
                        {
                            excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        }
                        averageArea = 0;
                        averageMonth = 0;

                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    }
                    else
                    {
                        averageMonth = 0;
                        averageArea = 0;
                        if (parameter[11] == "1")
                            excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);

                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                        totalOutlet++;
                        TotalAVGOutletRow++;
                        TotalAVGAreaRow++;
                        TotalAVGAreaRowJBDTK++;
                        TotalAVGDealerRow++;
                        totalAVGGTRow++;
                    }

                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    seq2 = row["seq2"].ToString();
                    area = row["Area"].ToString();
                    dealer = (parameter[10] == "1" ? row["CompanyName"].ToString() : "");
                    outlet = (parameter[11] == "1" ? row["BranchName"].ToString() : "");
                    modelCategory = (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "");
                    marketModel = (parameter[12] == "1" ? row["MarketModel"].ToString() : "");
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                /* Penjelasan case di bawah terjadi pada saat nama dealer berubah :
                 * 1.Biasanya pada opsi Area dan dealer True*/
                else if (year == row["Year"].ToString()
               && seq == row["seq"].ToString()
          && seq2 == row["seq2"].ToString()
          && area == (parameter[9] == "1" ? row["Area"].ToString() : ""))
                {
                    #region Twelve
                    if (parameter[14] != "" && parameter[10] == "1" && parameter[11] == "0")
                    {
                        excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);

                    }
                    else if (parameter[14] != "" && parameter[10] == "1" && parameter[11] == "1")
                    {
                        excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandard);
                        outlet = row["BranchName"].ToString();
                    }
                    //Colour
                    else if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        if (outlet != row["BranchName"].ToString())
                        {
                            #region Six
                            decimal averageTotalType = 0;
                            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                averageTotalType = totalType / averageMonth;
                            else if (parameter[12].ToString() == "1")
                                averageTotalType = totalType / averageArea;
                            else
                                averageTotalType = totalType / totalMonth;

                            if (parameter[13] == "1" && parameter[11] == "0")
                            {
                                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                                totalColour = 0;
                            }
                            else if (parameter[13] == "1" && parameter[11] == "1")
                            {
                                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                                totalColour = 0;
                            }
                            else
                                //Untuk masukkin total per Category
                                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

                            CreateBlueTypeDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                            rowIndex++;
                            spaceTotal++;
                            spaceTotalDealer++;
                            totalRow++;

                            janAVG = janType / totalAVGRow;
                            febAVG = febType / totalAVGRow;
                            marAVG = marType / totalAVGRow;
                            aprAVG = aprType / totalAVGRow;
                            mayAVG = mayType / totalAVGRow;
                            junAVG = junType / totalAVGRow;
                            julAVG = julType / totalAVGRow;
                            augAVG = augType / totalAVGRow;
                            sepAVG = sepType / totalAVGRow;
                            octAVG = octType / totalAVGRow;
                            novAVG = novType / totalAVGRow;
                            decAVG = decType / totalAVGRow;
                            totalAVG = totalType / totalAVGRow;
                            decimal avg = 0;
                            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                avg = totalAVG / averageMonth;
                            else if (parameter[12].ToString() == "1")
                                avg = totalAVG / averageArea;
                            else
                                avg = totalAVG / totalMonth;

                            if (parameter[13] == "1" && parameter[11] == "0")
                                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                            else if (parameter[13] == "1" && parameter[11] == "1")
                                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                            else
                                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            rowIndex++;
                            spaceTotal++;
                            spaceTotalDealer++;
                            totalRow++;

                            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                averageTotalType = totalSubTtl / averageMonth;
                            else if (parameter[12].ToString() == "1")
                                averageTotalType = totalSubTtl / averageArea;
                            else
                                averageTotalType = totalSubTtl / totalMonth;

                            //Total Per Outlet
                            if (parameter[13] == "1" && parameter[11] == "0")
                                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                            else if (parameter[13] == "1" && parameter[11] == "1")
                                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                            else
                                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                            excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(averageTotalType) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                            excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(averageTotalType) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                            excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(averageTotalType) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                            excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(averageTotalType) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                            excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(averageTotalType) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                            excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(averageTotalType) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                            excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(averageTotalType) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                            excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(averageTotalType) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                            excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(averageTotalType) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                            excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(averageTotalType) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                            excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(averageTotalType) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                            excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(averageTotalType) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                            excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                            excelReport.SetCellValue(averageTotalType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                            rowIndex++;
                            spaceTotal++;
                            spaceTotalDealer++;
                            totalRow++;

                            janAVG = janSubTtl / TotalAVGOutletRow;
                            febAVG = febSubTtl / TotalAVGOutletRow;
                            marAVG = marSubTtl / TotalAVGOutletRow;
                            aprAVG = aprSubTtl / TotalAVGOutletRow;
                            mayAVG = maySubTtl / TotalAVGOutletRow;
                            junAVG = junSubTtl / TotalAVGOutletRow;
                            julAVG = julSubTtl / TotalAVGOutletRow;
                            augAVG = augSubTtl / TotalAVGOutletRow;
                            sepAVG = sepSubTtl / TotalAVGOutletRow;
                            octAVG = octSubTtl / TotalAVGOutletRow;
                            novAVG = novSubTtl / TotalAVGOutletRow;
                            decAVG = decSubTtl / TotalAVGOutletRow;
                            totalAVG = totalSubTtl / TotalAVGOutletRow;
                            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                avg = totalAVG / averageMonth;
                            else if (parameter[12].ToString() == "1")
                                avg = totalAVG / averageArea;
                            else
                                avg = totalAVG / totalMonth;

                            //Total Per Outlet
                            if (parameter[13] == "1" && parameter[11] == "0")
                                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                            else if (parameter[13] == "1" && parameter[11] == "1")
                                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                            else
                                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            rowIndex++;
                            spaceTotal++;
                            spaceTotalDealer++;
                            totalRow++;

                            //Untuk masukkin nama Outlet
                            excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedStandardWrap);

                            janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                            janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                            outlet = row["BranchName"].ToString();
                            marketModel = row["MarketModel"].ToString();
                            modelCategory = row["ModelCatagory"].ToString();
                            if (parameter[12].ToString() == "1") averageMonth = 0;
                            totalAVGRow = 0;
                            TotalAVGOutletRow = 0;
                            totalRowDtl = 0;
                            spaceTotal = 0;

                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                            if (parameter[13] == "1")
                            {
                                excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                                if (parameter[11] == "0")
                                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                                else
                                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                                colorCategory = row["ColourName"].ToString();
                            }
                            else
                                excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                            #endregion
                        }
                        else
                        {
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                            colorCategory = row["ColourName"].ToString();
                        }
                    }
                    //Model
                    else if (parameter[12] == "1")
                    {
                        if (modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
                                && marketModel != row["MarketModel"].ToString())
                        {
                            excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            marketModel = row["MarketModel"].ToString();
                        }
                        else if (parameter[11] == "1")
                        {
                            if (outlet != row["BranchName"].ToString())
                            {
                                if (modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
                                    && marketModel == row["MarketModel"].ToString())
                                {
                                    #region Six
                                    decimal averageTotalType = 0;
                                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        averageTotalType = totalType / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        averageTotalType = totalType / averageArea;
                                    else
                                        averageTotalType = totalType / totalMonth;

                                    if (parameter[13] == "1" && parameter[11] == "0")
                                    {
                                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                                        totalColour = 0;
                                    }
                                    else if (parameter[13] == "1" && parameter[11] == "1")
                                    {
                                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                                        totalColour = 0;
                                    }
                                    else
                                        //Untuk masukkin total per Category
                                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

                                    CreateBlueTypeDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                                    rowIndex++;
                                    spaceTotal++;
                                    spaceTotalDealer++;
                                    totalRow++;

                                    janAVG = janType / totalAVGRow;
                                    febAVG = febType / totalAVGRow;
                                    marAVG = marType / totalAVGRow;
                                    aprAVG = aprType / totalAVGRow;
                                    mayAVG = mayType / totalAVGRow;
                                    junAVG = junType / totalAVGRow;
                                    julAVG = julType / totalAVGRow;
                                    augAVG = augType / totalAVGRow;
                                    sepAVG = sepType / totalAVGRow;
                                    octAVG = octType / totalAVGRow;
                                    novAVG = novType / totalAVGRow;
                                    decAVG = decType / totalAVGRow;
                                    totalAVG = totalType / totalAVGRow;
                                    decimal avg = 0;
                                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        avg = totalAVG / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        avg = totalAVG / averageArea;
                                    else
                                        avg = totalAVG / totalMonth;

                                    if (parameter[13] == "1" && parameter[11] == "0")
                                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                    else if (parameter[13] == "1" && parameter[11] == "1")
                                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                    else
                                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    rowIndex++;
                                    spaceTotal++;
                                    spaceTotalDealer++;
                                    totalRow++;

                                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        averageTotalType = totalSubTtl / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        averageTotalType = totalSubTtl / averageArea;
                                    else
                                        averageTotalType = totalSubTtl / totalMonth;

                                    //Total Per Outlet
                                    if (parameter[13] == "1" && parameter[11] == "0")
                                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                                    else if (parameter[13] == "1" && parameter[11] == "1")
                                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                                    else
                                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(averageTotalType) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(averageTotalType) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(averageTotalType) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(averageTotalType) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(averageTotalType) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(averageTotalType) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(averageTotalType) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(averageTotalType) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(averageTotalType) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(averageTotalType) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(averageTotalType) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(averageTotalType) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(averageTotalType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                                    rowIndex++;
                                    spaceTotal++;
                                    spaceTotalDealer++;
                                    totalRow++;

                                    janAVG = janSubTtl / TotalAVGOutletRow;
                                    febAVG = febSubTtl / TotalAVGOutletRow;
                                    marAVG = marSubTtl / TotalAVGOutletRow;
                                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                                    mayAVG = maySubTtl / TotalAVGOutletRow;
                                    junAVG = junSubTtl / TotalAVGOutletRow;
                                    julAVG = julSubTtl / TotalAVGOutletRow;
                                    augAVG = augSubTtl / TotalAVGOutletRow;
                                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                                    octAVG = octSubTtl / TotalAVGOutletRow;
                                    novAVG = novSubTtl / TotalAVGOutletRow;
                                    decAVG = decSubTtl / TotalAVGOutletRow;
                                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        avg = totalAVG / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        avg = totalAVG / averageArea;
                                    else
                                        avg = totalAVG / totalMonth;

                                    //Total Per Outlet
                                    if (parameter[13] == "1" && parameter[11] == "0")
                                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                    else if (parameter[13] == "1" && parameter[11] == "1")
                                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                    else
                                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    rowIndex++;
                                    spaceTotal++;
                                    spaceTotalDealer++;
                                    totalRow++;

                                    //Untuk masukkin nama Outlet
                                    excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedStandardWrap);

                                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                                    outlet = row["BranchName"].ToString();
                                    marketModel = row["MarketModel"].ToString();
                                    modelCategory = row["ModelCatagory"].ToString();
                                    if (parameter[12].ToString() == "1") averageMonth = 0;
                                    totalAVGRow = 0;
                                    TotalAVGOutletRow = 0;
                                    totalRowDtl = 0;
                                    spaceTotal = 0;

                                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                                    if (parameter[13] == "1")
                                    {
                                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                                        if (parameter[11] == "0")
                                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                                        else
                                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                                        colorCategory = row["ColourName"].ToString();
                                    }
                                    else
                                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                                    #endregion
                                }
                            }
                        }
                    }
                    //Outlet
                    else if (parameter[11] == "1")
                    {
                        if (outlet != row["BranchName"].ToString())
                        {
                            excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandard);
                            outlet = row["BranchName"].ToString();
                            totalOutlet++;
                            TotalAVGOutletRow++;
                        }
                    }
                    //Dealer
                    else if (parameter[10] == "1")
                    {
                        if (dealer != row["CompanyName"].ToString())
                        {
                            excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);
                            TotalAVGOutletRow++;
                            TotalAVGAreaRow++;
                            TotalAVGAreaRowJBDTK++;
                            TotalAVGDealerRow++;
                            totalAVGGTRow++;
                        }
                    }

                    decimal average = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = Convert.ToDecimal(row["Total"].ToString()) / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = Convert.ToDecimal(row["Total"].ToString()) / averageArea;
                    else
                        average = Convert.ToDecimal(row["Total"].ToString()) / totalMonth;

                    excelReport.SetCellValue(Convert.ToDecimal(row["Jan"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Jan"].ToString())) < Convert.ToInt32(average) && Convert.ToDecimal(row["Jan"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Feb"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Feb"].ToString())) < Convert.ToInt32(average) && Convert.ToDecimal(row["Feb"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Mar"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Mar"].ToString())) < Convert.ToInt32(average) && Convert.ToDecimal(row["Mar"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Apr"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Apr"].ToString())) < Convert.ToInt32(average) && Convert.ToDecimal(row["Apr"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["May"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["May"].ToString())) < Convert.ToInt32(average) && Convert.ToDecimal(row["May"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Jun"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Jun"].ToString())) < Convert.ToInt32(average) && Convert.ToDecimal(row["Jun"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Jul"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Jul"].ToString())) < Convert.ToInt32(average) && Convert.ToDecimal(row["Jul"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Aug"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Aug"].ToString())) < Convert.ToInt32(average) && Convert.ToDecimal(row["Aug"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Sep"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Sep"].ToString())) < Convert.ToInt32(average) && Convert.ToDecimal(row["Sep"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Oct"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Oct"].ToString())) < Convert.ToInt32(average) && Convert.ToDecimal(row["Oct"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Nov"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Nov"].ToString())) < Convert.ToInt32(average) && Convert.ToDecimal(row["Nov"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Dec"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Dec"].ToString())) < Convert.ToInt32(average) && Convert.ToDecimal(row["Dec"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Total"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(average).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);

                    //Dealer
                    if (parameter[10] == "1")
                    {
                        if (dealer != row["CompanyName"].ToString())
                        {
                            dealer = row["CompanyName"].ToString();
                            totalRowDtl = 0;

                            if (row["Seq"].ToString() != "1")
                                totalDealerGT++;
                            //To Add Blank line before it start new Area...(^0^)V
                            //rowIndex++;
                        }
                    }
                    #endregion

                }
                else if (year != row["Year"].ToString())
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Thirteen
                    if (parameter[14] != "")
                    {
                        if (parameter[11] == "0")
                        {
                            if (parameter[5] == "ALL")
                            {
                                decimal average = totalGT / averageMonthGT;
                                excelReport.SetCellValue("TOTAL DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.GreenTotal);
                                excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                                rowIndex++;

                                janAVG = janGT / totalDealerGT;
                                febAVG = febGT / totalDealerGT;
                                marAVG = marGT / totalDealerGT;
                                aprAVG = aprGT / totalDealerGT;
                                mayAVG = mayGT / totalDealerGT;
                                junAVG = junGT / totalDealerGT;
                                julAVG = julGT / totalDealerGT;
                                augAVG = augGT / totalDealerGT;
                                sepAVG = sepGT / totalDealerGT;
                                octAVG = octGT / totalDealerGT;
                                novAVG = novGT / totalDealerGT;
                                decAVG = decGT / totalDealerGT;//TotalAVGDealerRow
                                totalAVG = totalGT / totalDealerGT;
                                decimal avg = totalAVG / averageMonthGT;

                                excelReport.SetCellValue("AVG DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            }
                            averageMonth = 0;
                            averageMonthGT = 0;
                            totalRowDtl = 0;
                            TotalAVGOutletRow = 0;
                            spaceTotal = 0;
                            totalAVGRow = 0;
                            totalRow = 0;
                            rowIndex = 0;
                            averageArea = 0;
                            averageDealer = 0;
                            currentYear = Convert.ToInt32(row["Year"].ToString());
                            janGT = febGT = marGT = aprGT = mayGT = junGT = julGT = augGT = sepGT = octGT = novGT = decGT = totalGT = 0;
                            janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                            janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;


                            excelReport.ChangeSheet(row["Year"].ToString());
                            CreateHeader(excelReport, rowIndex, totalDetailWidth, title, currentYear.ToString());

                            seq = row["Seq"].ToString();
                            seq2 = row["Seq2"].ToString();
                            area = parameter[9].ToString() == "1" ? row["Area"].ToString() : "";
                            dealer = parameter[10].ToString() == "1" ? row["CompanyName"].ToString() : "";
                            outlet = parameter[11].ToString() == "1" ? row["BranchName"].ToString() : "";
                            modelCategory = dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "";
                            marketModel = parameter[12].ToString() == "1" ? row["MarketModel"].ToString() : "";
                            colorCategory = parameter[13].ToString() == "1" ? row["ColourName"].ToString() : "";
                            year = row["Year"].ToString();

                            totalMonth = (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                                && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 :
                                (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) == currentYear
                                && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) :
                                (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                                && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) == currentYear) ? Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) :
                                Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) + 1;

                            averageMonth = 0;

                            excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);
                        }
                        else
                        {
                            if (parameter[5].ToString() == "ALL")
                            {
                                decimal average = totalGT / averageMonthGT;
                                excelReport.SetCellValue("TOTAL DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.GreenTotal);
                                excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                                rowIndex++;

                                janAVG = janGT / totalDealerGT;
                                febAVG = febGT / totalDealerGT;
                                marAVG = marGT / totalDealerGT;
                                aprAVG = aprGT / totalDealerGT;
                                mayAVG = mayGT / totalDealerGT;
                                junAVG = junGT / totalDealerGT;
                                julAVG = julGT / totalDealerGT;
                                augAVG = augGT / totalDealerGT;
                                sepAVG = sepGT / totalDealerGT;
                                octAVG = octGT / totalDealerGT;
                                novAVG = novGT / totalDealerGT;
                                decAVG = decGT / totalDealerGT;//TotalAVGDealerRow
                                totalAVG = totalGT / totalDealerGT;
                                decimal avg = totalAVG / averageMonthGT;

                                excelReport.SetCellValue("AVG DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);

                                excelReport.RemoveRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.OutletRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.JanRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.FebRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.MarRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.AprRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.MayRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.JunRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.JulRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.AugRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.SepRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.OctRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.NovRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.DecRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.TotalRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.AverageRestorePoint.ToString());
                            }
                            averageMonth = 0;
                            averageMonthGT = 0;
                            totalRowDtl = 0;
                            TotalAVGOutletRow = 0;
                            spaceTotal = 0;
                            totalAVGRow = 0;
                            totalRow = 0;
                            rowIndex = 0;
                            averageArea = 0;
                            averageDealer = 0;
                            currentYear = Convert.ToInt32(row["Year"].ToString());
                            janGT = febGT = marGT = aprGT = mayGT = junGT = julGT = augGT = sepGT = octGT = novGT = decGT = totalGT = 0;
                            janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                            janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;

                            excelReport.ChangeSheet(row["Year"].ToString());
                            CreateHeader(excelReport, rowIndex, totalDetailWidth, title, currentYear.ToString());

                            seq = row["Seq"].ToString();
                            seq2 = row["Seq2"].ToString();
                            area = parameter[9].ToString() == "1" ? row["Area"].ToString() : "";
                            dealer = parameter[10].ToString() == "1" ? row["CompanyName"].ToString() : "";
                            outlet = parameter[11].ToString() == "1" ? row["BranchName"].ToString() : "";
                            modelCategory = dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "";
                            marketModel = parameter[12].ToString() == "1" ? row["MarketModel"].ToString() : "";
                            colorCategory = parameter[13].ToString() == "1" ? row["ColourName"].ToString() : "";
                            year = row["Year"].ToString();

                            totalMonth = (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                                && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 :
                                (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) == currentYear
                                && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) :
                                (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                                && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) == currentYear) ? Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) :
                                Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) + 1;

                            averageMonth = 0;

                            excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandardWrap);
                        }

                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    }
                    else if (parameter[12] == "1")
                    {
                        decimal average = 0;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalType / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalType / averageArea;
                        else
                            average = totalType / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else
                            //Untuk masukkin total per Category
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janType / totalAVGRow;
                        febAVG = febType / totalAVGRow;
                        marAVG = marType / totalAVGRow;
                        aprAVG = aprType / totalAVGRow;
                        mayAVG = mayType / totalAVGRow;
                        junAVG = junType / totalAVGRow;
                        julAVG = julType / totalAVGRow;
                        augAVG = augType / totalAVGRow;
                        sepAVG = sepType / totalAVGRow;
                        octAVG = octType / totalAVGRow;
                        novAVG = novType / totalAVGRow;
                        decAVG = decType / totalAVGRow;
                        totalAVG = totalType / TotalAVGOutletRow;
                        decimal avg = 0;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalSubTtl / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalSubTtl / averageArea;
                        else
                            average = totalSubTtl / totalMonth;

                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else
                            //Total Per Outlet
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                        excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janSubTtl / TotalAVGOutletRow;
                        febAVG = febSubTtl / TotalAVGOutletRow;
                        marAVG = marSubTtl / TotalAVGOutletRow;
                        aprAVG = aprSubTtl / TotalAVGOutletRow;
                        mayAVG = maySubTtl / TotalAVGOutletRow;
                        junAVG = junSubTtl / TotalAVGOutletRow;
                        julAVG = julSubTtl / TotalAVGOutletRow;
                        augAVG = augSubTtl / TotalAVGOutletRow;
                        sepAVG = sepSubTtl / TotalAVGOutletRow;
                        octAVG = octSubTtl / TotalAVGOutletRow;
                        novAVG = novSubTtl / TotalAVGOutletRow;
                        decAVG = decSubTtl / TotalAVGOutletRow;
                        totalAVG = totalSubTtl / TotalAVGOutletRow;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        if (parameter[5].ToString() == "ALL")
                        {
                            if (parameter[11] == "1")
                            {
                                excelReport.RemoveRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.TotalTableRestorePoint.ToString());
                                excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);
                            }
                            else
                                excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                            average = totalGT / averageMonthGT;
                            excelReport.SetCellValue("TOTAL DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.GreenTotal);
                            excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                            rowIndex++;

                            janAVG = janGT / totalDealerGT;
                            febAVG = febGT / totalDealerGT;
                            marAVG = marGT / totalDealerGT;
                            aprAVG = aprGT / totalDealerGT;
                            mayAVG = mayGT / totalDealerGT;
                            junAVG = junGT / totalDealerGT;
                            julAVG = julGT / totalDealerGT;
                            augAVG = augGT / totalDealerGT;
                            sepAVG = sepGT / totalDealerGT;
                            octAVG = octGT / totalDealerGT;
                            novAVG = novGT / totalDealerGT;
                            decAVG = decGT / totalDealerGT;
                            totalAVG = totalGT / totalDealerGT;
                            avg = totalAVG / averageMonthGT;

                            excelReport.SetCellValue("AVG DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            rowIndex++;
                        }
                        janGT = febGT = marGT = aprGT = mayGT = junGT = julGT = augGT = sepGT = octGT = novGT = decGT = totalGT = 0;
                        janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                        janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                        totalRowDtl = 0;
                        TotalAVGOutletRow = 0;
                        spaceTotal = 0;
                        totalAVGRow = 0;
                        totalRow = 0;
                        rowIndex = 0;
                        averageMonth = 0;
                        averageMonthGT = 0;
                        averageArea = 0;
                        averageDealer = 0;

                        excelReport.ChangeSheet(row["Year"].ToString());
                        currentYear = Convert.ToInt32(row["Year"].ToString());

                        CreateHeader(excelReport, rowIndex, totalDetailWidth, title, currentYear.ToString());

                        seq = row["Seq"].ToString();
                        seq2 = row["Seq2"].ToString();
                        area = parameter[9].ToString() == "1" ? row["Area"].ToString() : "";
                        dealer = parameter[10].ToString() == "1" ? row["CompanyName"].ToString() : "";
                        outlet = parameter[11].ToString() == "1" ? row["BranchName"].ToString() : "";
                        modelCategory = dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "";
                        marketModel = parameter[12].ToString() == "1" ? row["MarketModel"].ToString() : "";
                        colorCategory = parameter[13].ToString() == "1" ? row["ColourName"].ToString() : "";
                        year = row["Year"].ToString();

                        totalMonth = (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                            && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 :
                            (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) == currentYear
                            && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) :
                            (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                            && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) == currentYear) ? Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) :
                            Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) + 1;

                        averageMonth = 0;

                        if (parameter[11] == "1")
                        {
                            excelReport.RemoveRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString());
                            excelReport.RemoveRestorePoint(RestorePoint.TotalTableRestorePoint.ToString());

                            if (parameter[5].ToString() == "ALL")
                                excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalTableRestorePoint.ToString());
                            rowIndex++;
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                        }
                        else if (parameter[11].ToString() != "1" && parameter[12] != "1")
                        {
                            if (parameter[5].ToString() == "ALL")
                                excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                        }

                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                            colorCategory = row["ColourName"].ToString();
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                            colorCategory = row["ColourName"].ToString();
                        }
                        else
                            excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    }
                    else
                    {
                        excelReport.RemoveRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.OutletRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.JanRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.FebRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.MarRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.AprRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.MayRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.JunRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.JulRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.AugRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.SepRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.OctRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.NovRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.DecRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.TotalRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.AverageRestorePoint.ToString());

                        if (parameter[5].ToString() == "ALL")
                        {
                            decimal average = totalGT / averageMonthGT;
                            excelReport.SetCellValue("TOTAL DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.GreenTotal);
                            excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                            rowIndex++;

                            janAVG = janGT / totalDealerGT;
                            febAVG = febGT / totalDealerGT;
                            marAVG = marGT / totalDealerGT;
                            aprAVG = aprGT / totalDealerGT;
                            mayAVG = mayGT / totalDealerGT;
                            junAVG = junGT / totalDealerGT;
                            julAVG = julGT / totalDealerGT;
                            augAVG = augGT / totalDealerGT;
                            sepAVG = sepGT / totalDealerGT;
                            octAVG = octGT / totalDealerGT;
                            novAVG = novGT / totalDealerGT;
                            decAVG = decGT / totalDealerGT;
                            totalAVG = totalGT / totalDealerGT;
                            decimal avg = totalAVG / averageMonthGT;

                            excelReport.SetCellValue("AVG DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            rowIndex++;
                        }
                        janGT = febGT = marGT = aprGT = mayGT = junGT = julGT = augGT = sepGT = octGT = novGT = decGT = totalGT = 0;
                        janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                        janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                        totalRowDtl = 0;
                        TotalAVGOutletRow = 0;
                        spaceTotal = 0;
                        totalAVGRow = 0;
                        totalRow = 0;
                        rowIndex = 0;
                        averageMonth = 0;


                        excelReport.ChangeSheet(row["Year"].ToString());
                        currentYear = Convert.ToInt32(row["Year"].ToString());
                        CreateHeader(excelReport, rowIndex, totalDetailWidth, title, currentYear.ToString());

                        seq = row["Seq"].ToString();
                        seq2 = row["Seq2"].ToString();
                        area = parameter[9].ToString() == "1" ? row["Area"].ToString() : "";
                        dealer = parameter[10].ToString() == "1" ? row["CompanyName"].ToString() : "";
                        outlet = parameter[11].ToString() == "1" ? row["BranchName"].ToString() : "";
                        modelCategory = dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "";
                        marketModel = parameter[12].ToString() == "1" ? row["MarketModel"].ToString() : "";
                        colorCategory = parameter[13].ToString() == "1" ? row["ColourName"].ToString() : "";
                        year = row["Year"].ToString();
                        averageMonthGT = 0;
                        averageMonth = 0;
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                        {
                            excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandard);
                        }

                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    }

                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    seq2 = row["seq2"].ToString();
                    area = row["Area"].ToString();
                    dealer = (parameter[10] == "1" ? row["CompanyName"].ToString() : "");
                    outlet = (parameter[11] == "1" ? row["BranchName"].ToString() : "");
                    modelCategory = (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "");
                    marketModel = (parameter[12] == "1" ? row["MarketModel"].ToString() : "");
                    year = row["Year"].ToString();
                    #endregion
                    marketModelCount = 1;
                }
                else
                {
                    if (seq != row["Seq"].ToString())
                    {
                        if (row["Seq"].ToString() == "2")
                        {
                            if (dealer == outlet)
                            {
                                if (parameter[12] == "1")
                                {
                                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                                    #region Seven
                                    decimal average = 0;
                                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        average = totalType / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        average = totalType / averageArea;
                                    else
                                        average = totalType / totalMonth;

                                    if (parameter[13] == "1" && parameter[11] == "0")
                                    {
                                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                                        totalColour = 0;
                                    }
                                    else if (parameter[13] == "1" && parameter[11] == "1")
                                    {
                                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                                        totalColour = 0;
                                    }
                                    else
                                        //Untuk masukkin total per Category
                                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

                                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                                    rowIndex++;
                                    spaceTotal++;
                                    spaceTotalDealer++;
                                    totalRow++;

                                    janAVG = janType / totalAVGRow;
                                    febAVG = febType / totalAVGRow;
                                    marAVG = marType / totalAVGRow;
                                    aprAVG = aprType / totalAVGRow;
                                    mayAVG = mayType / totalAVGRow;
                                    junAVG = junType / totalAVGRow;
                                    julAVG = julType / totalAVGRow;
                                    augAVG = augType / totalAVGRow;
                                    sepAVG = sepType / totalAVGRow;
                                    octAVG = octType / totalAVGRow;
                                    novAVG = novType / totalAVGRow;
                                    decAVG = decType / totalAVGRow;
                                    totalAVG = totalType / totalAVGRow;
                                    decimal avg = 0;
                                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        avg = totalAVG / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        avg = totalAVG / averageArea;
                                    else
                                        avg = totalAVG / totalMonth;

                                    if (parameter[13] == "1" && parameter[11] == "0")
                                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                    else if (parameter[13] == "1" && parameter[11] == "1")
                                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                    else
                                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    rowIndex++;
                                    spaceTotal++;
                                    spaceTotalDealer++;
                                    totalRow++;

                                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        average = totalSubTtl / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        average = totalSubTtl / averageArea;
                                    else
                                        average = totalSubTtl / totalMonth;

                                    //Total Per Outlet
                                    if (parameter[13] == "1" && parameter[11] == "0")
                                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                                    else if (parameter[13] == "1" && parameter[11] == "1")
                                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                                    else
                                        //Total Per Outlet
                                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                                    rowIndex++;
                                    spaceTotal++;
                                    spaceTotalDealer++;
                                    totalRow++;

                                    janAVG = janSubTtl / TotalAVGOutletRow;
                                    febAVG = febSubTtl / TotalAVGOutletRow;
                                    marAVG = marSubTtl / TotalAVGOutletRow;
                                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                                    mayAVG = maySubTtl / TotalAVGOutletRow;
                                    junAVG = junSubTtl / TotalAVGOutletRow;
                                    julAVG = julSubTtl / TotalAVGOutletRow;
                                    augAVG = augSubTtl / TotalAVGOutletRow;
                                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                                    octAVG = octSubTtl / TotalAVGOutletRow;
                                    novAVG = novSubTtl / TotalAVGOutletRow;
                                    decAVG = decSubTtl / TotalAVGOutletRow;
                                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        avg = totalAVG / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        avg = totalAVG / averageArea;
                                    else
                                        avg = totalAVG / totalMonth;

                                    //Total Per Outlet
                                    if (parameter[13] == "1" && parameter[11] == "0")
                                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                    else if (parameter[13] == "1" && parameter[11] == "1")
                                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                    else
                                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    rowIndex++;
                                    spaceTotal++;
                                    spaceTotalDealer++;
                                    totalRow++;

                                    //Untuk masukkin nama Outlet
                                    excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedTop);
                                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, Convert.ToInt32(row["rowType"].ToString()) + marketModelCount + totalRow, dealerWidth, ExcelCellStyle.LeftBorderedStandardWrap);


                                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;

                                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalRestorePoint.ToString());
                                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());

                                    if (parameter[13] == "1")
                                    {
                                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                                        if (parameter[11] == "0")
                                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                                        else
                                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                                        colorCategory = row["ColourName"].ToString();
                                    }
                                    else
                                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                                    seq = row["seq"].ToString();
                                    outlet = row["BranchName"].ToString();
                                    marketModel = row["MarketModel"].ToString();
                                    modelCategory = row["ModelCatagory"].ToString();
                                    marketModelCount = 1;
                                    #endregion
                                }
                                else if (parameter[12] == "0")
                                {
                                    decimal average = Convert.ToDecimal(row["Total"].ToString()) / averageDealer;
                                    decimal jan = Convert.ToDecimal(row["Jan"].ToString());
                                    decimal feb = Convert.ToDecimal(row["Feb"].ToString());
                                    decimal mar = Convert.ToDecimal(row["Mar"].ToString());
                                    decimal apr = Convert.ToDecimal(row["Apr"].ToString());
                                    decimal may = Convert.ToDecimal(row["May"].ToString());
                                    decimal jun = Convert.ToDecimal(row["Jun"].ToString());
                                    decimal jul = Convert.ToDecimal(row["Jul"].ToString());
                                    decimal aug = Convert.ToDecimal(row["Aug"].ToString());
                                    decimal sep = Convert.ToDecimal(row["Sep"].ToString());
                                    decimal oct = Convert.ToDecimal(row["Oct"].ToString());
                                    decimal nov = Convert.ToDecimal(row["Nov"].ToString());
                                    decimal dec = Convert.ToDecimal(row["Dec"].ToString());

                                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, (parameter[14] != "" ? totalRowDtl : totalOutlet + 1), dealerWidth, ExcelCellStyle.LeftBorderedTop);
                                    excelReport.SetCellValue("Total Per Outlet", 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedBold);
                                    excelReport.SetCellValue(jan.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (jan < average && jan != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                    excelReport.SetCellValue(feb.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (feb < average && feb != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                    excelReport.SetCellValue(mar.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (mar < average && mar != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                    excelReport.SetCellValue(apr.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (apr < average && apr != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                    excelReport.SetCellValue(may.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (may < average && may != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                    excelReport.SetCellValue(jun.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (jun < average && jun != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                    excelReport.SetCellValue(jul.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (jul < average && jul != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                    excelReport.SetCellValue(aug.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (aug < average && aug != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                    excelReport.SetCellValue(sep.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sep < average && sep != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                    excelReport.SetCellValue(oct.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (oct < average && oct != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                    excelReport.SetCellValue(nov.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (nov < average && nov != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                    excelReport.SetCellValue(dec.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (dec < average && dec != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                    excelReport.SetCellValue(Convert.ToDecimal(row["Total"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.RightBorderedBoldNumber, true);
                                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.RightBorderedBoldNumber, true);

                                    seq = row["seq"].ToString();
                                    outlet = row["BranchName"].ToString();
                                    totalOutlet = totalRowDtl = parameter[14].ToString() != "" ? 0 : 1;
                                    averageDealer = 0;
                                }
                            }
                        }
                    }
                }
                #region Sum Total

                janType += Convert.ToDecimal(row["Jan"].ToString());
                febType += Convert.ToDecimal(row["Feb"].ToString());
                marType += Convert.ToDecimal(row["Mar"].ToString());
                aprType += Convert.ToDecimal(row["Apr"].ToString());
                mayType += Convert.ToDecimal(row["May"].ToString());
                junType += Convert.ToDecimal(row["Jun"].ToString());
                julType += Convert.ToDecimal(row["Jul"].ToString());
                augType += Convert.ToDecimal(row["Aug"].ToString());
                sepType += Convert.ToDecimal(row["Sep"].ToString());
                octType += Convert.ToDecimal(row["Oct"].ToString());
                novType += Convert.ToDecimal(row["Nov"].ToString());
                decType += Convert.ToDecimal(row["Dec"].ToString());
                totalType = janType + febType + marType + aprType + mayType + junType + julType + augType + sepType + octType + novType + decType;

                janSubTtl += Convert.ToDecimal(row["Jan"].ToString());
                febSubTtl += Convert.ToDecimal(row["Feb"].ToString());
                marSubTtl += Convert.ToDecimal(row["Mar"].ToString());
                aprSubTtl += Convert.ToDecimal(row["Apr"].ToString());
                maySubTtl += Convert.ToDecimal(row["May"].ToString());
                junSubTtl += Convert.ToDecimal(row["Jun"].ToString());
                julSubTtl += Convert.ToDecimal(row["Jul"].ToString());
                augSubTtl += Convert.ToDecimal(row["Aug"].ToString());
                sepSubTtl += Convert.ToDecimal(row["Sep"].ToString());
                octSubTtl += Convert.ToDecimal(row["Oct"].ToString());
                novSubTtl += Convert.ToDecimal(row["Nov"].ToString());
                decSubTtl += Convert.ToDecimal(row["Dec"].ToString());
                totalSubTtl = janSubTtl + febSubTtl + marSubTtl + aprSubTtl + maySubTtl + junSubTtl + julSubTtl + augSubTtl + sepSubTtl + octSubTtl + novSubTtl + decSubTtl;


                if (row["seq"].ToString() == "2")
                {
                    janGT += Convert.ToDecimal(row["Jan"].ToString());
                    febGT += Convert.ToDecimal(row["Feb"].ToString());
                    marGT += Convert.ToDecimal(row["Mar"].ToString());
                    aprGT += Convert.ToDecimal(row["Apr"].ToString());
                    mayGT += Convert.ToDecimal(row["May"].ToString());
                    junGT += Convert.ToDecimal(row["Jun"].ToString());
                    julGT += Convert.ToDecimal(row["Jul"].ToString());
                    augGT += Convert.ToDecimal(row["Aug"].ToString());
                    sepGT += Convert.ToDecimal(row["Sep"].ToString());
                    octGT += Convert.ToDecimal(row["Oct"].ToString());
                    novGT += Convert.ToDecimal(row["Nov"].ToString());
                    decGT += Convert.ToDecimal(row["Dec"].ToString());
                    totalGT = janGT + febGT + marGT + aprGT + mayGT + junGT + julGT + augGT + sepGT + octGT + novGT + decGT;
                }

                //Untuk Total Jabodetabek
                if (parameter[2].ToString() == "ALL" && parameter[4].ToString() == "ALL" && parameter[6].ToString() == "ALL" && row["Seq"].ToString() == "2")
                {
                    janJabodetabek += Convert.ToDecimal(row["Jan"].ToString());
                    febJabodetabek += Convert.ToDecimal(row["Feb"].ToString());
                    marJabodetabek += Convert.ToDecimal(row["Mar"].ToString());
                    aprJabodetabek += Convert.ToDecimal(row["Apr"].ToString());
                    mayJabodetabek += Convert.ToDecimal(row["May"].ToString());
                    junJabodetabek += Convert.ToDecimal(row["Jun"].ToString());
                    julJabodetabek += Convert.ToDecimal(row["Jul"].ToString());
                    augJabodetabek += Convert.ToDecimal(row["Aug"].ToString());
                    sepJabodetabek += Convert.ToDecimal(row["Sep"].ToString());
                    octJabodetabek += Convert.ToDecimal(row["Oct"].ToString());
                    novJabodetabek += Convert.ToDecimal(row["Nov"].ToString());
                    decJabodetabek += Convert.ToDecimal(row["Dec"].ToString());
                    totalJabodetabek += Convert.ToDecimal(row["Total"].ToString());
                }

                if (parameter[11].ToString() != "1" && parameter[12].ToString() != "1" && row["Seq"].ToString() != "1")
                {
                    averageArea = (totalMonth > averageArea) ? totalMonth : averageArea;
                    averageMonthGT = (totalMonth > averageMonthGT) ? totalMonth : averageMonthGT;
                    averageMonth = (totalMonth > averageMonth) ? totalMonth : averageMonth;
                }
                else if (row["Seq"].ToString() != "1" && row["Seq"].ToString() != "2")
                {
                    averageMonthGT = (totalMonth > averageMonthGT) ? totalMonth : averageMonthGT;
                    averageMonth = (totalMonth > averageMonth) ? totalMonth : averageMonth;
                    averageArea = (totalMonth > averageArea) ? totalMonth : averageArea;
                    averageDealer = (totalMonth > averageDealer) ? totalMonth : averageDealer;
                }
                else if (parameter[12].ToString() == "1" && parameter[13].ToString() != "1" && row["Seq"].ToString() == "2")
                {
                    averageMonthGT = (totalMonth > averageMonthGT) ? totalMonth : averageMonthGT;
                    averageMonth = (totalMonth > averageMonth) ? totalMonth : averageMonth;
                    averageArea = (totalMonth > averageArea) ? totalMonth : averageArea;
                    averageDealer = (totalMonth > averageDealer) ? totalMonth : averageDealer;
                }
                else if (row["Seq"].ToString() != "1")
                {
                    averageMonthGT = (totalMonth > averageMonthGT) ? totalMonth : averageMonthGT;
                    averageArea = (totalMonth > averageArea) ? totalMonth : averageArea;
                    averageMonth = (totalMonth > averageMonth) ? totalMonth : averageMonth;
                }
                #endregion

                beforeRowType = Convert.ToInt32(row["rowType"].ToString());
                rowIndex++;
                totalRowDtl++;
                totalRow++;
                totalColour++;
                totalAVGRow++;
                TotalAVGOutletRow++;
            }

            #region Grand Total
            //Untuk Mencetak Nilai total terakhir
            if (parameter[12] == "1")
            {
                if (parameter[14] == "")
                {
                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

                    CreateBlueTypeDetailStandard(excelReport, null, rowIndex, totalDetailWidth);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / totalAVGRow;
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;


                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    decimal average = 0;
                    if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageArea;
                    else
                        average = totalSubTtl / totalMonth;
                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        //Total Per Outlet
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    //avg = totalAVG / totalMonth;
                    if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;
                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    marketModelCount = marketModelCount == 1 ? 4 : 6;

                    if (parameter[5].ToString() == "ALL")
                    {
                        if (parameter[11] == "1")
                        {
                            excelReport.RemoveRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString());
                            excelReport.RemoveRestorePoint(RestorePoint.TotalTableRestorePoint.ToString());
                            excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);
                        }
                        else
                            excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                        CreateSisTotal(excelReport, dt0, rowIndex, totalDetailWidth);
                        rowIndex++;
                        if (parameter[3].ToString() == "ALL")
                        {
                            average = totalGT / averageMonthGT;

                            excelReport.SetCellValue("TOTAL NATIONAL", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.GreenTotal);
                            excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                            rowIndex++;

                            janAVG = janGT / totalDealerGT;
                            febAVG = febGT / totalDealerGT;
                            marAVG = marGT / totalDealerGT;
                            aprAVG = aprGT / totalDealerGT;
                            mayAVG = mayGT / totalDealerGT;
                            junAVG = junGT / totalDealerGT;
                            julAVG = julGT / totalDealerGT;
                            augAVG = augGT / totalDealerGT;
                            sepAVG = sepGT / totalDealerGT;
                            octAVG = octGT / totalDealerGT;
                            novAVG = novGT / totalDealerGT;
                            decAVG = decGT / totalDealerGT;
                            totalAVG = totalGT / totalDealerGT;
                            avg = totalAVG / averageMonthGT;

                            excelReport.SetCellValue("AVG NATIONAL", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            rowIndex++;

                            #region Grand Total II
                            //excelReport.SetCellValue("GRAND TOTAL II",8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.PinkTotal);
                            //excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"),8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                            //rowIndex++;

                            //excelReport.SetCellValue("AVG GRAND TOTAL II",8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.PinkTotal);
                            //excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(totalAVG) && janAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(totalAVG) && febAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(totalAVG) && marAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(totalAVG) && aprAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(totalAVG) && mayAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(totalAVG) && junAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(totalAVG) && julAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(totalAVG) && augAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(totalAVG) && sepAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(totalAVG) && octAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(totalAVG) && novAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(totalAVG) && decAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue("",8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber);
                            //rowIndex++;
                            #endregion
                        }
                    }
                    else
                    {
                        if (parameter[11].ToString() == "1")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL", 0 + dealerWidth, beforeRowType + marketModelCount, outletWidth, ExcelCellStyle.LeftBorderedTop);
                        }
                        else
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, beforeRowType + marketModelCount, dealerWidth, ExcelCellStyle.LeftBorderedTop);
                        }
                        CreateSisTotal(excelReport, dt0, rowIndex, totalDetailWidth);
                        rowIndex++;
                    }
                }
                else
                {
                    CreateSisTotal(excelReport, dt0, rowIndex, totalDetailWidth);
                    rowIndex++;
                    if (parameter[3].ToString() == "ALL")
                    {
                        decimal average = totalGT / averageMonthGT;
                        excelReport.SetCellValue("TOTAL NATIONAL", 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.GreenTotal);
                        excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                        rowIndex++;

                        janAVG = janGT / totalDealerGT;
                        febAVG = febGT / totalDealerGT;
                        marAVG = marGT / totalDealerGT;
                        aprAVG = aprGT / totalDealerGT;
                        mayAVG = mayGT / totalDealerGT;
                        junAVG = junGT / totalDealerGT;
                        julAVG = julGT / totalDealerGT;
                        augAVG = augGT / totalDealerGT;
                        sepAVG = sepGT / totalDealerGT;
                        octAVG = octGT / totalDealerGT;
                        novAVG = novGT / totalDealerGT;
                        decAVG = decGT / totalDealerGT;//TotalAVGDealerRow
                        totalAVG = totalGT / totalDealerGT;
                        decimal avg = totalAVG / averageMonthGT;

                        excelReport.SetCellValue("AVG NATIONAL", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;

                        #region Grand Total II
                        //average = totalGT / totalMonth;
                        //excelReport.SetCellValue("GRAND TOTAL II",8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.PinkTotal);
                        //excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"),8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                        //rowIndex++;

                        //excelReport.SetCellValue("AVG GRAND TOTAL II",8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.PinkTotal);
                        //excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(totalAVG) && janAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(totalAVG) && febAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(totalAVG) && marAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(totalAVG) && aprAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(totalAVG) && mayAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(totalAVG) && junAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(totalAVG) && julAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(totalAVG) && augAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(totalAVG) && sepAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(totalAVG) && octAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(totalAVG) && novAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(totalAVG) && decAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue("",8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber);
                        //rowIndex++;
                        #endregion
                    }
                }
            }
            else
            {
                CreateSisTotal(excelReport, dt0, rowIndex, totalDetailWidth);
                rowIndex++;
                if (parameter[3].ToString() == "ALL")
                {
                    decimal averageDlr = totalGT / averageMonthGT;

                    excelReport.SetCellValue("TOTAL NATIONAL", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.GreenTotal);
                    excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(averageDlr) && janGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(averageDlr) && febGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(averageDlr) && marGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(averageDlr) && aprGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(averageDlr) && mayGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(averageDlr) && junGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(averageDlr) && julGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(averageDlr) && augGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(averageDlr) && sepGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(averageDlr) && octGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(averageDlr) && novGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(averageDlr) && decGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(averageDlr.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);

                    rowIndex++;

                    janAVG = janGT / TotalAVGDealerRow;
                    febAVG = febGT / TotalAVGDealerRow;
                    marAVG = marGT / TotalAVGDealerRow;
                    aprAVG = aprGT / TotalAVGDealerRow;
                    mayAVG = mayGT / TotalAVGDealerRow;
                    junAVG = junGT / TotalAVGDealerRow;
                    julAVG = julGT / TotalAVGDealerRow;
                    augAVG = augGT / TotalAVGDealerRow;
                    sepAVG = sepGT / TotalAVGDealerRow;
                    octAVG = octGT / TotalAVGDealerRow;
                    novAVG = novGT / TotalAVGDealerRow;
                    decAVG = decGT / TotalAVGDealerRow;
                    totalAVG = totalGT / totalDealerGT;
                    decimal avg = totalAVG / averageMonthGT;

                    excelReport.SetCellValue("AVG NATIONAL", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;

                    #region Grand Total II
                    //excelReport.SetCellValue("GRAND TOTAL II",8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.PinkTotal);
                    //excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(averageDealer) && janGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(averageDealer) && febGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(averageDealer) && marGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(averageDealer) && aprGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(averageDealer) && mayGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(averageDealer) && junGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(averageDealer) && julGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(averageDealer) && augGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(averageDealer) && sepGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(averageDealer) && octGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(averageDealer) && novGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(averageDealer) && decGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(averageDealer.ToString("#,##0;0;'-';@"),8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                    //rowIndex++;

                    //janAVG = janGT / totalAVGGTRow;
                    //febAVG = febGT / totalAVGGTRow;
                    //marAVG = marGT / totalAVGGTRow;
                    //aprAVG = aprGT / totalAVGGTRow;
                    //mayAVG = mayGT / totalAVGGTRow;
                    //junAVG = junGT / totalAVGGTRow;
                    //julAVG = julGT / totalAVGGTRow;
                    //augAVG = augGT / totalAVGGTRow;
                    //sepAVG = sepGT / totalAVGGTRow;
                    //octAVG = octGT / totalAVGGTRow;
                    //novAVG = novGT / totalAVGGTRow;
                    //decAVG = decGT / totalAVGGTRow;
                    //totalAVG = (janAVG + febAVG + marAVG + aprAVG + mayAVG + junAVG + julAVG + augAVG + sepAVG + octAVG + novAVG + decAVG) / totalMonth;

                    //excelReport.SetCellValue("AVG " + area.ToString(),8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.PinkTotal);
                    //excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(totalAVG) && janAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(totalAVG) && febAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(totalAVG) && marAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(totalAVG) && aprAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(totalAVG) && mayAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(totalAVG) && junAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(totalAVG) && julAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(totalAVG) && augAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(totalAVG) && sepAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(totalAVG) && octAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(totalAVG) && novAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(totalAVG) && decAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue("",8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotal);
                    //rowIndex++;
                    #endregion
                }
            }
            #endregion

            excelReport.CloseExcelFileWriter();
        }
                
        // Total Upper
        public void UpperCreateReport(string pserver)
        {
            DataTable dt0 = ds.Tables[0]; // Data Detail

            seq = dt0.Rows[0]["Seq"].ToString();
            seq2 = dt0.Rows[0]["Seq2"].ToString();
            area = parameter[9].ToString() == "1" ? dt0.Rows[0]["Area"].ToString() : "";
            dealer = parameter[10].ToString() == "1" ? dt0.Rows[0]["CompanyName"].ToString() : "";
            outlet = parameter[11].ToString() == "1" ? dt0.Rows[0]["BranchName"].ToString() : "";
            modelCategory = dt0.Columns.Contains("ModelCatagory") == true ? dt0.Rows[0]["ModelCatagory"].ToString() : "";
            marketModel = parameter[12].ToString() == "1" ? dt0.Rows[0]["MarketModel"].ToString() : "";
            colorCategory = parameter[13].ToString() == "1" ? dt0.Rows[0]["ColourName"].ToString() : "";
            year = dt0.Rows[0]["Year"].ToString();
            currentYear = Convert.ToInt32(dt0.Rows[0]["Year"].ToString());

            StringBuilder sb = new StringBuilder();
            //sb.Append(parameter[9].ToString() == "1" ? "Area" : "");
            //sb.Append(parameter[10].ToString() == "1" ? ", Dealer" : "");
            sb.Append(parameter[11].ToString() == "1" ? "Outlet" : "");
            sb.Append((parameter[12].ToString() == "1" && parameter[14].ToString() == "") ? ", Type" : "");
            sb.Append(parameter[13].ToString() == "1" ? " & Colour" : "");
            sb.Append(parameter[14].ToString() != "" ? " & Type : " + parameter[14].ToString() : "");
            string title = sb.ToString().StartsWith(",") ? sb.ToString().Remove(0, 1) : sb.ToString();

            //Pemetaan ukuran column
            dealerWidth = parameter[10].ToString() == "1" ? 1 : 0;
            outletWidth = parameter[11].ToString() == "1" ? 1 : 0;
            modelWidth = (parameter[12].ToString() == "1" && parameter[14].ToString() == "") ? 1 : 0;
            colorWidth = parameter[13].ToString() == "1" ? 1 : 0;

            totalDetailWidth = dealerWidth + outletWidth + modelWidth + colorWidth;

            ExcelFileWriter excelReport = new ExcelFileWriter(fileName, currentYear.ToString(), "OmRpSalRgs045", pserver);
            CreateHeader(excelReport, rowIndex, totalDetailWidth, title, currentYear.ToString());
            marketModelCount = 1;
            foreach (DataRow row in dt0.Rows)
            {
                decimal averageQty = decimal.Parse(row["AVG"].ToString());

                totalMonth = (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                    && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 :
                    (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) == currentYear
                    && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) :
                    (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                    && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) == currentYear) ? Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) :
                    Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) + 1;

                /* Penjelasan case di bawah terjadi pada saat apilkasi pertama kali di jalankan*/
                if (year == row["Year"].ToString()
                    && seq == row["seq"].ToString()
                    && seq2 == row["seq2"].ToString()
                    && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
                    && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
                    && outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
                    && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
                    && marketModel == (parameter[12] == "1" ? row["MarketModel"].ToString() : "")
                    && colorCategory == (parameter[13] == "1" ? row["ColourName"].ToString() : ""))
                {
                    //marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region First
                    //Outlet
                    if (parameter[11] == "1" && parameter[12] == "1" && parameter[13] == "0")
                    {
                        if (parameter[14] != "")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.JanRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.FebRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.AprRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MayRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.JunRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.JulRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.AugRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.SepRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OctRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.NovRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.DecRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.AverageRestorePoint.ToString());
                            totalRowDtl++;
                            rowIndex++;
                            excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandardWrap);
                        }
                        else
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalTableRestorePoint.ToString());
                            //Digunakan untuk tambah baris tempat ntar RestorePoint.TotalTableRestorePoint
                            rowIndex++;

                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                            excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        }
                    }
                    else
                    {
                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalTableRestorePoint.ToString());
                            rowIndex++;
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());

                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        }
                        else if (parameter[12] == "1")
                        {
                            if (parameter[11] == "1")
                                excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                            else if (parameter[11] == "0" && parameter[14] != "")
                                excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);
                            else
                            {
                                //excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                                excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            }
                        }
                        else if (parameter[11] == "1")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.JanRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.FebRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.AprRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MayRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.JunRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.JulRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.AugRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.SepRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OctRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.NovRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.DecRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.AverageRestorePoint.ToString());

                            rowIndex++;
                            excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandard);
                        }
                        else
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), row["CompanyName"].ToString(), 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);
                            //excelReport.SetCellValue(row["CompanyName"].ToString(),8 + rowIndex, 0 + dealerWidth, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);
                            //dealerStat = true;
                        }
                    }
                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    totalDealer++;
                    totalOutlet++;

                    //Menandakan outlet 1
                    TotalAVGAreaRow++;
                    TotalAVGAreaRowJBDTK++;
                    TotalAVGDealerRow++;
                    totalAVGGTRow++;

                    #endregion
                }

                /* Penjelasan case di bawah terjadi pada saat nama dealer berubah dan data dari database memberikan nilai total per dealer :
                 * 1.Biasanya pada opsi Area dan dealer True
                 * 2.Perpindahan dari column Seq = 2, Seq2 = 1 ke Seq = 1, Seq2 = 1
                 */
                else if (year == row["Year"].ToString()
                    && seq != row["seq"].ToString()
                    && seq2 == row["seq2"].ToString()
                    && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
                    && dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
                    && outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
                    && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
                    && marketModel == (parameter[12] == "1" ? row["MarketModel"].ToString() : "")
                    && colorCategory == (parameter[13] == "1" ? row["ColourName"].ToString() : ""))
                {
                    #region Second
                    //Dealer
                    if (parameter[10] == "1")
                    {
                        if (parameter[14] == "")
                        {
                            if (parameter[11] == "0" && parameter[12] == "0" && parameter[13] == "0")
                            {
                                if (!row["CompanyName"].ToString().Contains("zzzz"))
                                {
                                    excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);
                                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                                }
                                else
                                {
                                    if (parameter[5].ToString() == "ALL")
                                    {
                                        if (area != "_JABODETABEK")
                                            excelReport.SetCellValue("SUB TOTAL " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.YellowTotal);
                                        else
                                            excelReport.SetCellValue("SUB TOTAL DEALER " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.YellowTotal);

                                        CreateYellowDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                                        rowIndex++;

                                        janAVG = Convert.ToDecimal(row["Jan"].ToString()) / TotalAVGAreaRow;
                                        febAVG = Convert.ToDecimal(row["Feb"].ToString()) / TotalAVGAreaRow;
                                        marAVG = Convert.ToDecimal(row["Mar"].ToString()) / TotalAVGAreaRow;
                                        aprAVG = Convert.ToDecimal(row["Apr"].ToString()) / TotalAVGAreaRow;
                                        mayAVG = Convert.ToDecimal(row["May"].ToString()) / TotalAVGAreaRow;
                                        junAVG = Convert.ToDecimal(row["Jun"].ToString()) / TotalAVGAreaRow;
                                        julAVG = Convert.ToDecimal(row["Jul"].ToString()) / TotalAVGAreaRow;
                                        augAVG = Convert.ToDecimal(row["Aug"].ToString()) / TotalAVGAreaRow;
                                        sepAVG = Convert.ToDecimal(row["Sep"].ToString()) / TotalAVGAreaRow;
                                        octAVG = Convert.ToDecimal(row["Oct"].ToString()) / TotalAVGAreaRow;
                                        novAVG = Convert.ToDecimal(row["Nov"].ToString()) / TotalAVGAreaRow;
                                        decAVG = Convert.ToDecimal(row["Dec"].ToString()) / TotalAVGAreaRow;
                                        totalAVG = Convert.ToDecimal(row["Total"].ToString()) / TotalAVGAreaRow;
                                        decimal avg = totalAVG / averageMonth;

                                        if (area != "_JABODETABEK")
                                            excelReport.SetCellValue("AVG " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.BrownTotal);
                                        else
                                            excelReport.SetCellValue("AVG DEALER " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.BrownTotal);

                                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);

                                        TotalAVGOutletRow = 0;
                                        TotalAVGAreaRow = 0;

                                        if (parameter[2].ToString() == "ALL" && parameter[4].ToString() == "ALL" && parameter[6].ToString() == "ALL" && area == "_JABODETABEK")
                                        {
                                            rowIndex++;
                                            excelReport.SetCellValue("SUB TOTAL " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.YellowTotal);

                                            if (parameter[11].ToString() == "1")
                                                avg = totalJabodetabek / averageArea;
                                            else
                                                avg = totalJabodetabek / averageMonth;
                                            excelReport.SetCellValue(janJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janJabodetabek < Convert.ToInt32(avg) && janJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                            excelReport.SetCellValue(febJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febJabodetabek < Convert.ToInt32(avg) && febJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                            excelReport.SetCellValue(marJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marJabodetabek < Convert.ToInt32(avg) && marJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                            excelReport.SetCellValue(aprJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprJabodetabek < Convert.ToInt32(avg) && aprJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                            excelReport.SetCellValue(mayJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayJabodetabek < Convert.ToInt32(avg) && mayJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                            excelReport.SetCellValue(junJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junJabodetabek < Convert.ToInt32(avg) && junJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                            excelReport.SetCellValue(julJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julJabodetabek < Convert.ToInt32(avg) && julJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                            excelReport.SetCellValue(augJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augJabodetabek < Convert.ToInt32(avg) && augJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                            excelReport.SetCellValue(sepJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepJabodetabek < Convert.ToInt32(avg) && sepJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                            excelReport.SetCellValue(octJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octJabodetabek < Convert.ToInt32(avg) && octJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                            excelReport.SetCellValue(novJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novJabodetabek < Convert.ToInt32(avg) && novJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                            excelReport.SetCellValue(decJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decJabodetabek < Convert.ToInt32(avg) && decJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                            excelReport.SetCellValue(totalJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);
                                            excelReport.SetCellValue(avg.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);

                                            rowIndex++;

                                            janAVG = janJabodetabek / TotalAVGAreaRowJBDTK;
                                            febAVG = febJabodetabek / TotalAVGAreaRowJBDTK;
                                            marAVG = marJabodetabek / TotalAVGAreaRowJBDTK;
                                            aprAVG = aprJabodetabek / TotalAVGAreaRowJBDTK;
                                            mayAVG = mayJabodetabek / TotalAVGAreaRowJBDTK;
                                            junAVG = junJabodetabek / TotalAVGAreaRowJBDTK;
                                            julAVG = julJabodetabek / TotalAVGAreaRowJBDTK;
                                            augAVG = augJabodetabek / TotalAVGAreaRowJBDTK;
                                            sepAVG = sepJabodetabek / TotalAVGAreaRowJBDTK;
                                            octAVG = octJabodetabek / TotalAVGAreaRowJBDTK;
                                            novAVG = novJabodetabek / TotalAVGAreaRowJBDTK;
                                            decAVG = decJabodetabek / TotalAVGAreaRowJBDTK;
                                            totalAVG = totalJabodetabek / TotalAVGAreaRowJBDTK;
                                            avg = totalAVG / averageArea;

                                            excelReport.SetCellValue("AVG " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.BrownTotal);
                                            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                        }
                                    }
                                }
                            }
                            else if (parameter[11].ToString() == "0" && parameter[12].ToString() == "1")
                            {
                                marketModelCount = marketModelCount == 1 ? 4 : 6;
                                decimal average = 0;
                                if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                    average = totalType / averageMonth;
                                else if (parameter[12].ToString() == "1")
                                    average = totalType / averageArea;
                                else
                                    average = totalType / totalMonth;

                                if (parameter[13] == "1" && parameter[11] == "0")
                                {
                                    excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                                    excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                                    totalColour = 0;
                                }
                                else if (parameter[13] == "1" && parameter[11] == "1")
                                {
                                    excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                                    excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                                    totalColour = 0;
                                }
                                else
                                    //Untuk masukkin total per Category
                                    excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                                excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                                excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                                rowIndex++;
                                spaceTotal++;
                                spaceTotalDealer++;
                                totalRow++;

                                janAVG = janType / totalAVGRow;
                                febAVG = febType / totalAVGRow;
                                marAVG = marType / totalAVGRow;
                                aprAVG = aprType / totalAVGRow;
                                mayAVG = mayType / totalAVGRow;
                                junAVG = junType / totalAVGRow;
                                julAVG = julType / totalAVGRow;
                                augAVG = augType / totalAVGRow;
                                sepAVG = sepType / totalAVGRow;
                                octAVG = octType / totalAVGRow;
                                novAVG = novType / totalAVGRow;
                                decAVG = decType / totalAVGRow;
                                totalAVG = totalType / totalAVGRow;
                                decimal avg = 0;
                                if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                    avg = totalAVG / averageMonth;
                                else if (parameter[12].ToString() == "1")
                                    avg = totalAVG / averageArea;
                                else
                                    avg = totalAVG / totalMonth;

                                if (parameter[13] == "1" && parameter[11] == "0")
                                    excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                else if (parameter[13] == "1" && parameter[11] == "1")
                                    excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                else
                                    excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                                excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                rowIndex++;
                                spaceTotal++;
                                spaceTotalDealer++;
                                totalRow++;

                                average = totalSubTtl / totalMonth;
                                if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                    average = totalSubTtl / averageMonth;
                                else if (parameter[12].ToString() == "1")
                                    average = totalSubTtl / averageArea;
                                else
                                    average = totalSubTtl / totalMonth;


                                //Total Per Outlet
                                if (parameter[13] == "1" && parameter[11] == "0")
                                    excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                                else if (parameter[13] == "1" && parameter[11] == "1")
                                    excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                                else
                                    //Total Per Outlet
                                    excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                                excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                                rowIndex++;
                                spaceTotal++;
                                spaceTotalDealer++;
                                totalRow++;

                                janAVG = janSubTtl / TotalAVGOutletRow;
                                febAVG = febSubTtl / TotalAVGOutletRow;
                                marAVG = marSubTtl / TotalAVGOutletRow;
                                aprAVG = aprSubTtl / TotalAVGOutletRow;
                                mayAVG = maySubTtl / TotalAVGOutletRow;
                                junAVG = junSubTtl / TotalAVGOutletRow;
                                julAVG = julSubTtl / TotalAVGOutletRow;
                                augAVG = augSubTtl / TotalAVGOutletRow;
                                sepAVG = sepSubTtl / TotalAVGOutletRow;
                                octAVG = octSubTtl / TotalAVGOutletRow;
                                novAVG = novSubTtl / TotalAVGOutletRow;
                                decAVG = decSubTtl / TotalAVGOutletRow;
                                totalAVG = totalSubTtl / TotalAVGOutletRow;
                                avg = 0;
                                if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                    avg = totalAVG / averageMonth;
                                else if (parameter[12].ToString() == "1")
                                    avg = totalAVG / averageArea;
                                else
                                    avg = totalAVG / totalMonth;

                                //Total Per Outlet
                                if (parameter[13] == "1" && parameter[11] == "0")
                                    excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                                else if (parameter[13] == "1" && parameter[11] == "1")
                                    excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                                else
                                    excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                                excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                                rowIndex++;
                                spaceTotal++;
                                spaceTotalDealer++;
                                totalRow++;

                                janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                                janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                                totalRowDtl = 0;
                                TotalAVGOutletRow = 0;
                                spaceTotal = 0;
                                totalAVGRow = 0;
                                totalRow = 0;
                                excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);
                                excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                                excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                                CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                            }
                            else
                            {
                                excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, totalRowDtl, dealerWidth, ExcelCellStyle.LeftBorderedTop);

                                CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                            }
                        }
                        else
                        {
                            if (parameter[5].ToString() == "ALL")
                            {
                                if (area != "_JABODETABEK")
                                    excelReport.SetCellValue("SUB TOTAL " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.YellowTotal);
                                else
                                    excelReport.SetCellValue("SUB TOTAL DEALER " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.YellowTotal);

                                CreateYellowDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                            }
                        }
                        //excelReport.SetCellValue("SUB TOTAL " + area.ToString(),8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.YellowTotal);
                    }

                    seq = row["seq"].ToString();
                    dealer = row["CompanyName"].ToString();
                    totalRowDtl = 0;
                    averageDealer = 0;

                    //To Add Blank line before it start new Area...(^0^)V
                    //rowIndex++;
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                /* Penjelasan case di bawah terjadi pada saat nama outlet berubah :
                 * 1.Biasanya pada opsi Area ,dealer dan outlet = True*/
                else if (year == row["Year"].ToString()
                 && seq != row["seq"].ToString()
                 && seq2 == row["seq2"].ToString()
                 && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
                 && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
                 && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
            && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
                 && marketModel == (parameter[12] == "1" ? row["MarketModel"].ToString() : "")
                 && colorCategory == (parameter[13] == "1" ? row["ColourName"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Third
                    if (parameter[12].ToString() == "1" && parameter[14].ToString() == "")
                    {
                        #region Seven
                        decimal average = totalType / averageMonth;
                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else
                            //Untuk masukkin total per Category
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

                        excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janType / totalAVGRow;
                        febAVG = febType / totalAVGRow;
                        marAVG = marType / totalAVGRow;
                        aprAVG = aprType / totalAVGRow;
                        mayAVG = mayType / totalAVGRow;
                        junAVG = junType / totalAVGRow;
                        julAVG = julType / totalAVGRow;
                        augAVG = augType / totalAVGRow;
                        sepAVG = sepType / totalAVGRow;
                        octAVG = octType / totalAVGRow;
                        novAVG = novType / totalAVGRow;
                        decAVG = decType / totalAVGRow;
                        totalAVG = (janAVG + febAVG + marAVG + aprAVG + mayAVG + junAVG + julAVG + augAVG + sepAVG + octAVG + novAVG + decAVG) / totalAVGRow;
                        average = totalAVG / averageMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(average) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(average) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(average) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(average) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(average) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(average) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(average) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(average) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(average) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(average) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(average) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(average) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(average).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        average = totalSubTtl / averageMonth;
                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else
                            //Total Per Outlet
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                        excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janSubTtl / TotalAVGOutletRow;
                        febAVG = febSubTtl / TotalAVGOutletRow;
                        marAVG = marSubTtl / TotalAVGOutletRow;
                        aprAVG = aprSubTtl / TotalAVGOutletRow;
                        mayAVG = maySubTtl / TotalAVGOutletRow;
                        junAVG = junSubTtl / TotalAVGOutletRow;
                        julAVG = julSubTtl / TotalAVGOutletRow;
                        augAVG = augSubTtl / TotalAVGOutletRow;
                        sepAVG = sepSubTtl / TotalAVGOutletRow;
                        octAVG = octSubTtl / TotalAVGOutletRow;
                        novAVG = novSubTtl / TotalAVGOutletRow;
                        decAVG = decSubTtl / TotalAVGOutletRow;
                        totalAVG = (janAVG + febAVG + marAVG + aprAVG + mayAVG + junAVG + julAVG + augAVG + sepAVG + octAVG + novAVG + decAVG) / TotalAVGOutletRow;
                        average = totalAVG / averageMonth;
                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(average) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(average) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(average) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(average) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(average) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(average) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(average) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(average) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(average) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(average) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(average) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(average) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(average).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        //Untuk masukkin nama Outlet
                        excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedTop);
                        excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, Convert.ToInt32(row["rowType"].ToString()) + marketModelCount + totalRow, dealerWidth, ExcelCellStyle.LeftBorderedStandardWrap);

                        janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                        janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;

                        sbSaveCurrentState = excelReport.SaveCurrentState();
                        Thread.Sleep(1000);

                        //Untuk masukkin nama Dealer terakhir
                        totalRowDtl = 0;
                        TotalAVGOutletRow = 0;
                        totalAVGRow = 0;
                        spaceTotal = 0;
                        totalRow = 0;
                        rowIndex--;

                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());

                        if (parameter[13] == "1")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                            if (parameter[11] == "0")
                                excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                            else
                                excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                            colorCategory = row["ColourName"].ToString();
                        }
                        else
                            excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                        seq = row["seq"].ToString();
                        outlet = row["BranchName"].ToString();
                        marketModel = row["MarketModel"].ToString();
                        modelCategory = row["ModelCatagory"].ToString();
                        #endregion
                    }
                    else
                    {
                        decimal average = Convert.ToDecimal(row["Total"].ToString()) / averageDealer;
                        decimal jan = Convert.ToDecimal(row["Jan"].ToString());
                        decimal feb = Convert.ToDecimal(row["Feb"].ToString());
                        decimal mar = Convert.ToDecimal(row["Mar"].ToString());
                        decimal apr = Convert.ToDecimal(row["Apr"].ToString());
                        decimal may = Convert.ToDecimal(row["May"].ToString());
                        decimal jun = Convert.ToDecimal(row["Jun"].ToString());
                        decimal jul = Convert.ToDecimal(row["Jul"].ToString());
                        decimal aug = Convert.ToDecimal(row["Aug"].ToString());
                        decimal sep = Convert.ToDecimal(row["Sep"].ToString());
                        decimal oct = Convert.ToDecimal(row["Oct"].ToString());
                        decimal nov = Convert.ToDecimal(row["Nov"].ToString());
                        decimal dec = Convert.ToDecimal(row["Dec"].ToString());

                        excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, (parameter[14] != "" ? totalRowDtl : totalOutlet + 1), dealerWidth, ExcelCellStyle.LeftBorderedTop);
                        excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "Total Per Outlet", 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedBold);
                        excelReport.ReplaceRestorePoint(RestorePoint.JanRestorePoint.ToString(), jan.ToString("#,##0;0;'-';@"), 0 + totalDetailWidth, 1, 1, (jan < average && jan != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                        excelReport.ReplaceRestorePoint(RestorePoint.FebRestorePoint.ToString(), feb.ToString("#,##0;0;'-';@"), 1 + totalDetailWidth, 1, 1, (feb < average && feb != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                        excelReport.ReplaceRestorePoint(RestorePoint.MarRestorePoint.ToString(), mar.ToString("#,##0;0;'-';@"), 2 + totalDetailWidth, 1, 1, (mar < average && mar != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                        excelReport.ReplaceRestorePoint(RestorePoint.AprRestorePoint.ToString(), apr.ToString("#,##0;0;'-';@"), 3 + totalDetailWidth, 1, 1, (apr < average && apr != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                        excelReport.ReplaceRestorePoint(RestorePoint.MayRestorePoint.ToString(), may.ToString("#,##0;0;'-';@"), 4 + totalDetailWidth, 1, 1, (may < average && may != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                        excelReport.ReplaceRestorePoint(RestorePoint.JunRestorePoint.ToString(), jun.ToString("#,##0;0;'-';@"), 5 + totalDetailWidth, 1, 1, (jun < average && jun != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                        excelReport.ReplaceRestorePoint(RestorePoint.JulRestorePoint.ToString(), jul.ToString("#,##0;0;'-';@"), 6 + totalDetailWidth, 1, 1, (jul < average && jul != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                        excelReport.ReplaceRestorePoint(RestorePoint.AugRestorePoint.ToString(), aug.ToString("#,##0;0;'-';@"), 7 + totalDetailWidth, 1, 1, (aug < average && aug != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                        excelReport.ReplaceRestorePoint(RestorePoint.SepRestorePoint.ToString(), sep.ToString("#,##0;0;'-';@"), 8 + totalDetailWidth, 1, 1, (sep < average && sep != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                        excelReport.ReplaceRestorePoint(RestorePoint.OctRestorePoint.ToString(), oct.ToString("#,##0;0;'-';@"), 9 + totalDetailWidth, 1, 1, (oct < average && oct != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                        excelReport.ReplaceRestorePoint(RestorePoint.NovRestorePoint.ToString(), nov.ToString("#,##0;0;'-';@"), 10 + totalDetailWidth, 1, 1, (nov < average && nov != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                        excelReport.ReplaceRestorePoint(RestorePoint.DecRestorePoint.ToString(), dec.ToString("#,##0;0;'-';@"), 11 + totalDetailWidth, 1, 1, (dec < average && dec != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                        excelReport.ReplaceRestorePoint(RestorePoint.TotalRestorePoint.ToString(), Convert.ToDecimal(row["Total"].ToString()).ToString("#,##0;0;'-';@"), 12 + totalDetailWidth, 1, 1, ExcelCellStyle.RightBorderedBoldNumber, true);
                        excelReport.ReplaceRestorePoint(RestorePoint.TotalRestorePoint.ToString(), Convert.ToDecimal(row["Total"].ToString()).ToString("#,##0;0;'-';@"), 12 + totalDetailWidth, 1, 1, ExcelCellStyle.RightBorderedBoldNumber, true);
                        excelReport.ReplaceRestorePoint(RestorePoint.AverageRestorePoint.ToString(), Convert.ToDecimal(average).ToString(), 13 + totalDetailWidth, 1, 1, ExcelCellStyle.RightBorderedBoldNumber, true);

                        seq = row["seq"].ToString();
                        outlet = row["BranchName"].ToString();
                        totalOutlet = totalRowDtl = 0;
                        totalRowDtl--;
                        //Karena kita mengisi kolom yang sudah ditentukan sebelumnya..
                        rowIndex--;
                    }
                    #endregion
                    marketModelCount = 1;
                }

                /* Penjelasan case di bawah terjadi pada saat nama outlet berubah dan nama Dealer berubah:
                 * 1.Biasanya pada opsi Area ,dealer dan outlet = True dan ketika berganti dealer*/
                else if (year == row["Year"].ToString()
       && seq != row["seq"].ToString()
       && seq2 == row["seq2"].ToString()
       && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
       && dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
       && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
       && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
       && marketModel == (parameter[12] == "1" ? row["MarketModel"].ToString() : "")
       && colorCategory == (parameter[13] == "1" ? row["ColourName"].ToString() : ""))
                {
                    #region Fourth
                    if (parameter[12].ToString() == "1" && parameter[14].ToString() == "")
                    {
                        marketModelCount = marketModelCount == 1 ? 4 : 6;
                        #region Eight Extensions
                        decimal average = 0;
                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalType / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalType / averageArea;
                        else
                            average = totalType / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else
                            //Untuk masukkin total per Category
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janType / totalAVGRow;
                        febAVG = febType / totalAVGRow;
                        marAVG = marType / totalAVGRow;
                        aprAVG = aprType / totalAVGRow;
                        mayAVG = mayType / totalAVGRow;
                        junAVG = junType / totalAVGRow;
                        julAVG = julType / totalAVGRow;
                        augAVG = augType / totalAVGRow;
                        sepAVG = sepType / totalAVGRow;
                        octAVG = octType / totalAVGRow;
                        novAVG = novType / totalAVGRow;
                        decAVG = decType / totalAVGRow;
                        totalAVG = totalType / TotalAVGOutletRow;
                        decimal avg = 0;
                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalSubTtl / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalSubTtl / averageArea;
                        else
                            average = totalSubTtl / totalMonth;

                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else
                            //Total Per Outlet
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                        excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;


                        janAVG = janSubTtl / TotalAVGOutletRow;
                        febAVG = febSubTtl / TotalAVGOutletRow;
                        marAVG = marSubTtl / TotalAVGOutletRow;
                        aprAVG = aprSubTtl / TotalAVGOutletRow;
                        mayAVG = maySubTtl / TotalAVGOutletRow;
                        junAVG = junSubTtl / TotalAVGOutletRow;
                        julAVG = julSubTtl / TotalAVGOutletRow;
                        augAVG = augSubTtl / TotalAVGOutletRow;
                        sepAVG = sepSubTtl / TotalAVGOutletRow;
                        octAVG = octSubTtl / TotalAVGOutletRow;
                        novAVG = novSubTtl / TotalAVGOutletRow;
                        decAVG = decSubTtl / TotalAVGOutletRow;
                        totalAVG = totalSubTtl / TotalAVGOutletRow;
                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                        janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                        TotalAVGOutletRow = 0;
                        totalAVGRow = 0;
                        totalRowDtl = 0;
                        spaceTotal = 0;

                        excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL", 0 + dealerWidth, beforeRowType + marketModelCount, outletWidth, ExcelCellStyle.LeftBorderedTop);
                        Thread.Sleep(1000);
                        excelReport.LoadAndReplaceCurrentState(RestorePoint.TotalTableRestorePoint.ToString(), sbSaveCurrentState);
                        Thread.Sleep(1000);
                        totalRow = 0;
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalTableRestorePoint.ToString());
                        rowIndex++;

                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                            colorCategory = row["ColourName"].ToString();
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                            colorCategory = row["ColourName"].ToString();
                        }
                        else
                            excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                        if (row["Seq"].ToString() != "1")
                            totalDealerGT++;
                        seq = row["seq"].ToString();
                        dealer = row["CompanyName"].ToString();
                        outlet = row["BranchName"].ToString();
                        marketModel = row["MarketModel"].ToString();
                        modelCategory = row["ModelCatagory"].ToString();
                        #endregion
                        averageDealer = 0;
                        marketModelCount = 1;
                    }
                    else
                    {
                        if (row["seq"].ToString() == "1" && row["seq2"].ToString() == "1")
                        {
                            if (parameter[5].ToString() == "ALL")
                            {
                                if (area != "_JABODETABEK")
                                    excelReport.SetCellValue("TOTAL PER-" + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.YellowTotal);
                                else
                                    excelReport.SetCellValue("TOTAL DEALER " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.YellowTotal);

                                CreateYellowDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                                rowIndex++;

                                janAVG = Convert.ToDecimal(row["Jan"].ToString()) / TotalAVGAreaRow;
                                febAVG = Convert.ToDecimal(row["Feb"].ToString()) / TotalAVGAreaRow;
                                marAVG = Convert.ToDecimal(row["Mar"].ToString()) / TotalAVGAreaRow;
                                aprAVG = Convert.ToDecimal(row["Apr"].ToString()) / TotalAVGAreaRow;
                                mayAVG = Convert.ToDecimal(row["May"].ToString()) / TotalAVGAreaRow;
                                junAVG = Convert.ToDecimal(row["Jun"].ToString()) / TotalAVGAreaRow;
                                julAVG = Convert.ToDecimal(row["Jul"].ToString()) / TotalAVGAreaRow;
                                augAVG = Convert.ToDecimal(row["Aug"].ToString()) / TotalAVGAreaRow;
                                sepAVG = Convert.ToDecimal(row["Sep"].ToString()) / TotalAVGAreaRow;
                                octAVG = Convert.ToDecimal(row["Oct"].ToString()) / TotalAVGAreaRow;
                                novAVG = Convert.ToDecimal(row["Nov"].ToString()) / TotalAVGAreaRow;
                                decAVG = Convert.ToDecimal(row["Dec"].ToString()) / TotalAVGAreaRow;
                                totalAVG = Convert.ToDecimal(row["Total"].ToString()) / TotalAVGAreaRow;
                                decimal avg = totalAVG / averageArea;

                                if (area != "_JABODETABEK")
                                    excelReport.SetCellValue("AVG " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.BrownTotal);
                                else
                                    excelReport.SetCellValue("AVG DEALER " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.BrownTotal);

                                excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                rowIndex++;

                                TotalAVGOutletRow = 0;
                                TotalAVGAreaRow = 0;

                                if (parameter[2].ToString() == "ALL" && parameter[4].ToString() == "ALL" && parameter[6].ToString() == "ALL" && area == "_JABODETABEK")
                                {
                                    excelReport.SetCellValue("TOTAL " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.YellowTotal);

                                    if (parameter[11].ToString() == "1")
                                        avg = totalJabodetabek / averageArea;
                                    else
                                        avg = totalJabodetabek / averageMonth;
                                    excelReport.SetCellValue(janJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janJabodetabek < Convert.ToInt32(avg) && janJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(febJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febJabodetabek < Convert.ToInt32(avg) && febJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(marJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marJabodetabek < Convert.ToInt32(avg) && marJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(aprJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprJabodetabek < Convert.ToInt32(avg) && aprJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(mayJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayJabodetabek < Convert.ToInt32(avg) && mayJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(junJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junJabodetabek < Convert.ToInt32(avg) && junJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(julJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julJabodetabek < Convert.ToInt32(avg) && julJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(augJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augJabodetabek < Convert.ToInt32(avg) && augJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(sepJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepJabodetabek < Convert.ToInt32(avg) && sepJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(octJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octJabodetabek < Convert.ToInt32(avg) && octJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(novJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novJabodetabek < Convert.ToInt32(avg) && novJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(decJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decJabodetabek < Convert.ToInt32(avg) && decJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(totalJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(avg.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);

                                    rowIndex++;

                                    janAVG = janJabodetabek / TotalAVGAreaRowJBDTK;
                                    febAVG = febJabodetabek / TotalAVGAreaRowJBDTK;
                                    marAVG = marJabodetabek / TotalAVGAreaRowJBDTK;
                                    aprAVG = aprJabodetabek / TotalAVGAreaRowJBDTK;
                                    mayAVG = mayJabodetabek / TotalAVGAreaRowJBDTK;
                                    junAVG = junJabodetabek / TotalAVGAreaRowJBDTK;
                                    julAVG = julJabodetabek / TotalAVGAreaRowJBDTK;
                                    augAVG = augJabodetabek / TotalAVGAreaRowJBDTK;
                                    sepAVG = sepJabodetabek / TotalAVGAreaRowJBDTK;
                                    octAVG = octJabodetabek / TotalAVGAreaRowJBDTK;
                                    novAVG = novJabodetabek / TotalAVGAreaRowJBDTK;
                                    decAVG = decJabodetabek / TotalAVGAreaRowJBDTK;
                                    totalAVG = totalJabodetabek / TotalAVGAreaRowJBDTK;
                                    avg = totalAVG / averageArea;

                                    excelReport.SetCellValue("AVG " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.BrownTotal);
                                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    rowIndex++;
                                    //averageArea = 0;
                                }
                            }
                        }

                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.JanRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.FebRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.AprRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MayRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.JunRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.JulRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.AugRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.SepRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.OctRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.NovRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.DecRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalRestorePoint.ToString());
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.AverageRestorePoint.ToString());

                        if (row["seq"].ToString() != "1")
                        {
                            totalRowDtl++;
                            totalOutlet++;
                            rowIndex++;
                            TotalAVGOutletRow++;
                            TotalAVGAreaRow++;
                            TotalAVGAreaRowJBDTK++;
                            TotalAVGDealerRow++;
                            totalAVGGTRow++;
                            excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandard);

                            CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                        }
                        else if (parameter[14] != "")
                        {
                            TotalAVGAreaRow++;
                            TotalAVGAreaRowJBDTK++;
                        }

                        if (row["Seq"].ToString() != "1")
                            totalDealerGT++;
                        seq = row["seq"].ToString();
                        dealer = row["CompanyName"].ToString();
                        outlet = row["BranchName"].ToString();

                        //totalRowDtl = 0;
                        //totalOutlet = 0;
                        //rowIndex++;
                    #endregion
                        averageDealer = 0;
                        marketModelCount = 1;
                    }
                }
                /* Penjelasan case di bawah terjadi pada saat market Model dan Model Category berubah :
                 * 1.Biasanya pada opsi Area, dealer, outlet dan model = True
                 * 2.Biasanya pada opsi Area, dealer,outlet,model dan colour = True*/
                else if (year == row["Year"].ToString()
                && seq == row["seq"].ToString()
                && seq2 == row["seq2"].ToString()
        && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
        && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
        && outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
        && modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
        && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    #region Fitfh

                    #region Total
                    decimal averageTotal = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        averageTotal = totalType / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        averageTotal = totalType / averageArea;
                    else
                        averageTotal = totalType / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        //Untuk masukkin nama Area
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.YellowTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.YellowTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "0" && parameter[11] == "1")
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.YellowTotal);
                    else if (parameter[12] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth, ExcelCellStyle.YellowTotal);
                    else if (parameter[12] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, modelWidth, ExcelCellStyle.YellowTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(averageTotal) && janType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(averageTotal) && febType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(averageTotal) && marType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(averageTotal) && aprType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(averageTotal) && mayType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(averageTotal) && junType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(averageTotal) && julType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(averageTotal) && augType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(averageTotal) && sepType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(averageTotal) && octType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(averageTotal) && novType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(averageTotal) && decType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);
                    excelReport.SetCellValue(averageTotal.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / totalAVGRow;
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "0" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[12] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[12] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;
                    totalAVGRow = 0;
                    #endregion

                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();

                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                    {
                        if (parameter[13] == "1")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                            colorCategory = row["ColourName"].ToString();

                        }
                        else
                            excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    }

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    #endregion
                    marketModelCount++;
                }
                /* Penjelasan case di bawah terjadi pada saat market Model ,model Catagory dan outlet berubah :
                 * 1.Biasanya pada opsi Area, dealer, outlet dan model = True*/
                else if (year == row["Year"].ToString()
               && seq == row["seq"].ToString()
               && seq2 == row["seq2"].ToString()
               && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
               && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
               && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
               && modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
               && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    #region Six
                    decimal averageTotalType = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        averageTotalType = totalType / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        averageTotalType = totalType / averageArea;
                    else
                        averageTotalType = totalType / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

                    CreateBlueTypeDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / totalAVGRow;
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        averageTotalType = totalSubTtl / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        averageTotalType = totalSubTtl / averageArea;
                    else
                        averageTotalType = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(averageTotalType) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(averageTotalType) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(averageTotalType) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(averageTotalType) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(averageTotalType) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(averageTotalType) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(averageTotalType) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(averageTotalType) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(averageTotalType) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(averageTotalType) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(averageTotalType) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(averageTotalType) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(averageTotalType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    //Untuk masukkin nama Outlet
                    excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedStandardWrap);

                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                    outlet = row["BranchName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    if (parameter[12].ToString() == "1") averageMonth = 0;
                    totalAVGRow = 0;
                    TotalAVGOutletRow = 0;
                    totalRowDtl = 0;
                    spaceTotal = 0;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                    if (parameter[13] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    #endregion
                }
                else if (year == row["Year"].ToString()
               && seq == row["seq"].ToString()
          && seq2 == row["seq2"].ToString()
          && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
          && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
          && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
          && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
          && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    #region Six Extension
                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                    CreateBlueTypeDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / totalAVGRow;
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageMonth;
                    else
                        avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;
                    decimal average = 0;
                    if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageMonth;
                    else
                        average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janSubTtl / totalAVGRow;
                    febAVG = febSubTtl / totalAVGRow;
                    marAVG = marSubTtl / totalAVGRow;
                    aprAVG = aprSubTtl / totalAVGRow;
                    mayAVG = maySubTtl / totalAVGRow;
                    junAVG = junSubTtl / totalAVGRow;
                    julAVG = julSubTtl / totalAVGRow;
                    augAVG = augSubTtl / totalAVGRow;
                    sepAVG = sepSubTtl / totalAVGRow;
                    octAVG = octSubTtl / totalAVGRow;
                    novAVG = novSubTtl / totalAVGRow;
                    decAVG = decSubTtl / totalAVGRow;
                    totalAVG = totalSubTtl / totalAVGRow;
                    if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageMonth;
                    else
                        avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    //Untuk masukkin nama Outlet
                    excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedStandardWrap);

                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                    outlet = row["BranchName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    totalAVGRow = 0;
                    totalRowDtl = 0;
                    spaceTotal = 0;
                    if (parameter[12].ToString() == "1") averageMonth = 0;
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                    if (parameter[13] == "1")
                    {
                        colorCategory = row["ColourName"].ToString();
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    #endregion
                }
                /* Penjelasan case di bawah terjadi pada saat seluruh outlet sudah ditampilkan untuk 1 dealer dan ingin mulain memasukkan total per dealer
                 * ingin menampilkan total per dealer di bagian atasberubah :
                 * 1.Biasanya pada opsi Area, dealer, outlet dan model = True
                 * 2.Biasanya pada opsi Area, dealer, outlet,model dan colour= True*/
                else if (year == row["Year"].ToString()
               && seq != row["seq"].ToString()
             && seq2 == row["seq2"].ToString()
             && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
             && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
             && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
             && modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
             && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Seven
                    decimal average = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalType / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalType / averageArea;
                    else
                        average = totalType / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / totalAVGRow;
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalSubTtl / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageArea;
                    else
                        average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        //Total Per Outlet
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    //Untuk masukkin nama Outlet
                    excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedTop);
                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, Convert.ToInt32(row["rowType"].ToString()) + marketModelCount + totalRow, dealerWidth, ExcelCellStyle.LeftBorderedStandardWrap);


                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;

                    sbSaveCurrentState = excelReport.SaveCurrentState();
                    Thread.Sleep(1000);
                    //Untuk masukkin nama Dealer terakhir
                    totalRowDtl = 0;
                    TotalAVGOutletRow = 0;
                    totalAVGRow = 0;
                    spaceTotal = 0;
                    totalRow = 0;
                    rowIndex--;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());

                    if (parameter[13] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    seq = row["seq"].ToString();
                    outlet = row["BranchName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                }
                else if (year == row["Year"].ToString()
               && seq != row["seq"].ToString()
        && seq2 == row["seq2"].ToString()
        && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
        && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
        && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
        && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
        && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Seven Extendsion
                    decimal average = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalType / averageMonth;
                    else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                        average = totalType / averageArea;
                    else
                        average = totalType / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / totalAVGRow;
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalSubTtl / averageMonth;
                    else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                        average = totalSubTtl / averageArea;
                    else
                        average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        //Total Per Outlet
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / totalAVGRow;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;


                    //Untuk masukkin nama Outlet
                    excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedTop);
                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, Convert.ToInt32(row["rowType"].ToString()) + marketModelCount + totalRow, dealerWidth, ExcelCellStyle.LeftBorderedStandardWrap);

                    totalAVGRow = 0;
                    TotalAVGOutletRow = 0;
                    totalRowDtl = 0;
                    spaceTotal = 0;
                    totalRow = 0;

                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;

                    sbSaveCurrentState = excelReport.SaveCurrentState();
                    Thread.Sleep(1000);
                    //Untuk masukkin nama Dealer terakhir
                    totalRowDtl = 0;
                    totalAVGRow = 0;
                    spaceTotal = 0;
                    //if (parameter[12].ToString() == "1") averageMonth = 0;
                    rowIndex--;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());

                    if (parameter[13] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    seq = row["seq"].ToString();
                    outlet = row["BranchName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    marketModelCount = 1;
                }
                else if (year == row["Year"].ToString()
          && seq != row["seq"].ToString()
   && seq2 == row["seq2"].ToString()
   && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
   && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
   && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
   && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
   && marketModel == (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Seven Extendsion
                    decimal average = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalType / averageMonth;
                    else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                        average = totalType / averageArea;
                    else
                        average = totalType / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / totalAVGRow;
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalSubTtl / averageMonth;
                    else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                        average = totalSubTtl / averageArea;
                    else
                        average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        //Total Per Outlet
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / totalAVGRow;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;


                    //Untuk masukkin nama Outlet
                    excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedTop);
                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, Convert.ToInt32(row["rowType"].ToString()) + marketModelCount + totalRow, dealerWidth, ExcelCellStyle.LeftBorderedStandardWrap);

                    totalAVGRow = 0;
                    TotalAVGOutletRow = 0;
                    totalRowDtl = 0;
                    spaceTotal = 0;
                    totalRow = 0;

                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;

                    sbSaveCurrentState = excelReport.SaveCurrentState();
                    Thread.Sleep(1000);
                    //Untuk masukkin nama Dealer terakhir
                    totalRowDtl = 0;
                    totalAVGRow = 0;
                    spaceTotal = 0;
                    //if (parameter[12].ToString() == "1") averageMonth = 0;
                    rowIndex--;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());

                    if (parameter[13] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    seq = row["seq"].ToString();
                    outlet = row["BranchName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    marketModelCount = 1;
                }
                else if (year == row["Year"].ToString()
               && seq != row["seq"].ToString()
        && seq2 == row["seq2"].ToString()
        && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
        && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
        && outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
        && modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
        && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Seven Second Extension
                    decimal average = 0;
                    if (parameter[12].ToString() == "1")
                        average = totalType / averageMonth;
                    else
                        average = totalType / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / totalAVGRow;
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageMonth;
                    else
                        avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageMonth;
                    else
                        average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        //Total Per Outlet
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageMonth;
                    else
                        avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    //Untuk masukkin nama Outlet
                    excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedTop);
                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, Convert.ToInt32(row["rowType"].ToString()) + marketModelCount + totalRow, dealerWidth, ExcelCellStyle.LeftBorderedStandardWrap);

                    TotalAVGOutletRow = 0;
                    totalAVGRow = 0;
                    totalRowDtl = 0;
                    spaceTotal = 0;
                    totalRow = 0;


                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;

                    sbSaveCurrentState = excelReport.SaveCurrentState();
                    Thread.Sleep(1000);
                    //Untuk masukkin nama Dealer terakhir
                    totalRowDtl = 0;
                    totalAVGRow = 0;
                    spaceTotal = 0;

                    rowIndex--;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());

                    if (parameter[13] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    seq = row["seq"].ToString();
                    outlet = row["BranchName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    marketModelCount = 1;
                }
                else if (year == row["Year"].ToString()
          && seq != row["seq"].ToString()
   && seq2 == row["seq2"].ToString()
   && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
   && dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
   && outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
   && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
   && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Seven Second Extension
                    decimal average = 0;
                    if (parameter[12].ToString() == "1")
                        average = totalType / averageMonth;
                    else
                        average = totalType / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / totalAVGRow;
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageMonth;
                    else
                        avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageMonth;
                    else
                        average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        //Total Per Outlet
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageMonth;
                    else
                        avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    //Untuk masukkin nama Outlet
                    excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedTop);
                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, Convert.ToInt32(row["rowType"].ToString()) + marketModelCount + totalRow, dealerWidth, ExcelCellStyle.LeftBorderedStandardWrap);

                    TotalAVGOutletRow = 0;
                    totalAVGRow = 0;
                    totalRowDtl = 0;
                    spaceTotal = 0;
                    totalRow = 0;


                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;

                    sbSaveCurrentState = excelReport.SaveCurrentState();
                    Thread.Sleep(1000);
                    //Untuk masukkin nama Dealer terakhir
                    totalRowDtl = 0;
                    totalAVGRow = 0;
                    spaceTotal = 0;

                    rowIndex--;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());

                    if (parameter[13] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    seq = row["seq"].ToString();
                    outlet = row["BranchName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    marketModelCount = 1;
                }

                /* Penjelasan case di bawah terjadi pada saat seluruh outlet sudah ditampilkan untuk 1 dealer dan ingin mulain memasukkan total per dealer
                 * ingin menampilkan total per dealer di bagian atasberubah :
                 * 1.Biasanya pada opsi Area, dealer, outlet dan model = True*/
                else if (year == row["Year"].ToString()
          && seq != row["seq"].ToString()
  && seq2 == row["seq2"].ToString()
  && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
  && dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
  && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
  && modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
  && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Eight
                    decimal average = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalType / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalType / averageArea;
                    else
                        average = totalType / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / TotalAVGOutletRow;
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalSubTtl / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageArea;
                    else
                        average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        //Total Per Outlet
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;


                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                    TotalAVGOutletRow = 0;
                    totalAVGRow = 0;
                    totalRowDtl = 0;
                    spaceTotal = 0;

                    excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL", 0 + dealerWidth, beforeRowType + marketModelCount, outletWidth, ExcelCellStyle.LeftBorderedTop);
                    Thread.Sleep(1000);
                    excelReport.LoadAndReplaceCurrentState(RestorePoint.TotalTableRestorePoint.ToString(), sbSaveCurrentState);
                    Thread.Sleep(1000);
                    totalRow = 0;
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalTableRestorePoint.ToString());
                    rowIndex++;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    dealer = row["CompanyName"].ToString();
                    outlet = row["BranchName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                /* Penjelasan case di bawah terjadi pada saat seluruh outlet sudah ditampilkan untuk 1 dealer dan ingin mulain memasukkan total per dealer
             * ingin menampilkan total per dealer di bagian atasberubah :
             * 1.Biasanya pada opsi Area, dealer, outlet dan model = True*/
                else if (year == row["Year"].ToString()
          && seq != row["seq"].ToString()
  && seq2 == row["seq2"].ToString()
  && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
  && dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
  && outlet != (parameter[11] == "1" ? row["BranchName"].ToString() : "")
  && modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
  && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Eight Extensions
                    if (parameter[5].ToString() == "ALL")
                    {
                        decimal average = 0;
                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalType / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalType / averageArea;
                        else
                            average = totalType / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else
                            //Untuk masukkin total per Category
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janType / totalAVGRow;
                        febAVG = febType / totalAVGRow;
                        marAVG = marType / totalAVGRow;
                        aprAVG = aprType / totalAVGRow;
                        mayAVG = mayType / totalAVGRow;
                        junAVG = junType / totalAVGRow;
                        julAVG = julType / totalAVGRow;
                        augAVG = augType / totalAVGRow;
                        sepAVG = sepType / totalAVGRow;
                        octAVG = octType / totalAVGRow;
                        novAVG = novType / totalAVGRow;
                        decAVG = decType / totalAVGRow;
                        totalAVG = totalType / TotalAVGOutletRow;
                        decimal avg = 0;
                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalSubTtl / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalSubTtl / averageArea;
                        else
                            average = totalSubTtl / totalMonth;

                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else
                            //Total Per Outlet
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                        excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;


                        janAVG = janSubTtl / TotalAVGOutletRow;
                        febAVG = febSubTtl / TotalAVGOutletRow;
                        marAVG = marSubTtl / TotalAVGOutletRow;
                        aprAVG = aprSubTtl / TotalAVGOutletRow;
                        mayAVG = maySubTtl / TotalAVGOutletRow;
                        junAVG = junSubTtl / TotalAVGOutletRow;
                        julAVG = julSubTtl / TotalAVGOutletRow;
                        augAVG = augSubTtl / TotalAVGOutletRow;
                        sepAVG = sepSubTtl / TotalAVGOutletRow;
                        octAVG = octSubTtl / TotalAVGOutletRow;
                        novAVG = novSubTtl / TotalAVGOutletRow;
                        decAVG = decSubTtl / TotalAVGOutletRow;
                        totalAVG = totalSubTtl / TotalAVGOutletRow;
                        if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                        janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                        TotalAVGOutletRow = 0;
                        totalAVGRow = 0;
                        totalRowDtl = 0;
                        spaceTotal = 0;

                        excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL", 0 + dealerWidth, beforeRowType + marketModelCount, outletWidth, ExcelCellStyle.LeftBorderedTop);
                        Thread.Sleep(1000);
                    }
                    excelReport.LoadAndReplaceCurrentState(RestorePoint.TotalTableRestorePoint.ToString(), sbSaveCurrentState);
                    Thread.Sleep(1000);
                    totalRow = 0;
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalTableRestorePoint.ToString());
                    rowIndex++;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    dealer = row["CompanyName"].ToString();
                    outlet = row["BranchName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                /* Penjelasan case di bawah terjadi pada saat seluruh ModelType sudah ditampilkan dan ingin menampilkan total per dealer:
                 * 1.Biasanya pada opsi Area, dealer dan model = True
                 */
                else if (year == row["Year"].ToString()
               && seq != row["seq"].ToString()
  && seq2 == row["seq2"].ToString()
  && area == (parameter[9] == "1" ? row["Area"].ToString() : "")
  && dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
  && outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
  && modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
  && marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Nine
                    decimal average = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalType / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalType / averageArea;
                    else
                        average = totalType / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / TotalAVGOutletRow;

                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalSubTtl / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageArea;
                    else
                        average = totalSubTtl / totalMonth;

                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageArea;
                    //else
                    //    average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    //Untuk masukkin nama Area
                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                    TotalAVGOutletRow = 0;
                    totalRowDtl = 0;
                    totalAVGRow = 0;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                    if (parameter[13] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    dealer = row["CompanyName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                else if (year == row["Year"].ToString()
          && seq != row["seq"].ToString()
&& seq2 == row["seq2"].ToString()
&& area == (parameter[9] == "1" ? row["Area"].ToString() : "")
&& dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
&& outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
&& modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
&& marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Nine
                    decimal average = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalType / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalType / averageArea;
                    else
                        average = totalType / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / TotalAVGOutletRow;

                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalSubTtl / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageArea;
                    else
                        average = totalSubTtl / totalMonth;

                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageArea;
                    //else
                    //    average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    //Untuk masukkin nama Area
                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                    TotalAVGOutletRow = 0;
                    totalRowDtl = 0;
                    totalAVGRow = 0;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                    if (parameter[13] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    dealer = row["CompanyName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                else if (year == row["Year"].ToString()
               && seq == row["seq"].ToString()
&& seq2 == row["seq2"].ToString()
&& area == (parameter[9] == "1" ? row["Area"].ToString() : "")
&& dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
&& outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
&& modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
&& marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Nine Extends
                    decimal average = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalType / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalType / averageArea;
                    else
                        average = totalType / totalMonth;
                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / totalAVGRow;
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalAVG / averageArea;
                    else
                        average = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalSubTtl / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageArea;
                    else
                        average = totalSubTtl / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageArea;
                    //else
                    //    average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;


                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalAVG / averageArea;
                    else
                        average = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    //Untuk masukkin nama Area
                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                    totalRowDtl = 0;
                    totalAVGRow = 0;
                    TotalAVGOutletRow = 0;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                    if (parameter[13] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    dealer = row["CompanyName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                else if (year == row["Year"].ToString()
               && seq == row["seq"].ToString()
&& seq2 == row["seq2"].ToString()
&& area == (parameter[9] == "1" ? row["Area"].ToString() : "")
&& dealer != (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
&& outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
&& modelCategory != (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
&& marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Nine Extends
                    decimal average = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalType / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalType / averageArea;
                    else
                        average = totalType / totalMonth;
                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / totalAVGRow;
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalAVG / averageArea;
                    else
                        average = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalSubTtl / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageArea;
                    else
                        average = totalSubTtl / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    average = totalSubTtl / averageArea;
                    //else
                    //    average = totalSubTtl / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;


                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        average = totalAVG / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        average = totalAVG / averageArea;
                    else
                        average = totalAVG / totalMonth;
                    //if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageMonth;
                    //else if (parameter[12].ToString() == "1")
                    //    avg = totalAVG / averageArea;
                    //else
                    //    avg = totalAVG / totalMonth;

                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    //Untuk masukkin nama Area
                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                    janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                    janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                    totalRowDtl = 0;
                    totalAVGRow = 0;
                    TotalAVGOutletRow = 0;

                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                    if (parameter[13] == "1")
                    {
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    dealer = row["CompanyName"].ToString();
                    marketModel = row["MarketModel"].ToString();
                    modelCategory = row["ModelCatagory"].ToString();
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                /* Penjelasan case di bawah terjadi pada saat Market model kendaraan berubah:
                 * 1.Biasanya pada opsi Area, dealer, model dan colour = True
                 */
                else if (year == row["Year"].ToString()
&& seq == row["seq"].ToString()
&& seq2 == row["seq2"].ToString()
&& area == (parameter[9] == "1" ? row["Area"].ToString() : "")
&& dealer == (parameter[10] == "1" ? row["CompanyName"].ToString() : "")
&& outlet == (parameter[11] == "1" ? row["BranchName"].ToString() : "")
&& modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
&& marketModel != (parameter[12] == "1" ? row["MarketModel"].ToString() : ""))
                {
                    #region Ten
                    if (parameter[13] == "1" && parameter[11] == "0")
                    {

                        //Untuk masukkin nama Area
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());

                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        totalColour = 0;
                        colorCategory = row["ColourName"].ToString();
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        totalColour = 0;
                        colorCategory = row["ColourName"].ToString();

                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                    }
                    else
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    marketModel = row["MarketModel"].ToString();
                    #endregion
                }

                else if (year == row["Year"].ToString()
               && area != (parameter[9] == "1" ? row["Area"].ToString() : ""))
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Eleventh
                    if (parameter[14] != "")
                    {
                        if (parameter[4].ToString() == "ALL" && parameter[6].ToString() == "ALL" && parameter[8].ToString() == "ALL" && area == "_JABODETABEK" && parameter[11] == "0")
                        {
                            if (parameter[5].ToString() == "ALL")
                            {
                                decimal avg = 0;
                                excelReport.SetCellValue("SUB TOTAL " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.BrownTotal);

                                if (parameter[11].ToString() == "1")
                                    avg = totalJabodetabek / averageArea;
                                else
                                    avg = totalJabodetabek / averageMonth;
                                excelReport.SetCellValue(janJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janJabodetabek < Convert.ToInt32(avg) && janJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(febJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febJabodetabek < Convert.ToInt32(avg) && febJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(marJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marJabodetabek < Convert.ToInt32(avg) && marJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(aprJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprJabodetabek < Convert.ToInt32(avg) && aprJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(mayJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayJabodetabek < Convert.ToInt32(avg) && mayJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(junJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junJabodetabek < Convert.ToInt32(avg) && junJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(julJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julJabodetabek < Convert.ToInt32(avg) && julJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(augJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augJabodetabek < Convert.ToInt32(avg) && augJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(sepJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepJabodetabek < Convert.ToInt32(avg) && sepJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(octJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octJabodetabek < Convert.ToInt32(avg) && octJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(novJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novJabodetabek < Convert.ToInt32(avg) && novJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(decJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decJabodetabek < Convert.ToInt32(avg) && decJabodetabek != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(totalJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(avg.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);

                                rowIndex++;
                            }
                        }
                        averageMonth = 0;
                        averageArea = 0;
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                        {
                            excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandard);
                        }

                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    }
                    else if (parameter[12] == "1")
                    {
                        decimal average = 0;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalType / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalType / averageArea;
                        else
                            average = totalType / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else
                            //Untuk masukkin total per Category
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janType / totalAVGRow;
                        febAVG = febType / totalAVGRow;
                        marAVG = marType / totalAVGRow;
                        aprAVG = aprType / totalAVGRow;
                        mayAVG = mayType / totalAVGRow;
                        junAVG = junType / totalAVGRow;
                        julAVG = julType / totalAVGRow;
                        augAVG = augType / totalAVGRow;
                        sepAVG = sepType / totalAVGRow;
                        octAVG = octType / totalAVGRow;
                        novAVG = novType / totalAVGRow;
                        decAVG = decType / totalAVGRow;
                        totalAVG = totalType / totalAVGRow;
                        decimal avg = 0;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        average = totalSubTtl / totalMonth;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalSubTtl / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalSubTtl / averageArea;
                        else
                            average = totalSubTtl / totalMonth;


                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else
                            //Total Per Outlet
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                        excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janSubTtl / TotalAVGOutletRow;
                        febAVG = febSubTtl / TotalAVGOutletRow;
                        marAVG = marSubTtl / TotalAVGOutletRow;
                        aprAVG = aprSubTtl / TotalAVGOutletRow;
                        mayAVG = maySubTtl / TotalAVGOutletRow;
                        junAVG = junSubTtl / TotalAVGOutletRow;
                        julAVG = julSubTtl / TotalAVGOutletRow;
                        augAVG = augSubTtl / TotalAVGOutletRow;
                        sepAVG = sepSubTtl / TotalAVGOutletRow;
                        octAVG = octSubTtl / TotalAVGOutletRow;
                        novAVG = novSubTtl / TotalAVGOutletRow;
                        decAVG = decSubTtl / TotalAVGOutletRow;
                        totalAVG = totalSubTtl / TotalAVGOutletRow;
                        avg = 0;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                        janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                        totalRowDtl = 0;
                        TotalAVGOutletRow = 0;
                        spaceTotal = 0;
                        totalAVGRow = 0;
                        totalRow = 0;

                        if (parameter[11] == "1")
                        {
                            excelReport.RemoveRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString());
                            excelReport.RemoveRestorePoint(RestorePoint.TotalTableRestorePoint.ToString());
                            if (parameter[5].ToString() == "ALL")
                            {
                                if (area != "_JABODETABEK")
                                    excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);
                                else
                                    excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL DEALER " + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);


                                if (parameter[2].ToString() == "ALL" && parameter[4].ToString() == "ALL" && parameter[6].ToString() == "ALL" && area == "_JABODETABEK")
                                {
                                    excelReport.SetCellValue("TOTAL " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.YellowTotal);

                                    if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        average = totalJabodetabek / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        average = totalJabodetabek / averageArea;
                                    else
                                        average = totalJabodetabek / totalMonth;

                                    excelReport.SetCellValue(janJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janJabodetabek < Convert.ToInt32(average) && janJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(febJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febJabodetabek < Convert.ToInt32(average) && febJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(marJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marJabodetabek < Convert.ToInt32(average) && marJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(aprJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprJabodetabek < Convert.ToInt32(average) && aprJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(mayJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayJabodetabek < Convert.ToInt32(average) && mayJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(junJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junJabodetabek < Convert.ToInt32(average) && junJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(julJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julJabodetabek < Convert.ToInt32(average) && julJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(augJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augJabodetabek < Convert.ToInt32(average) && augJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(sepJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepJabodetabek < Convert.ToInt32(average) && sepJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(octJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octJabodetabek < Convert.ToInt32(average) && octJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(novJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novJabodetabek < Convert.ToInt32(average) && novJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(decJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decJabodetabek < Convert.ToInt32(average) && decJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(totalJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);

                                    rowIndex++;

                                    janAVG = janJabodetabek / 2;
                                    febAVG = febJabodetabek / 2;
                                    marAVG = marJabodetabek / 2;
                                    aprAVG = aprJabodetabek / 2;
                                    mayAVG = mayJabodetabek / 2;
                                    junAVG = junJabodetabek / 2;
                                    julAVG = julJabodetabek / 2;
                                    augAVG = augJabodetabek / 2;
                                    sepAVG = sepJabodetabek / 2;
                                    octAVG = octJabodetabek / 2;
                                    novAVG = novJabodetabek / 2;
                                    decAVG = decJabodetabek / 2;
                                    totalAVG = totalJabodetabek / 2;

                                    if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        avg = totalAVG / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        avg = totalAVG / averageArea;
                                    else
                                        avg = totalAVG / totalMonth;

                                    excelReport.SetCellValue("AVG " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    rowIndex++;
                                }
                            }
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalTableRestorePoint.ToString());
                            rowIndex++;
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                        }
                        else
                        {
                            if (parameter[5].ToString() == "ALL")
                            {
                                if (area != "_JABODETABEK")
                                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);
                                else
                                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), "TOTAL DEALER " + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                                if (parameter[2].ToString() == "ALL" && parameter[4].ToString() == "ALL" && parameter[6].ToString() == "ALL" && area == "_JABODETABEK")
                                {
                                    excelReport.SetCellValue("SUB TOTAL " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.YellowTotal);

                                    if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        average = totalJabodetabek / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        average = totalJabodetabek / averageArea;
                                    else
                                        average = totalJabodetabek / totalMonth;

                                    excelReport.SetCellValue(janJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janJabodetabek < Convert.ToInt32(average) && janJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(febJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febJabodetabek < Convert.ToInt32(average) && febJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(marJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marJabodetabek < Convert.ToInt32(average) && marJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(aprJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprJabodetabek < Convert.ToInt32(average) && aprJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(mayJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayJabodetabek < Convert.ToInt32(average) && mayJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(junJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junJabodetabek < Convert.ToInt32(average) && junJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(julJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julJabodetabek < Convert.ToInt32(average) && julJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(augJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augJabodetabek < Convert.ToInt32(average) && augJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(sepJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepJabodetabek < Convert.ToInt32(average) && sepJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(octJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octJabodetabek < Convert.ToInt32(average) && octJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(novJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novJabodetabek < Convert.ToInt32(average) && novJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(decJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decJabodetabek < Convert.ToInt32(average) && decJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(totalJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);
                                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);

                                    rowIndex++;

                                    janAVG = janJabodetabek / 2;
                                    febAVG = febJabodetabek / 2;
                                    marAVG = marJabodetabek / 2;
                                    aprAVG = aprJabodetabek / 2;
                                    mayAVG = mayJabodetabek / 2;
                                    junAVG = junJabodetabek / 2;
                                    julAVG = julJabodetabek / 2;
                                    augAVG = augJabodetabek / 2;
                                    sepAVG = sepJabodetabek / 2;
                                    octAVG = octJabodetabek / 2;
                                    novAVG = novJabodetabek / 2;
                                    decAVG = decJabodetabek / 2;
                                    totalAVG = totalJabodetabek / 2;

                                    if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                                        avg = totalAVG / averageMonth;
                                    else if (parameter[12].ToString() == "1")
                                        avg = totalAVG / averageArea;
                                    else
                                        avg = totalAVG / totalMonth;

                                    excelReport.SetCellValue("AVG " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                    rowIndex++;
                                }
                            }
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                        }

                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                            colorCategory = row["ColourName"].ToString();
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                            colorCategory = row["ColourName"].ToString();
                        }
                        else
                        {
                            excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        }
                        averageArea = 0;
                        averageMonth = 0;

                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                    }
                    else
                    {
                        averageMonth = 0;
                        averageArea = 0;
                        if (parameter[11] == "1")
                            excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                            excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);

                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                        totalOutlet++;
                        TotalAVGOutletRow++;
                        TotalAVGAreaRow++;
                        TotalAVGAreaRowJBDTK++;
                        TotalAVGDealerRow++;
                        totalAVGGTRow++;
                    }

                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    seq2 = row["seq2"].ToString();
                    area = row["Area"].ToString();
                    dealer = (parameter[10] == "1" ? row["CompanyName"].ToString() : "");
                    outlet = (parameter[11] == "1" ? row["BranchName"].ToString() : "");
                    modelCategory = (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "");
                    marketModel = (parameter[12] == "1" ? row["MarketModel"].ToString() : "");
                    #endregion
                    averageDealer = 0;
                    marketModelCount = 1;
                }
                /* Penjelasan case di bawah terjadi pada saat nama dealer berubah :
                 * 1.Biasanya pada opsi Area dan dealer True*/
                else if (year == row["Year"].ToString()
               && seq == row["seq"].ToString()
          && seq2 == row["seq2"].ToString()
          && area == (parameter[9] == "1" ? row["Area"].ToString() : ""))
                {
                    #region Twelve
                    if (parameter[14] != "" && parameter[10] == "1" && parameter[11] == "0")
                    {
                        excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);

                    }
                    else if (parameter[14] != "" && parameter[10] == "1" && parameter[11] == "1")
                    {
                        excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandard);
                        outlet = row["BranchName"].ToString();
                    }
                    //Colour
                    else if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                        colorCategory = row["ColourName"].ToString();
                    }
                    //Model
                    else if (parameter[12] == "1")
                    {
                        if (modelCategory == (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "")
                                && marketModel != row["MarketModel"].ToString())
                        {
                            excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            marketModel = row["MarketModel"].ToString();
                        }
                    }
                    //Outlet
                    else if (parameter[11] == "1")
                    {
                        if (outlet != row["BranchName"].ToString())
                        {
                            excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandard);
                            outlet = row["BranchName"].ToString();
                            totalOutlet++;
                            TotalAVGOutletRow++;
                        }
                    }
                    //Dealer
                    else if (parameter[10] == "1")
                    {
                        if (dealer != row["CompanyName"].ToString())
                        {
                            excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);
                            TotalAVGOutletRow++;
                            TotalAVGAreaRow++;
                            TotalAVGAreaRowJBDTK++;
                            TotalAVGDealerRow++;
                            totalAVGGTRow++;
                        }
                    }
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                        avg = Convert.ToDecimal(row["Total"].ToString()) / averageMonth;
                    else if (parameter[12].ToString() == "1")
                        avg = Convert.ToDecimal(row["Total"].ToString()) / averageArea;
                    else
                        avg = Convert.ToDecimal(row["Total"].ToString()) / totalMonth;

                    excelReport.SetCellValue(Convert.ToDecimal(row["Jan"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Jan"].ToString())) < Convert.ToInt32(avg) && Convert.ToDecimal(row["Jan"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Feb"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Feb"].ToString())) < Convert.ToInt32(avg) && Convert.ToDecimal(row["Feb"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Mar"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Mar"].ToString())) < Convert.ToInt32(avg) && Convert.ToDecimal(row["Mar"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Apr"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Apr"].ToString())) < Convert.ToInt32(avg) && Convert.ToDecimal(row["Apr"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["May"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["May"].ToString())) < Convert.ToInt32(avg) && Convert.ToDecimal(row["May"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Jun"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Jun"].ToString())) < Convert.ToInt32(avg) && Convert.ToDecimal(row["Jun"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Jul"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Jul"].ToString())) < Convert.ToInt32(avg) && Convert.ToDecimal(row["Jul"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Aug"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Aug"].ToString())) < Convert.ToInt32(avg) && Convert.ToDecimal(row["Aug"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Sep"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Sep"].ToString())) < Convert.ToInt32(avg) && Convert.ToDecimal(row["Sep"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Oct"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Oct"].ToString())) < Convert.ToInt32(avg) && Convert.ToDecimal(row["Oct"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Nov"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Nov"].ToString())) < Convert.ToInt32(avg) && Convert.ToDecimal(row["Nov"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Dec"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(Convert.ToDecimal(row["Dec"].ToString())) < Convert.ToInt32(avg) && Convert.ToDecimal(row["Dec"].ToString()) != 0) ? dealerStat == true ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.RightBorderedStandardRedNumber : dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(row["Total"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
                    excelReport.SetCellValue(Convert.ToDecimal(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, dealerStat == true ? ExcelCellStyle.YellowTotalNumber : ExcelCellStyle.RightBorderedStandardNumber, true);

                    //Dealer
                    if (parameter[10] == "1")
                    {
                        if (dealer != row["CompanyName"].ToString())
                        {
                            dealer = row["CompanyName"].ToString();
                            totalRowDtl = 0;

                            if (row["Seq"].ToString() != "1")
                                totalDealerGT++;
                            //To Add Blank line before it start new Area...(^0^)V
                            //rowIndex++;
                        }
                    }
                    #endregion

                }
                else if (year != row["Year"].ToString())
                {
                    marketModelCount = marketModelCount == 1 ? 4 : 6;
                    #region Thirteen
                    if (parameter[14] != "")
                    {
                        if (parameter[11] == "0")
                        {
                            if (parameter[5] == "ALL")
                            {
                                decimal average = totalGT / averageMonthGT;
                                excelReport.SetCellValue("TOTAL DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.GreenTotal);
                                excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                                rowIndex++;

                                janAVG = janGT / totalDealerGT;
                                febAVG = febGT / totalDealerGT;
                                marAVG = marGT / totalDealerGT;
                                aprAVG = aprGT / totalDealerGT;
                                mayAVG = mayGT / totalDealerGT;
                                junAVG = junGT / totalDealerGT;
                                julAVG = julGT / totalDealerGT;
                                augAVG = augGT / totalDealerGT;
                                sepAVG = sepGT / totalDealerGT;
                                octAVG = octGT / totalDealerGT;
                                novAVG = novGT / totalDealerGT;
                                decAVG = decGT / totalDealerGT;//TotalAVGDealerRow
                                totalAVG = totalGT / totalDealerGT;
                                decimal avg = totalAVG / averageMonthGT;

                                excelReport.SetCellValue("AVG DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            }
                            averageMonth = 0;
                            averageMonthGT = 0;
                            totalRowDtl = 0;
                            TotalAVGOutletRow = 0;
                            spaceTotal = 0;
                            totalAVGRow = 0;
                            totalRow = 0;
                            rowIndex = 0;
                            averageArea = 0;
                            averageDealer = 0;
                            currentYear = Convert.ToInt32(row["Year"].ToString());
                            janGT = febGT = marGT = aprGT = mayGT = junGT = julGT = augGT = sepGT = octGT = novGT = decGT = totalGT = 0;
                            janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                            janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;


                            excelReport.ChangeSheet(row["Year"].ToString());
                            CreateHeader(excelReport, rowIndex, totalDetailWidth, title, currentYear.ToString());

                            seq = row["Seq"].ToString();
                            seq2 = row["Seq2"].ToString();
                            area = parameter[9].ToString() == "1" ? row["Area"].ToString() : "";
                            dealer = parameter[10].ToString() == "1" ? row["CompanyName"].ToString() : "";
                            outlet = parameter[11].ToString() == "1" ? row["BranchName"].ToString() : "";
                            modelCategory = dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "";
                            marketModel = parameter[12].ToString() == "1" ? row["MarketModel"].ToString() : "";
                            colorCategory = parameter[13].ToString() == "1" ? row["ColourName"].ToString() : "";
                            year = row["Year"].ToString();

                            totalMonth = (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                                && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 :
                                (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) == currentYear
                                && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) :
                                (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                                && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) == currentYear) ? Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) :
                                Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) + 1;

                            averageMonth = 0;

                            excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);
                        }
                        else
                        {
                            if (parameter[5].ToString() == "ALL")
                            {
                                decimal average = totalGT / averageMonthGT;
                                excelReport.SetCellValue("TOTAL DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.GreenTotal);
                                excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                                excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                                rowIndex++;

                                janAVG = janGT / totalDealerGT;
                                febAVG = febGT / totalDealerGT;
                                marAVG = marGT / totalDealerGT;
                                aprAVG = aprGT / totalDealerGT;
                                mayAVG = mayGT / totalDealerGT;
                                junAVG = junGT / totalDealerGT;
                                julAVG = julGT / totalDealerGT;
                                augAVG = augGT / totalDealerGT;
                                sepAVG = sepGT / totalDealerGT;
                                octAVG = octGT / totalDealerGT;
                                novAVG = novGT / totalDealerGT;
                                decAVG = decGT / totalDealerGT;//TotalAVGDealerRow
                                totalAVG = totalGT / totalDealerGT;
                                decimal avg = totalAVG / averageMonthGT;

                                excelReport.SetCellValue("AVG DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                                excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);

                                excelReport.RemoveRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.OutletRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.JanRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.FebRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.MarRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.AprRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.MayRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.JunRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.JulRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.AugRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.SepRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.OctRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.NovRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.DecRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.TotalRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.AverageRestorePoint.ToString());
                            }
                            averageMonth = 0;
                            averageMonthGT = 0;
                            totalRowDtl = 0;
                            TotalAVGOutletRow = 0;
                            spaceTotal = 0;
                            totalAVGRow = 0;
                            totalRow = 0;
                            rowIndex = 0;
                            averageArea = 0;
                            averageDealer = 0;
                            currentYear = Convert.ToInt32(row["Year"].ToString());
                            janGT = febGT = marGT = aprGT = mayGT = junGT = julGT = augGT = sepGT = octGT = novGT = decGT = totalGT = 0;
                            janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                            janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;

                            excelReport.ChangeSheet(row["Year"].ToString());
                            CreateHeader(excelReport, rowIndex, totalDetailWidth, title, currentYear.ToString());

                            seq = row["Seq"].ToString();
                            seq2 = row["Seq2"].ToString();
                            area = parameter[9].ToString() == "1" ? row["Area"].ToString() : "";
                            dealer = parameter[10].ToString() == "1" ? row["CompanyName"].ToString() : "";
                            outlet = parameter[11].ToString() == "1" ? row["BranchName"].ToString() : "";
                            modelCategory = dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "";
                            marketModel = parameter[12].ToString() == "1" ? row["MarketModel"].ToString() : "";
                            colorCategory = parameter[13].ToString() == "1" ? row["ColourName"].ToString() : "";
                            year = row["Year"].ToString();

                            totalMonth = (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                                && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 :
                                (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) == currentYear
                                && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) :
                                (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                                && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) == currentYear) ? Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) :
                                Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) + 1;

                            averageMonth = 0;


                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.JanRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.FebRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.AprRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MayRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.JunRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.JulRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.AugRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.SepRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OctRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.NovRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.DecRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.AverageRestorePoint.ToString());
                            totalRowDtl++;
                            rowIndex++;
                            excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandardWrap);
                        }

                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    }
                    else if (parameter[12] == "1")
                    {
                        decimal average = 0;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalType / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalType / averageArea;
                        else
                            average = totalType / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else
                            //Untuk masukkin total per Category
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janType / totalAVGRow;
                        febAVG = febType / totalAVGRow;
                        marAVG = marType / totalAVGRow;
                        aprAVG = aprType / totalAVGRow;
                        mayAVG = mayType / totalAVGRow;
                        junAVG = junType / totalAVGRow;
                        julAVG = julType / totalAVGRow;
                        augAVG = augType / totalAVGRow;
                        sepAVG = sepType / totalAVGRow;
                        octAVG = octType / totalAVGRow;
                        novAVG = novType / totalAVGRow;
                        decAVG = decType / totalAVGRow;
                        totalAVG = totalType / TotalAVGOutletRow;
                        decimal avg = 0;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalSubTtl / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalSubTtl / averageArea;
                        else
                            average = totalSubTtl / totalMonth;

                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else
                            //Total Per Outlet
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                        excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janSubTtl / TotalAVGOutletRow;
                        febAVG = febSubTtl / TotalAVGOutletRow;
                        marAVG = marSubTtl / TotalAVGOutletRow;
                        aprAVG = aprSubTtl / TotalAVGOutletRow;
                        mayAVG = maySubTtl / TotalAVGOutletRow;
                        junAVG = junSubTtl / TotalAVGOutletRow;
                        julAVG = julSubTtl / TotalAVGOutletRow;
                        augAVG = augSubTtl / TotalAVGOutletRow;
                        sepAVG = sepSubTtl / TotalAVGOutletRow;
                        octAVG = octSubTtl / TotalAVGOutletRow;
                        novAVG = novSubTtl / TotalAVGOutletRow;
                        decAVG = decSubTtl / TotalAVGOutletRow;
                        totalAVG = totalSubTtl / TotalAVGOutletRow;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        if (parameter[5].ToString() == "ALL")
                        {
                            if (parameter[11] == "1")
                            {
                                excelReport.RemoveRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString());
                                excelReport.RemoveRestorePoint(RestorePoint.TotalTableRestorePoint.ToString());
                                excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);
                            }
                            else
                                excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                            average = totalGT / averageMonthGT;
                            excelReport.SetCellValue("TOTAL DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.GreenTotal);
                            excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                            rowIndex++;

                            janAVG = janGT / totalDealerGT;
                            febAVG = febGT / totalDealerGT;
                            marAVG = marGT / totalDealerGT;
                            aprAVG = aprGT / totalDealerGT;
                            mayAVG = mayGT / totalDealerGT;
                            junAVG = junGT / totalDealerGT;
                            julAVG = julGT / totalDealerGT;
                            augAVG = augGT / totalDealerGT;
                            sepAVG = sepGT / totalDealerGT;
                            octAVG = octGT / totalDealerGT;
                            novAVG = novGT / totalDealerGT;
                            decAVG = decGT / totalDealerGT;
                            totalAVG = totalGT / totalDealerGT;
                            avg = totalAVG / averageMonthGT;

                            excelReport.SetCellValue("AVG DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            rowIndex++;
                        }
                        janGT = febGT = marGT = aprGT = mayGT = junGT = julGT = augGT = sepGT = octGT = novGT = decGT = totalGT = 0;
                        janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                        janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                        totalRowDtl = 0;
                        TotalAVGOutletRow = 0;
                        spaceTotal = 0;
                        totalAVGRow = 0;
                        totalRow = 0;
                        rowIndex = 0;
                        averageMonth = 0;
                        averageMonthGT = 0;
                        averageArea = 0;
                        averageDealer = 0;

                        excelReport.ChangeSheet(row["Year"].ToString());
                        currentYear = Convert.ToInt32(row["Year"].ToString());

                        CreateHeader(excelReport, rowIndex, totalDetailWidth, title, currentYear.ToString());

                        seq = row["Seq"].ToString();
                        seq2 = row["Seq2"].ToString();
                        area = parameter[9].ToString() == "1" ? row["Area"].ToString() : "";
                        dealer = parameter[10].ToString() == "1" ? row["CompanyName"].ToString() : "";
                        outlet = parameter[11].ToString() == "1" ? row["BranchName"].ToString() : "";
                        modelCategory = dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "";
                        marketModel = parameter[12].ToString() == "1" ? row["MarketModel"].ToString() : "";
                        colorCategory = parameter[13].ToString() == "1" ? row["ColourName"].ToString() : "";
                        year = row["Year"].ToString();

                        totalMonth = (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                            && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 :
                            (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) == currentYear
                            && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) :
                            (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
                            && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) == currentYear) ? Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) :
                            Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) + 1;

                        averageMonth = 0;

                        if (parameter[11] == "1")
                        {
                            excelReport.RemoveRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString());
                            excelReport.RemoveRestorePoint(RestorePoint.TotalTableRestorePoint.ToString());

                            if (parameter[5].ToString() == "ALL")
                                excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalTableRestorePoint.ToString());
                            rowIndex++;
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                        }
                        else if (parameter[11].ToString() != "1" && parameter[12] != "1")
                        {
                            if (parameter[5].ToString() == "ALL")
                                excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                        }

                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                            colorCategory = row["ColourName"].ToString();
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                            excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                            colorCategory = row["ColourName"].ToString();
                        }
                        else
                            excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    }
                    else
                    {
                        excelReport.RemoveRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.OutletRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.JanRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.FebRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.MarRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.AprRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.MayRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.JunRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.JulRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.AugRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.SepRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.OctRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.NovRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.DecRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.TotalRestorePoint.ToString());
                        excelReport.RemoveRestorePoint(RestorePoint.AverageRestorePoint.ToString());

                        if (parameter[5].ToString() == "ALL")
                        {
                            decimal average = totalGT / averageMonthGT;
                            excelReport.SetCellValue("TOTAL DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.GreenTotal);
                            excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                            rowIndex++;

                            janAVG = janGT / totalDealerGT;
                            febAVG = febGT / totalDealerGT;
                            marAVG = marGT / totalDealerGT;
                            aprAVG = aprGT / totalDealerGT;
                            mayAVG = mayGT / totalDealerGT;
                            junAVG = junGT / totalDealerGT;
                            julAVG = julGT / totalDealerGT;
                            augAVG = augGT / totalDealerGT;
                            sepAVG = sepGT / totalDealerGT;
                            octAVG = octGT / totalDealerGT;
                            novAVG = novGT / totalDealerGT;
                            decAVG = decGT / totalDealerGT;
                            totalAVG = totalGT / totalDealerGT;
                            decimal avg = totalAVG / averageMonthGT;

                            excelReport.SetCellValue("AVG DEALER", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            rowIndex++;
                        }
                        janGT = febGT = marGT = aprGT = mayGT = junGT = julGT = augGT = sepGT = octGT = novGT = decGT = totalGT = 0;
                        janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                        janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                        totalRowDtl = 0;
                        TotalAVGOutletRow = 0;
                        spaceTotal = 0;
                        totalAVGRow = 0;
                        totalRow = 0;
                        rowIndex = 0;
                        averageMonth = 0;


                        excelReport.ChangeSheet(row["Year"].ToString());
                        currentYear = Convert.ToInt32(row["Year"].ToString());
                        CreateHeader(excelReport, rowIndex, totalDetailWidth, title, currentYear.ToString());

                        seq = row["Seq"].ToString();
                        seq2 = row["Seq2"].ToString();
                        area = parameter[9].ToString() == "1" ? row["Area"].ToString() : "";
                        dealer = parameter[10].ToString() == "1" ? row["CompanyName"].ToString() : "";
                        outlet = parameter[11].ToString() == "1" ? row["BranchName"].ToString() : "";
                        modelCategory = dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "";
                        marketModel = parameter[12].ToString() == "1" ? row["MarketModel"].ToString() : "";
                        colorCategory = parameter[13].ToString() == "1" ? row["ColourName"].ToString() : "";
                        year = row["Year"].ToString();
                        averageMonthGT = 0;
                        averageMonth = 0;
                        if (parameter[11] == "0")
                            excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);
                        else
                        {
                            excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandard);
                        }

                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    }

                    if (row["Seq"].ToString() != "1")
                        totalDealerGT++;
                    seq = row["seq"].ToString();
                    seq2 = row["seq2"].ToString();
                    area = row["Area"].ToString();
                    dealer = (parameter[10] == "1" ? row["CompanyName"].ToString() : "");
                    outlet = (parameter[11] == "1" ? row["BranchName"].ToString() : "");
                    modelCategory = (dt0.Columns.Contains("ModelCatagory") == true ? row["ModelCatagory"].ToString() : "");
                    marketModel = (parameter[12] == "1" ? row["MarketModel"].ToString() : "");
                    year = row["Year"].ToString();
                    #endregion
                    marketModelCount = 1;
                }
                else
                {
                    if (seq != row["Seq"].ToString())
                    {
                        if (row["Seq"].ToString() == "2")
                        {
                            if (dealer == outlet)
                            {
                                decimal average = Convert.ToDecimal(row["Total"].ToString()) / averageDealer;
                                decimal jan = Convert.ToDecimal(row["Jan"].ToString());
                                decimal feb = Convert.ToDecimal(row["Feb"].ToString());
                                decimal mar = Convert.ToDecimal(row["Mar"].ToString());
                                decimal apr = Convert.ToDecimal(row["Apr"].ToString());
                                decimal may = Convert.ToDecimal(row["May"].ToString());
                                decimal jun = Convert.ToDecimal(row["Jun"].ToString());
                                decimal jul = Convert.ToDecimal(row["Jul"].ToString());
                                decimal aug = Convert.ToDecimal(row["Aug"].ToString());
                                decimal sep = Convert.ToDecimal(row["Sep"].ToString());
                                decimal oct = Convert.ToDecimal(row["Oct"].ToString());
                                decimal nov = Convert.ToDecimal(row["Nov"].ToString());
                                decimal dec = Convert.ToDecimal(row["Dec"].ToString());

                                excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, (parameter[14] != "" ? totalRowDtl : totalOutlet + 1), dealerWidth, ExcelCellStyle.LeftBorderedTop);
                                excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "Total Per Outlet", 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedBold);
                                excelReport.ReplaceRestorePoint(RestorePoint.JanRestorePoint.ToString(), jan.ToString("#,##0;0;'-';@"), 0 + totalDetailWidth, 1, 1, (jan < average && jan != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                excelReport.ReplaceRestorePoint(RestorePoint.FebRestorePoint.ToString(), feb.ToString("#,##0;0;'-';@"), 1 + totalDetailWidth, 1, 1, (feb < average && feb != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                excelReport.ReplaceRestorePoint(RestorePoint.MarRestorePoint.ToString(), mar.ToString("#,##0;0;'-';@"), 2 + totalDetailWidth, 1, 1, (mar < average && mar != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                excelReport.ReplaceRestorePoint(RestorePoint.AprRestorePoint.ToString(), apr.ToString("#,##0;0;'-';@"), 3 + totalDetailWidth, 1, 1, (apr < average && apr != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                excelReport.ReplaceRestorePoint(RestorePoint.MayRestorePoint.ToString(), may.ToString("#,##0;0;'-';@"), 4 + totalDetailWidth, 1, 1, (may < average && may != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                excelReport.ReplaceRestorePoint(RestorePoint.JunRestorePoint.ToString(), jun.ToString("#,##0;0;'-';@"), 5 + totalDetailWidth, 1, 1, (jun < average && jun != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                excelReport.ReplaceRestorePoint(RestorePoint.JulRestorePoint.ToString(), jul.ToString("#,##0;0;'-';@"), 6 + totalDetailWidth, 1, 1, (jul < average && jul != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                excelReport.ReplaceRestorePoint(RestorePoint.AugRestorePoint.ToString(), aug.ToString("#,##0;0;'-';@"), 7 + totalDetailWidth, 1, 1, (aug < average && aug != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                excelReport.ReplaceRestorePoint(RestorePoint.SepRestorePoint.ToString(), sep.ToString("#,##0;0;'-';@"), 8 + totalDetailWidth, 1, 1, (sep < average && sep != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                excelReport.ReplaceRestorePoint(RestorePoint.OctRestorePoint.ToString(), oct.ToString("#,##0;0;'-';@"), 9 + totalDetailWidth, 1, 1, (oct < average && oct != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                excelReport.ReplaceRestorePoint(RestorePoint.NovRestorePoint.ToString(), nov.ToString("#,##0;0;'-';@"), 10 + totalDetailWidth, 1, 1, (nov < average && nov != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                excelReport.ReplaceRestorePoint(RestorePoint.DecRestorePoint.ToString(), dec.ToString("#,##0;0;'-';@"), 11 + totalDetailWidth, 1, 1, (dec < average && dec != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                                excelReport.ReplaceRestorePoint(RestorePoint.TotalRestorePoint.ToString(), Convert.ToDecimal(row["Total"].ToString()).ToString("#,##0;0;'-';@"), 12 + totalDetailWidth, 1, 1, ExcelCellStyle.RightBorderedBoldNumber, true);

                                excelReport.ReplaceRestorePoint(RestorePoint.AverageRestorePoint.ToString(), Convert.ToDecimal(average).ToString(), 13 + totalDetailWidth, 1, 1, ExcelCellStyle.RightBorderedBoldNumber, true);

                                seq = row["seq"].ToString();
                                outlet = row["BranchName"].ToString();
                                totalOutlet = totalRowDtl = 0;
                                averageDealer = 0;
                                totalRowDtl--;
                                //Karena kita mengisi kolom yang sudah ditentukan sebelumnya..
                                rowIndex--;
                            }
                        }
                    }
                }
                #region Sum Total

                janType += Convert.ToDecimal(row["Jan"].ToString());
                febType += Convert.ToDecimal(row["Feb"].ToString());
                marType += Convert.ToDecimal(row["Mar"].ToString());
                aprType += Convert.ToDecimal(row["Apr"].ToString());
                mayType += Convert.ToDecimal(row["May"].ToString());
                junType += Convert.ToDecimal(row["Jun"].ToString());
                julType += Convert.ToDecimal(row["Jul"].ToString());
                augType += Convert.ToDecimal(row["Aug"].ToString());
                sepType += Convert.ToDecimal(row["Sep"].ToString());
                octType += Convert.ToDecimal(row["Oct"].ToString());
                novType += Convert.ToDecimal(row["Nov"].ToString());
                decType += Convert.ToDecimal(row["Dec"].ToString());
                totalType = janType + febType + marType + aprType + mayType + junType + julType + augType + sepType + octType + novType + decType;

                janSubTtl += Convert.ToDecimal(row["Jan"].ToString());
                febSubTtl += Convert.ToDecimal(row["Feb"].ToString());
                marSubTtl += Convert.ToDecimal(row["Mar"].ToString());
                aprSubTtl += Convert.ToDecimal(row["Apr"].ToString());
                maySubTtl += Convert.ToDecimal(row["May"].ToString());
                junSubTtl += Convert.ToDecimal(row["Jun"].ToString());
                julSubTtl += Convert.ToDecimal(row["Jul"].ToString());
                augSubTtl += Convert.ToDecimal(row["Aug"].ToString());
                sepSubTtl += Convert.ToDecimal(row["Sep"].ToString());
                octSubTtl += Convert.ToDecimal(row["Oct"].ToString());
                novSubTtl += Convert.ToDecimal(row["Nov"].ToString());
                decSubTtl += Convert.ToDecimal(row["Dec"].ToString());
                totalSubTtl = janSubTtl + febSubTtl + marSubTtl + aprSubTtl + maySubTtl + junSubTtl + julSubTtl + augSubTtl + sepSubTtl + octSubTtl + novSubTtl + decSubTtl;


                if (row["seq"].ToString() == "2")
                {
                    janGT += Convert.ToDecimal(row["Jan"].ToString());
                    febGT += Convert.ToDecimal(row["Feb"].ToString());
                    marGT += Convert.ToDecimal(row["Mar"].ToString());
                    aprGT += Convert.ToDecimal(row["Apr"].ToString());
                    mayGT += Convert.ToDecimal(row["May"].ToString());
                    junGT += Convert.ToDecimal(row["Jun"].ToString());
                    julGT += Convert.ToDecimal(row["Jul"].ToString());
                    augGT += Convert.ToDecimal(row["Aug"].ToString());
                    sepGT += Convert.ToDecimal(row["Sep"].ToString());
                    octGT += Convert.ToDecimal(row["Oct"].ToString());
                    novGT += Convert.ToDecimal(row["Nov"].ToString());
                    decGT += Convert.ToDecimal(row["Dec"].ToString());
                    totalGT = janGT + febGT + marGT + aprGT + mayGT + junGT + julGT + augGT + sepGT + octGT + novGT + decGT;
                }

                //Untuk Total Jabodetabek
                if (parameter[2].ToString() == "ALL" && parameter[4].ToString() == "ALL" && parameter[6].ToString() == "ALL" && row["Seq"].ToString() == "2")
                {
                    janJabodetabek += Convert.ToDecimal(row["Jan"].ToString());
                    febJabodetabek += Convert.ToDecimal(row["Feb"].ToString());
                    marJabodetabek += Convert.ToDecimal(row["Mar"].ToString());
                    aprJabodetabek += Convert.ToDecimal(row["Apr"].ToString());
                    mayJabodetabek += Convert.ToDecimal(row["May"].ToString());
                    junJabodetabek += Convert.ToDecimal(row["Jun"].ToString());
                    julJabodetabek += Convert.ToDecimal(row["Jul"].ToString());
                    augJabodetabek += Convert.ToDecimal(row["Aug"].ToString());
                    sepJabodetabek += Convert.ToDecimal(row["Sep"].ToString());
                    octJabodetabek += Convert.ToDecimal(row["Oct"].ToString());
                    novJabodetabek += Convert.ToDecimal(row["Nov"].ToString());
                    decJabodetabek += Convert.ToDecimal(row["Dec"].ToString());
                    totalJabodetabek += Convert.ToDecimal(row["Total"].ToString());
                }

                if (parameter[11].ToString() != "1" && parameter[12].ToString() != "1" && row["Seq"].ToString() != "1")
                {
                    averageArea = (totalMonth > averageArea) ? totalMonth : averageArea;
                    averageMonthGT = (totalMonth > averageMonthGT) ? totalMonth : averageMonthGT;
                    averageMonth = (totalMonth > averageMonth) ? totalMonth : averageMonth;
                }
                else if (row["Seq"].ToString() != "1" && row["Seq"].ToString() != "2")
                {
                    averageMonthGT = (totalMonth > averageMonthGT) ? totalMonth : averageMonthGT;
                    averageMonth = (totalMonth > averageMonth) ? totalMonth : averageMonth;
                    averageArea = (totalMonth > averageArea) ? totalMonth : averageArea;
                    averageDealer = (totalMonth > averageDealer) ? totalMonth : averageDealer;
                }
                else if (parameter[12].ToString() == "1" && parameter[13].ToString() != "1" && row["Seq"].ToString() == "2")
                {
                    averageMonthGT = (totalMonth > averageMonthGT) ? totalMonth : averageMonthGT;
                    averageMonth = (totalMonth > averageMonth) ? totalMonth : averageMonth;
                    averageArea = (totalMonth > averageArea) ? totalMonth : averageArea;
                    averageDealer = (totalMonth > averageDealer) ? totalMonth : averageDealer;
                }
                else if (row["Seq"].ToString() != "1")
                {
                    averageMonthGT = (totalMonth > averageMonthGT) ? totalMonth : averageMonthGT;
                    averageArea = (totalMonth > averageArea) ? totalMonth : averageArea;
                    averageMonth = (totalMonth > averageMonth) ? totalMonth : averageMonth;
                }
                #endregion

                beforeRowType = Convert.ToInt32(row["rowType"].ToString());
                rowIndex++;
                totalRowDtl++;
                totalRow++;
                totalColour++;
                totalAVGRow++;
                TotalAVGOutletRow++;
            }

            #region Grand Total

            //Untuk Mencetak Nilai total terakhir
            if (parameter[12] == "1")
            {
                if (parameter[14] == "")
                {
                    if (parameter[13] == "1" && parameter[11] == "0")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else if (parameter[13] == "1" && parameter[11] == "1")
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                        totalColour = 0;
                    }
                    else
                        //Untuk masukkin total per Category
                        excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

                    CreateBlueTypeDetailStandard(excelReport, null, rowIndex, totalDetailWidth);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janType / totalAVGRow;
                    febAVG = febType / totalAVGRow;
                    marAVG = marType / totalAVGRow;
                    aprAVG = aprType / totalAVGRow;
                    mayAVG = mayType / totalAVGRow;
                    junAVG = junType / totalAVGRow;
                    julAVG = julType / totalAVGRow;
                    augAVG = augType / totalAVGRow;
                    sepAVG = sepType / totalAVGRow;
                    octAVG = octType / totalAVGRow;
                    novAVG = novType / totalAVGRow;
                    decAVG = decType / totalAVGRow;
                    totalAVG = totalType / totalAVGRow;
                    decimal avg = 0;
                    if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;


                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    decimal average = 0;
                    if (parameter[12].ToString() == "1")
                        average = totalSubTtl / averageArea;
                    else
                        average = totalSubTtl / totalMonth;
                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                    else
                        //Total Per Outlet
                        excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                    excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                    excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    janAVG = janSubTtl / TotalAVGOutletRow;
                    febAVG = febSubTtl / TotalAVGOutletRow;
                    marAVG = marSubTtl / TotalAVGOutletRow;
                    aprAVG = aprSubTtl / TotalAVGOutletRow;
                    mayAVG = maySubTtl / TotalAVGOutletRow;
                    junAVG = junSubTtl / TotalAVGOutletRow;
                    julAVG = julSubTtl / TotalAVGOutletRow;
                    augAVG = augSubTtl / TotalAVGOutletRow;
                    sepAVG = sepSubTtl / TotalAVGOutletRow;
                    octAVG = octSubTtl / TotalAVGOutletRow;
                    novAVG = novSubTtl / TotalAVGOutletRow;
                    decAVG = decSubTtl / TotalAVGOutletRow;
                    totalAVG = totalSubTtl / TotalAVGOutletRow;
                    //avg = totalAVG / totalMonth;
                    if (parameter[12].ToString() == "1")
                        avg = totalAVG / averageArea;
                    else
                        avg = totalAVG / totalMonth;
                    //Total Per Outlet
                    if (parameter[13] == "1" && parameter[11] == "0")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else if (parameter[13] == "1" && parameter[11] == "1")
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;
                    spaceTotal++;
                    spaceTotalDealer++;
                    totalRow++;

                    marketModelCount = marketModelCount == 1 ? 4 : 6;

                    if (parameter[5].ToString() == "ALL")
                    {
                        if (parameter[11] == "1")
                        {
                            excelReport.RemoveRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString());
                            excelReport.RemoveRestorePoint(RestorePoint.TotalTableRestorePoint.ToString());
                            excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);
                        }
                        else
                            excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), "TOTAL PER-" + area.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);

                        //#region Total SIS
                        //if (parameter[10].ToString() == "RETAIL")
                        //{
                        //    decimal janSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Jan"].ToString());
                        //    decimal febSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Feb"].ToString());
                        //    decimal marSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Mar"].ToString());
                        //    decimal aprSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Apr"].ToString());
                        //    decimal maySis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["May"].ToString());
                        //    decimal junSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Jun"].ToString());
                        //    decimal julSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Jul"].ToString());
                        //    decimal augSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Aug"].ToString());
                        //    decimal sepSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Sep"].ToString());
                        //    decimal octSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Oct"].ToString());
                        //    decimal novSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Nov"].ToString());
                        //    decimal decSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Dec"].ToString());
                        //    decimal avgSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["AVG"].ToString());

                        //    excelReport.SetCellValue("TOTAL SIS RETAIL SALES", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        //    excelReport.SetCellValue(janSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSis < Convert.ToInt32(avgSis) && janSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        //    excelReport.SetCellValue(febSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSis < Convert.ToInt32(avgSis) && febSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        //    excelReport.SetCellValue(marSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSis < Convert.ToInt32(avgSis) && marSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        //    excelReport.SetCellValue(aprSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSis < Convert.ToInt32(avgSis) && aprSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        //    excelReport.SetCellValue(maySis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySis < Convert.ToInt32(avgSis) && maySis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        //    excelReport.SetCellValue(junSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSis < Convert.ToInt32(avgSis) && junSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        //    excelReport.SetCellValue(julSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSis < Convert.ToInt32(avgSis) && julSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        //    excelReport.SetCellValue(augSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSis < Convert.ToInt32(avgSis) && augSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        //    excelReport.SetCellValue(sepSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSis < Convert.ToInt32(avgSis) && sepSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        //    excelReport.SetCellValue(octSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSis < Convert.ToInt32(avgSis) && octSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        //    excelReport.SetCellValue(novSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSis < Convert.ToInt32(avgSis) && novSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        //    excelReport.SetCellValue(decSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSis < Convert.ToInt32(avgSis) && decSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        //    excelReport.SetCellValue(dt0.Rows[dt0.Rows.Count - 1]["Total"].ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        //    excelReport.SetCellValue(avgSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        //    rowIndex++;
                        //}
                        //#endregion
                        CreateSisTotal(excelReport, dt0, rowIndex, totalDetailWidth);

                        if (parameter[3].ToString() == "ALL")
                        {
                            average = totalGT / averageMonthGT;

                            excelReport.SetCellValue("TOTAL NATIONAL", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.GreenTotal);
                            excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                            rowIndex++;

                            janAVG = janGT / totalDealerGT;
                            febAVG = febGT / totalDealerGT;
                            marAVG = marGT / totalDealerGT;
                            aprAVG = aprGT / totalDealerGT;
                            mayAVG = mayGT / totalDealerGT;
                            junAVG = junGT / totalDealerGT;
                            julAVG = julGT / totalDealerGT;
                            augAVG = augGT / totalDealerGT;
                            sepAVG = sepGT / totalDealerGT;
                            octAVG = octGT / totalDealerGT;
                            novAVG = novGT / totalDealerGT;
                            decAVG = decGT / totalDealerGT;
                            totalAVG = totalGT / totalDealerGT;
                            avg = totalAVG / averageMonthGT;

                            excelReport.SetCellValue("AVG NATIONAL", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            rowIndex++;

                            #region Grand Total II
                            //excelReport.SetCellValue("GRAND TOTAL II",8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.PinkTotal);
                            //excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"),8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                            //rowIndex++;

                            //excelReport.SetCellValue("AVG GRAND TOTAL II",8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.PinkTotal);
                            //excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(totalAVG) && janAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(totalAVG) && febAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(totalAVG) && marAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(totalAVG) && aprAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(totalAVG) && mayAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(totalAVG) && junAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(totalAVG) && julAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(totalAVG) && augAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(totalAVG) && sepAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(totalAVG) && octAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(totalAVG) && novAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(totalAVG) && decAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                            //excelReport.SetCellValue("",8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber);
                            //rowIndex++;
                            #endregion
                        }
                    }
                    else
                    {
                        if (parameter[11].ToString() == "1")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL", 0 + dealerWidth, beforeRowType + marketModelCount, outletWidth, ExcelCellStyle.LeftBorderedTop);
                            Thread.Sleep(1000);
                            excelReport.LoadAndReplaceCurrentState(RestorePoint.TotalTableRestorePoint.ToString(), sbSaveCurrentState);
                        }
                        else
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, beforeRowType + marketModelCount, dealerWidth, ExcelCellStyle.LeftBorderedTop);
                        }
                    }
                }
                else
                {
                    CreateSisTotal(excelReport, dt0, rowIndex, totalDetailWidth);

                    if (parameter[3].ToString() == "ALL")
                    {
                        decimal average = totalGT / averageMonthGT;
                        excelReport.SetCellValue("TOTAL NATIONAL", 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.GreenTotal);
                        excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                        rowIndex++;

                        janAVG = janGT / totalDealerGT;
                        febAVG = febGT / totalDealerGT;
                        marAVG = marGT / totalDealerGT;
                        aprAVG = aprGT / totalDealerGT;
                        mayAVG = mayGT / totalDealerGT;
                        junAVG = junGT / totalDealerGT;
                        julAVG = julGT / totalDealerGT;
                        augAVG = augGT / totalDealerGT;
                        sepAVG = sepGT / totalDealerGT;
                        octAVG = octGT / totalDealerGT;
                        novAVG = novGT / totalDealerGT;
                        decAVG = decGT / totalDealerGT;//TotalAVGDealerRow
                        totalAVG = totalGT / totalDealerGT;
                        decimal avg = totalAVG / averageMonthGT;

                        excelReport.SetCellValue("AVG NATIONAL", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;

                        #region Grand Total II
                        //average = totalGT / totalMonth;
                        //excelReport.SetCellValue("GRAND TOTAL II",8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.PinkTotal);
                        //excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(average) && janGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(average) && febGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(average) && marGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(average) && aprGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(average) && mayGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(average) && junGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(average) && julGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(average) && augGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(average) && sepGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(average) && octGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(average) && novGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(average) && decGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"),8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                        //rowIndex++;

                        //excelReport.SetCellValue("AVG GRAND TOTAL II",8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.PinkTotal);
                        //excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(totalAVG) && janAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(totalAVG) && febAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(totalAVG) && marAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(totalAVG) && aprAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(totalAVG) && mayAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(totalAVG) && junAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(totalAVG) && julAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(totalAVG) && augAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(totalAVG) && sepAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(totalAVG) && octAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(totalAVG) && novAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(totalAVG) && decAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                        //excelReport.SetCellValue("",8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber);
                        //rowIndex++;
                        #endregion
                    }
                }
            }
            else
            {
                CreateSisTotal(excelReport, dt0, rowIndex, totalDetailWidth);
                if (parameter[3].ToString() == "ALL")
                {
                    decimal averageDlr = totalGT / averageMonthGT;

                    excelReport.SetCellValue("TOTAL NATIONAL", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.GreenTotal);
                    excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(averageDlr) && janGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(averageDlr) && febGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(averageDlr) && marGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(averageDlr) && aprGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(averageDlr) && mayGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(averageDlr) && junGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(averageDlr) && julGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(averageDlr) && augGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(averageDlr) && sepGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(averageDlr) && octGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(averageDlr) && novGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(averageDlr) && decGT != 0) ? ExcelCellStyle.GreenTotalRedNumber : ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);
                    excelReport.SetCellValue(averageDlr.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.GreenTotalNumber, true);

                    rowIndex++;

                    janAVG = janGT / TotalAVGDealerRow;
                    febAVG = febGT / TotalAVGDealerRow;
                    marAVG = marGT / TotalAVGDealerRow;
                    aprAVG = aprGT / TotalAVGDealerRow;
                    mayAVG = mayGT / TotalAVGDealerRow;
                    junAVG = junGT / TotalAVGDealerRow;
                    julAVG = julGT / TotalAVGDealerRow;
                    augAVG = augGT / TotalAVGDealerRow;
                    sepAVG = sepGT / TotalAVGDealerRow;
                    octAVG = octGT / TotalAVGDealerRow;
                    novAVG = novGT / TotalAVGDealerRow;
                    decAVG = decGT / TotalAVGDealerRow;
                    totalAVG = totalGT / totalDealerGT;
                    decimal avg = totalAVG / averageMonthGT;

                    excelReport.SetCellValue("AVG NATIONAL", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;

                    #region Grand Total II
                    //excelReport.SetCellValue("GRAND TOTAL II",8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.PinkTotal);
                    //excelReport.SetCellValue(janGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janGT < Convert.ToInt32(averageDealer) && janGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(febGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febGT < Convert.ToInt32(averageDealer) && febGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(marGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marGT < Convert.ToInt32(averageDealer) && marGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(aprGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprGT < Convert.ToInt32(averageDealer) && aprGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(mayGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayGT < Convert.ToInt32(averageDealer) && mayGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(junGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junGT < Convert.ToInt32(averageDealer) && junGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(julGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julGT < Convert.ToInt32(averageDealer) && julGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(augGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augGT < Convert.ToInt32(averageDealer) && augGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(sepGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepGT < Convert.ToInt32(averageDealer) && sepGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(octGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octGT < Convert.ToInt32(averageDealer) && octGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(novGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novGT < Convert.ToInt32(averageDealer) && novGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(decGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decGT < Convert.ToInt32(averageDealer) && decGT != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(totalGT.ToString("#,##0;0;'-';@"),8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(averageDealer.ToString("#,##0;0;'-';@"),8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                    //rowIndex++;

                    //janAVG = janGT / totalAVGGTRow;
                    //febAVG = febGT / totalAVGGTRow;
                    //marAVG = marGT / totalAVGGTRow;
                    //aprAVG = aprGT / totalAVGGTRow;
                    //mayAVG = mayGT / totalAVGGTRow;
                    //junAVG = junGT / totalAVGGTRow;
                    //julAVG = julGT / totalAVGGTRow;
                    //augAVG = augGT / totalAVGGTRow;
                    //sepAVG = sepGT / totalAVGGTRow;
                    //octAVG = octGT / totalAVGGTRow;
                    //novAVG = novGT / totalAVGGTRow;
                    //decAVG = decGT / totalAVGGTRow;
                    //totalAVG = (janAVG + febAVG + marAVG + aprAVG + mayAVG + junAVG + julAVG + augAVG + sepAVG + octAVG + novAVG + decAVG) / totalMonth;

                    //excelReport.SetCellValue("AVG " + area.ToString(),8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.PinkTotal);
                    //excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(totalAVG) && janAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(totalAVG) && febAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(totalAVG) && marAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(totalAVG) && aprAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(totalAVG) && mayAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(totalAVG) && junAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(totalAVG) && julAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(totalAVG) && augAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(totalAVG) && sepAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(totalAVG) && octAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(totalAVG) && novAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(totalAVG) && decAVG != 0) ? ExcelCellStyle.PinkTotalRedNumber : ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"),8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotalNumber, true);
                    //excelReport.SetCellValue("",8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PinkTotal);
                    //rowIndex++;
                    #endregion
                }
            }
            #endregion

            excelReport.CloseExcelFileWriter();
        }

        private void CreateSisTotal(ExcelFileWriter excelReport, DataTable dt0, int rowIndex, int totalDetailWidth)
        {
            #region Total SIS
            if (parameter[15].ToString() == "RETAIL" || parameter[15].ToString() == "SALES" || parameter[15].ToString() == "FPOL")
            {
                //decimal janSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Jan"].ToString());
                //decimal febSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Feb"].ToString());
                //decimal marSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Mar"].ToString());
                //decimal aprSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Apr"].ToString());
                //decimal maySis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["May"].ToString());
                //decimal junSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Jun"].ToString());
                //decimal julSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Jul"].ToString());
                //decimal augSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Aug"].ToString());
                //decimal sepSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Sep"].ToString());
                //decimal octSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Oct"].ToString());
                //decimal novSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Nov"].ToString());
                //decimal decSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Dec"].ToString());
                //decimal avgSis = Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["AVG"].ToString());

                //janGT += janSis;
                //febGT += febSis;
                //marGT += marSis;
                //aprGT += aprSis;
                //mayGT += maySis;
                //junGT += junSis;
                //julGT += julSis;
                //augGT += augSis;
                //sepGT += sepSis;
                //octGT += octSis;
                //novGT += novSis;
                //decGT += decSis;
                //totalGT += janSis + febSis + marSis + aprSis + maySis + junSis + julSis + augSis + sepSis + octSis + novSis + decSis;
                //totalDealerGT++;
                //TotalAVGDealerRow++;

                //excelReport.SetCellValue("TOTAL SIS RETAIL SALES", 8 + rowIndex, 0, 1, dealerWidth + outletWidth + modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                //excelReport.SetCellValue(janSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSis < Convert.ToInt32(avgSis) && janSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                //excelReport.SetCellValue(febSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSis < Convert.ToInt32(avgSis) && febSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                //excelReport.SetCellValue(marSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSis < Convert.ToInt32(avgSis) && marSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                //excelReport.SetCellValue(aprSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSis < Convert.ToInt32(avgSis) && aprSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                //excelReport.SetCellValue(maySis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySis < Convert.ToInt32(avgSis) && maySis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                //excelReport.SetCellValue(junSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSis < Convert.ToInt32(avgSis) && junSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                //excelReport.SetCellValue(julSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSis < Convert.ToInt32(avgSis) && julSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                //excelReport.SetCellValue(augSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSis < Convert.ToInt32(avgSis) && augSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                //excelReport.SetCellValue(sepSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSis < Convert.ToInt32(avgSis) && sepSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                //excelReport.SetCellValue(octSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSis < Convert.ToInt32(avgSis) && octSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                //excelReport.SetCellValue(novSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSis < Convert.ToInt32(avgSis) && novSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                //excelReport.SetCellValue(decSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSis < Convert.ToInt32(avgSis) && decSis != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                //excelReport.SetCellValue(Convert.ToDecimal(dt0.Rows[dt0.Rows.Count - 1]["Total"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                //excelReport.SetCellValue(avgSis.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

            }
            #endregion
        }

        private void CreateDetailStandard(ExcelFileWriter excelReport, DataRow row, int rowIndex, int totalDetailWidth)
        {
            if (parameter[12].ToString() != "1")
            {
                totalMonth = (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
        && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 :
        (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) == currentYear
        && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) != currentYear) ? 13 - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) :
        (Convert.ToInt32(row["StartDate"].ToString().Substring(0, 4)) != currentYear
        && Convert.ToInt32(row["EndDate"].ToString().Substring(0, 4)) == currentYear) ? Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) :
        Convert.ToInt32(row["EndDate"].ToString().Substring(4, 2)) - Convert.ToInt32(row["StartDate"].ToString().Substring(4, 2)) + 1;
            }

            decimal jan = Convert.ToDecimal(row["Jan"].ToString());
            decimal feb = Convert.ToDecimal(row["Feb"].ToString());
            decimal mar = Convert.ToDecimal(row["Mar"].ToString());
            decimal apr = Convert.ToDecimal(row["Apr"].ToString());
            decimal may = Convert.ToDecimal(row["May"].ToString());
            decimal jun = Convert.ToDecimal(row["Jun"].ToString());
            decimal jul = Convert.ToDecimal(row["Jul"].ToString());
            decimal aug = Convert.ToDecimal(row["Aug"].ToString());
            decimal sep = Convert.ToDecimal(row["Sep"].ToString());
            decimal oct = Convert.ToDecimal(row["Oct"].ToString());
            decimal nov = Convert.ToDecimal(row["Nov"].ToString());
            decimal dec = Convert.ToDecimal(row["Dec"].ToString());
            decimal avg = 0;

            if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                avg = Convert.ToDecimal(row["Total"].ToString()) / averageMonth;
            else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                avg = Convert.ToDecimal(row["Total"].ToString()) / averageArea;
            else
                avg = Convert.ToDecimal(row["Total"].ToString()) / totalMonth;

            excelReport.SetCellValue(Convert.ToInt32(jan).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (jan < Convert.ToInt32(avg) && jan != 0) ? ExcelCellStyle.RightBorderedStandardRedNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(feb).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (feb < Convert.ToInt32(avg) && feb != 0) ? ExcelCellStyle.RightBorderedStandardRedNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mar).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (mar < Convert.ToInt32(avg) && mar != 0) ? ExcelCellStyle.RightBorderedStandardRedNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(apr).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (apr < Convert.ToInt32(avg) && apr != 0) ? ExcelCellStyle.RightBorderedStandardRedNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(may).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (may < Convert.ToInt32(avg) && may != 0) ? ExcelCellStyle.RightBorderedStandardRedNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(jun).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (jun < Convert.ToInt32(avg) && jun != 0) ? ExcelCellStyle.RightBorderedStandardRedNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(jul).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (jul < Convert.ToInt32(avg) && jul != 0) ? ExcelCellStyle.RightBorderedStandardRedNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aug).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (aug < Convert.ToInt32(avg) && aug != 0) ? ExcelCellStyle.RightBorderedStandardRedNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sep).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sep < Convert.ToInt32(avg) && sep != 0) ? ExcelCellStyle.RightBorderedStandardRedNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(oct).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (oct < Convert.ToInt32(avg) && oct != 0) ? ExcelCellStyle.RightBorderedStandardRedNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(nov).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (nov < Convert.ToInt32(avg) && nov != 0) ? ExcelCellStyle.RightBorderedStandardRedNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(dec).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (dec < Convert.ToInt32(avg) && dec != 0) ? ExcelCellStyle.RightBorderedStandardRedNumber : ExcelCellStyle.RightBorderedStandardNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(Convert.ToDecimal(row["Total"].ToString())).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.RightBorderedStandardNumber, true);
            excelReport.SetCellValue(avg.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.RightBorderedStandardNumber, true);
        }

        private void CreateYellowDetailStandard(ExcelFileWriter excelReport, DataRow row, int rowIndex, int totalDetailWidth)
        {
            decimal jan = Convert.ToDecimal(row["Jan"].ToString());
            decimal feb = Convert.ToDecimal(row["Feb"].ToString());
            decimal mar = Convert.ToDecimal(row["Mar"].ToString());
            decimal apr = Convert.ToDecimal(row["Apr"].ToString());
            decimal may = Convert.ToDecimal(row["May"].ToString());
            decimal jun = Convert.ToDecimal(row["Jun"].ToString());
            decimal jul = Convert.ToDecimal(row["Jul"].ToString());
            decimal aug = Convert.ToDecimal(row["Aug"].ToString());
            decimal sep = Convert.ToDecimal(row["Sep"].ToString());
            decimal oct = Convert.ToDecimal(row["Oct"].ToString());
            decimal nov = Convert.ToDecimal(row["Nov"].ToString());
            decimal dec = Convert.ToDecimal(row["Dec"].ToString());
            decimal avg = 0;

            if (parameter[11].ToString() == "1")
                avg = Convert.ToDecimal(row["Total"].ToString()) / averageArea;
            else
                avg = Convert.ToDecimal(row["Total"].ToString()) / averageMonth;
            excelReport.SetCellValue(Convert.ToInt32(jan).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (jan < Convert.ToInt32(avg) && jan != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(feb).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (feb < Convert.ToInt32(avg) && feb != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mar).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (mar < Convert.ToInt32(avg) && mar != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(apr).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (apr < Convert.ToInt32(avg) && apr != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(may).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (may < Convert.ToInt32(avg) && may != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(jun).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (jun < Convert.ToInt32(avg) && jun != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(jul).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (jul < Convert.ToInt32(avg) && jul != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aug).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (aug < Convert.ToInt32(avg) && aug != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sep).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sep < Convert.ToInt32(avg) && sep != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(oct).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (oct < Convert.ToInt32(avg) && oct != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(nov).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (nov < Convert.ToInt32(avg) && nov != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(dec).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (dec < Convert.ToInt32(avg) && dec != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(Convert.ToDecimal(row["Total"].ToString())).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(avg.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);
        }

        private void CreateBlueTypeDetailStandard(ExcelFileWriter excelReport, DataRow row, int rowIndex, int totalDetailWidth)
        {
            decimal avg = totalType / averageMonth;
            excelReport.SetCellValue(janType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janType < Convert.ToInt32(avg) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(febType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (janType < Convert.ToInt32(avg) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(marType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (janType < Convert.ToInt32(avg) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(aprType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (janType < Convert.ToInt32(avg) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(mayType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (janType < Convert.ToInt32(avg) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(junType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (janType < Convert.ToInt32(avg) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(julType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (janType < Convert.ToInt32(avg) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(augType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (janType < Convert.ToInt32(avg) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(sepType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (janType < Convert.ToInt32(avg) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(octType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (janType < Convert.ToInt32(avg) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(novType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (janType < Convert.ToInt32(avg) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(decType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (janType < Convert.ToInt32(avg) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(totalType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(avg.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
        }

        private void CreateHeader(ExcelFileWriter excelReport, int rowIndex, int totalDetailWidth, string title, string year)
        {
            if (parameter[11] == "1") excelReport.SettingColumnWidth(1); else excelReport.SettingColumnWidth(2); //dealer
            if (parameter[11] == "1" && parameter[12] == "1") excelReport.SettingColumnWidth(2); else if (parameter[11] == "1" && parameter[12] == "0") excelReport.SettingColumnWidth(3);
            if (parameter[12] == "1" && parameter[14] == "") excelReport.SettingColumnWidth(3);
            if (parameter[13] == "1") excelReport.SettingColumnWidth(3);

            //if (parameter[9] == "1") excelReport.SettingColumnWidth(3);// Outlet


            excelReport.SetCellValue("SALES TREND REPORT", 0, 0, 1, dealerWidth + outletWidth + modelWidth + indentTitleDesc + indentTitleDesc + 2, ExcelCellStyle.Header, false, "20");
            excelReport.SetCellValue(title, 1, 0, 1, dealerWidth + outletWidth + modelWidth + indentTitleDesc + indentTitleDesc + 2, ExcelCellStyle.Header2, false);

            excelReport.SetCellValue("Periode ", 2, 0, 1, dealerWidth, ExcelCellStyle.LeftBold);
            excelReport.SetCellValue(": " + parameter[1].ToString(), 2, dealerWidth, 1, indentTitleDesc, ExcelCellStyle.LeftBold);
            excelReport.SetCellValue("Branch Manager", 2, dealerWidth + outletWidth + modelWidth + indentTitleDesc, 1, 2, ExcelCellStyle.LeftBold);
            excelReport.SetCellValue(": " + parameter[2].ToString(), 2, dealerWidth + outletWidth + modelWidth + indentTitleDesc + 2, 1, indentTitleDesc, ExcelCellStyle.LeftBold);

            excelReport.SetCellValue("Area", 3, 0, 1, dealerWidth, ExcelCellStyle.LeftBold);
            excelReport.SetCellValue(": " + parameter[3].ToString(), 3, dealerWidth, 1, indentTitleDesc, ExcelCellStyle.LeftBold);
            excelReport.SetCellValue("Sales Head", 3, dealerWidth + outletWidth + modelWidth + indentTitleDesc, 1, 2, ExcelCellStyle.LeftBold);
            excelReport.SetCellValue(": " + parameter[4].ToString(), 3, dealerWidth + outletWidth + modelWidth + indentTitleDesc + 2, 1, indentTitleDesc, ExcelCellStyle.LeftBold);

            excelReport.SetCellValue("Dealer", 4, 0, 1, dealerWidth, ExcelCellStyle.LeftBold);
            excelReport.SetCellValue(": " + parameter[5].ToString(), 4, dealerWidth, 1, indentTitleDesc, ExcelCellStyle.LeftBold);
            excelReport.SetCellValue("Sales Coordinator", 4, dealerWidth + outletWidth + modelWidth + indentTitleDesc, 1, 2, ExcelCellStyle.LeftBold);
            excelReport.SetCellValue(": " + parameter[6].ToString(), 4, dealerWidth + outletWidth + modelWidth + indentTitleDesc + 2, 1, indentTitleDesc, ExcelCellStyle.LeftBold);

            excelReport.SetCellValue("Outlet", 5, 0, 1, dealerWidth, ExcelCellStyle.LeftBold);
            excelReport.SetCellValue(": " + parameter[7].ToString(), 5, dealerWidth, 1, indentTitleDesc, ExcelCellStyle.LeftBold);
            excelReport.SetCellValue("Wiraniaga", 5, dealerWidth + outletWidth + modelWidth + indentTitleDesc, 1, 2, ExcelCellStyle.LeftBold);
            excelReport.SetCellValue(": " + parameter[8].ToString(), 5, dealerWidth + outletWidth + modelWidth + indentTitleDesc + 2, 1, indentTitleDesc, ExcelCellStyle.LeftBold);

            if (parameter[10].ToString() == "1")
                excelReport.SetCellValue("Dealer", 6, 0, 2, dealerWidth, ExcelCellStyle.CenterBorderedBold);

            if (parameter[11].ToString() == "1")
                excelReport.SetCellValue("Outlet", 6, 0 + dealerWidth, 2, outletWidth, ExcelCellStyle.CenterBorderedBold);

            if (parameter[12].ToString() == "1" && parameter[14].ToString() == "")
                excelReport.SetCellValue("Type", 6, 0 + dealerWidth + outletWidth, 2, modelWidth, ExcelCellStyle.CenterBorderedBold);

            if (parameter[13].ToString() == "1")
                excelReport.SetCellValue("Color", 6, 0 + dealerWidth + outletWidth + modelWidth, 2, colorWidth, ExcelCellStyle.CenterBorderedBold);

            excelReport.SetCellValue("Bulan", 6, 0 + totalDetailWidth, 1, 12, ExcelCellStyle.CenterBorderedBold);
            excelReport.SetCellValue("Total", 6, 12 + totalDetailWidth, 2, 1, ExcelCellStyle.CenterBorderedBold);
            excelReport.SetCellValue("AVG", 6, 13 + totalDetailWidth, 2, 1, ExcelCellStyle.CenterBorderedBold);
            excelReport.SetCellValue("Jan", 7, 0 + totalDetailWidth, 1, 1, ExcelCellStyle.CenterBorderedBold);
            excelReport.SetCellValue("Feb", 7, 1 + totalDetailWidth, 1, 1, ExcelCellStyle.CenterBorderedBold);
            excelReport.SetCellValue("Mar", 7, 2 + totalDetailWidth, 1, 1, ExcelCellStyle.CenterBorderedBold);
            excelReport.SetCellValue("Apr", 7, 3 + totalDetailWidth, 1, 1, ExcelCellStyle.CenterBorderedBold);
            excelReport.SetCellValue("May", 7, 4 + totalDetailWidth, 1, 1, ExcelCellStyle.CenterBorderedBold);
            excelReport.SetCellValue("Jun", 7, 5 + totalDetailWidth, 1, 1, ExcelCellStyle.CenterBorderedBold);
            excelReport.SetCellValue("Jul", 7, 6 + totalDetailWidth, 1, 1, ExcelCellStyle.CenterBorderedBold);
            excelReport.SetCellValue("Aug", 7, 7 + totalDetailWidth, 1, 1, ExcelCellStyle.CenterBorderedBold);
            excelReport.SetCellValue("Sep", 7, 8 + totalDetailWidth, 1, 1, ExcelCellStyle.CenterBorderedBold);
            excelReport.SetCellValue("Oct", 7, 9 + totalDetailWidth, 1, 1, ExcelCellStyle.CenterBorderedBold);
            excelReport.SetCellValue("Nov", 7, 10 + totalDetailWidth, 1, 1, ExcelCellStyle.CenterBorderedBold);
            excelReport.SetCellValue("Dec", 7, 11 + totalDetailWidth, 1, 1, ExcelCellStyle.CenterBorderedBold);

            totalRowDtl = 0;
            rowIndex = 0;
            if (parameter[14] == "")
                excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
            else
                if (parameter[11] == "1")
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());


        }

        void satu(DataRow row)
        {
            #region First
            //Outlet
            if (parameter[11] == "1" && parameter[12] == "1" && parameter[13] == "0")
            {
                if (parameter[14] != "")
                {
                    totalRowDtl++;
                    excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandardWrap);
                }
                else
                {
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                    excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                }
            }
            else
            {
                if (parameter[13] == "1" && parameter[11] == "0")
                {
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                }
                else if (parameter[13] == "1" && parameter[11] == "1")
                {
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());

                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                }
                else if (parameter[12] == "1")
                {
                    if (parameter[11] == "1")
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                    else if (parameter[11] == "0" && parameter[14] != "")
                        excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);
                    else
                    {
                        //excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                    }
                }
                else if (parameter[11] == "1")
                {
                    excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandard);
                }
                else
                {
                    excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), row["CompanyName"].ToString(), 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);
                }
            }
            CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

            totalDealer++;
            totalOutlet++;

            //Menandakan outlet 1
            TotalAVGAreaRow++;
            TotalAVGAreaRowJBDTK++;
            TotalAVGDealerRow++;
            totalAVGGTRow++;

            #endregion
        }

        void dua(DataRow row)
        {
            #region Second
            //Dealer
            if (parameter[10] == "1")
            {
                if (parameter[14] == "")
                {
                    if (parameter[11] == "0" && parameter[12] == "0" && parameter[13] == "0")
                    {
                        if (!row["CompanyName"].ToString().Contains("zzzz"))
                        {
                            excelReport.SetCellValue(row["CompanyName"].ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.LeftBorderedStandard);
                            CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                        }
                        else
                        {
                            if (area != "_JABODETABEK")
                                excelReport.SetCellValue("SUB TOTAL " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.YellowTotal);
                            else
                                excelReport.SetCellValue("SUB TOTAL DEALER " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.YellowTotal);

                            CreateYellowDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                            rowIndex++;

                            DataRow[] rowAvg = dt1.Select(string.Format("DealerAbbreviation = '{0}'", area));
                            decimal averageRow = 0;
                            if (rowAvg.Length != 0)
                            {
                                averageRow = rowAvg[0][4].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][4].ToString()) : 0;
                                janAVG = Convert.ToDecimal(row["Jan"].ToString()) / (averageRow != 0 ? averageRow : 1);

                                averageRow += rowAvg[0][5].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][5].ToString()) : 0;
                                febAVG = Convert.ToDecimal(row["Feb"].ToString()) / (averageRow != 0 ? averageRow : 1);

                                averageRow += rowAvg[0][6].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][6].ToString()) : 0;
                                marAVG = Convert.ToDecimal(row["Mar"].ToString()) / (averageRow != 0 ? averageRow : 1);

                                averageRow += rowAvg[0][7].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][7].ToString()) : 0;
                                aprAVG = Convert.ToDecimal(row["Apr"].ToString()) / (averageRow != 0 ? averageRow : 1);

                                averageRow += rowAvg[0][8].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][8].ToString()) : 0;
                                mayAVG = Convert.ToDecimal(row["May"].ToString()) / (averageRow != 0 ? averageRow : 1);

                                averageRow += rowAvg[0][9].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][9].ToString()) : 0;
                                junAVG = Convert.ToDecimal(row["Jun"].ToString()) / (averageRow != 0 ? averageRow : 1);

                                averageRow += rowAvg[0][10].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][10].ToString()) : 0;
                                julAVG = Convert.ToDecimal(row["Jul"].ToString()) / (averageRow != 0 ? averageRow : 1);

                                averageRow += rowAvg[0][11].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][11].ToString()) : 0;
                                augAVG = Convert.ToDecimal(row["Aug"].ToString()) / (averageRow != 0 ? averageRow : 1);

                                averageRow += rowAvg[0][12].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][12].ToString()) : 0;
                                sepAVG = Convert.ToDecimal(row["Sep"].ToString()) / (averageRow != 0 ? averageRow : 1);

                                averageRow += rowAvg[0][13].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][13].ToString()) : 0;
                                octAVG = Convert.ToDecimal(row["Oct"].ToString()) / (averageRow != 0 ? averageRow : 1);

                                averageRow += rowAvg[0][14].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][14].ToString()) : 0;
                                novAVG = Convert.ToDecimal(row["Nov"].ToString()) / (averageRow != 0 ? averageRow : 1);

                                averageRow += rowAvg[0][15].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][15].ToString()) : 0;
                                decAVG = Convert.ToDecimal(row["Dec"].ToString()) / (averageRow != 0 ? averageRow : 1);

                                totalAVG = Convert.ToDecimal(row["Total"].ToString()) / TotalAVGAreaRow;
                            }
                            else
                            {
                                averageRow = 1;
                                janAVG = Convert.ToDecimal(row["Jan"].ToString());
                                febAVG = Convert.ToDecimal(row["Feb"].ToString());
                                marAVG = Convert.ToDecimal(row["Mar"].ToString());
                                aprAVG = Convert.ToDecimal(row["Apr"].ToString());
                                mayAVG = Convert.ToDecimal(row["May"].ToString());
                                junAVG = Convert.ToDecimal(row["Jun"].ToString());
                                julAVG = Convert.ToDecimal(row["Jul"].ToString());
                                augAVG = Convert.ToDecimal(row["Aug"].ToString());
                                sepAVG = Convert.ToDecimal(row["Sep"].ToString());
                                octAVG = Convert.ToDecimal(row["Oct"].ToString());
                                novAVG = Convert.ToDecimal(row["Nov"].ToString());
                                decAVG = Convert.ToDecimal(row["Dec"].ToString());
                                totalAVG = Convert.ToDecimal(row["Total"].ToString());
                            }

                            decimal avg = totalAVG / averageMonth;

                            if (area != "_JABODETABEK")
                                excelReport.SetCellValue("AVG " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.BrownTotal);
                            else
                                excelReport.SetCellValue("AVG DEALER " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.BrownTotal);

                            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);

                            TotalAVGOutletRow = 0;
                            TotalAVGAreaRow = 0;

                            if (parameter[2].ToString() == "ALL" && parameter[4].ToString() == "ALL" && parameter[6].ToString() == "ALL" && area == "_JABODETABEK")
                            {
                                rowIndex++;
                                excelReport.SetCellValue("SUB TOTAL " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.YellowTotal);

                                if (parameter[11].ToString() == "1")
                                    avg = totalJabodetabek / averageArea;
                                else
                                    avg = totalJabodetabek / averageMonth;
                                excelReport.SetCellValue(janJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janJabodetabek < Convert.ToInt32(avg) && janJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                excelReport.SetCellValue(febJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febJabodetabek < Convert.ToInt32(avg) && febJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                excelReport.SetCellValue(marJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marJabodetabek < Convert.ToInt32(avg) && marJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                excelReport.SetCellValue(aprJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprJabodetabek < Convert.ToInt32(avg) && aprJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                excelReport.SetCellValue(mayJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayJabodetabek < Convert.ToInt32(avg) && mayJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                excelReport.SetCellValue(junJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junJabodetabek < Convert.ToInt32(avg) && junJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                excelReport.SetCellValue(julJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julJabodetabek < Convert.ToInt32(avg) && julJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                excelReport.SetCellValue(augJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augJabodetabek < Convert.ToInt32(avg) && augJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                excelReport.SetCellValue(sepJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepJabodetabek < Convert.ToInt32(avg) && sepJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                excelReport.SetCellValue(octJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octJabodetabek < Convert.ToInt32(avg) && octJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                excelReport.SetCellValue(novJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novJabodetabek < Convert.ToInt32(avg) && novJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                excelReport.SetCellValue(decJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decJabodetabek < Convert.ToInt32(avg) && decJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                                excelReport.SetCellValue(totalJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);
                                excelReport.SetCellValue(avg.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);

                                rowIndex++;

                                janAVG = janJabodetabek / TotalAVGAreaRowJBDTK;
                                febAVG = febJabodetabek / TotalAVGAreaRowJBDTK;
                                marAVG = marJabodetabek / TotalAVGAreaRowJBDTK;
                                aprAVG = aprJabodetabek / TotalAVGAreaRowJBDTK;
                                mayAVG = mayJabodetabek / TotalAVGAreaRowJBDTK;
                                junAVG = junJabodetabek / TotalAVGAreaRowJBDTK;
                                julAVG = julJabodetabek / TotalAVGAreaRowJBDTK;
                                augAVG = augJabodetabek / TotalAVGAreaRowJBDTK;
                                sepAVG = sepJabodetabek / TotalAVGAreaRowJBDTK;
                                octAVG = octJabodetabek / TotalAVGAreaRowJBDTK;
                                novAVG = novJabodetabek / TotalAVGAreaRowJBDTK;
                                decAVG = decJabodetabek / TotalAVGAreaRowJBDTK;
                                totalAVG = totalJabodetabek / TotalAVGAreaRowJBDTK;
                                avg = totalAVG / averageArea;

                                excelReport.SetCellValue("AVG " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.BrownTotal);
                                excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                                excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                            }
                        }
                    }
                    else if (parameter[11].ToString() == "0" && parameter[12].ToString() == "1")
                    {
                        marketModelCount = marketModelCount == 1 ? 4 : 6;
                        decimal average = 0;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalType / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalType / averageArea;
                        else
                            average = totalType / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else if (parameter[13] == "1" && parameter[11] == "1")
                        {
                            excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                            totalColour = 0;
                        }
                        else
                            //Untuk masukkin total per Category
                            excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janType / totalAVGRow;
                        febAVG = febType / totalAVGRow;
                        marAVG = marType / totalAVGRow;
                        aprAVG = aprType / totalAVGRow;
                        mayAVG = mayType / totalAVGRow;
                        junAVG = junType / totalAVGRow;
                        julAVG = julType / totalAVGRow;
                        augAVG = augType / totalAVGRow;
                        sepAVG = sepType / totalAVGRow;
                        octAVG = octType / totalAVGRow;
                        novAVG = novType / totalAVGRow;
                        decAVG = decType / totalAVGRow;
                        totalAVG = totalType / totalAVGRow;
                        decimal avg = 0;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                        else
                            excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        average = totalSubTtl / totalMonth;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            average = totalSubTtl / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            average = totalSubTtl / averageArea;
                        else
                            average = totalSubTtl / totalMonth;


                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else
                            //Total Per Outlet
                            excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                        excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janAVG = janSubTtl / TotalAVGOutletRow;
                        febAVG = febSubTtl / TotalAVGOutletRow;
                        marAVG = marSubTtl / TotalAVGOutletRow;
                        aprAVG = aprSubTtl / TotalAVGOutletRow;
                        mayAVG = maySubTtl / TotalAVGOutletRow;
                        junAVG = junSubTtl / TotalAVGOutletRow;
                        julAVG = julSubTtl / TotalAVGOutletRow;
                        augAVG = augSubTtl / TotalAVGOutletRow;
                        sepAVG = sepSubTtl / TotalAVGOutletRow;
                        octAVG = octSubTtl / TotalAVGOutletRow;
                        novAVG = novSubTtl / TotalAVGOutletRow;
                        decAVG = decSubTtl / TotalAVGOutletRow;
                        totalAVG = totalSubTtl / TotalAVGOutletRow;
                        avg = 0;
                        if (parameter[11].ToString() == "1" && parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                            avg = totalAVG / averageMonth;
                        else if (parameter[12].ToString() == "1")
                            avg = totalAVG / averageArea;
                        else
                            avg = totalAVG / totalMonth;

                        //Total Per Outlet
                        if (parameter[13] == "1" && parameter[11] == "0")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else if (parameter[13] == "1" && parameter[11] == "1")
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                        else
                            excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                        rowIndex++;
                        spaceTotal++;
                        spaceTotalDealer++;
                        totalRow++;

                        janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                        janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                        totalRowDtl = 0;
                        TotalAVGOutletRow = 0;
                        spaceTotal = 0;
                        totalAVGRow = 0;
                        totalRow = 0;

                        excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, beforeRowType + marketModelCount, dealerWidth + outletWidth, ExcelCellStyle.LeftBorderedTop);
                        excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                        excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    }
                    else
                    {
                        excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, totalRowDtl, dealerWidth, ExcelCellStyle.LeftBorderedTop);

                        CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    }
                }
                else
                {
                    if (area != "_JABODETABEK")
                        excelReport.SetCellValue("SUB TOTAL " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.YellowTotal);
                    else
                        excelReport.SetCellValue("SUB TOTAL DEALER " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.YellowTotal);

                    CreateYellowDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                }
                //excelReport.SetCellValue("SUB TOTAL " + area.ToString(),8 + rowIndex, 0, 1, dealerWidth, ExcelCellStyle.YellowTotal);
            }

            seq = row["seq"].ToString();
            dealer = row["CompanyName"].ToString();
            totalRowDtl = 0;
            averageDealer = 0;

            //To Add Blank line before it start new Area...(^0^)V
            //rowIndex++;
            #endregion
            averageDealer = 0;
            marketModelCount = 1;
        }

        void tiga(DataRow row)
        {
            marketModelCount = marketModelCount == 1 ? 4 : 6;
            #region Third
            if (parameter[12].ToString() == "1" && parameter[14].ToString() == "")
            {
                #region Seven
                decimal average = totalType / averageMonth;
                if (parameter[13] == "1" && parameter[11] == "0")
                {
                    excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                    excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                    totalColour = 0;
                }
                else if (parameter[13] == "1" && parameter[11] == "1")
                {
                    excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                    excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                    totalColour = 0;
                }
                else
                    //Untuk masukkin total per Category
                    excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

                excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                rowIndex++;
                spaceTotal++;
                spaceTotalDealer++;
                totalRow++;

                janAVG = janType / totalAVGRow;
                febAVG = febType / totalAVGRow;
                marAVG = marType / totalAVGRow;
                aprAVG = aprType / totalAVGRow;
                mayAVG = mayType / totalAVGRow;
                junAVG = junType / totalAVGRow;
                julAVG = julType / totalAVGRow;
                augAVG = augType / totalAVGRow;
                sepAVG = sepType / totalAVGRow;
                octAVG = octType / totalAVGRow;
                novAVG = novType / totalAVGRow;
                decAVG = decType / totalAVGRow;
                totalAVG = (janAVG + febAVG + marAVG + aprAVG + mayAVG + junAVG + julAVG + augAVG + sepAVG + octAVG + novAVG + decAVG) / totalAVGRow;
                average = totalAVG / averageMonth;

                if (parameter[13] == "1" && parameter[11] == "0")
                    excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                else if (parameter[13] == "1" && parameter[11] == "1")
                    excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                else
                    excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(average) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(average) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(average) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(average) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(average) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(average) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(average) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(average) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(average) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(average) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(average) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(average) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(average).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                rowIndex++;
                spaceTotal++;
                spaceTotalDealer++;
                totalRow++;

                average = totalSubTtl / averageMonth;
                //Total Per Outlet
                if (parameter[13] == "1" && parameter[11] == "0")
                    excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                else if (parameter[13] == "1" && parameter[11] == "1")
                    excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                else
                    //Total Per Outlet
                    excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

                rowIndex++;
                spaceTotal++;
                spaceTotalDealer++;
                totalRow++;

                janAVG = janSubTtl / TotalAVGOutletRow;
                febAVG = febSubTtl / TotalAVGOutletRow;
                marAVG = marSubTtl / TotalAVGOutletRow;
                aprAVG = aprSubTtl / TotalAVGOutletRow;
                mayAVG = maySubTtl / TotalAVGOutletRow;
                junAVG = junSubTtl / TotalAVGOutletRow;
                julAVG = julSubTtl / TotalAVGOutletRow;
                augAVG = augSubTtl / TotalAVGOutletRow;
                sepAVG = sepSubTtl / TotalAVGOutletRow;
                octAVG = octSubTtl / TotalAVGOutletRow;
                novAVG = novSubTtl / TotalAVGOutletRow;
                decAVG = decSubTtl / TotalAVGOutletRow;
                totalAVG = (janAVG + febAVG + marAVG + aprAVG + mayAVG + junAVG + julAVG + augAVG + sepAVG + octAVG + novAVG + decAVG) / TotalAVGOutletRow;
                average = totalAVG / averageMonth;
                //Total Per Outlet
                if (parameter[13] == "1" && parameter[11] == "0")
                    excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                else if (parameter[13] == "1" && parameter[11] == "1")
                    excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                else
                    excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(average) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(average) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(average) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(average) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(average) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(average) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(average) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(average) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(average) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(average) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(average) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(average) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(average).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                rowIndex++;
                spaceTotal++;
                spaceTotalDealer++;
                totalRow++;

                //Untuk masukkin nama Outlet
                excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedTop);
                excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, Convert.ToInt32(row["rowType"].ToString()) + marketModelCount + totalRow, dealerWidth, ExcelCellStyle.LeftBorderedStandardWrap);

                janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;

                //excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalTableRestorePoint.ToString());
                excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());

                if (parameter[13] == "1")
                {
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                    if (parameter[11] == "0")
                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                    else
                        excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                    colorCategory = row["ColourName"].ToString();
                }
                else
                    excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                seq = row["seq"].ToString();
                outlet = row["BranchName"].ToString();
                marketModel = row["MarketModel"].ToString();
                modelCategory = row["ModelCatagory"].ToString();
                #endregion
            }
            else
            {
                decimal average = Convert.ToDecimal(row["Total"].ToString()) / averageDealer;
                decimal jan = Convert.ToDecimal(row["Jan"].ToString());
                decimal feb = Convert.ToDecimal(row["Feb"].ToString());
                decimal mar = Convert.ToDecimal(row["Mar"].ToString());
                decimal apr = Convert.ToDecimal(row["Apr"].ToString());
                decimal may = Convert.ToDecimal(row["May"].ToString());
                decimal jun = Convert.ToDecimal(row["Jun"].ToString());
                decimal jul = Convert.ToDecimal(row["Jul"].ToString());
                decimal aug = Convert.ToDecimal(row["Aug"].ToString());
                decimal sep = Convert.ToDecimal(row["Sep"].ToString());
                decimal oct = Convert.ToDecimal(row["Oct"].ToString());
                decimal nov = Convert.ToDecimal(row["Nov"].ToString());
                decimal dec = Convert.ToDecimal(row["Dec"].ToString());

                excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, (parameter[14] != "" ? totalRowDtl : totalOutlet + 1), dealerWidth, ExcelCellStyle.LeftBorderedTop);
                excelReport.SetCellValue("Total Per Outlet", 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedBold);
                excelReport.SetCellValue(jan.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (jan < average && jan != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                excelReport.SetCellValue(feb.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (feb < average && feb != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                excelReport.SetCellValue(mar.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (mar < average && mar != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                excelReport.SetCellValue(apr.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (apr < average && apr != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                excelReport.SetCellValue(may.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (may < average && may != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                excelReport.SetCellValue(jun.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (jun < average && jun != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                excelReport.SetCellValue(jul.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (jul < average && jul != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                excelReport.SetCellValue(aug.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (aug < average && aug != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                excelReport.SetCellValue(sep.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sep < average && sep != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                excelReport.SetCellValue(oct.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (oct < average && oct != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                excelReport.SetCellValue(nov.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (nov < average && nov != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                excelReport.SetCellValue(dec.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (dec < average && dec != 0) ? ExcelCellStyle.RightBorderedBoldRedNumber : ExcelCellStyle.RightBorderedBoldNumber, true);
                excelReport.SetCellValue(Convert.ToDecimal(row["Total"].ToString()).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.RightBorderedBoldNumber, true);
                excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.RightBorderedBoldNumber, true);

                seq = row["seq"].ToString();
                outlet = row["BranchName"].ToString();
                totalOutlet = totalRowDtl = parameter[14].ToString() != "" ? 0 : 1;
            }
            #endregion
            marketModelCount = 1;
        }

        void empat(DataRow row)
        {
            #region Fourth
            if (parameter[12].ToString() == "1" && parameter[14].ToString() == "")
            {
                marketModelCount = marketModelCount == 1 ? 4 : 6;
                #region Eight Extensions
                decimal average = 0;
                if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                    average = totalType / averageMonth;
                else if (parameter[12].ToString() == "1")
                    average = totalType / averageArea;
                else
                    average = totalType / totalMonth;

                if (parameter[13] == "1" && parameter[11] == "0")
                {
                    excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                    excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                    totalColour = 0;
                }
                else if (parameter[13] == "1" && parameter[11] == "1")
                {
                    excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                    excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                    totalColour = 0;
                }
                else
                    //Untuk masukkin total per Category
                    excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
                excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
                excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

                rowIndex++;
                spaceTotal++;
                spaceTotalDealer++;
                totalRow++;

                janAVG = janType / totalAVGRow;
                febAVG = febType / totalAVGRow;
                marAVG = marType / totalAVGRow;
                aprAVG = aprType / totalAVGRow;
                mayAVG = mayType / totalAVGRow;
                junAVG = junType / totalAVGRow;
                julAVG = julType / totalAVGRow;
                augAVG = augType / totalAVGRow;
                sepAVG = sepType / totalAVGRow;
                octAVG = octType / totalAVGRow;
                novAVG = novType / totalAVGRow;
                decAVG = decType / totalAVGRow;
                totalAVG = totalType / TotalAVGOutletRow;
                decimal avg = 0;
                if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                    avg = totalAVG / averageMonth;
                else if (parameter[12].ToString() == "1")
                    avg = totalAVG / averageArea;
                else
                    avg = totalAVG / totalMonth;

                if (parameter[13] == "1" && parameter[11] == "0")
                    excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                else if (parameter[13] == "1" && parameter[11] == "1")
                    excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                else
                    excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

                excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                rowIndex++;
                spaceTotal++;
                spaceTotalDealer++;
                totalRow++;

                if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                    average = totalSubTtl / averageMonth;
                else if (parameter[12].ToString() == "1")
                    average = totalSubTtl / averageArea;
                else
                    average = totalSubTtl / totalMonth;

                //Total Per Outlet
                if (parameter[13] == "1" && parameter[11] == "0")
                    excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                else if (parameter[13] == "1" && parameter[11] == "1")
                    excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
                else
                    //Total Per Outlet
                    excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
                excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
                rowIndex++;
                spaceTotal++;
                spaceTotalDealer++;
                totalRow++;


                janAVG = janSubTtl / TotalAVGOutletRow;
                febAVG = febSubTtl / TotalAVGOutletRow;
                marAVG = marSubTtl / TotalAVGOutletRow;
                aprAVG = aprSubTtl / TotalAVGOutletRow;
                mayAVG = maySubTtl / TotalAVGOutletRow;
                junAVG = junSubTtl / TotalAVGOutletRow;
                julAVG = julSubTtl / TotalAVGOutletRow;
                augAVG = augSubTtl / TotalAVGOutletRow;
                sepAVG = sepSubTtl / TotalAVGOutletRow;
                octAVG = octSubTtl / TotalAVGOutletRow;
                novAVG = novSubTtl / TotalAVGOutletRow;
                decAVG = decSubTtl / TotalAVGOutletRow;
                totalAVG = totalSubTtl / TotalAVGOutletRow;
                if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                    avg = totalAVG / averageMonth;
                else if (parameter[12].ToString() == "1")
                    avg = totalAVG / averageArea;
                else
                    avg = totalAVG / totalMonth;

                //Total Per Outlet
                if (parameter[13] == "1" && parameter[11] == "0")
                    excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                else if (parameter[13] == "1" && parameter[11] == "1")
                    excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
                else
                    excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
                excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                rowIndex++;
                spaceTotal++;
                spaceTotalDealer++;
                totalRow++;

                excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL", 1, beforeRowType + marketModelCount, outletWidth, ExcelCellStyle.LeftBorderedTop);



                janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
                janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
                TotalAVGOutletRow = 0;
                totalAVGRow = 0;
                totalRowDtl = 0;
                spaceTotal = 0;
                totalRow = 0;

                excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
                excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
                if (parameter[13] == "1" && parameter[11] == "0")
                {
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                    colorCategory = row["ColourName"].ToString();
                }
                else if (parameter[13] == "1" && parameter[11] == "1")
                {
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                    colorCategory = row["ColourName"].ToString();
                }
                else
                    excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

                CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

                if (row["Seq"].ToString() != "1")
                    totalDealerGT++;
                seq = row["seq"].ToString();
                dealer = row["CompanyName"].ToString();
                outlet = row["BranchName"].ToString();
                marketModel = row["MarketModel"].ToString();
                modelCategory = row["ModelCatagory"].ToString();
                #endregion
                averageDealer = 0;
                marketModelCount = 1;
            }
            else
            {
                if (row["seq"].ToString() == "1" && row["seq2"].ToString() == "1")
                {
                    if (area != "_JABODETABEK")
                        excelReport.SetCellValue("TOTAL PER-" + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.YellowTotal);
                    else
                        excelReport.SetCellValue("TOTAL DEALER" + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.YellowTotal);

                    CreateYellowDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    rowIndex++;

                    DataRow[] rowAvg = dt1.Select(string.Format("DealerAbbreviation = '{0}'", area));
                    decimal averageRow = 0;
                    if (rowAvg.Length != 0)
                    {
                        averageRow = rowAvg[0][4].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][4].ToString()) : 0;
                        janAVG = Convert.ToDecimal(row["Jan"].ToString()) / (averageRow != 0 ? averageRow : 1);

                        averageRow += rowAvg[0][5].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][5].ToString()) : 0;
                        febAVG = Convert.ToDecimal(row["Feb"].ToString()) / (averageRow != 0 ? averageRow : 1);

                        averageRow += rowAvg[0][6].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][6].ToString()) : 0;
                        marAVG = Convert.ToDecimal(row["Mar"].ToString()) / (averageRow != 0 ? averageRow : 1);

                        averageRow += rowAvg[0][7].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][7].ToString()) : 0;
                        aprAVG = Convert.ToDecimal(row["Apr"].ToString()) / (averageRow != 0 ? averageRow : 1);

                        averageRow += rowAvg[0][8].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][8].ToString()) : 0;
                        mayAVG = Convert.ToDecimal(row["May"].ToString()) / (averageRow != 0 ? averageRow : 1);

                        averageRow += rowAvg[0][9].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][9].ToString()) : 0;
                        junAVG = Convert.ToDecimal(row["Jun"].ToString()) / (averageRow != 0 ? averageRow : 1);

                        averageRow += rowAvg[0][10].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][10].ToString()) : 0;
                        julAVG = Convert.ToDecimal(row["Jul"].ToString()) / (averageRow != 0 ? averageRow : 1);

                        averageRow += rowAvg[0][11].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][11].ToString()) : 0;
                        augAVG = Convert.ToDecimal(row["Aug"].ToString()) / (averageRow != 0 ? averageRow : 1);

                        averageRow += rowAvg[0][12].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][12].ToString()) : 0;
                        sepAVG = Convert.ToDecimal(row["Sep"].ToString()) / (averageRow != 0 ? averageRow : 1);

                        averageRow += rowAvg[0][13].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][13].ToString()) : 0;
                        octAVG = Convert.ToDecimal(row["Oct"].ToString()) / (averageRow != 0 ? averageRow : 1);

                        averageRow += rowAvg[0][14].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][14].ToString()) : 0;
                        novAVG = Convert.ToDecimal(row["Nov"].ToString()) / (averageRow != 0 ? averageRow : 1);

                        averageRow += rowAvg[0][15].ToString() != "0" ? Convert.ToDecimal(rowAvg[0][15].ToString()) : 0;
                        decAVG = Convert.ToDecimal(row["Dec"].ToString()) / (averageRow != 0 ? averageRow : 1);

                        totalAVG = Convert.ToDecimal(row["Total"].ToString()) / TotalAVGAreaRow;
                    }
                    else
                    {
                        averageRow = 1;
                        janAVG = Convert.ToDecimal(row["Jan"].ToString());
                        febAVG = Convert.ToDecimal(row["Feb"].ToString());
                        marAVG = Convert.ToDecimal(row["Mar"].ToString());
                        aprAVG = Convert.ToDecimal(row["Apr"].ToString());
                        mayAVG = Convert.ToDecimal(row["May"].ToString());
                        junAVG = Convert.ToDecimal(row["Jun"].ToString());
                        julAVG = Convert.ToDecimal(row["Jul"].ToString());
                        augAVG = Convert.ToDecimal(row["Aug"].ToString());
                        sepAVG = Convert.ToDecimal(row["Sep"].ToString());
                        octAVG = Convert.ToDecimal(row["Oct"].ToString());
                        novAVG = Convert.ToDecimal(row["Nov"].ToString());
                        decAVG = Convert.ToDecimal(row["Dec"].ToString());
                        totalAVG = Convert.ToDecimal(row["Total"].ToString());
                    }

                    decimal avg = totalAVG / averageArea;

                    if (area != "_JABODETABEK")
                        excelReport.SetCellValue("AVG " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.BrownTotal);
                    else
                        excelReport.SetCellValue("AVG DEALER " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.BrownTotal);

                    excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                    rowIndex++;

                    TotalAVGOutletRow = 0;
                    TotalAVGAreaRow = 0;

                    if (parameter[2].ToString() == "ALL" && parameter[4].ToString() == "ALL" && parameter[6].ToString() == "ALL" && area == "_JABODETABEK")
                    {
                        excelReport.SetCellValue("TOTAL " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.YellowTotal);

                        if (parameter[11].ToString() == "1")
                            avg = totalJabodetabek / averageArea;
                        else
                            avg = totalJabodetabek / averageMonth;
                        excelReport.SetCellValue(janJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janJabodetabek < Convert.ToInt32(avg) && janJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                        excelReport.SetCellValue(febJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febJabodetabek < Convert.ToInt32(avg) && febJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                        excelReport.SetCellValue(marJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marJabodetabek < Convert.ToInt32(avg) && marJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                        excelReport.SetCellValue(aprJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprJabodetabek < Convert.ToInt32(avg) && aprJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                        excelReport.SetCellValue(mayJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (mayJabodetabek < Convert.ToInt32(avg) && mayJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                        excelReport.SetCellValue(junJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junJabodetabek < Convert.ToInt32(avg) && junJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                        excelReport.SetCellValue(julJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julJabodetabek < Convert.ToInt32(avg) && julJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                        excelReport.SetCellValue(augJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augJabodetabek < Convert.ToInt32(avg) && augJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                        excelReport.SetCellValue(sepJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepJabodetabek < Convert.ToInt32(avg) && sepJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                        excelReport.SetCellValue(octJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octJabodetabek < Convert.ToInt32(avg) && octJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                        excelReport.SetCellValue(novJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novJabodetabek < Convert.ToInt32(avg) && novJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                        excelReport.SetCellValue(decJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decJabodetabek < Convert.ToInt32(avg) && decJabodetabek != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
                        excelReport.SetCellValue(totalJabodetabek.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);
                        excelReport.SetCellValue(avg.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);

                        rowIndex++;

                        janAVG = janJabodetabek / TotalAVGAreaRowJBDTK;
                        febAVG = febJabodetabek / TotalAVGAreaRowJBDTK;
                        marAVG = marJabodetabek / TotalAVGAreaRowJBDTK;
                        aprAVG = aprJabodetabek / TotalAVGAreaRowJBDTK;
                        mayAVG = mayJabodetabek / TotalAVGAreaRowJBDTK;
                        junAVG = junJabodetabek / TotalAVGAreaRowJBDTK;
                        julAVG = julJabodetabek / TotalAVGAreaRowJBDTK;
                        augAVG = augJabodetabek / TotalAVGAreaRowJBDTK;
                        sepAVG = sepJabodetabek / TotalAVGAreaRowJBDTK;
                        octAVG = octJabodetabek / TotalAVGAreaRowJBDTK;
                        novAVG = novJabodetabek / TotalAVGAreaRowJBDTK;
                        decAVG = decJabodetabek / TotalAVGAreaRowJBDTK;
                        totalAVG = totalJabodetabek / TotalAVGAreaRowJBDTK;
                        avg = totalAVG / averageArea;

                        excelReport.SetCellValue("AVG " + area.ToString(), 8 + rowIndex, 0, 1, dealerWidth + outletWidth, ExcelCellStyle.BrownTotal);
                        excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
                        rowIndex++;
                        //averageArea = 0;
                    }
                }
                excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());

                if (row["seq"].ToString() != "1")
                {
                    excelReport.SetCellValue(row["BranchName"].ToString(), 8 + rowIndex, 0 + dealerWidth, 1, outletWidth, ExcelCellStyle.LeftBorderedStandard);

                    CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
                    totalDealerGT++;
                }
                else if (parameter[14] != "")
                {
                    rowIndex--; totalRowDtl = totalOutlet = 0;
                    TotalAVGAreaRow++;
                    TotalAVGAreaRowJBDTK++;
                }
                else
                {
                    rowIndex--; totalRowDtl = totalOutlet = 0;
                }
                seq = row["seq"].ToString();
                dealer = row["CompanyName"].ToString();
                outlet = row["BranchName"].ToString();

                //totalRowDtl = 0;
                //totalOutlet = 0;
                //rowIndex++;

                averageDealer = 0;
                marketModelCount = 1;
            }
            #endregion
        }

        void lima(DataRow row)
        {
            #region Fitfh

            #region Total
            decimal averageTotal = 0;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                averageTotal = totalType / averageMonth;
            else if (parameter[12].ToString() == "1")
                averageTotal = totalType / averageArea;
            else
                averageTotal = totalType / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
            {
                //Untuk masukkin nama Area
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.YellowTotal);
                totalColour = 0;
            }
            else if (parameter[13] == "1" && parameter[11] == "1")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.YellowTotal);
                totalColour = 0;
            }
            else if (parameter[13] == "0" && parameter[11] == "1")
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.YellowTotal);
            else if (parameter[12] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth, ExcelCellStyle.YellowTotal);
            else if (parameter[12] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, modelWidth, ExcelCellStyle.YellowTotal);

            excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(averageTotal) && janType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(averageTotal) && febType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(averageTotal) && marType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(averageTotal) && aprType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(averageTotal) && mayType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(averageTotal) && junType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(averageTotal) && julType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(averageTotal) && augType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(averageTotal) && sepType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(averageTotal) && octType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(averageTotal) && novType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(averageTotal) && decType != 0) ? ExcelCellStyle.YellowTotalRedNumber : ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);
            excelReport.SetCellValue(averageTotal.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.YellowTotalNumber, true);

            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janType / totalAVGRow;
            febAVG = febType / totalAVGRow;
            marAVG = marType / totalAVGRow;
            aprAVG = aprType / totalAVGRow;
            mayAVG = mayType / totalAVGRow;
            junAVG = junType / totalAVGRow;
            julAVG = julType / totalAVGRow;
            augAVG = augType / totalAVGRow;
            sepAVG = sepType / totalAVGRow;
            octAVG = octType / totalAVGRow;
            novAVG = novType / totalAVGRow;
            decAVG = decType / totalAVGRow;
            totalAVG = totalType / totalAVGRow;
            decimal avg = 0;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                avg = totalAVG / averageMonth;
            else if (parameter[12].ToString() == "1")
                avg = totalAVG / averageArea;
            else
                avg = totalAVG / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "0" && parameter[11] == "1")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[12] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[12] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;
            totalAVGRow = 0;
            #endregion

            janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
            marketModel = row["MarketModel"].ToString();
            modelCategory = row["ModelCatagory"].ToString();

            if (parameter[13] == "1" && parameter[11] == "0")
            {
                excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                if (parameter[11] == "0")
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                else
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                colorCategory = row["ColourName"].ToString();
            }
            else
            {
                if (parameter[13] == "1")
                {
                    excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                    colorCategory = row["ColourName"].ToString();

                }
                else
                    excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

            }

            CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
            #endregion
            marketModelCount++;
        }

        void enam(DataRow row)
        {
            #region Six
            decimal averageTotalType = 0;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                averageTotalType = totalType / averageMonth;
            else if (parameter[12].ToString() == "1")
                averageTotalType = totalType / averageArea;
            else
                averageTotalType = totalType / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else if (parameter[13] == "1" && parameter[11] == "1")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else
                //Untuk masukkin total per Category
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

            CreateBlueTypeDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janType / totalAVGRow;
            febAVG = febType / totalAVGRow;
            marAVG = marType / totalAVGRow;
            aprAVG = aprType / totalAVGRow;
            mayAVG = mayType / totalAVGRow;
            junAVG = junType / totalAVGRow;
            julAVG = julType / totalAVGRow;
            augAVG = augType / totalAVGRow;
            sepAVG = sepType / totalAVGRow;
            octAVG = octType / totalAVGRow;
            novAVG = novType / totalAVGRow;
            decAVG = decType / totalAVGRow;
            totalAVG = totalType / totalAVGRow;
            decimal avg = 0;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                avg = totalAVG / averageMonth;
            else if (parameter[12].ToString() == "1")
                avg = totalAVG / averageArea;
            else
                avg = totalAVG / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                averageTotalType = totalSubTtl / averageMonth;
            else if (parameter[12].ToString() == "1")
                averageTotalType = totalSubTtl / averageArea;
            else
                averageTotalType = totalSubTtl / totalMonth;

            //Total Per Outlet
            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
            excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(averageTotalType) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(averageTotalType) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(averageTotalType) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(averageTotalType) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(averageTotalType) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(averageTotalType) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(averageTotalType) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(averageTotalType) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(averageTotalType) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(averageTotalType) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(averageTotalType) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(averageTotalType) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(averageTotalType.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janSubTtl / TotalAVGOutletRow;
            febAVG = febSubTtl / TotalAVGOutletRow;
            marAVG = marSubTtl / TotalAVGOutletRow;
            aprAVG = aprSubTtl / TotalAVGOutletRow;
            mayAVG = maySubTtl / TotalAVGOutletRow;
            junAVG = junSubTtl / TotalAVGOutletRow;
            julAVG = julSubTtl / TotalAVGOutletRow;
            augAVG = augSubTtl / TotalAVGOutletRow;
            sepAVG = sepSubTtl / TotalAVGOutletRow;
            octAVG = octSubTtl / TotalAVGOutletRow;
            novAVG = novSubTtl / TotalAVGOutletRow;
            decAVG = decSubTtl / TotalAVGOutletRow;
            totalAVG = totalSubTtl / TotalAVGOutletRow;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                avg = totalAVG / averageMonth;
            else if (parameter[12].ToString() == "1")
                avg = totalAVG / averageArea;
            else
                avg = totalAVG / totalMonth;

            //Total Per Outlet
            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            //Untuk masukkin nama Outlet
            excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedStandardWrap);

            janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
            janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
            outlet = row["BranchName"].ToString();
            marketModel = row["MarketModel"].ToString();
            modelCategory = row["ModelCatagory"].ToString();
            if (parameter[12].ToString() == "1") averageMonth = 0;
            totalAVGRow = 0;
            TotalAVGOutletRow = 0;
            totalRowDtl = 0;
            spaceTotal = 0;

            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
            if (parameter[13] == "1")
            {
                excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                if (parameter[11] == "0")
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                else
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                colorCategory = row["ColourName"].ToString();
            }
            else
                excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

            CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
            #endregion
        }

        void tujuh(DataRow row)
        {
            #region Six Extension
            if (parameter[13] == "1" && parameter[11] == "0")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else if (parameter[13] == "1" && parameter[11] == "1")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else
                //Untuk masukkin total per Category
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
            CreateBlueTypeDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janType / totalAVGRow;
            febAVG = febType / totalAVGRow;
            marAVG = marType / totalAVGRow;
            aprAVG = aprType / totalAVGRow;
            mayAVG = mayType / totalAVGRow;
            junAVG = junType / totalAVGRow;
            julAVG = julType / totalAVGRow;
            augAVG = augType / totalAVGRow;
            sepAVG = sepType / totalAVGRow;
            octAVG = octType / totalAVGRow;
            novAVG = novType / totalAVGRow;
            decAVG = decType / totalAVGRow;
            totalAVG = totalType / totalAVGRow;
            decimal avg = 0;
            if (parameter[12].ToString() == "1")
                avg = totalAVG / averageMonth;
            else
                avg = totalAVG / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;
            decimal average = 0;
            if (parameter[12].ToString() == "1")
                average = totalSubTtl / averageMonth;
            else
                average = totalSubTtl / totalMonth;

            //Total Per Outlet
            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
            excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janSubTtl / totalAVGRow;
            febAVG = febSubTtl / totalAVGRow;
            marAVG = marSubTtl / totalAVGRow;
            aprAVG = aprSubTtl / totalAVGRow;
            mayAVG = maySubTtl / totalAVGRow;
            junAVG = junSubTtl / totalAVGRow;
            julAVG = julSubTtl / totalAVGRow;
            augAVG = augSubTtl / totalAVGRow;
            sepAVG = sepSubTtl / totalAVGRow;
            octAVG = octSubTtl / totalAVGRow;
            novAVG = novSubTtl / totalAVGRow;
            decAVG = decSubTtl / totalAVGRow;
            totalAVG = totalSubTtl / totalAVGRow;
            if (parameter[12].ToString() == "1")
                avg = totalAVG / averageMonth;
            else
                avg = totalAVG / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            //Untuk masukkin nama Outlet
            excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedStandardWrap);

            janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
            janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
            outlet = row["BranchName"].ToString();
            marketModel = row["MarketModel"].ToString();
            modelCategory = row["ModelCatagory"].ToString();
            totalAVGRow = 0;
            totalRowDtl = 0;
            spaceTotal = 0;
            if (parameter[12].ToString() == "1") averageMonth = 0;
            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
            if (parameter[13] == "1")
            {
                colorCategory = row["ColourName"].ToString();
                excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                if (parameter[11] == "0")
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                else
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
            }
            else
                excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

            CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);
            #endregion
        }

        void delapan(DataRow row)
        {
            marketModelCount = marketModelCount == 1 ? 4 : 6;
            #region Seven
            decimal average = 0;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                average = totalType / averageMonth;
            else if (parameter[12].ToString() == "1")
                average = totalType / averageArea;
            else
                average = totalType / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else if (parameter[13] == "1" && parameter[11] == "1")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else
                //Untuk masukkin total per Category
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

            excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janType / totalAVGRow;
            febAVG = febType / totalAVGRow;
            marAVG = marType / totalAVGRow;
            aprAVG = aprType / totalAVGRow;
            mayAVG = mayType / totalAVGRow;
            junAVG = junType / totalAVGRow;
            julAVG = julType / totalAVGRow;
            augAVG = augType / totalAVGRow;
            sepAVG = sepType / totalAVGRow;
            octAVG = octType / totalAVGRow;
            novAVG = novType / totalAVGRow;
            decAVG = decType / totalAVGRow;
            totalAVG = totalType / totalAVGRow;
            decimal avg = 0;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                avg = totalAVG / averageMonth;
            else if (parameter[12].ToString() == "1")
                avg = totalAVG / averageArea;
            else
                avg = totalAVG / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                average = totalSubTtl / averageMonth;
            else if (parameter[12].ToString() == "1")
                average = totalSubTtl / averageArea;
            else
                average = totalSubTtl / totalMonth;

            //Total Per Outlet
            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else
                //Total Per Outlet
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
            excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janSubTtl / TotalAVGOutletRow;
            febAVG = febSubTtl / TotalAVGOutletRow;
            marAVG = marSubTtl / TotalAVGOutletRow;
            aprAVG = aprSubTtl / TotalAVGOutletRow;
            mayAVG = maySubTtl / TotalAVGOutletRow;
            junAVG = junSubTtl / TotalAVGOutletRow;
            julAVG = julSubTtl / TotalAVGOutletRow;
            augAVG = augSubTtl / TotalAVGOutletRow;
            sepAVG = sepSubTtl / TotalAVGOutletRow;
            octAVG = octSubTtl / TotalAVGOutletRow;
            novAVG = novSubTtl / TotalAVGOutletRow;
            decAVG = decSubTtl / TotalAVGOutletRow;
            totalAVG = totalSubTtl / TotalAVGOutletRow;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                avg = totalAVG / averageMonth;
            else if (parameter[12].ToString() == "1")
                avg = totalAVG / averageArea;
            else
                avg = totalAVG / totalMonth;

            //Total Per Outlet
            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            //Untuk masukkin nama Outlet
            excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedTop);
            excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, Convert.ToInt32(row["rowType"].ToString()) + marketModelCount + totalRow, dealerWidth, ExcelCellStyle.LeftBorderedStandardWrap);


            janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
            janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;

            excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalRestorePoint.ToString());
            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());

            if (parameter[13] == "1")
            {
                excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                if (parameter[11] == "0")
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                else
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                colorCategory = row["ColourName"].ToString();
            }
            else
                excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

            CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

            seq = row["seq"].ToString();
            outlet = row["BranchName"].ToString();
            marketModel = row["MarketModel"].ToString();
            modelCategory = row["ModelCatagory"].ToString();
            #endregion
        }

        void sembilan(DataRow row)
        {
            marketModelCount = marketModelCount == 1 ? 4 : 6;
            #region Seven Extendsion
            decimal average = 0;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                average = totalType / averageMonth;
            else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                average = totalType / averageArea;
            else
                average = totalType / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else if (parameter[13] == "1" && parameter[11] == "1")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else
                //Untuk masukkin total per Category
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

            excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janType / totalAVGRow;
            febAVG = febType / totalAVGRow;
            marAVG = marType / totalAVGRow;
            aprAVG = aprType / totalAVGRow;
            mayAVG = mayType / totalAVGRow;
            junAVG = junType / totalAVGRow;
            julAVG = julType / totalAVGRow;
            augAVG = augType / totalAVGRow;
            sepAVG = sepType / totalAVGRow;
            octAVG = octType / totalAVGRow;
            novAVG = novType / totalAVGRow;
            decAVG = decType / totalAVGRow;
            totalAVG = totalType / totalAVGRow;
            decimal avg = 0;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                avg = totalAVG / averageMonth;
            else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                avg = totalAVG / averageArea;
            else
                avg = totalAVG / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                average = totalSubTtl / averageMonth;
            else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                average = totalSubTtl / averageArea;
            else
                average = totalSubTtl / totalMonth;

            //Total Per Outlet
            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else
                //Total Per Outlet
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
            excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janSubTtl / TotalAVGOutletRow;
            febAVG = febSubTtl / TotalAVGOutletRow;
            marAVG = marSubTtl / TotalAVGOutletRow;
            aprAVG = aprSubTtl / TotalAVGOutletRow;
            mayAVG = maySubTtl / TotalAVGOutletRow;
            junAVG = junSubTtl / TotalAVGOutletRow;
            julAVG = julSubTtl / TotalAVGOutletRow;
            augAVG = augSubTtl / TotalAVGOutletRow;
            sepAVG = sepSubTtl / TotalAVGOutletRow;
            octAVG = octSubTtl / TotalAVGOutletRow;
            novAVG = novSubTtl / TotalAVGOutletRow;
            decAVG = decSubTtl / TotalAVGOutletRow;
            totalAVG = totalSubTtl / totalAVGRow;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                avg = totalAVG / averageMonth;
            else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                avg = totalAVG / averageArea;
            else
                avg = totalAVG / totalMonth;

            //Total Per Outlet
            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;


            //Untuk masukkin nama Outlet
            excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedTop);
            excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, Convert.ToInt32(row["rowType"].ToString()) + marketModelCount + totalRow, dealerWidth, ExcelCellStyle.LeftBorderedStandardWrap);

            //totalAVGRow = 0;
            //TotalAVGOutletRow = 0;
            //totalRowDtl = 0;
            //spaceTotal = 0;
            //totalRow = 0;

            janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
            janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;

            excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalRestorePoint.ToString());
            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());

            if (parameter[13] == "1")
            {
                excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                if (parameter[11] == "0")
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                else
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                colorCategory = row["ColourName"].ToString();
            }
            else
                excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

            CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

            seq = row["seq"].ToString();
            outlet = row["BranchName"].ToString();
            marketModel = row["MarketModel"].ToString();
            modelCategory = row["ModelCatagory"].ToString();
            #endregion
            marketModelCount = 1;
        }

        void sepuluh(DataRow row)
        {
            marketModelCount = marketModelCount == 1 ? 4 : 6;
            #region Seven Extendsion
            decimal average = 0;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                average = totalType / averageMonth;
            else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                average = totalType / averageArea;
            else
                average = totalType / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else if (parameter[13] == "1" && parameter[11] == "1")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else
                //Untuk masukkin total per Category
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

            excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janType / totalAVGRow;
            febAVG = febType / totalAVGRow;
            marAVG = marType / totalAVGRow;
            aprAVG = aprType / totalAVGRow;
            mayAVG = mayType / totalAVGRow;
            junAVG = junType / totalAVGRow;
            julAVG = julType / totalAVGRow;
            augAVG = augType / totalAVGRow;
            sepAVG = sepType / totalAVGRow;
            octAVG = octType / totalAVGRow;
            novAVG = novType / totalAVGRow;
            decAVG = decType / totalAVGRow;
            totalAVG = totalType / totalAVGRow;
            decimal avg = 0;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                avg = totalAVG / averageMonth;
            else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                avg = totalAVG / averageArea;
            else
                avg = totalAVG / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                average = totalSubTtl / averageMonth;
            else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                average = totalSubTtl / averageArea;
            else
                average = totalSubTtl / totalMonth;

            //Total Per Outlet
            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else
                //Total Per Outlet
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
            excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janSubTtl / TotalAVGOutletRow;
            febAVG = febSubTtl / TotalAVGOutletRow;
            marAVG = marSubTtl / TotalAVGOutletRow;
            aprAVG = aprSubTtl / TotalAVGOutletRow;
            mayAVG = maySubTtl / TotalAVGOutletRow;
            junAVG = junSubTtl / TotalAVGOutletRow;
            julAVG = julSubTtl / TotalAVGOutletRow;
            augAVG = augSubTtl / TotalAVGOutletRow;
            sepAVG = sepSubTtl / TotalAVGOutletRow;
            octAVG = octSubTtl / TotalAVGOutletRow;
            novAVG = novSubTtl / TotalAVGOutletRow;
            decAVG = decSubTtl / TotalAVGOutletRow;
            totalAVG = totalSubTtl / totalAVGRow;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                avg = totalAVG / averageMonth;
            else if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "1")
                avg = totalAVG / averageArea;
            else
                avg = totalAVG / totalMonth;

            //Total Per Outlet
            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;


            //Untuk masukkin nama Outlet
            excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedTop);
            excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, Convert.ToInt32(row["rowType"].ToString()) + marketModelCount + totalRow, dealerWidth, ExcelCellStyle.LeftBorderedStandardWrap);

            //totalAVGRow = 0;
            //TotalAVGOutletRow = 0;
            //totalRowDtl = 0;
            //spaceTotal = 0;
            //totalRow = 0;

            janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
            janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;

            excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalRestorePoint.ToString());
            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());

            if (parameter[13] == "1")
            {
                excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                if (parameter[11] == "0")
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                else
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                colorCategory = row["ColourName"].ToString();
            }
            else
                excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

            CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

            seq = row["seq"].ToString();
            outlet = row["BranchName"].ToString();
            marketModel = row["MarketModel"].ToString();
            modelCategory = row["ModelCatagory"].ToString();
            #endregion
            marketModelCount = 1;
        }

        void sebelas(DataRow row)
        {
            marketModelCount = marketModelCount == 1 ? 4 : 6;
            #region Seven Second Extension
            decimal average = 0;
            if (parameter[12].ToString() == "1")
                average = totalType / averageMonth;
            else
                average = totalType / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else if (parameter[13] == "1" && parameter[11] == "1")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else
                //Untuk masukkin total per Category
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

            excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janType / totalAVGRow;
            febAVG = febType / totalAVGRow;
            marAVG = marType / totalAVGRow;
            aprAVG = aprType / totalAVGRow;
            mayAVG = mayType / totalAVGRow;
            junAVG = junType / totalAVGRow;
            julAVG = julType / totalAVGRow;
            augAVG = augType / totalAVGRow;
            sepAVG = sepType / totalAVGRow;
            octAVG = octType / totalAVGRow;
            novAVG = novType / totalAVGRow;
            decAVG = decType / totalAVGRow;
            totalAVG = totalType / totalAVGRow;
            decimal avg = 0;
            if (parameter[12].ToString() == "1")
                avg = totalAVG / averageMonth;
            else
                avg = totalAVG / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            if (parameter[12].ToString() == "1")
                average = totalSubTtl / averageMonth;
            else
                average = totalSubTtl / totalMonth;

            //Total Per Outlet
            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else
                //Total Per Outlet
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
            excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janSubTtl / TotalAVGOutletRow;
            febAVG = febSubTtl / TotalAVGOutletRow;
            marAVG = marSubTtl / TotalAVGOutletRow;
            aprAVG = aprSubTtl / TotalAVGOutletRow;
            mayAVG = maySubTtl / TotalAVGOutletRow;
            junAVG = junSubTtl / TotalAVGOutletRow;
            julAVG = julSubTtl / TotalAVGOutletRow;
            augAVG = augSubTtl / TotalAVGOutletRow;
            sepAVG = sepSubTtl / TotalAVGOutletRow;
            octAVG = octSubTtl / TotalAVGOutletRow;
            novAVG = novSubTtl / TotalAVGOutletRow;
            decAVG = decSubTtl / TotalAVGOutletRow;
            totalAVG = totalSubTtl / TotalAVGOutletRow;
            if (parameter[12].ToString() == "1")
                avg = totalAVG / averageMonth;
            else
                avg = totalAVG / totalMonth;

            //Total Per Outlet
            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            //Untuk masukkin nama Outlet
            excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedTop);
            excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, Convert.ToInt32(row["rowType"].ToString()) + marketModelCount + totalRow, dealerWidth, ExcelCellStyle.LeftBorderedStandardWrap);

            //TotalAVGOutletRow = 0;
            //totalAVGRow = 0;
            //totalRowDtl = 0;
            //spaceTotal = 0;
            //totalRow = 0;


            janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
            janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;

            excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalRestorePoint.ToString());
            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());

            if (parameter[13] == "1")
            {
                excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                if (parameter[11] == "0")
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                else
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                colorCategory = row["ColourName"].ToString();
            }
            else
                excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

            CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

            seq = row["seq"].ToString();
            outlet = row["BranchName"].ToString();
            marketModel = row["MarketModel"].ToString();
            modelCategory = row["ModelCatagory"].ToString();
            #endregion
            marketModelCount = 1;
        }

        void duabelas(DataRow row)
        {
            marketModelCount = marketModelCount == 1 ? 4 : 6;
            #region Seven Second Extension
            decimal average = 0;
            if (parameter[12].ToString() == "1")
                average = totalType / averageMonth;
            else
                average = totalType / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else if (parameter[13] == "1" && parameter[11] == "1")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else
                //Untuk masukkin total per Category
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);

            excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janType / totalAVGRow;
            febAVG = febType / totalAVGRow;
            marAVG = marType / totalAVGRow;
            aprAVG = aprType / totalAVGRow;
            mayAVG = mayType / totalAVGRow;
            junAVG = junType / totalAVGRow;
            julAVG = julType / totalAVGRow;
            augAVG = augType / totalAVGRow;
            sepAVG = sepType / totalAVGRow;
            octAVG = octType / totalAVGRow;
            novAVG = novType / totalAVGRow;
            decAVG = decType / totalAVGRow;
            totalAVG = totalType / totalAVGRow;
            decimal avg = 0;
            if (parameter[12].ToString() == "1")
                avg = totalAVG / averageMonth;
            else
                avg = totalAVG / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            if (parameter[12].ToString() == "1")
                average = totalSubTtl / averageMonth;
            else
                average = totalSubTtl / totalMonth;

            //Total Per Outlet
            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else
                //Total Per Outlet
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
            excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);

            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janSubTtl / TotalAVGOutletRow;
            febAVG = febSubTtl / TotalAVGOutletRow;
            marAVG = marSubTtl / TotalAVGOutletRow;
            aprAVG = aprSubTtl / TotalAVGOutletRow;
            mayAVG = maySubTtl / TotalAVGOutletRow;
            junAVG = junSubTtl / TotalAVGOutletRow;
            julAVG = julSubTtl / TotalAVGOutletRow;
            augAVG = augSubTtl / TotalAVGOutletRow;
            sepAVG = sepSubTtl / TotalAVGOutletRow;
            octAVG = octSubTtl / TotalAVGOutletRow;
            novAVG = novSubTtl / TotalAVGOutletRow;
            decAVG = decSubTtl / TotalAVGOutletRow;
            totalAVG = totalSubTtl / TotalAVGOutletRow;
            if (parameter[12].ToString() == "1")
                avg = totalAVG / averageMonth;
            else
                avg = totalAVG / totalMonth;

            //Total Per Outlet
            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            //Untuk masukkin nama Outlet
            excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), outlet.ToString(), 0 + dealerWidth, totalRowDtl + spaceTotal, outletWidth, ExcelCellStyle.LeftBorderedTop);
            excelReport.ReplaceRestorePoint(RestorePoint.CompanyCodeRestorePoint.ToString(), dealer.ToString(), 0, Convert.ToInt32(row["rowType"].ToString()) + marketModelCount + totalRow, dealerWidth, ExcelCellStyle.LeftBorderedStandardWrap);

            //TotalAVGOutletRow = 0;
            //totalAVGRow = 0;
            //totalRowDtl = 0;
            //spaceTotal = 0;
            //totalRow = 0;

            janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
            janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;

            excelReport.RestorePoint(8 + rowIndex, RestorePoint.TotalRestorePoint.ToString());
            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());

            if (parameter[13] == "1")
            {
                excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                if (parameter[11] == "0")
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                else
                    excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                colorCategory = row["ColourName"].ToString();
            }
            else
                excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

            CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

            seq = row["seq"].ToString();
            outlet = row["BranchName"].ToString();
            marketModel = row["MarketModel"].ToString();
            modelCategory = row["ModelCatagory"].ToString();
            #endregion
            marketModelCount = 1;
        }

        void tigabelas(DataRow row)
        {
            marketModelCount = marketModelCount == 1 ? 4 : 6;
            #region Eight
            decimal average = 0;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                average = totalType / averageMonth;
            else if (parameter[12].ToString() == "1")
                average = totalType / averageArea;
            else
                average = totalType / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else if (parameter[13] == "1" && parameter[11] == "1")
            {
                excelReport.ReplaceRestorePoint(RestorePoint.MarketModelRestorePoint.ToString(), marketModel.ToString(), 0 + dealerWidth + outletWidth, totalColour, modelWidth, ExcelCellStyle.LeftBorderedStandard);
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BlueTotal);
                totalColour = 0;
            }
            else
                //Untuk masukkin total per Category
                excelReport.SetCellValue("Total " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BlueTotal);
            excelReport.SetCellValue(Convert.ToInt32(janType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janType) < Convert.ToInt32(average) && janType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febType) < Convert.ToInt32(average) && febType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marType) < Convert.ToInt32(average) && marType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprType) < Convert.ToInt32(average) && aprType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayType) < Convert.ToInt32(average) && mayType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junType) < Convert.ToInt32(average) && junType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julType) < Convert.ToInt32(average) && julType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augType) < Convert.ToInt32(average) && augType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepType) < Convert.ToInt32(average) && sepType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octType) < Convert.ToInt32(average) && octType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novType) < Convert.ToInt32(average) && novType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decType) < Convert.ToInt32(average) && decType != 0) ? ExcelCellStyle.BlueTotalRedNumber : ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalType).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);
            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BlueTotalNumber, true);

            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janAVG = janType / totalAVGRow;
            febAVG = febType / totalAVGRow;
            marAVG = marType / totalAVGRow;
            aprAVG = aprType / totalAVGRow;
            mayAVG = mayType / totalAVGRow;
            junAVG = junType / totalAVGRow;
            julAVG = julType / totalAVGRow;
            augAVG = augType / totalAVGRow;
            sepAVG = sepType / totalAVGRow;
            octAVG = octType / totalAVGRow;
            novAVG = novType / totalAVGRow;
            decAVG = decType / totalAVGRow;
            totalAVG = totalType / TotalAVGOutletRow;
            decimal avg = 0;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                avg = totalAVG / averageMonth;
            else if (parameter[12].ToString() == "1")
                avg = totalAVG / averageArea;
            else
                avg = totalAVG / totalMonth;

            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG " + modelCategory.ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);

            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                average = totalSubTtl / averageMonth;
            else if (parameter[12].ToString() == "1")
                average = totalSubTtl / averageArea;
            else
                average = totalSubTtl / totalMonth;

            //Total Per Outlet
            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.PurpleTotal);
            else
                //Total Per Outlet
                excelReport.SetCellValue("SubTotal", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.PurpleTotal);
            excelReport.SetCellValue(janSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (janSubTtl < Convert.ToInt32(average) && janSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(febSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (febSubTtl < Convert.ToInt32(average) && febSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(marSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (marSubTtl < Convert.ToInt32(average) && marSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(aprSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (aprSubTtl < Convert.ToInt32(average) && aprSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(maySubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (maySubTtl < Convert.ToInt32(average) && maySubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(junSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (junSubTtl < Convert.ToInt32(average) && junSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(julSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (julSubTtl < Convert.ToInt32(average) && julSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(augSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (augSubTtl < Convert.ToInt32(average) && augSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(sepSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (sepSubTtl < Convert.ToInt32(average) && sepSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(octSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (octSubTtl < Convert.ToInt32(average) && octSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(novSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (novSubTtl < Convert.ToInt32(average) && novSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(decSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (decSubTtl < Convert.ToInt32(average) && decSubTtl != 0) ? ExcelCellStyle.PurpleTotalRedNumber : ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(totalSubTtl.ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
            excelReport.SetCellValue(average.ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.PurpleTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;


            janAVG = janSubTtl / TotalAVGOutletRow;
            febAVG = febSubTtl / TotalAVGOutletRow;
            marAVG = marSubTtl / TotalAVGOutletRow;
            aprAVG = aprSubTtl / TotalAVGOutletRow;
            mayAVG = maySubTtl / TotalAVGOutletRow;
            junAVG = junSubTtl / TotalAVGOutletRow;
            julAVG = julSubTtl / TotalAVGOutletRow;
            augAVG = augSubTtl / TotalAVGOutletRow;
            sepAVG = sepSubTtl / TotalAVGOutletRow;
            octAVG = octSubTtl / TotalAVGOutletRow;
            novAVG = novSubTtl / TotalAVGOutletRow;
            decAVG = decSubTtl / TotalAVGOutletRow;
            totalAVG = totalSubTtl / TotalAVGOutletRow;
            if (parameter[12].ToString() == "1" && row["Seq"].ToString() == "2")
                avg = totalAVG / averageMonth;
            else if (parameter[12].ToString() == "1")
                avg = totalAVG / averageArea;
            else
                avg = totalAVG / totalMonth;

            //Total Per Outlet
            if (parameter[13] == "1" && parameter[11] == "0")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else if (parameter[13] == "1" && parameter[11] == "1")
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth + colorWidth, ExcelCellStyle.BrownTotal);
            else
                excelReport.SetCellValue("AVG", 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.BrownTotal);
            excelReport.SetCellValue(Convert.ToInt32(janAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 0 + totalDetailWidth, 1, 1, (Convert.ToInt32(janAVG) < Convert.ToInt32(avg) && janAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(febAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 1 + totalDetailWidth, 1, 1, (Convert.ToInt32(febAVG) < Convert.ToInt32(avg) && febAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(marAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 2 + totalDetailWidth, 1, 1, (Convert.ToInt32(marAVG) < Convert.ToInt32(avg) && marAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(aprAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 3 + totalDetailWidth, 1, 1, (Convert.ToInt32(aprAVG) < Convert.ToInt32(avg) && aprAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(mayAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 4 + totalDetailWidth, 1, 1, (Convert.ToInt32(mayAVG) < Convert.ToInt32(avg) && mayAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(junAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 5 + totalDetailWidth, 1, 1, (Convert.ToInt32(junAVG) < Convert.ToInt32(avg) && junAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(julAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 6 + totalDetailWidth, 1, 1, (Convert.ToInt32(julAVG) < Convert.ToInt32(avg) && julAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(augAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 7 + totalDetailWidth, 1, 1, (Convert.ToInt32(augAVG) < Convert.ToInt32(avg) && augAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(sepAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 8 + totalDetailWidth, 1, 1, (Convert.ToInt32(sepAVG) < Convert.ToInt32(avg) && sepAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(octAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 9 + totalDetailWidth, 1, 1, (Convert.ToInt32(octAVG) < Convert.ToInt32(avg) && octAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(novAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 10 + totalDetailWidth, 1, 1, (Convert.ToInt32(novAVG) < Convert.ToInt32(avg) && novAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(decAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 11 + totalDetailWidth, 1, 1, (Convert.ToInt32(decAVG) < Convert.ToInt32(avg) && decAVG != 0) ? ExcelCellStyle.BrownTotalRedNumber : ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(totalAVG).ToString("#,##0;0;'-';@"), 8 + rowIndex, 12 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            excelReport.SetCellValue(Convert.ToInt32(avg).ToString("#,##0;0;'-';@"), 8 + rowIndex, 13 + totalDetailWidth, 1, 1, ExcelCellStyle.BrownTotalNumber, true);
            rowIndex++;
            spaceTotal++;
            spaceTotalDealer++;
            totalRow++;

            janType = febType = marType = aprType = mayType = junType = julType = augType = sepType = octType = novType = decType = totalType = 0;
            janSubTtl = febSubTtl = marSubTtl = aprSubTtl = maySubTtl = junSubTtl = julSubTtl = augSubTtl = sepSubTtl = octSubTtl = novSubTtl = decSubTtl = totalSubTtl = 0;
            TotalAVGOutletRow = 0;
            totalAVGRow = 0;
            totalRowDtl = 0;
            spaceTotal = 0;

            excelReport.ReplaceRestorePoint(RestorePoint.OutletRestorePoint.ToString(), "TOTAL", 0 + dealerWidth, beforeRowType + marketModelCount, outletWidth, ExcelCellStyle.LeftBorderedTop);
            rowIndex++;
            totalRow = 0;

            excelReport.RestorePoint(8 + rowIndex, RestorePoint.CompanyCodeRestorePoint.ToString());
            excelReport.RestorePoint(8 + rowIndex, RestorePoint.OutletRestorePoint.ToString());
            if (parameter[13] == "1" && parameter[11] == "0")
            {
                excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                colorCategory = row["ColourName"].ToString();
            }
            else if (parameter[13] == "1" && parameter[11] == "1")
            {
                excelReport.RestorePoint(8 + rowIndex, RestorePoint.MarketModelRestorePoint.ToString());
                excelReport.SetCellValue(row["ColourName"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth + modelWidth, 1, colorWidth, ExcelCellStyle.LeftBorderedStandard);
                colorCategory = row["ColourName"].ToString();
            }
            else
                excelReport.SetCellValue(row["MarketModel"].ToString(), 8 + rowIndex, 0 + dealerWidth + outletWidth, 1, modelWidth, ExcelCellStyle.LeftBorderedStandard);

            CreateDetailStandard(excelReport, row, rowIndex, totalDetailWidth);

            if (row["Seq"].ToString() != "1")
                totalDealerGT++;
            seq = row["seq"].ToString();
            dealer = row["CompanyName"].ToString();
            outlet = row["BranchName"].ToString();
            marketModel = row["MarketModel"].ToString();
            modelCategory = row["ModelCatagory"].ToString();
            #endregion
            averageDealer = 0;
            marketModelCount = 1;
        }
    }
    
}