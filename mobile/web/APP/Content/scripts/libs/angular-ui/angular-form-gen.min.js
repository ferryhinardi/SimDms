/*!
   angular-form-gen v0.1.0-beta.7
   (c) 2015 (null) McNull https://github.com/McNull/angular-form-gen
   License: MIT
*/
(function(n){var t=n.module("fg",["dq"]);t.constant("FgField",function(t,i){this.name=this.type=t;i&&n.extend(this,i);this.displayName=this.displayName||this.type.charAt(0).toUpperCase()+this.type.substring(1)});t.config(["$provide",function(t){t.provider("fgConfig",function(){function r(n){for(var t=i.length;t--;)if(i[t].type===n)break;return t}var t={enableDebugInfo:!0,validation:{messages:{},patterns:{}},fields:{templates:[],categories:{},renderInfo:{}}},i=t.fields.templates;return{debug:function(n){t.enableDebugInfo=n},fields:{add:function(n,t,u,f){if(!n||!n.type||!t||!t.length)throw new Error("Need a valid objectTemplate and at least one category");var e=r(n.type);e!==-1?i[e]=n:i.push(n);this.category(n.type,t);this.renderInfo(n.type,u,f)},remove:function(n){var t=r(n);t!==-1&&i.splice(t,1);this.category(n);this.renderInfo(n)},get:function(n){for(var r=i.length,t;r--;)if(t=i[r],t.type===n)return t},renderInfo:function(n,i,r){t.fields.renderInfo[n]={templateUrl:i,propertiesTemplateUrl:r}},category:function(i,r){n.isArray(r)||(r=[r]);n.forEach(t.fields.categories,function(n){delete n[i]});n.forEach(r,function(n){t.fields.categories[n]===undefined&&(t.fields.categories[n]={});t.fields.categories[n][i]=!0})}},validation:{message:function(i,r){var u=t.validation.messages;if(n.isString(i)){if(!r)throw new Error("No message specified for "+i);u[i]=r}else n.extend(u,i)},pattern:function(i,r){n.isString(i)?t.validation.patterns[i]=r:n.extend(t.validation.patterns,i)}},$get:function(){return t}}})}]);t.config(["fgConfigProvider","FgField",function(t,i){t.validation.message({required:"A value is required for this field.",minlength:'The value does not match the minimum length{{ field.schema && (" of " + field.schema.validation.minlength + " characters" || "")}}.',maxlength:'The value exceeds the maximum length{{ field.schema && (" of " + field.schema.validation.maxlength + " characters" || "")}}.',pattern:'The value "{{ field.state.$viewValue }}" does not match the required format.',email:'The value "{{ field.state.$viewValue }}" is not a valid email address.',unique:'The value "{{ field.state.$viewValue }}" is already in use.',number:'The value "{{ field.state.$viewValue }}" is not a number.',min:'The value {{ field.schema && ("should be at least " + field.schema.validation.min) || field.state.$viewValue + " is too low" }}',max:'The value {{ field.schema && ("should be less than " + field.schema.validation.max) || field.state.$viewValue + " is too high" }}',minoptions:"At least {{ field.schema.validation.minoptions }} option(s) should be selected.",maxoptions:"No more than {{ field.schema.validation.maxoptions }} option(s) should be selected."});var r={"Text input fields":[new i("text",{displayName:"Textbox"}),new i("email"),new i("number",{validation:{maxlength:15}}),new i("password"),new i("textarea")],"Checkbox fields":[new i("checkbox",{nolabel:!0}),new i("checkboxlist",{displayName:"Checkbox List",options:[{value:"1",text:"Option 1"},{value:"2",text:"Option 2"},{value:"3",text:"Option 3"}],value:{"1":!0,"2":!0}})],"Select input fields":[new i("radiobuttonlist",{displayName:"Radiobutton List",options:[{value:"1",text:"Option 1"},{value:"2",text:"Option 2"},{value:"3",text:"Option 3"}],value:"1"}),new i("selectlist",{displayName:"Select List",options:[{value:"",text:"Select an option"},{value:"1",text:"Option 1"},{value:"2",text:"Option 2"},{value:"3",text:"Option 3"}],value:""})]};n.forEach(r,function(i,r){n.forEach(i,function(n){t.fields.add(n,r)})});t.validation.pattern({None:undefined,Url:"^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",Domain:"^([a-z][a-z0-9\\-]+(\\.|\\-*\\.))+[a-z]{2,6}$","IPv4 Address":"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$","Email Address":"^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$",Integer:"^-{0,1}\\d+$","Positive Integers":"^\\d+$","Negative Integers":"^-\\d+$",Number:"^-{0,1}\\d*\\.{0,1}\\d+$","Positive Number":"^\\d*\\.{0,1}\\d+$","Negative Number":"^-\\d*\\.{0,1}\\d+$","Year (1920-2099)":"^(19|20)[\\d]{2,2}$",Password:"(?=.*\\d)(?=.*[!@#$%^&*\\-=()|?.\"';:]+)(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$"})}]);n.module("fg").run(["$templateCache",function(n){n.put("angular-form-gen/edit/edit.ng.html",'<div class="fg-edit row form-group" ng-form="$fg"><div class="col-sm-8"><div fg-form="" fg-edit-canvas="" fg-no-render="true"><\/div><\/div><div class="col-sm-4" ng-form="$palette" fg-null-form=""><div fg-form="" fg-edit-palette="" fg-no-render="true"><\/div><\/div><\/div>');n.put("angular-form-gen/validation/summary.ng.html",'<ul class="fg-validation-summary help-block unstyled" ng-if="field.state.$invalid && field.state.$dirty"><li ng-repeat="(key, error) in field.state.$error" ng-if="error" fg-bind-expression="messages[key]"><\/li><\/ul>');n.put("angular-form-gen/common/jsonify/jsonify.ng.html",'<div class="jsonify"><div class="btn-toolbar btn-toolbar-right"><button class="btn btn-default btn-xs" type="button" title="Copy the json data." ng-click="copy()"><span class="glyphicon glyphicon-transfer"><\/span><\/button> <button class="btn btn-default btn-xs" type="button" title="Display hidden properties." ng-click="displayHidden = !displayHidden" ng-class="{ \'active\': displayHidden }"><span class="glyphicon glyphicon-eye-open"><\/span><\/button><\/div><pre><code>{{ jsonify | j$on:displayHidden }}<\/code><\/pre><\/div>');n.put("angular-form-gen/common/tabs/tabs-pane.ng.html",'<div class="fg-tabs-pane" ng-show="tabs.active === pane"><div ng-if="tabs.active === pane || pane.renderAlways" ng-transclude=""><\/div><\/div>');n.put("angular-form-gen/common/tabs/tabs.ng.html",'<div class="fg-tabs tabbable"><ul class="nav nav-tabs"><li ng-repeat="tab in tabs.items" ng-class="{ active: tab === tabs.active, disabled: tab.disabled }"><a href="" ng-click="tabs.activate(tab)">{{ tab.title }}<\/a><\/li><\/ul><div class="tab-content" ng-transclude=""><\/div><\/div>');n.put("angular-form-gen/edit/canvas/canvas.ng.html",'<div class="fg-edit-canvas" ng-class="{ \'fg-edit-canvas-dragging\': dragging }"><fieldset><legend>Canvas<\/legend><div class="fg-edit-canvas-area" dq-drag-area="fg-edit-canvas" dq-drag-enter="canvasCtrl.dragEnter()" dq-drag-leave="canvasCtrl.dragLeave()" dq-drop="canvasCtrl.drop()"><div ng-if="!(schema.fields.length)"><div ng-if="!dragPlaceholder.visible" class="fg-edit-canvas-area-empty alert alert-info text-center"><p class="fg-edit-canvas-area-empty-x">X<\/p><p class="lead hidden-phone"><strong>Drag<\/strong> one of the available <strong>templates<\/strong> from the <strong>palette<\/strong> onto this <strong>canvas<\/strong>.<\/p><\/div><\/div><div ng-repeat="field in schema.fields"><div ng-class="{ \'fg-drag-placeholder-visible\' : dragPlaceholder.visible && dragPlaceholder.index === $index }" class="fg-drag-placeholder"><\/div><div fg-edit-canvas-field=""><\/div><\/div><div ng-class="{ \'fg-drag-placeholder-visible\': dragPlaceholder.visible && dragPlaceholder.index == schema.fields.length }" class="fg-drag-placeholder"><\/div><\/div><\/fieldset><\/div>');n.put("angular-form-gen/edit/palette/palette.ng.html",'<div class="fg-edit-palette"><fieldset><div fg-edit-palette-categories="" data-category="selectedCategory"><\/div><div ng-repeat="template in templates | filter:templateFilter" class="fg-field" dq-draggable="fg-edit-canvas" dq-drag-begin="{ source: \'palette\', field: template }"><div class="fg-field-overlay"><div class="btn-toolbar btn-toolbar-right"><button class="btn btn-default btn-xs btn-primary" type="button" ng-click="schemaCtrl.addField(template)" title="Add this field."><span class="glyphicon glyphicon-plus"><\/span><\/button><\/div><\/div><div fg-field="template" fg-tab-index="-1" fg-no-validation-summary="true" fg-edit-mode="true"><\/div><\/div><\/fieldset><\/div>');n.put("angular-form-gen/field-templates/default/checkbox.ng.html",'<div class="checkbox"><label title="{{ field.schema.tooltip }}"><input fg-field-input="" id="{{ field.$_id }}" type="checkbox" tabindex="{{ tabIndex }}" ng-model="form.data[field.schema.name]"> <span ng-if="field.schema.nolabel">{{ field.schema.displayName }}<\/span><\/label><\/div>');n.put("angular-form-gen/field-templates/default/checkboxlist.ng.html",'<div fg-checkboxlist="" fg-field-input="" ng-model="form.data[field.schema.name]" name="{{ field.schema.name }}"><div class="checkbox" ng-repeat="option in field.schema.options"><label title="{{ field.schema.tooltip }}"><input type="checkbox" tabindex="{{ tabIndex }}" value="{{ option.value }}" ng-model="form.data[field.schema.name][option.value]"> <span>{{option.text || option.value}}<\/span><\/label><\/div><\/div>');n.put("angular-form-gen/field-templates/default/dropdownlist.ng.html",'<div fg-field-input="" fg-dropdown-input="field.schema.options" title="{{ field.schema.tooltip }}" id="{{ field.$_id }}" ng-model="form.data[field.schema.name]" ng-required="field.schema.validation.required" tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}" ng-minlength="{{ field.schema.validation.minlength }}" ng-maxlength="{{ field.schema.validation.maxlength }}" ng-pattern="/{{ field.schema.validation.pattern }}/"><\/div>');n.put("angular-form-gen/field-templates/default/email.ng.html",'<input class="form-control" fg-field-input="" type="email" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}" ng-model="form.data[field.schema.name]" ng-required="field.schema.validation.required" ng-minlength="{{ field.schema.validation.minlength }}" ng-maxlength="{{ field.schema.validation.maxlength }}" ng-pattern="/{{ field.schema.validation.pattern }}/">');n.put("angular-form-gen/field-templates/default/not-in-cache.ng.html",'<div class="fg-field-not-in-cache alert alert-error"><p>No template registered in cache for field type "{{ field.type }}".<\/p><\/div>');n.put("angular-form-gen/field-templates/default/number.ng.html",'<input class="form-control" fg-field-input="" fg-input-number="" type="text" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}" min="{{ field.schema.validation.min }}" max="{{ field.schema.validation.max }}" ng-model="form.data[field.schema.name]" ng-required="field.schema.validation.required" ng-minlength="{{ field.schema.validation.minlength }}" ng-maxlength="{{ field.schema.validation.maxlength }}" ng-pattern="/{{ field.schema.validation.pattern }}/">');n.put("angular-form-gen/field-templates/default/password.ng.html",'<input class="form-control" fg-field-input="" type="password" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}" ng-model="form.data[field.schema.name]" ng-required="field.schema.validation.required" ng-minlength="{{ field.schema.validation.minlength }}" ng-maxlength="{{ field.schema.validation.maxlength }}" ng-pattern="/{{ field.schema.validation.pattern }}/">');n.put("angular-form-gen/field-templates/default/radiobuttonlist.ng.html",'<div class="radio" ng-repeat="option in field.schema.options"><label title="{{ field.schema.tooltip }}"><input fg-field-input="" type="radio" name="{{ field.schema.name }}[]" tabindex="{{ tabIndex }}" value="{{ option.value }}" ng-model="form.data[field.schema.name]" ng-required="field.schema.validation.required"> <span>{{option.text || option.value}}<\/span><\/label><\/div>');n.put("angular-form-gen/field-templates/default/selectlist.ng.html",'<select class="form-control" fg-selectlist="" fg-field-input="" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" ng-model="form.data[field.schema.name]" ng-required="field.schema.validation.required" tabindex="{{ tabIndex }}"><option ng-repeat="option in field.schema.options" value="{{ option.value }}" ng-selected="form.data[field.schema.name] === option.value">{{ option.text || option.value }}<\/option><\/select>');n.put("angular-form-gen/field-templates/default/text.ng.html",'<input class="form-control" fg-field-input="" type="text" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}" ng-model="form.data[field.schema.name]" ng-required="field.schema.validation.required" ng-minlength="{{ field.schema.validation.minlength }}" ng-maxlength="{{ field.schema.validation.maxlength }}" ng-pattern="/{{ field.schema.validation.pattern }}/">');n.put("angular-form-gen/field-templates/default/textarea.ng.html",'<textarea class="form-control" fg-field-input="" fg-placeholder="field.schema.placeholder" ng-model="form.data[field.schema.name]" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" ng-required="field.schema.validation.required" ng-minlength="{{ field.schema.validation.minlength }}" ng-maxlength="{{ field.schema.validation.maxlength }}" ng-pattern="/{{ field.schema.validation.pattern }}/">\n<\/textarea>');n.put("angular-form-gen/field-templates/properties/checkbox.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, tooltip: true }"><\/div><div fg-property-field="fieldValue"><div class="checkbox"><label title="Set the initial value of this field."><input type="checkbox" name="fieldValue" ng-model="field.value"> Initial value<\/label><\/div><\/div><\/div>');n.put("angular-form-gen/field-templates/properties/checkboxlist.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, tooltip: true }"><\/div><\/div><div fg-tabs-pane="Options"><div fg-property-field-options="multiple"><\/div><\/div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true }"><\/div><div class="fg-property-field-validation"><div fg-property-field="minoptions" fg-property-field-label="Minimum options"><input type="text" fg-field-redraw="" fg-input-number="" title="The minimum number of options that should be selected." name="minoptions" ng-model="field.validation.minoptions" class="form-control"><\/div><div ng-if="field.validation.minoptions >= 1"><div fg-edit-validation-message="minoptions"><\/div><\/div><\/div><div class="fg-property-field-validation"><div fg-property-field="maxoptions" fg-property-field-label="Maximum options"><input type="text" fg-field-redraw="" fg-input-number="" title="The maximum number of options that can be selected." name="maxoptions" ng-model="field.validation.maxoptions" class="form-control"><\/div><div ng-if="field.validation.maxoptions >= 1"><div fg-edit-validation-message="maxoptions"><\/div><\/div><\/div><\/div>');n.put("angular-form-gen/field-templates/properties/dropdownlist.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, placeholder: true, tooltip: true }"><\/div><div fg-property-field-value=""><div fg-field-input="" fg-dropdown-input="field.options" ng-model="field.value" ng-minlength="{{ field.schema.validation.minlength }}" ng-maxlength="{{ field.schema.validation.maxlength }}" ng-pattern="/{{ field.schema.validation.pattern }}/"><\/div><\/div><\/div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"><\/div><\/div>');n.put("angular-form-gen/field-templates/properties/email.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, placeholder: true, tooltip: true }"><\/div><div fg-property-field-value=""><input type="email" class="form-control" name="fieldValue" ng-model="field.value" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="/{{ field.validation.pattern }}/"><\/div><\/div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"><\/div><\/div>');n.put("angular-form-gen/field-templates/properties/number.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, placeholder: true, tooltip: true }"><\/div><div fg-property-field-value=""><input fg-input-number="" class="form-control" type="text" name="fieldValue" ng-model="field.value" min="{{ field.validation.min }}" max="{{ field.validation.max }}" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="/{{ field.validation.pattern }}/"><\/div><\/div><div fg-tabs-pane="Validation"><div class="fg-property-field-validation"><div fg-property-field="min" fg-property-field-label="Minimum value"><input fg-input-number="" fg-field-redraw="" class="form-control" type="text" name="min" title="The minimum value that should be entered" ng-model="field.validation.min"><\/div><div ng-if="field.validation.min >= 0"><div fg-edit-validation-message="min"><\/div><\/div><\/div><div class="fg-property-field-validation"><div fg-property-field="max" fg-property-field-label="Maximum value"><input fg-input-number="" fg-field-redraw="" class="form-control" type="text" name="max" title="The maximum value that should be entered" ng-model="field.validation.max"><\/div><div ng-if="field.validation.max >= 0"><div fg-edit-validation-message="max"><\/div><\/div><\/div><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"><\/div><\/div>');n.put("angular-form-gen/field-templates/properties/password.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, placeholder: true, tooltip: true }"><\/div><div fg-property-field-value=""><input fg-input-number="" class="form-control" type="password" name="fieldValue" ng-model="field.value" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="/{{ field.validation.pattern }}/"><\/div><\/div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"><\/div><\/div>');n.put("angular-form-gen/field-templates/properties/radiobuttonlist.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, tooltip: true }"><\/div><\/div><div fg-tabs-pane="Options"><div fg-property-field-options=""><\/div><\/div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true }"><\/div><\/div>');n.put("angular-form-gen/field-templates/properties/selectlist.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, tooltip: true }"><\/div><\/div><div fg-tabs-pane="Options"><div fg-property-field-options=""><\/div><\/div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true }"><\/div><\/div>');n.put("angular-form-gen/field-templates/properties/text.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, placeholder: true, tooltip: true }"><\/div><div fg-property-field-value=""><input type="text" class="form-control" name="fieldValue" ng-model="field.value" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="/{{ field.validation.pattern }}/"><\/div><\/div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"><\/div><\/div>');n.put("angular-form-gen/field-templates/properties/textarea.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, placeholder: true, tooltip: true }"><\/div><div fg-property-field-value=""><textarea name="fieldValue" class="form-control" ng-model="field.value" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="/{{ field.validation.pattern }}/">\n    <\/textarea><\/div><\/div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"><\/div><\/div>');n.put("angular-form-gen/form/field/field.ng.html",'<div class="fg-field-inner form-group" ng-class="{ \'fg-field-required\': fieldSchema.validation.required, \'has-error\': form.state[field.name].$invalid }"><label ng-if="!field.schema.nolabel" class="col-sm-3 control-label" for="{{ field.$_id }}">{{ fieldSchema.displayName }}<\/label><div class="col-sm-9" ng-class="{ \'col-sm-offset-3\': field.schema.nolabel }"><div ng-include="renderInfo.templateUrl"><\/div><div fg-validation-summary="" fg-validation-messages="fieldSchema.validation.messages" ng-if="!noValidationSummary"><\/div><\/div><\/div>');n.put("angular-form-gen/form/form-fields/form-fields.ng.html",'<div class="fg-form-fields"><fieldset><div ng-repeat="field in form.schema.fields"><div fg-field="field"><\/div><\/div><\/fieldset><\/div>');n.put("angular-form-gen/edit/canvas/field/field.ng.html",'<div class="fg-field fg-field-{{ field.type }} fg-edit-canvas-field" ng-class="{ \'error\': field.$_invalid, \'dragging\': field.$_isDragging }" dq-draggable="fg-edit-canvas" dq-drag-disabled="dragEnabled === false" dq-drag-begin="canvasCtrl.dragBeginCanvasField($index, field)" dq-drag-end="canvasCtrl.dragEndCanvasField(field)"><div class="fg-field-overlay" ng-mouseenter="dragEnabled = true" ng-mouseleave="dragEnabled = false"><div class="fg-field-overlay-drag-top" dq-drag-enter="dragPlaceholder.index = $index"><\/div><div class="fg-field-overlay-drag-bottom" dq-drag-enter="dragPlaceholder.index = ($index + 1)"><\/div><div class="btn-toolbar btn-toolbar-right"><button class="btn btn-default btn-xs" type="button" ng-disabled="field.$_displayProperties && field.$_invalid" ng-class="{ \'active\': field.$_displayProperties }" ng-click="toggleProperties(field)" title="Configure this field."><span class="glyphicon glyphicon-wrench"><\/span><\/button> <button class="btn btn-default btn-xs" type="button" ng-click="schemaCtrl.swapFields($index - 1, $index)" ng-disabled="$index === 0" title="Move up"><span class="glyphicon glyphicon-arrow-up"><\/span><\/button> <button class="btn btn-default btn-xs" type="button" ng-click="schemaCtrl.swapFields($index, $index + 1)" ng-disabled="$index === schema.fields.length - 1" title="Move down"><span class="glyphicon glyphicon-arrow-down"><\/span><\/button> <button class="btn btn-default btn-xs btn-danger" type="button" ng-click="schemaCtrl.removeField($index)" title="Remove"><span class="glyphicon glyphicon-trash"><\/span><\/button><\/div><\/div><div ng-form="" fg-null-form=""><div fg-field="field" fg-tab-index="-1" fg-edit-mode="true" fg-no-validation-summary="true"><\/div><\/div><div class="fg-field-properties-container" ng-class="{ visible: field.$_displayProperties }"><div fg-edit-canvas-field-properties="field" ng-if="expanded"><\/div><\/div><\/div>');n.put("angular-form-gen/edit/palette/categories/categories.ng.html",'<legend ng-click="paletteCategoriesMenuOpen = !paletteCategoriesMenuOpen" ng-class="{ \'open\': paletteCategoriesMenuOpen }">Palette <span class="fg-legend-extra fg-edit-palette-categories visible-xs-inline visible-md-inline visible-lg-inline">- {{ categoryName || \'All field types\' }}<\/span> <i class="caret"><\/i><ul class="dropdown-menu"><li ng-repeat="(name, category) in categories" ng-class="{ \'active\': categoryName === name }"><a ng-click="setCategory(name, category)">{{ name }}<\/a><\/li><li class="divider"><\/li><li ng-class="{ \'active\': !category }"><a ng-click="setCategory(null)">All field types<\/a><\/li><\/ul><\/legend>');n.put("angular-form-gen/edit/canvas/field/properties/properties.ng.html",'<div class="fg-field-properties"><div novalidate="" ng-form="fieldPropertiesForm"><div fg-tabs="property.tabs"><div ng-include="renderInfo.propertiesTemplateUrl"><\/div><div fg-tabs-pane="Debug" order="1000" auto-active="false"><div data-jsonify="field"><\/div><\/div><\/div><\/div><\/div>');n.put("angular-form-gen/edit/canvas/field/properties/options/options.ng.html",'<div ng-if="!field.options || field.options.length === 0" ng-click="optionsCtrl.addOption()" class="alert alert-info"><h2>No options defined<\/h2><p class="lead">Click here to add a new option definition to this field.<\/p><\/div><table ng-if="field.options.length > 0" class="table-field-options"><thead><tr><th><\/th><th>Value<\/th><th>Text<\/th><th><a href="" class="btn btn-default btn-xs" ng-click="optionsCtrl.addOption()" title="Add a new option to the list"><i class="glyphicon glyphicon-plus"><\/i><\/a><\/th><th class="table-field-options-padding"><\/th><\/tr><\/thead><tbody><tr ng-form="fieldOptionForm" ng-repeat="option in field.options" ng-class="{ \'error\': fieldOptionForm.$invalid }"><td ng-if="multiple === false"><input type="radio" name="{{ field.name }}selection[]" value="{{ option.value }}" ng-model="field.value" ng-click="optionsCtrl.toggleOption(option.value)"><\/td><td ng-if="multiple === true"><input type="checkbox" name="{{ field.name }}selection[]" value="{{ option.value }}" ng-model="field.value[option.value]"><\/td><td><input type="text" name="optionValue" ng-model="option.value" class="form-control" ng-required="field.type != \'selectlist\'"><\/td><td><input type="text" ng-model="option.text" class="form-control"><\/td><td><a href="" class="btn btn-default btn-xs" ng-click="optionsCtrl.removeOption($index)" title="Remove this option from the list"><i class="glyphicon glyphicon-trash"><\/i><\/a><\/td><td><\/td><\/tr><\/tbody><\/table>');n.put("angular-form-gen/edit/canvas/field/properties/property-field/common.ng.html",'<div ng-if="fields.fieldname"><div fg-property-field="fieldName" fg-property-field-label="Name"><input type="text" class="form-control" name="fieldName" ng-model="field.name" ng-required="true" ng-pattern="/^[a-zA-Z]([\\w]+)?$/" fg-unique-field-name=""><\/div><\/div><div ng-if="fields.displayname"><div fg-property-field="displayName" fg-property-field-label="Display name"><input type="text" class="form-control" name="displayName" ng-model="field.displayName"><\/div><\/div><div ng-if="fields.placeholder"><div fg-property-field="fieldPlaceholder" fg-property-field-label="Placeholder text"><input type="text" class="form-control" name="fieldPlaceholder" ng-model="field.placeholder"><\/div><\/div><div ng-if="fields.tooltip"><div fg-property-field="fieldTooltip" fg-property-field-label="Tooltip"><input type="text" class="form-control" name="fieldTooltip" ng-model="field.tooltip"><\/div><\/div>');n.put("angular-form-gen/edit/canvas/field/properties/property-field/field-value.ng.html",'<div ng-if="draw"><div fg-property-field="fieldValue" fg-property-field-label="Initial value"><div ng-transclude=""><\/div><\/div><\/div>');n.put("angular-form-gen/edit/canvas/field/properties/property-field/property-field.ng.html",'<div class="form-group fg-property-field" ng-class="{ \'has-error\': fieldPropertiesForm[fieldName].$invalid }"><label class="col-sm-5 col-md-4 control-label">{{ fieldLabel }}<\/label><div class="col-sm-7 col-md-8"><div ng-transclude=""><\/div><div fg-validation-summary="{{ fieldName }}"><\/div><\/div><\/div>');n.put("angular-form-gen/edit/canvas/field/properties/validation/validation-message.ng.html",'<div ng-form="valMsgForm"><div fg-property-field="message" fg-property-field-label="Message"><input type="text" name="message" title="{{ tooltip }}" placeholder="Optional message" ng-model="field.validation.messages[validationType]" class="form-control"><\/div><\/div>');n.put("angular-form-gen/edit/canvas/field/properties/validation/validation.ng.html",'<div ng-if="fields.minlength" class="fg-property-field-validation"><div fg-property-field="minlength" fg-property-field-label="Minimum length"><input type="text" fg-field-redraw="" fg-input-number="" title="The minimum length of characters that should be entered." name="minlength" ng-model="field.validation.minlength" class="form-control"><\/div><div ng-if="field.validation.minlength >= 1"><div fg-edit-validation-message="minlength"><\/div><\/div><\/div><div ng-if="fields.maxlength" class="fg-property-field-validation"><div fg-property-field="maxlength" fg-property-field-label="Maximum length"><input type="text" fg-field-redraw="" fg-input-number="" title="The maximum length of characters that should be entered." name="maxlength" ng-model="field.validation.maxlength" class="form-control"><\/div><div ng-if="field.validation.maxlength >= 1"><div fg-edit-validation-message="maxlength"><\/div><\/div><\/div><div ng-if="fields.pattern" class="fg-property-field-validation"><div fg-property-field="pattern" fg-property-field-label="Pattern"><div fg-dropdown-input="patternOptions" name="pattern" title="The pattern that should match with the input value." fg-parse-pattern="" fg-field-redraw="" ng-model="field.validation.pattern"><\/div><\/div><div ng-if="field.validation.pattern.length > 0"><div fg-edit-validation-message="pattern"><\/div><\/div><\/div><div ng-if="fields.required" class="fg-property-field-validation"><div fg-property-field="required"><div class="checkbox"><label title="Indicates if a value is required for this field."><input type="checkbox" ng-model="field.validation.required">Required<\/label><\/div><\/div><div ng-if="field.validation.required"><div fg-edit-validation-message="required"><\/div><\/div><\/div>')}]);t.directive("fgBindExpression",["$interpolate",function(n){function t(n){for(var i=[],r=n.parts,u=r.length,t;u--;)t=r[u],t.exp&&!t.exp.match(/^\s*$/)&&i.push(t.exp);return"["+i.join()+"]"}return function(i,r,u){function s(){e&&e();e=undefined}function h(){r.text(f(i))}var f,e,o;i.$on("$destroy",function(){s()});i.$watch(u.fgBindExpression,function(u){if(u!==undefined){f=n(u);r.addClass("ng-binding").data("$binding",f);var c=t(f);o!==c?(o=c,s(),e=i.$watchCollection(c,function(){h()})):h()}})}}]);t.directive("fgDropdownInput",["$compile","$document","$timeout","$parse","fgUtils",function(t,i,r,u,f){function e(t,i){var u=n.element('<div class="fg-dropdown-input input-group"><input type="text" class="form-control"/><span class="input-group-btn"><button class="btn btn-default" type="button" ng-click="dropdownToggle()"><span class="caret"><\/span><\/button><\/span><\/div>'),e=u.find("input"),o=i.prop("attributes"),s,f;return n.forEach(o,function(n){n.name!=="fg-dropdown-input"&&n.name!=="class"&&e.attr(n.name,n.value)}),s=u.find("button"),t.dropdownToggle=function(){t.dropdownVisible=!t.dropdownVisible},t.$on("$destroy",function(){f&&r.cancel(f);f=undefined}),u}function o(t,i,r,e,o){var c=u(r.ngModel),l=c.assign,h=n.element('<div class="fg-dropdown" ng-class="{ \'open\': dropdownVisible }"><ul ng-if="items && items.length" class="dropdown-menu"><li ng-repeat="item in items" ng-class="{ active: item.value === getModelValue() }"><a href="" ng-click="setModelValue(item.value)">{{ item.text || item.value }}<\/a><\/li><\/ul><\/div>'),s;return t.setModelValue=function(n){var r,i,u,f;for(t.dropdownVisible=!1,i=n||"",r=e.$formatters.length;r--;)if(f=e.$formatters[r],i=f(i),i===undefined)break;for(r=e.$parsers.length,u=i;r--;)if(f=e.$parsers[r],u=f(u),u===undefined)break;u===undefined?(e.$setViewValue(i),e.$render()):l(t,n)},t.getModelValue=function(){return c(t)},s=o[0],t.$watch("dropdownVisible",function(n){if(n){var t=s.getBoundingClientRect(),i=f.getScrollOffset();h.css({left:i.x+t.left+"px",top:i.y+t.top+s.clientHeight+"px",width:s.clientWidth+"px"})}}),t.$watchCollection(r.fgDropdownInput,function(n){t.items=n}),t.$on("$destroy",function(){h.remove()}),h}return{priority:1e3,restrict:"A",terminal:!0,scope:!0,compile:function(){return function(n,r,u){var f=e(n,r,u);r.append(f);t(f)(n);var h=f.find("input"),c=h.controller("ngModel"),s=o(n,r,u,c,f),l=t(s),a=i.find("body");a.append(s);l(n)}}}}]);t.directive("fgNullForm",function(){var t={$addControl:n.noop,$removeControl:n.noop,$setValidity:n.noop,$setDirty:n.noop,$setPristine:n.noop};return{restrict:"A",require:["form"],link:function(i,r,u,f){var e=f[0],o=r.parent().inheritedData("$formController");o&&o.$removeControl(e);n.extend(e,t)}}});t.directive("fgFormRequiredFilter",function(){return{restrict:"A",require:["form"],link:function(n,t,i,r){var u=r[0],f=u.$setValidity;u.$setValidity=function(n,t,i){n==="required"&&(t=!0);f.call(u,n,t,i)}}}});t.directive("fgInputNumber",function(){return{require:"ngModel",link:function(t,i,r,u){var f,e;u.$parsers.push(function(n){if(n==undefined)return"";var t=n.replace(/[^0-9]/g,""),i=parseInt(t);return i===NaN?undefined:i,t!=n&&(u.$setViewValue(t),u.$render()),i});u.$parsers.push(function(n){var t=u.$isEmpty(n);return t||/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/.test(n)?(u.$setValidity("number",!0),n===""?null:t?n:parseFloat(n)):(u.$setValidity("number",!1),undefined)});u.$formatters.push(function(n){return u.$isEmpty(n)?undefined:n});r.min&&(f=function(n){var t=parseFloat(r.min);return!u.$isEmpty(n)&&n<t?(u.$setValidity("min",!1),undefined):(u.$setValidity("min",!0),n)},u.$parsers.push(f),u.$formatters.push(f));r.max&&(e=function(n){var t=parseFloat(r.max);return!u.$isEmpty(n)&&n>t?(u.$setValidity("max",!1),undefined):(u.$setValidity("max",!0),n)},u.$parsers.push(e),u.$formatters.push(e));u.$formatters.push(function(t){return u.$isEmpty(t)||n.isNumber(t)?(u.$setValidity("number",!0),t):(u.$setValidity("number",!1),undefined)})}}});t.directive("fgPlaceholder",function(){return{link:function(n,t,i){n.$watch(i.fgPlaceholder,function(n){t.attr("placeholder",n)})}}});t.factory("fgUtils",["$templateCache","$window","fgConfig",function(t,i,r){var u=+new Date%1e4;return{getScrollOffset:function(){var n={},t;return i.pageYOffset!==undefined?(n.x=i.pageXOffset,n.y=i.pageYOffset):(t=i.document.documentElement,n.x=t.scrollLeft,n.y=t.scrollTop),n},defaultArea:"default",getRenderInfo:function(n){var t=r.fields.renderInfo[n.type];return t||(t={},r.fields.renderInfo[n.type]=t),t.templateUrl||(t.templateUrl=this.getTemplateUrl(n)),t.propertiesTemplateUrl||(t.propertiesTemplateUrl=this.getTemplateUrl(n,"properties")),t},formatTemplateUrl:function(n,t){return"angular-form-gen/field-templates/"+(t||this.defaultArea)+"/"+n+".ng.html"},getTemplateUrl:function(n,i){i=i||this.defaultArea;var u=n.type,r=this.formatTemplateUrl(u,i),f=t.get(r);if(!f)if(i!=="properties"&&i!==this.defaultArea)r=this.getTemplateUrl(n,this.defaultArea);else return this.formatTemplateUrl("not-in-cache");return r},getUnique:function(){return++u},copyField:function(t){var i=n.copy(t);return i.name="field"+this.getUnique(),i},findElementsByClass:function(n,t,i,r){var u,f;if(r=r||[],n.className===t&&r.push(n),n.hasChildNodes())for(u=0;u<n.children.length;u++)f=n.children[u],f.className===t&&r.push(f),i&&this.findElementsByClass(f,t,i,r);return r}}}]);n.module("dq",[]).factory("dqUtils",["$window","$rootScope",function(n){var t=null;return{getEvent:function(t){return t&&t.originalEvent?t.originalEvent:t||n.event},stopEvent:function(n){return n.cancelBubble=!0,n.bubbles=!1,n.stopPropagation&&n.stopPropagation(),n.preventDefault&&n.preventDefault(),!1},dragData:function(n){if(n===undefined)return t;t=n},getParentArea:function(n){var t={};return n.$emit("dqLocateArea",t),t.name},isAreaMatch:function(n){var i=this.getParentArea(n),r=t?t.area:"";return i===r}}}]);n.module("dq").directive("dqDragArea",["dqUtils",function(){function n(n,t,i,r){r&&t&&t.area===i&&n.$eval(r)}return{restrict:"AEC",link:function(t,i,r){var u=r.dqDragArea||r.dqDragAreaName||"";t.$on("dqDragBegin",function(i,f){n(t,f,u,r.dqDragProgressBegin)});t.$on("dqDragEnd",function(i,f){n(t,f,u,r.dqDragProgressEnd)});t.$on("dqLocateArea",function(n,t){t.name=u;n.stopPropagation()})}}}]);n.module("dq").directive("dqDragEnter",["dqDragTrack",function(n){return{link:n}}]).directive("dqDragLeave",["dqDragTrack",function(n){return{link:n}}]).directive("dqDragOver",["dqDragTrack",function(n){return{link:n}}]).directive("dqDrop",["dqDragTrack",function(n){return{link:n}}]).factory("dqDragTrack",["dqUtils","$document",function(n,t){return function(i,r,u){if(r.data("dqDragTrack")!==!0){var f=!1,e=!1,l=r[0],o="none",s=!1,h=t.find("body");function c(t){var i=n.getEvent(t),r=i.target||t.target;return r!==l&&(l.contains(r)||a(!0)),h.off("dragover",c),s=!1,i.dataTransfer.dropEffect=o,n.stopEvent(t)}function a(n){e=!1;var t=u.dqDragLeave;t&&(n?i.$apply(function(){i.$eval(t)}):i.$eval(t))}i.$on("$destroy",function(){h.off("dragover",c)});i.$on("dqDragBegin",function(){f=n.isAreaMatch(i)});i.$on("dqDragEnd",function(){f&&a(!1)});r.on("dragenter",function(){if(f&&e===!1){e=!0;var n=u.dqDragEnter;n&&i.$apply(function(){i.$eval(n)})}});r.on("dragleave",function(){if(f&&e===!0){s=!0;h.on("dragover",c)}});r.on("dragover",function(t){if(f){var h=n.getEvent(t),r=u.dqDragOver,e;if(r&&i.$apply(function(){e=i.$eval(r)}),o=e===!1?"none":"copy",!s)return h.dataTransfer.dropEffect=o,n.stopEvent(t)}});r.on("drop",function(t){var e=n.getEvent(t),r;return f&&(r=u.dqDrop,r&&i.$apply(r)),n.stopEvent(t)});r.data("dqDragTrack",!0)}}}]);n.module("dq").directive("dqDraggable",["dqUtils","$rootScope",function(n,t){function i(n,i,r,u,f){r.$apply(function(){var o=r.$eval(u),e={area:i,data:o};f(e);t.$broadcast(n,e)})}return{restrict:"AEC",link:function(t,r,u){var e=u.dqDraggable||u.dqDragTargetArea||"",f=!1;t.$watch(u.dqDragDisabled,function(n){f=n;r.attr("draggable",f?"false":"true")});r.on("selectstart",function(t){if(!f&&this.dragDrop)return this.dragDrop(),t=n.getEvent(t),n.stopEvent(t)}).on("dragstart",function(r){if(r=n.getEvent(r),f)return n.stopEvent(r);var o=r.dataTransfer;o.effectAllowed="all";o.setData("Text","The cake is a lie!");i("dqDragBegin",e,t,u.dqDragBegin,function(t){n.dragData(t)})}).on("dragend",function(){i("dqDragEnd",e,t,u.dqDragEnd,function(){n.dragData(null)})})}}}]);t.controller("fgEditController",["$scope","fgUtils","$location",function(){}]);t.directive("fgEdit",function(){return{priority:100,require:"fgSchema",restrict:"AE",scope:{schema:"=?fgSchema"},replace:!0,controller:"fgEditController as editCtrl",templateUrl:"angular-form-gen/edit/edit.ng.html",link:function(n,t,i,r){n.schema===undefined&&(n.schema={});r.model(n.schema);n.schemaCtrl=r}}});t.controller("fgFormController",["$scope","$parse",function(n,t){this.model={};var i=this;this.init=function(r,u,f,e){i.editMode=e;var o=t(r),s=o.assign;return n.$watch(o,function(t){t===undefined&&(t={},s&&s(n,t));i.model.data=t}),n.$watch(function(){return u.model()},function(n){n===undefined?u.model({}):i.model.schema=n}),i.model.state=f,i.model}}]);t.directive("fgForm",["fgFormCompileFn",function(n){return{restrict:"AE",require:["^?form","fgForm","^fgSchema"],controller:"fgFormController",scope:!0,compile:n}}]).factory("fgFormLinkFn",function(){return function(n,t,i,r){var u=r[0],f=r[1],e=r[2],o=i.fgNoRender==="true";f.init(i.fgFormData,e,u,o)}}).factory("fgFormCompileFn",["fgFormLinkFn",function(n){return function(t,i){var r,u;return t.addClass("fg-form"),r=i.fgNoRender,r!=="true"&&(u="<div fg-form-fields><\/div>",t.append(u)),n}}]);t.directive("fgValidationSummary",["fgValidationSummaryLinkFn",function(n){return{require:["^?fgField","^?form"],templateUrl:"angular-form-gen/validation/summary.ng.html",scope:{fieldName:"@?fgValidationSummary",validationMessages:"=?fgValidationMessages"},link:n}}]).factory("fgValidationSummaryLinkFn",["fgConfig",function(t){return function(i,r,u,f){var e=f[0],o=f[1];e?(i.field=e.field(),i.form=e.form()):o&&(i.form={state:o},i.$watch("fieldName",function(n){i.field={name:n,state:o[n]}}));i.validationMessages&&n.forEach(i.validationMessages,function(n,t){n||delete i.validationMessages[t]});i.messages=n.extend({},t.validation.messages,i.validationMessages)}}]);t.directive("fgUniqueFieldName",function(){function t(n,t,i){var e=t.model(),o=!0,u,f,r;if(e)for(f=e.fields,r=0;r<f.length;r++)if(u=f[r],u!==i&&i.name===u.name){o=!1;break}n.$setValidity("unique",o)}var n=0;return{priority:100,require:["ngModel","^fgSchema"],link:function(i,r,u,f){var e=f[0],s=f[1],o=i.field;if(!o)throw Error("No field property on scope");i.$watch(function(){return e.$modelValue},function(){++n});i.$watch(function(){return n},function(){t(e,s,o)})}}});t.filter("j$on",function(){return function(t,i){return i?JSON.stringify(t||{},null,"  "):n.toJson(t||{},!0)}}).directive("jsonify",["$window","$filter",function(n,t){return{templateUrl:"angular-form-gen/common/jsonify/jsonify.ng.html",replace:!0,scope:{jsonify:"=",displayHidden:"@jsonifyDisplayHidden"},link:function(i,r,u){i.expression=u.jsonify;i.copy=function(){n.prompt("Copy to clipboard: Ctrl+C, Enter",t("j$on")(i.jsonify,i.displayHidden))}}}}]);t.controller("fgTabsController",["$scope",function(n){this.items=[];this.active=null;this.activeIndex=-1;this.add=function(t){this.items.push(t);this.items.sort(function(n,t){return n.order-t.order});n.active||t.autoActive==!1||this.activate(t)};this.activate=function(t){var i=-1,r,u;if(isNaN(t)){for(r=t,u=this.items.length;u--;)if(this.items[u]===r){i=u;break}if(i===-1)throw new Error("Cannot activate pane: not found in pane list.");}else{if(i=t,i<0||i>=this.items.length)throw new Error("Cannot activate pane: index out of bounds.");r=this.items[i]}r.disabled||(this.active=n.active=r,this.activeIndex=n.activeIndex=i)}}]);t.directive("fgTabs",function(){return{require:["fgTabs"],restrict:"EA",transclude:!0,controller:"fgTabsController",templateUrl:"angular-form-gen/common/tabs/tabs.ng.html",scope:{tabs:"=?fgTabs",active:"=?fgTabsActive",activeIndex:"=?fgTabsActiveIndex"},link:function(n,t,i,r){n.tabs=r[0];n.$watch("activeIndex",function(t){t!==undefined&&n.tabs.activeIndex!==t&&n.tabs.activate(t)})}}});t.directive("fgTabsPane",["fgTabsPaneLinkFn",function(n){return{require:["^fgTabs"],restrict:"EA",transclude:!0,templateUrl:"angular-form-gen/common/tabs/tabs-pane.ng.html",link:n,scope:!0}}]).factory("fgTabsPaneLinkFn",function(){return function(n,t,i,r){n.tabs=r[0];n.pane={title:i.fgTabsPane||i.title,order:parseInt(i.fgTabsPaneOrder||i.order)||10,autoActive:!(i.fgTabsPaneAutoActive==="false"||i.autoActive==="false"),renderAlways:i.fgTabsPaneRenderAlways==="true"||i.renderAlways==="true"};n.$watch(i.fgTabsPaneDisabled,function(t){n.pane.disabled=t});n.tabs.add(n.pane)}});t.controller("fgEditCanvasController",["$scope","dqUtils","$timeout","fgUtils",function(n,t,i){n.dragPlaceholder={visible:!1,index:0};n.$on("dqDragBegin",function(){n.dragging=!0});n.$on("dqDragEnd",function(){n.dragging=!1});this.dragEnter=function(){n.dragPlaceholder.visible=!0;n.dragPlaceholder.index=n.schema.fields.length};this.dragLeave=function(){n.dragPlaceholder.visible=!1};this.dragBeginCanvasField=function(n,t){return i(function(){t.$_isDragging=!0},1),{source:"canvas",field:t,index:n}};this.dragEndCanvasField=function(n){i(function(){n.$_isDragging=!1},10)};this.drop=function(){var i=t.dragData();if(i&&i.data){var r=i.data.field,u=i.data.source,f=i.data.index,e=n.schema.fields;u=="palette"?n.schemaCtrl.addField(r,n.dragPlaceholder.index):u=="canvas"&&n.schemaCtrl.moveField(f,n.dragPlaceholder.index);r.$_isDragging=!1}else throw Error("Drop without data");}}]);t.directive("fgEditCanvas",function(){return{require:["^fgEdit","^fgSchema","^form"],templateUrl:"angular-form-gen/edit/canvas/canvas.ng.html",controller:"fgEditCanvasController as canvasCtrl",link:function(n,t,i,r){n.editCtrl=r[0];n.schemaCtrl=r[1];n.formCtrl=r[2];var u=!0;n.$watchCollection("schema.fields",function(){u||n.formCtrl.$setDirty(!0);u=!1})}}});t.controller("fgEditPaletteController",["$scope","fgConfig",function(t,i){var u,f,r;for(t.templates=[],u=i.fields.templates,f=u.length;f--;)(r=u[f],r.editor&&r.editor.visible==!1)||t.templates.unshift(n.copy(r));t.templateFilter=function(n){return!t.selectedCategory||t.selectedCategory[n.type]}}]);t.directive("fgEditPalette",function(){return{require:["^fgSchema"],templateUrl:"angular-form-gen/edit/palette/palette.ng.html",controller:"fgEditPaletteController",link:function(n,t,i,r){n.schemaCtrl=r[0]}}});t.directive("fgCheckboxlist",function(){function n(n,t,i){var u=n?n.required:!1,r;if(u){for(r=i.length;r--;)if(t[i[r].value])return!0;return!1}return!0}function t(n){var t=0;for(var i in n)n[i]&&(t+=1);return t}return{require:["^fgField"],link:function(i,r,u,f){var o=f[0].field(),s=i.form.data,e=o.schema;i.$watchCollection(function(){return s[e.name]},function(i,r){var f,u;if(o.state.$dirty||i===r||o.state.$setViewValue(i),e.validation){f=n(e.validation,i,e.options);o.state.$setValidity("required",f);var s=e.validation.minoptions,h=e.validation.maxoptions,c=!0,l=!0;(s||h)&&(u=t(i),s&&(c=u>=e.validation.minoptions),h&&(l=u<=e.validation.maxoptions));o.state.$setValidity("minoptions",c);o.state.$setValidity("maxoptions",l)}})}}});t.directive("fgSelectlist",["$timeout",function(t){return{priority:1e3,link:function(i,r){t(function(){for(var i=r.find("option"),u=i.length,t;--u>=0;)if(t=n.element(i[u]),t.val()=="? undefined:undefined ?"){t.remove();break}},0)}}}]);t.controller("fgFieldController",["$scope","fgUtils",function(t,i){var f=this,r,u;this.init=function(n,i,e){f.initForm(n);f.initField(i);f.initDefaultData(i,e);t.form=r;t.field=u};this.initForm=function(n){return r=n?n.model:{}};this.initField=function(n){return u={$_id:"id"+i.getUnique(),schema:n},t.$watch("field.schema.name",function(n){f.registerState(n)}),u};this.initDefaultData=function(i,u){var f=i.name;return r.data=r.data||{},u?(t.$watch("field.schema.value",function(n){r.data[i.name]=n}),t.$watch("field.schema.name",function(n,t){if(n!==t){var i=r.data[t];delete r.data[t];r.data[n]=i}})):r.data&&r.data[f]===undefined&&i.value!==undefined&&(r.data[f]=n.copy(i.value)),r.data};this.setFieldState=function(n){u.state=n;f.registerState(u.schema.name)};this.registerState=function(n){r.state&&u.state&&(r.state.$removeControl(u.state),u.state.$name=n,r.state.$addControl(u.state));u.name=n};this.field=function(){return u};this.form=function(){return r}}]);t.directive("fgField",["fgFieldLinkFn",function(n){return{require:["^?fgForm","fgField"],replace:!0,templateUrl:"angular-form-gen/form/field/field.ng.html",scope:{fieldSchema:"=fgField",tabIndex:"=?fgTabIndex",editMode:"=?fgEditMode",noValidationSummary:"=fgNoValidationSummary"},controller:"fgFieldController",link:n}}]).factory("fgFieldLinkFn",["fgUtils",function(n){return function(t,i,r,u){var f=u[0],e=u[1];t.tabIndex===undefined&&(t.tabIndex="auto");t.renderInfo=n.getRenderInfo(t.fieldSchema);e.init(f,t.fieldSchema,t.editMode)}}]);t.directive("fgFieldInput",["fgFieldInputLinkFn",function(n){return{require:["^fgField","ngModel"],link:n}}]).factory("fgFieldInputLinkFn",function(){return function(n,t,i,r){var u=r[0],f=r[1];u.setFieldState(f)}});t.directive("fgFormFields",function(){return{require:["^?fgForm"],restrict:"AE",templateUrl:"angular-form-gen/form/form-fields/form-fields.ng.html",scope:{},link:function(n,t,i,r){var u=r[0];n.$watch(function(){return u.model},function(t){n.form=t})}}});t.controller("fgSchemaController",["$scope","fgUtils",function(t,i){var r;this.model=function(t){return t!==undefined&&(r=t,n.isArray(t.fields)||(t.fields=[])),r};this.addField=function(n,t){var u=i.copyField(n);t=t===undefined?r.fields.length:t;r.fields.splice(t,0,u)};this.removeField=function(n){r.fields.splice(n,1)};this.swapFields=function(n,t){n<=-1||t<=-1||n>=r.fields.length||t>=r.fields.length||(r.fields[n]=r.fields.splice(t,1,r.fields[n])[0])};this.moveField=function(n,t){if(n>=0&&t<=r.fields.length&&n!==t){var i=r.fields.splice(n,1)[0];t>n&&--t;r.fields.splice(t,0,i)}}}]);t.directive("fgSchema",["fgSchemaLinkFn",function(n){return{require:["fgSchema"],controller:"fgSchemaController",link:n}}]).factory("fgSchemaLinkFn",function(){return function(n,t,i,r){var u=r[0];n.$watch(i.fgSchema,function(n){u.model(n)})}});t.directive("fgEditCanvasField",["$timeout",function(n){return{templateUrl:"angular-form-gen/edit/canvas/field/field.ng.html",link:function(t){t.toggleProperties=function(n){n.$_displayProperties=n.$_displayProperties?n.$_invalid:!0};t.$watch("field.$_displayProperties",function(i){i?t.expanded=!0:n(function(){t.expanded=!1},550)})}}}]);t.controller("fgEditPaletteCategoriesController",["$scope","fgConfig",function(n,t){if(n.categories=t.fields.categories,n.setCategory=function(t,i){n.categoryName=t;n.category=i},!n.category)for(var i in n.categories){n.setCategory(i,n.categories[i]);break}}]);t.directive("fgEditPaletteCategories",function(){return{templateUrl:"angular-form-gen/edit/palette/categories/categories.ng.html",require:"^fgEditPalette",scope:{category:"=?"},controller:"fgEditPaletteCategoriesController"}});t.directive("fgEditCanvasFieldProperties",["fgUtils",function(n){function t(n){for(var i=n.length,t;i--;)t=n[i],t.title!=="Debug"&&(t.renderAlways=!0)}return{templateUrl:"angular-form-gen/edit/canvas/field/properties/properties.ng.html",scope:{field:"=fgEditCanvasFieldProperties"},link:{pre:function(n){n.property={}},post:function(i){i.$watch("fieldPropertiesForm.$invalid",function(n){i.field.$_invalid=n});i.renderInfo=n.getRenderInfo(i.field);i.$watch("property.tabs.items.length",function(n){n&&t(i.property.tabs.items)})}}}}]);t.controller("fgPropertyFieldOptionsController",["$scope",function(t){function r(n,i){n!==i&&(t.multiple?(t.field.value[n]=t.field.value[i],delete t.field.value[i]):i===t.field.value&&(t.field.value=n))}var u=this,i=1;t.$watchCollection("field.options",function(i){i&&n.forEach(i,function(n){n.$_valueWatchFn||(n.$_valueWatchFn=t.$watch(function(){return n.value},r))})});this.toggleOption=function(n){t.field.type!=="selectlist"&&n===t.field.value&&(t.field.value=undefined)};this.addOption=function(){var n,r;t.field.options||(t.field.options=[]);n={value:"Option "+i++};t.field.options.push(n);r=t.field.options.length;t.multiple||r!==1||(t.field.value=n.value)};this.removeOption=function(n){var r=t.field.options.splice(n,1),i;r&&r.length&&(i=r[0],t.multiple?t.field.value[i.value]!==undefined&&delete t.field.value[i.value]:(i.value===t.field.value&&t.field.options.length&&(t.field.value=t.field.options[0].value),i.$_valueWatchFn()))}}]);t.directive("fgPropertyFieldOptions",["fgPropertyFieldOptionsLinkFn",function(n){return{scope:!0,controller:"fgPropertyFieldOptionsController as optionsCtrl",templateUrl:"angular-form-gen/edit/canvas/field/properties/options/options.ng.html",link:n}}]).factory("fgPropertyFieldOptionsLinkFn",function(){return function(n,t,i){n.multiple=!1;i.$observe("fgPropertyFieldOptions",function(t){t==="multiple"&&(n.multiple=!0)})}});t.directive("fgPropertyFieldCommon",["fgPropertyFieldCommonLinkFn",function(n){return{restrict:"AE",templateUrl:"angular-form-gen/edit/canvas/field/properties/property-field/common.ng.html",link:n}}]).factory("fgPropertyFieldCommonLinkFn",function(){return function(t,i,r){t.fields={fieldname:!1,displayname:!1,placeholder:!1,tooltip:!1,focus:!1};t.$watch(r.fgPropertyFieldCommon,function(i){t.fields=n.extend(t.fields,i)})}});t.directive("fgPropertyFieldValue",["fgPropertyFieldValueLinkFn",function(n){return{require:["^form"],templateUrl:"angular-form-gen/edit/canvas/field/properties/property-field/field-value.ng.html",transclude:!0,link:n}}]).factory("fgPropertyFieldValueLinkFn",["$parse",function(){return function(n,t,i,r){n.draw=!0;var f=r[0],u;n.$watch("field.$_redraw",function(i){if(i){var r=f.fieldValue;r&&(u=r.$viewValue);n.draw=!1;n.field.$_redraw=!1}else n.draw=!0,t=t});n.$watch(function(){return f.fieldValue},function(n){n&&u&&(n.$setViewValue(u),n.$render(),u=undefined)})}}]).directive("fgFieldRedraw",function(){return{require:["ngModel"],link:function(n,t,i){var r=n.$eval(i.ngModel);n.$watch(i.ngModel,function(t){t!=r&&(n.field.$_redraw=!0,r=t)})}}});t.directive("fgPropertyField",["fgPropertyFieldLinkFn",function(n){return{restrict:"AE",templateUrl:"angular-form-gen/edit/canvas/field/properties/property-field/property-field.ng.html",transclude:!0,scope:!0,link:n}}]).factory("fgPropertyFieldLinkFn",function(){return function(n,t,i){i.$observe("fgPropertyField",function(t){n.fieldName=t});i.$observe("fgPropertyFieldLabel",function(t){t&&(n.fieldLabel=t)})}});t.directive("fgParsePattern",function(){return{require:["ngModel"],link:function(n,t,i,r){function f(n){try{new RegExp(n)}catch(t){return u.$setValidity("pattern",!1),undefined}return u.$setValidity("pattern",!0),n}var u=r[0];u.$parsers.push(f)}}});t.directive("fgPropertyFieldValidation",["fgPropertyFieldValidationLinkFn",function(n){return{restrict:"A",templateUrl:"angular-form-gen/edit/canvas/field/properties/validation/validation.ng.html",link:n}}]).factory("fgPropertyFieldValidationLinkFn",["fgConfig",function(t){var i=[],r=t.validation.patterns;return n.forEach(r,function(n,t){i.push({value:n,text:t})}),function(t,r,u){t.patternOptions=i;t.field.validation=t.field.validation||{};t.field.validation.messages=t.field.validation.messages||{};t.fields={required:!1,minlength:!1,maxlength:!1,pattern:!1};t.$watch(u.fgPropertyFieldValidation,function(i){t.fields=n.extend(t.fields,i)})}}]);t.directive("fgEditValidationMessage",["fgEditValidationMessageLinkFn",function(n){return{templateUrl:"angular-form-gen/edit/canvas/field/properties/validation/validation-message.ng.html",link:n,scope:!0}}]).factory("fgEditValidationMessageLinkFn",function(){var n="Enter a error message here that will be shown if this validation fails. If this field is empty a default message will be used.";return function(t,i,r){r.$observe("fgEditValidationMessage",function(n){t.validationType=n});r.$observe("fgEditValidationTooltip",function(i){i=i||n;t.tooltip=i})}})})(angular);