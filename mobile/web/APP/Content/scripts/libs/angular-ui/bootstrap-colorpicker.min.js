angular.module("schemaForm").run(["$templateCache",function(n){n.put("directives/decorators/bootstrap/colorpicker/colorpicker.html","<div class=\"form-group\" ng-class=\"{'has-error': hasError()}\">\n  <label class=\"control-label\" ng-show=\"showTitle()\">{{form.title}}<\/label>\n  <div ng-init=\"defaultSpectrumOptions = {\n                  showInput: true,\n                  showAlpha: true,\n                  allowEmpty: true,\n                  showPalette: true,\n                  preferredFormat: form.colorFormat || 'rgb',\n                  palette: [['#fce94f', '#fcaf3e', '#e9b96e'],\n                  ['#8ae234', '#729fcf', '#ad7fa8'],\n                  ['#ef2929', '#888a85', '#deface']]\n                }\">\n    <spectrum-colorpicker\n      ng-model=\"$$value$$\"\n      format=\"form.colorFormat || 'rgb'\"\n      style=\"background-color: white\"\n      type=\"color\"\n      schema-validate=\"form\"\n      options=\"form.spectrumOptions || defaultSpectrumOptions\"><\/spectrum-colorpicker>\n<\/div>\n  <span class=\"help-block\">{{ (hasError() && errorMessage(schemaError())) || form.description}}<\/span>\n<\/div>\n")}]);angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(n,t,i){var r=function(t,r,u){if(r.type==="string"&&r.format=="color"){var f=n.stdFormObj(t,r,u);return f.key=u.path,f.type="colorpicker",u.lookup[i.stringify(u.path)]=f,f}};n.defaults.string.unshift(r);t.addMapping("bootstrapDecorator","colorpicker","directives/decorators/bootstrap/colorpicker/colorpicker.html");t.createDirective("colorpicker","directives/decorators/bootstrap/colorpicker/colorpicker.html")}]);