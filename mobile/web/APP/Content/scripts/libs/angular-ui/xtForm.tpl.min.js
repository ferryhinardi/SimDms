/*!
 * See LICENSE in this repository for license information
 */
(function(){"use strict";var n=angular.module("xtForm",[]);n.directive("ngModel",function(n,t,i,r){var u="ng-untouched",f="ng-touched";return{require:["ngModel","^?xtForm","^?form"],link:function(e,o,s,h){function b(){v=c.$setTouched||d;y=a.getValidationStrategy();c.$untouched=!0;var n=r[0].querySelectorAll('label[for="'+s.id+'"]');angular.extend(c,{$focused:!1,$label:n.length>0?n[0].innerText:"",$xtErrors:[]});e.$watch(function(){return c.$error},l,!0);e.$on("XtForm.ForceErrorUpdate",l);o.on("focus",function(){c.$touched||v();c.$focused=!0;l();e.$apply()}).on("blur",function(){c.$focused=!1;l();e.$apply()})}function k(n){var t="msg"+n[0].toUpperCase()+n.substring(1);return s[t]?s[t]:i(p[n])(s)}function l(){c.$xtErrors=[];angular.forEach(c.$error,function(n,t){var r=n&&y(w,c),i;r&&(i={key:t,message:k(t)},t==="required"?c.$xtErrors.push(i):c.$xtErrors.unshift(i))});t.$broadcast("XtForm.ErrorsUpdated",c)}function d(){c.$touched=!0;c.$untouched=!1;o.addClass(f).removeClass(u)}var p=n.getErrorMessages(),c=h[0],a=h[1],w=h[2],v,y;a&&b()}}});n.directive("xtForm",function(n){return{require:"",priority:-1,controller:"XtFormController",controllerAs:"xtForm",link:function(t,i,r,u){i.on("submit",function(){t.$apply(function(){u.submit()})}).on("reset",function(){n(function(){u.reset()})})}}}).controller("XtFormController",function(n,t,i,r,u){function s(){if(angular.isFunction(f.$setSubmitted)){f.$setSubmitted();return}f.$submitted=!0;t.addClass("ng-submitted")}function h(){angular.isFunction(f.$setSubmitted)||(f.$submitted=!1,t.removeClass("ng-submitted"))}var e=this,f=t.controller("form"),o=i.strategy?r.getValidationStrategy(i.strategy):r.getDefaultValidationStrategy();angular.extend(e,{form:f,getValidationStrategy:function(){return o},tooltipTrigger:i.tooltipTrigger,submit:function(){s();f.$invalid&&i.focusError&&u.setTimeout(function(){t.find(".ng-invalid:input:visible:first").focus()});n.$broadcast("XtForm.ForceErrorUpdate",null,"submit")},reset:function(){e.form.$setPristine();e.form.$setUntouched();h();n.$broadcast("XtForm.ForceErrorUpdate",null,"reset")}})});n.provider("xtFormConfig",function(){var n=this,t={minlength:"Needs to be at least {{ngMinlength}} characters long",maxlength:"Can be no longer than {{ngMaxlength}} characters long",required:"This field is required",number:"Must be a number",min:"Must be at least {{min}}",max:"Must be no greater than {{max}}",email:"Must be a valid E-mail address",pattern:"Illegal value",url:"Must be a valid URL",date:"Must be a valid date",datetimelocal:"Must be a valid date",time:"Must be a valid time",week:"Must be a valid week",month:"Must be a valid month",$$server:"An error has occurred"},i;angular.extend(n,{$validationStrategies:{invalid:function(n){return n.$invalid},submitted:function(n){return n.$invalid&&n.$submitted},dirty:function(n,t){return t.$invalid&&t.$dirty},dirtyOrSubmitted:function(n,t){return t.$invalid&&(n.$submitted||t.$dirty)},focusedAndDirtyOrSubmitted:function(n,t){return t.$invalid&&t.$focused&&(t.$dirty||n.$submitted)},dirtyAndFocusedOrSubmitted:function(n,t){return t.$invalid&&(n.$submitted||t.$dirty&&t.$focused)}},addValidationStrategy:function(t,i){n.$validationStrategies[t]=i},setDefaultValidationStrategy:function(t){if(!n.$validationStrategies[t])throw new Error("Could not find validation strategy by name: "+t);i=n.$validationStrategies[t]},setErrorMessages:function(n){angular.extend(t,n)}});this.$get=function(){return{getErrorMessages:function(){return angular.copy(t)},getValidationStrategy:function(t){if(!n.$validationStrategies[t])throw new Error("Could not find validation strategy by name: "+t);return n.$validationStrategies[t]},getDefaultValidationStrategy:function(){return i}}};n.setDefaultValidationStrategy("dirtyOrSubmitted")});n.directive("xtValidationInline",function(n){function i(){return"validation_"+t++}var t=0;return{require:["^xtForm"],restrict:"EA",scope:!0,replace:!0,template:function(t,i){return n.get(i.templateUrl||"xtForm/inline/validationInline.html")},link:function(n,t,r){function o(){t.addClass("xt-validation-inline");r.id||(r.id=i(),t.attr("id",r.id));!u.attr("required")||u.attr("aria-required",!0);n.$on("XtForm.ErrorsUpdated",function(n,t){(t===null||t===f)&&s()})}function s(){var t=r.multiple?f.$xtErrors.length:1;n.errors=f.$xtErrors.slice(0,t);n.showErrors=n.errors.length>0;h(n.showErrors)}function h(n){n?u.attr("aria-invalid",!0).attr("aria-describedby",r.id):(u.removeAttr("aria-invalid"),u.removeAttr("aria-describedby"))}var e=r.for||r.xtValidationInline,u,f;if(angular.isUndefined(e))throw new Error('The validation input id must be specified eg. for="id"');if(u=angular.element(document.getElementById(e)),u.length===0)throw new Error("Can not find input element for the validation directive");f=u.controller("ngModel");o()}}});n.directive("xtValidationSummary",function(n){return{require:["^xtForm","^form"],restrict:"EA",replace:!0,scope:!0,template:function(t,i){return n.get(i.templateUrl||"xtForm/summary/validationSummary.html")},link:function(n,t,i,r){function f(){n.errors=[];angular.forEach(u,function(t,r){if(r[0]!=="$"){var u=i.multiple?t.$xtErrors.length:1,f=t.$xtErrors.slice(0,u);angular.forEach(f,function(i){n.errors.push({key:i.key,label:t.$label,message:i.message})})}});n.showErrors=n.errors.length>0}var u=r[1];n.showLabel=i.showLabel==="true"||angular.isUndefined(i.showLabel);n.$on("XtForm.ErrorsUpdated",f)}}});n.directive("xtValidationTooltip",function(n){return{require:"^xtForm",restrict:"EA",link:function(t,i,r,u){function s(){c();h();t.$on("XtForm.ErrorsUpdated",function(n,t){(t===null||t===f)&&l()})}function h(){i.addClass("xt-error-container");i[0].nodeName.toUpperCase()!=="SELECT"||r.placement||(r.placement="top",i.attr("placement",r.placement));i.tooltip({animation:!1,html:!0,placement:r.placement||"bottom",trigger:u.tooltipTrigger||"manual",container:r.container||"body"})}function c(){var t=r.for||r.xtValidationTooltip;e=t?angular.element(document.getElementById(t)):i;e.addClass("xt-validation-tooltip");!e.attr("required")||e.attr("aria-required",!0);n(function(){if(f=e.controller("ngModel"),!f)throw new Error("Cannot find ngModel element for xtValidationTooltip");})}function l(){if(f.$xtErrors.length===0){o=null;i.tooltip("hide");return}var t=r.multiple?f.$xtErrors.length:1,n=f.$xtErrors.slice(0,t).map(function(n){return n.message}).join("<br />");n!==o&&(o=n,setTimeout(function(){i.attr("title",n).tooltip("fixTitle").tooltip("show")}))}var e,f,o;if(!$||!angular.isFunction($.fn.tooltip))throw new Error("xtform requires a jquery tooltip plugin, like bootstrap.js");s()}}})})();angular.module("xtForm").run(["$templateCache",function(n){n.put("xtForm/inline/validationInline.html",'<div data-ng-show="showErrors">\n    <span class="xt-validation-item" data-ng-repeat="error in errors" data-key="error.key">{{error.message}}<\/span>\n<\/div>')}]);angular.module("xtForm").run(["$templateCache",function(n){n.put("xtForm/summary/validationSummary.html",'<div class="panel panel-danger" data-ng-show="showErrors">\n    <div class="panel-heading">\n        <h3 class="panel-title">\n            <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"><\/span>\n            Validation errors\n        <\/h3>\n    <\/div>\n    <div class="panel-body">\n        <ul class="xt-validation-summary">\n            <li data-ng-repeat="error in errors" data-key="{{error.key}}">\n                <span data-ng-show="showLabel" data-ng-bind="error.label"><\/span>\n                -\n                <span data-ng-bind="error.message"><\/span>\n            <\/li>\n        <\/ul>\n    <\/div>\n<\/div>')}]);