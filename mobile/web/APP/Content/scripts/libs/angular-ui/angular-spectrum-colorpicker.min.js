/*!
 * angular-spectrum-colorpicker v1.3.5
 * https://github.com/Jimdo/angular-spectrum-colorpicker
 *
 * Angular directive for a colorpicker, that bases on http://bgrins.github.io/spectrum/
 * Idea from http://jsfiddle.net/g/LAJCa/
 *
 * Copyright 2015, Jimdo GmbH
 * Released under the MIT license
 */
(function(n){"use strict";var t=n.module("angularSpectrumColorpicker",[]);(function(){t.directive("spectrumColorpicker",function(){return{restrict:"E",require:"ngModel",scope:{fallbackValue:"=",disabled:"=?",format:"=?",options:"=?",triggerId:"@?",onChange:"&?",onShow:"&?",onHide:"&?",onMove:"&?",onBeforeShow:"&?"},replace:!0,templateUrl:"directive.html",link:function(t,i,r,u){function o(n){var i=n;return i&&(i=n.toString(t.format)),i}function h(i){if(n.isFunction(t.onChange))t.onChange({color:i})}function c(i){var r=t.fallbackValue;i?r=o(i):n.isUndefined(t.fallbackValue)&&(r=i);u.$setViewValue(r);h(r)}var e=i.find("input"),a=function(n){t.$apply(function(){c(n)})},l=function(){return e.spectrum("toggle"),!1},v={color:u.$viewValue},s={},f;if(n.forEach({change:"onChange",move:"onMove",hide:"onHide",show:"onShow"},function(i,r){s[r]=function(r){return a(r),i!=="change"&&n.isFunction(t[i])?t[i]({color:o(r)}):void 0}}),n.isFunction(t.onBeforeShow)&&(s.beforeShow=function(n){return t.onBeforeShow({color:o(n)})}),f=n.extend({},v,t.options,s),t.triggerId)n.element(document.body).on("click","#"+t.triggerId,l);u.$render=function(){e.spectrum("set",u.$viewValue||"");h(u.$viewValue)};f.color&&(e.spectrum("set",f.color||""),c(f.color));e.spectrum(f);t.$on("$destroy",function(){t.triggerId&&n.element(document.body).off("click","#"+t.triggerId,l);e.spectrum("destroy")});n.isDefined(f.disabled)&&(t.disabled=!!f.disabled);t.$watch("disabled",function(n){e.spectrum(n?"disable":"enable")})}}})})();n.module("angularSpectrumColorpicker").run(["$templateCache",function(n){n.put("directive.html","<span><input class=input-small><\/span>")}])})(window.angular);